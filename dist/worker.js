/*
  Human: Motion Analytics Demo
  author: <https://github.com/vladmandic>'
*/

var x3=Object.defineProperty,ZN=(e,t,n)=>t in e?x3(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,Tf=(e,t)=>{for(var n in t)x3(e,n,{get:t[n],enumerable:!0})},me=(e,t,n)=>(ZN(e,typeof t!="symbol"?t+"":t,n),n),b3=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},sp=(e,t,n)=>(b3(e,t,"read from private field"),n?n.call(e):t.get(e)),rp=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},ap=(e,t,n,s)=>(b3(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);function ce(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function YN(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ue=()=>typeof performance<"u"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function v3(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")v3(e[r],t[r],r,s);else{let a=e&&typeof e[r]<"u";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&ce("invalid configuration",s),s}function os(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=os(a,o):n[r]=o}),n),{})}var Bl={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},pd={};Tf(pd,{Abs:()=>_i,Acos:()=>_u,Acosh:()=>$u,AdadeltaOptimizer:()=>Tm,AdagradOptimizer:()=>Em,AdamOptimizer:()=>Rm,AdamaxOptimizer:()=>_m,Add:()=>Kr,AddN:()=>Ha,All:()=>Du,Any:()=>Fu,ArgMax:()=>ja,ArgMin:()=>Pu,Asin:()=>Ou,Asinh:()=>Mu,Atan:()=>zu,Atan2:()=>Bu,Atanh:()=>Lu,AvgPool:()=>qa,AvgPool3D:()=>Ed,AvgPool3DGrad:()=>Ff,AvgPoolGrad:()=>Df,BackendWasm:()=>f8,BatchMatMul:()=>Xa,BatchToSpaceND:()=>$i,Bincount:()=>Pf,BroadcastArgs:()=>Of,BroadcastTo:()=>O3,Callback:()=>f7,CallbackList:()=>fS,Cast:()=>Ka,Ceil:()=>Za,ClipByValue:()=>Zr,Complex:()=>Rd,ComplexAbs:()=>_d,Concat:()=>Di,Conv2D:()=>Ya,Conv2DBackpropFilter:()=>Mf,Conv2DBackpropInput:()=>Ja,Conv3D:()=>$d,Conv3DBackpropFilterV2:()=>zf,Conv3DBackpropInputV2:()=>Lf,Cos:()=>Qa,Cosh:()=>eo,CropAndResize:()=>Pi,Cumsum:()=>Fi,CustomCallback:()=>gS,DataStorage:()=>Td,DenseBincount:()=>Bf,DepthToSpace:()=>Oi,DepthwiseConv2dNative:()=>to,DepthwiseConv2dNativeBackpropFilter:()=>Wf,DepthwiseConv2dNativeBackpropInput:()=>Vf,Diag:()=>Uf,Dilation2D:()=>Dd,Dilation2DBackpropFilter:()=>Yp,Dilation2DBackpropInput:()=>Zp,ENV:()=>Lr,EarlyStopping:()=>m7,Einsum:()=>Fd,Elu:()=>so,EluGrad:()=>Gf,Environment:()=>F3,Equal:()=>Mi,Erf:()=>Wu,Exp:()=>ro,ExpandDims:()=>zi,Expm1:()=>Li,FFT:()=>Hf,Fill:()=>Vu,FlipLeftRight:()=>Bi,Floor:()=>ao,FloorDiv:()=>oo,FromPixels:()=>md,FusedBatchNorm:()=>io,FusedConv2D:()=>_a,FusedDepthwiseConv2D:()=>$a,GPGPUContext:()=>ud,GatherNd:()=>Vi,GatherV2:()=>Wi,GraphModel:()=>gx,Greater:()=>Ui,GreaterEqual:()=>lo,History:()=>mS,IFFT:()=>jf,Identity:()=>uo,Imag:()=>Pd,InputSpec:()=>Ht,IsFinite:()=>Uu,IsInf:()=>Gu,IsNan:()=>Hu,KernelBackend:()=>Eu,LRN:()=>Md,LRNGrad:()=>Xf,LayerVariable:()=>cS,LayersModel:()=>Hr,LeakyRelu:()=>co,Less:()=>Gi,LessEqual:()=>Hi,LinSpace:()=>qf,Log:()=>ho,Log1p:()=>ju,LogSoftmax:()=>M3,LogicalAnd:()=>ji,LogicalNot:()=>qu,LogicalOr:()=>Od,MathBackendCPU:()=>xx,MathBackendWebGL:()=>a0,Max:()=>po,MaxPool:()=>mo,MaxPool3D:()=>zd,MaxPool3DGrad:()=>Zf,MaxPoolGrad:()=>Kf,MaxPoolWithArgmax:()=>Yf,Maximum:()=>fo,Mean:()=>go,Min:()=>Ao,Minimum:()=>yo,MirrorPad:()=>xo,Mod:()=>Xu,MomentumOptimizer:()=>$m,Multinomial:()=>Jf,Multiply:()=>bo,Neg:()=>qi,NonMaxSuppressionV3:()=>Ki,NonMaxSuppressionV4:()=>Ku,NonMaxSuppressionV5:()=>Zi,NotEqual:()=>Xi,OP_SCOPE_SUFFIX:()=>J3,OneHot:()=>Ji,OnesLike:()=>Yi,Optimizer:()=>ea,OptimizerConstructors:()=>ma,Pack:()=>Qi,PadV2:()=>vo,Pool:()=>VT,Pow:()=>wo,Prelu:()=>ko,Prod:()=>el,RMSPropOptimizer:()=>Dm,RNN:()=>ta,Range:()=>Zu,Rank:()=>V3,Real:()=>Ld,RealDiv:()=>no,Reciprocal:()=>Yu,Reduction:()=>Uk,Relu:()=>So,Relu6:()=>Co,Reshape:()=>tl,ResizeBilinear:()=>Io,ResizeBilinearGrad:()=>em,ResizeNearestNeighbor:()=>Ju,ResizeNearestNeighborGrad:()=>Qf,Reverse:()=>nl,RotateWithOffset:()=>gl,Round:()=>sl,Rsqrt:()=>No,SGDOptimizer:()=>sh,ScatterNd:()=>rl,Select:()=>al,Selu:()=>Qu,Sequential:()=>qm,Sigmoid:()=>Eo,Sign:()=>ec,Sin:()=>To,Sinh:()=>il,Slice:()=>ol,Softmax:()=>$o,Softplus:()=>tc,SpaceToBatchND:()=>ll,SparseFillEmptyRows:()=>Bd,SparseReshape:()=>nc,SparseSegmentMean:()=>Wd,SparseSegmentSum:()=>Vd,SparseToDense:()=>Ud,SplitV:()=>ul,Sqrt:()=>Ro,Square:()=>sc,SquaredDifference:()=>Do,Step:()=>Mo,StridedSlice:()=>cl,StringNGrams:()=>Gd,StringSplit:()=>tm,StringToHashBucketFast:()=>nm,Sub:()=>Fo,Sum:()=>_o,SymbolicTensor:()=>Js,Tan:()=>dl,Tanh:()=>Po,Tensor:()=>tt,TensorBuffer:()=>Qt,Tile:()=>Yr,TopK:()=>hl,Transform:()=>pl,Transpose:()=>Oo,Unique:()=>sm,Unpack:()=>fl,UnsortedSegmentSum:()=>Hd,Variable:()=>yd,ZerosLike:()=>ml,_FusedMatMul:()=>Ra,abs:()=>Zt,acos:()=>Pw,acosh:()=>Ow,add:()=>ie,addN:()=>ry,all:()=>ay,any:()=>rf,argMax:()=>jr,argMin:()=>Mw,asin:()=>zw,asinh:()=>Lw,atan:()=>Bw,atan2:()=>Ww,atanh:()=>Vw,avgPool:()=>om,avgPool3d:()=>iy,backend:()=>Fa,backend_util:()=>T,basicLSTMCell:()=>ER,batchNorm:()=>fu,batchNorm2d:()=>jw,batchNorm3d:()=>qw,batchNorm4d:()=>Xw,batchToSpaceND:()=>im,bincount:()=>ly,booleanMaskAsync:()=>WD,broadcastArgs:()=>Kw,broadcastTo:()=>id,broadcast_util:()=>Al,browser:()=>js,buffer:()=>Le,callbacks:()=>fV,cast:()=>he,ceil:()=>Zw,clipByValue:()=>cs,clone:()=>Hn,complex:()=>Da,concat:()=>Tt,concat1d:()=>Yw,concat2d:()=>lm,concat3d:()=>Jw,concat4d:()=>Qw,constraints:()=>Yk,conv1d:()=>uy,conv2d:()=>Oa,conv2dTranspose:()=>dy,conv3d:()=>hy,conv3dTranspose:()=>tk,copyRegisteredKernels:()=>jT,cos:()=>um,cosh:()=>py,cosineWindow:()=>My,cumsum:()=>fy,customGrad:()=>wr,data:()=>B7,denseBincount:()=>nk,deprecationWarn:()=>sy,depthToSpace:()=>sk,depthwiseConv2d:()=>Yd,deregisterOp:()=>AV,device_util:()=>rc,diag:()=>a_,dilation2d:()=>rk,disableDeprecationWarnings:()=>H9,dispose:()=>ae,disposeVariables:()=>j9,div:()=>ye,divNoNan:()=>ak,dot:()=>h_,dropout:()=>Fk,einsum:()=>ok,elu:()=>Jd,enableDebugMode:()=>G9,enableProdMode:()=>$w,enclosingPowerOfTwo:()=>Pk,engine:()=>rs,env:()=>Y,equal:()=>vs,erf:()=>ik,exp:()=>ws,expandDims:()=>on,expm1:()=>lk,eye:()=>my,fft:()=>vm,fill:()=>oc,findBackend:()=>Fw,findBackendFactory:()=>Z9,floor:()=>Qd,floorDiv:()=>am,forceHalfFloat:()=>iC,fused:()=>za,gather:()=>mu,gatherND:()=>Dk,gather_util:()=>YA,getBackend:()=>Ms,getGradient:()=>P1,getKernel:()=>Jp,getKernelsForBackend:()=>Ai,getThreadsCount:()=>uge,gpgpu_util:()=>z4,grad:()=>M_,grads:()=>z_,greater:()=>hs,greaterEqual:()=>yl,ifft:()=>wd,imag:()=>cm,image:()=>Oe,inTopKAsync:()=>JD,initializers:()=>tS,input:()=>RS,io:()=>In,irfft:()=>$y,isFinite:()=>N_,isInf:()=>E_,isNaN:()=>uk,keep:()=>ln,kernel_impls:()=>Ws,layers:()=>lS,leakyRelu:()=>dm,less:()=>gy,lessEqual:()=>xl,linalg:()=>Gk,linspace:()=>ck,loadGraphModel:()=>bU,loadLayersModel:()=>IB,localResponseNormalization:()=>dk,log:()=>ks,log1p:()=>hm,logSigmoid:()=>G_,logSoftmax:()=>Ay,logSumExp:()=>gk,logicalAnd:()=>rr,logicalNot:()=>fm,logicalOr:()=>by,logicalXor:()=>n$,losses:()=>OP,matMul:()=>He,math:()=>hw,max:()=>Tn,maxPool:()=>mm,maxPool3d:()=>vy,maxPoolWithArgmax:()=>Ak,maximum:()=>Jr,mean:()=>Mt,memory:()=>nf,meshgrid:()=>l$,metrics:()=>d7,min:()=>hi,minimum:()=>eh,mirrorPad:()=>yk,mod:()=>gm,model:()=>kB,models:()=>h7,moments:()=>Am,movingAverage:()=>GD,mul:()=>U,multiRNNCell:()=>g$,multinomial:()=>xk,neg:()=>Dt,nextFrame:()=>Hk,norm:()=>Py,notEqual:()=>gu,oneHot:()=>bd,ones:()=>us,onesLike:()=>Ss,op:()=>H,outerProduct:()=>v$,pad:()=>Ir,pad1d:()=>S$,pad2d:()=>C$,pad3d:()=>T$,pad4d:()=>R$,pool:()=>P$,pow:()=>Ma,prelu:()=>xm,print:()=>lw,prod:()=>wy,profile:()=>q9,rand:()=>B$,randomGamma:()=>G$,randomNormal:()=>bk,randomUniform:()=>lc,range:()=>Au,ready:()=>sf,real:()=>vd,reciprocal:()=>vk,registerBackend:()=>ac,registerCallbackConstructor:()=>CB,registerGradient:()=>z3,registerKernel:()=>br,registerOp:()=>gV,regularizers:()=>p7,relu:()=>Cr,relu6:()=>Iy,removeBackend:()=>K9,reshape:()=>q,reverse:()=>Is,reverse1d:()=>Q$,reverse2d:()=>tD,reverse3d:()=>sD,reverse4d:()=>aD,rfft:()=>wm,round:()=>Cy,rsqrt:()=>Ny,scalar:()=>Ce,scatterND:()=>$k,scatter_util:()=>JA,selu:()=>Ty,separableConv2d:()=>wk,sequential:()=>SB,serialization:()=>le,setBackend:()=>Dw,setPlatform:()=>Y9,setThreadsCount:()=>lge,setWasmPath:()=>ige,setWasmPaths:()=>m8,setWebGLContext:()=>$x,setdiff1dAsync:()=>kk,shared:()=>n0,sigmoid:()=>bs,sign:()=>Sk,signal:()=>PP,sin:()=>Ey,sinh:()=>Ry,slice:()=>Pe,slice1d:()=>bm,slice2d:()=>_y,slice3d:()=>yu,slice4d:()=>xu,slice_util:()=>$t,softmax:()=>th,softplus:()=>ic,spaceToBatchND:()=>ym,sparse:()=>Xc,sparseToDense:()=>Oy,spectral:()=>FP,split:()=>bn,sqrt:()=>vn,square:()=>pt,squaredDifference:()=>Dy,squeeze:()=>ft,stack:()=>_n,step:()=>nh,stridedSlice:()=>Ik,string:()=>Fp,sub:()=>ge,sum:()=>Se,sumOutType:()=>Xd,tan:()=>Ck,tanh:()=>pu,tensor:()=>lt,tensor1d:()=>zt,tensor2d:()=>Gr,tensor3d:()=>fw,tensor4d:()=>_D,tensor5d:()=>$D,tensor6d:()=>DD,tensor_util:()=>Qs,test_util:()=>Tw,tidy:()=>K,tile:()=>zs,time:()=>X9,topk:()=>Nk,train:()=>ti,transpose:()=>Je,truncatedNormal:()=>km,unique:()=>X1,unregisterGradient:()=>HT,unregisterKernel:()=>GT,unsortedSegmentSum:()=>Tk,unstack:()=>Cs,upcastType:()=>En,util:()=>w,valueAndGrad:()=>L_,valueAndGrads:()=>B_,variable:()=>Ek,variableGrads:()=>hk,version:()=>tb,version_converter:()=>vU,version_core:()=>_w,version_cpu:()=>iH,version_layers:()=>l2,version_wasm:()=>cge,version_webgl:()=>RJ,webgl:()=>_J,webgl_util:()=>u4,webgpu:()=>c6,where:()=>Rn,whereAsync:()=>Fy,zeros:()=>Vt,zerosLike:()=>Qe});var JN=Object.create,Ef=Object.defineProperty,QN=Object.getOwnPropertyDescriptor,w3=Object.getOwnPropertyNames,eT=Object.getPrototypeOf,tT=Object.prototype.hasOwnProperty,nT=e=>Ef(e,"__esModule",{value:!0}),nn=(e,t)=>function(){return t||(0,e[w3(e)[0]])((t={exports:{}}).exports,t),t.exports},Me=(e,t)=>{for(var n in t)Ef(e,n,{get:t[n],enumerable:!0})},sT=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of w3(t))!tT.call(e,r)&&(n||r!=="default")&&Ef(e,r,{get:()=>t[r],enumerable:!(s=QN(t,r))||s.enumerable});return e},Ei=(e,t)=>sT(nT(Ef(e!=null?JN(eT(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),rT=nn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function s(_,N,O){this.low=_|0,this.high=N|0,this.unsigned=!!O}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(_){return(_&&_.__isLong__)===!0}s.isLong=r;var a={},o={};function i(_,N){var O,z,j;return N?(_>>>=0,(j=0<=_&&_<256)&&(z=o[_],z)?z:(O=c(_,(_|0)<0?-1:0,!0),j&&(o[_]=O),O)):(_|=0,(j=-128<=_&&_<128)&&(z=a[_],z)?z:(O=c(_,_<0?-1:0,!1),j&&(a[_]=O),O))}s.fromInt=i;function l(_,N){if(isNaN(_))return N?b:y;if(N){if(_<0)return b;if(_>=g)return R}else{if(_<=-A)return P;if(_+1>=A)return E}return _<0?l(-_,N).neg():c(_%m|0,_/m|0,N)}s.fromNumber=l;function c(_,N,O){return new s(_,N,O)}s.fromBits=c;var u=Math.pow;function d(_,N,O){if(_.length===0)throw Error("empty string");if(_==="NaN"||_==="Infinity"||_==="+Infinity"||_==="-Infinity")return y;if(typeof N=="number"?(O=N,N=!1):N=!!N,O=O||10,O<2||36<O)throw RangeError("radix");var z;if((z=_.indexOf("-"))>0)throw Error("interior hyphen");if(z===0)return d(_.substring(1),N,O).neg();for(var j=l(u(O,8)),L=y,B=0;B<_.length;B+=8){var W=Math.min(8,_.length-B),J=parseInt(_.substring(B,B+W),O);if(W<8){var ee=l(u(O,W));L=L.mul(ee).add(l(J))}else L=L.mul(j),L=L.add(l(J))}return L.unsigned=N,L}s.fromString=d;function h(_,N){return typeof _=="number"?l(_,N):typeof _=="string"?d(_,N):c(_.low,_.high,typeof N=="boolean"?N:_.unsigned)}s.fromValue=h;var p=1<<16,f=1<<24,m=p*p,g=m*m,A=g/2,x=i(f),y=i(0);s.ZERO=y;var b=i(0,!0);s.UZERO=b;var v=i(1);s.ONE=v;var C=i(1,!0);s.UONE=C;var S=i(-1);s.NEG_ONE=S;var E=c(-1,2147483647,!1);s.MAX_VALUE=E;var R=c(-1,-1,!0);s.MAX_UNSIGNED_VALUE=R;var P=c(0,-2147483648,!1);s.MIN_VALUE=P;var $=s.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},$.toString=function(N){if(N=N||10,N<2||36<N)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var O=l(N),z=this.div(O),j=z.mul(O).sub(this);return z.toString(N)+j.toInt().toString(N)}else return"-"+this.neg().toString(N);for(var L=l(u(N,6),this.unsigned),B=this,W="";;){var J=B.div(L),ee=B.sub(J.mul(L)).toInt()>>>0,re=ee.toString(N);if(B=J,B.isZero())return re+W;for(;re.length<6;)re="0"+re;W=""+re+W}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var N=this.high!=0?this.high:this.low,O=31;O>0&&(N&1<<O)==0;O--);return this.high!=0?O+33:O+1},$.isZero=function(){return this.high===0&&this.low===0},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return(this.low&1)===1},$.isEven=function(){return(this.low&1)===0},$.equals=function(N){return r(N)||(N=h(N)),this.unsigned!==N.unsigned&&this.high>>>31===1&&N.high>>>31===1?!1:this.high===N.high&&this.low===N.low},$.eq=$.equals,$.notEquals=function(N){return!this.eq(N)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(N){return this.comp(N)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(N){return this.comp(N)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(N){return this.comp(N)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(N){return this.comp(N)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(N){if(r(N)||(N=h(N)),this.eq(N))return 0;var O=this.isNegative(),z=N.isNegative();return O&&!z?-1:!O&&z?1:this.unsigned?N.high>>>0>this.high>>>0||N.high===this.high&&N.low>>>0>this.low>>>0?-1:1:this.sub(N).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(v)},$.neg=$.negate,$.add=function(N){r(N)||(N=h(N));var O=this.high>>>16,z=this.high&65535,j=this.low>>>16,L=this.low&65535,B=N.high>>>16,W=N.high&65535,J=N.low>>>16,ee=N.low&65535,re=0,Z=0,se=0,ne=0;return ne+=L+ee,se+=ne>>>16,ne&=65535,se+=j+J,Z+=se>>>16,se&=65535,Z+=z+W,re+=Z>>>16,Z&=65535,re+=O+B,re&=65535,c(se<<16|ne,re<<16|Z,this.unsigned)},$.subtract=function(N){return r(N)||(N=h(N)),this.add(N.neg())},$.sub=$.subtract,$.multiply=function(N){if(this.isZero())return y;if(r(N)||(N=h(N)),n){var O=n.mul(this.low,this.high,N.low,N.high);return c(O,n.get_high(),this.unsigned)}if(N.isZero())return y;if(this.eq(P))return N.isOdd()?P:y;if(N.eq(P))return this.isOdd()?P:y;if(this.isNegative())return N.isNegative()?this.neg().mul(N.neg()):this.neg().mul(N).neg();if(N.isNegative())return this.mul(N.neg()).neg();if(this.lt(x)&&N.lt(x))return l(this.toNumber()*N.toNumber(),this.unsigned);var z=this.high>>>16,j=this.high&65535,L=this.low>>>16,B=this.low&65535,W=N.high>>>16,J=N.high&65535,ee=N.low>>>16,re=N.low&65535,Z=0,se=0,ne=0,de=0;return de+=B*re,ne+=de>>>16,de&=65535,ne+=L*re,se+=ne>>>16,ne&=65535,ne+=B*ee,se+=ne>>>16,ne&=65535,se+=j*re,Z+=se>>>16,se&=65535,se+=L*ee,Z+=se>>>16,se&=65535,se+=B*J,Z+=se>>>16,se&=65535,Z+=z*re+j*ee+L*J+B*W,Z&=65535,c(ne<<16|de,Z<<16|se,this.unsigned)},$.mul=$.multiply,$.divide=function(N){if(r(N)||(N=h(N)),N.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&N.low===-1&&N.high===-1)return this;var O=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,N.low,N.high);return c(O,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:y;var z,j,L;if(this.unsigned){if(N.unsigned||(N=N.toUnsigned()),N.gt(this))return b;if(N.gt(this.shru(1)))return C;L=b}else{if(this.eq(P)){if(N.eq(v)||N.eq(S))return P;if(N.eq(P))return v;var B=this.shr(1);return z=B.div(N).shl(1),z.eq(y)?N.isNegative()?v:S:(j=this.sub(N.mul(z)),L=z.add(j.div(N)),L)}else if(N.eq(P))return this.unsigned?b:y;if(this.isNegative())return N.isNegative()?this.neg().div(N.neg()):this.neg().div(N).neg();if(N.isNegative())return this.div(N.neg()).neg();L=y}for(j=this;j.gte(N);){z=Math.max(1,Math.floor(j.toNumber()/N.toNumber()));for(var W=Math.ceil(Math.log(z)/Math.LN2),J=W<=48?1:u(2,W-48),ee=l(z),re=ee.mul(N);re.isNegative()||re.gt(j);)z-=J,ee=l(z,this.unsigned),re=ee.mul(N);ee.isZero()&&(ee=v),L=L.add(ee),j=j.sub(re)}return L},$.div=$.divide,$.modulo=function(N){if(r(N)||(N=h(N)),n){var O=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,N.low,N.high);return c(O,n.get_high(),this.unsigned)}return this.sub(this.div(N).mul(N))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return c(~this.low,~this.high,this.unsigned)},$.and=function(N){return r(N)||(N=h(N)),c(this.low&N.low,this.high&N.high,this.unsigned)},$.or=function(N){return r(N)||(N=h(N)),c(this.low|N.low,this.high|N.high,this.unsigned)},$.xor=function(N){return r(N)||(N=h(N)),c(this.low^N.low,this.high^N.high,this.unsigned)},$.shiftLeft=function(N){return r(N)&&(N=N.toInt()),(N&=63)===0?this:N<32?c(this.low<<N,this.high<<N|this.low>>>32-N,this.unsigned):c(0,this.low<<N-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(N){return r(N)&&(N=N.toInt()),(N&=63)===0?this:N<32?c(this.low>>>N|this.high<<32-N,this.high>>N,this.unsigned):c(this.high>>N-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(N){if(r(N)&&(N=N.toInt()),N&=63,N===0)return this;var O=this.high;if(N<32){var z=this.low;return c(z>>>N|O<<32-N,O>>>N,this.unsigned)}else return N===32?c(O,0,this.unsigned):c(O>>>N-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},$.toBytes=function(N){return N?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var N=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,N&255,N>>>8&255,N>>>16&255,N>>>24]},$.toBytesBE=function(){var N=this.high,O=this.low;return[N>>>24,N>>>16&255,N>>>8&255,N&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},s.fromBytes=function(N,O,z){return z?s.fromBytesLE(N,O):s.fromBytesBE(N,O)},s.fromBytesLE=function(N,O){return new s(N[0]|N[1]<<8|N[2]<<16|N[3]<<24,N[4]|N[5]<<8|N[6]<<16|N[7]<<24,O)},s.fromBytesBE=function(N,O){return new s(N[4]<<24|N[5]<<16|N[6]<<8|N[7],N[0]<<24|N[1]<<16|N[2]<<8|N[3],O)}}}),aT=nn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),oT=nn({"(disabled):util"(){}}),iT=nn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),h=u&&u.state,p=d.next;return p.int32=function(){return d.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,h&&(typeof h=="object"&&o(h,d),p.state=function(){return o(d,{})}),p}function l(){var c=4022871197,u=function(d){d=String(d);for(var h=0;h<d.length;h++){c+=d.charCodeAt(h);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),lT=nn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var h=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^h^h>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),uT=nn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var h=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(h^h<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),cT=nn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,h=c.i,p,f,m;return p=d[h],p^=p>>>7,f=p^p<<24,p=d[h+1&7],f^=p^p>>>10,p=d[h+3&7],f^=p^p>>>3,p=d[h+4&7],f^=p^p<<7,p=d[h+7&7],p=p^p<<13,f^=p^p<<9,d[h]=f,c.i=h+1&7,f};function u(d,h){var p,f,m=[];if(h===(h|0))f=m[0]=h;else for(h=""+h,p=0;p<h.length;++p)m[p&7]=m[p&7]<<15^h.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?f=m[7]=-1:f=m[p],d.x=m,d.i=0,p=256;p>0;--p)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,d&&(d.x&&o(d,u),h.state=function(){return o(u,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),dT=nn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,h=c.X,p=c.i,f,m;return c.w=d=d+1640531527|0,m=h[p+34&127],f=h[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[p]=m^f,c.i=p,m+(d^d>>>16)|0};function u(d,h){var p,f,m,g,A,x=[],y=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,y=Math.max(y,h.length)),m=0,g=-32;g<y;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(A=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(A=A+1640531527|0,p=x[g&127]^=f+A,m=p==0?m+1:0);for(m>=128&&(x[(h&&h.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],p=x[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,x[m]=f^p;d.w=A,d.X=x,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,d&&(d.X&&o(d,u),h.state=function(){return o(u,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),hT=nn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var h=c.b,p=c.c,f=c.d,m=c.a;return h=h<<25^h>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-h|0,c.b=h=h<<20^h>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-h|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),pT=nn({"(disabled):crypto"(){}}),fT=nn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",c=r.pow(a,o),u=r.pow(2,i),d=u*2,h=a-1,p;function f(v,C,S){var E=[];C=C==!0?{entropy:!0}:C||{};var R=x(A(C.entropy?[v,b(s)]:v??y(),3),E),P=new m(E),$=function(){for(var _=P.g(o),N=c,O=0;_<u;)_=(_+O)*a,N*=a,O=P.g(1);for(;_>=d;)_/=2,N/=2,O>>>=1;return(_+O)/N};return $.int32=function(){return P.g(4)|0},$.quick=function(){return P.g(4)/4294967296},$.double=$,x(b(P.S),s),(C.pass||S||function(_,N,O,z){return z&&(z.S&&g(z,P),_.state=function(){return g(P,{})}),O?(r[l]=_,N):_})($,R,"global"in C?C.global:this==r,C.state)}function m(v){var C,S=v.length,E=this,R=0,P=E.i=E.j=0,$=E.S=[];for(S||(v=[S++]);R<a;)$[R]=R++;for(R=0;R<a;R++)$[R]=$[P=h&P+v[R%S]+(C=$[R])],$[P]=C;(E.g=function(_){for(var N,O=0,z=E.i,j=E.j,L=E.S;_--;)N=L[z=h&z+1],O=O*a+L[h&(L[z]=L[j=h&j+N])+(L[j]=N)];return E.i=z,E.j=j,O})(a)}function g(v,C){return C.i=v.i,C.j=v.j,C.S=v.S.slice(),C}function A(v,C){var S=[],E=typeof v,R;if(C&&E=="object")for(R in v)try{S.push(A(v[R],C-1))}catch{}return S.length?S:E=="string"?v:v+"\0"}function x(v,C){for(var S=v+"",E,R=0;R<S.length;)C[h&R]=h&(E^=C[h&R]*19)+S.charCodeAt(R++);return b(C)}function y(){try{var v;return p&&(v=p.randomBytes)?v=v(a):(v=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(v)),b(v)}catch{var C=n.navigator,S=C&&C.plugins;return[+new Date,n,S,n.screen,b(s)]}}function b(v){return String.fromCharCode.apply(0,v)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{p=pT()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self<"u"?self:e,[],Math)}}),Rf=nn({"src/node_modules/seedrandom/index.js"(e,t){var n=iT(),s=lT(),r=uT(),a=cT(),o=dT(),i=hT(),l=fT();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),k3=nn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),qp=nn({"(disabled):fs"(){}}),ad=nn({"(disabled):path"(){}}),mT=nn({"(disabled):worker_threads"(){}}),gT=nn({"(disabled):perf_hooks"(){}}),AT=nn({"(disabled):os"(){}}),yT=nn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};function a(){return ne.buffer!=rt&&Bn(ne.buffer),Zn}function o(){return ne.buffer!=rt&&Bn(ne.buffer),pn}function i(){return ne.buffer!=rt&&Bn(ne.buffer),Yn}function l(){return ne.buffer!=rt&&Bn(ne.buffer),ps}function c(){return ne.buffer!=rt&&Bn(ne.buffer),fs}var u=typeof r<"u"?r:{},d,h;u.ready=new Promise(function(I,D){d=I,h=D});var p;typeof process<"u"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=[],A="./this.program",x=function(I,D){throw D},y=!1,b=!1,v=!1,C=!1;y=typeof window=="object",b=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=!y&&!v&&!b;var S=u.ENVIRONMENT_IS_PTHREAD||!1;S&&(rt=u.buffer);var E="";function R(I){return u.locateFile?u.locateFile(I,E):E+I}var P,$,_,N,O,z;if(v){b?E=ad().dirname(E)+"/":E=__dirname+"/",P=function(D,V){return O||(O=qp()),z||(z=ad()),D=z.normalize(D),O.readFileSync(D,V?null:"utf8")},_=function(D){var V=P(D,!0);return V.buffer||(V=new Uint8Array(V)),we(V.buffer),V},process.argv.length>1&&(A=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof Wc))throw I}),process.on("unhandledRejection",Er),x=function(I){process.exit(I)},u.inspect=function(){return"[Emscripten Module object]"};var j;try{j=mT()}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}global.Worker=j.Worker}else C?(typeof read<"u"&&(P=function(D){return read(D)}),_=function(D){var V;return typeof readbuffer=="function"?new Uint8Array(readbuffer(D)):(V=read(D,"binary"),we(typeof V=="object"),V)},typeof scriptArgs<"u"?g=scriptArgs:typeof arguments<"u"&&(g=arguments),typeof quit=="function"&&(x=function(I){quit(I)}),typeof print<"u"&&(typeof console>"u"&&(console={}),console.log=print,console.warn=console.error=typeof printErr<"u"?printErr:print)):(y||b)&&(b?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof s<"u"&&s&&(E=s),E.indexOf("blob:")!==0?E=E.substr(0,E.lastIndexOf("/")+1):E="",v?(P=function(D,V){return O||(O=qp()),z||(z=ad()),D=z.normalize(D),O.readFileSync(D,V?null:"utf8")},_=function(D){var V=P(D,!0);return V.buffer||(V=new Uint8Array(V)),we(V.buffer),V}):(P=function(I){var D=new XMLHttpRequest;return D.open("GET",I,!1),D.send(null),D.responseText},b&&(_=function(I){var D=new XMLHttpRequest;return D.open("GET",I,!1),D.responseType="arraybuffer",D.send(null),new Uint8Array(D.response)}),$=function(I,D,V){var Q=new XMLHttpRequest;Q.open("GET",I,!0),Q.responseType="arraybuffer",Q.onload=function(){if(Q.status==200||Q.status==0&&Q.response){D(Q.response);return}V()},Q.onerror=V,Q.send(null)}),N=function(I){document.title=I});v&&typeof performance>"u"&&(global.performance=gT().performance);var L=u.print||console.log.bind(console),B=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&(g=u.arguments),u.thisProgram&&(A=u.thisProgram),u.quit&&(x=u.quit);function W(I){W.shown||(W.shown={}),W.shown[I]||(W.shown[I]=1,B(I))}var J=Atomics.load,ee=Atomics.store,re=Atomics.compareExchange,Z;u.wasmBinary&&(Z=u.wasmBinary);var se=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Er("no native wasm support detected");var ne,de,xe=!1,Ie;function we(I,D){I||Er("Assertion failed: "+D)}function $e(I){var D=u["_"+I];return we(D,"Cannot call unknown function "+I+", make sure it is exported"),D}function ze(I,D,V,Q,Ae){var pe={string:function(wn){var Ll=0;if(wn!=null&&wn!==0){var wb=(wn.length<<2)+1;Ll=Ol(wb),st(wn,Ll,wb)}return Ll},array:function(wn){var Ll=Ol(wn.length);return St(wn,Ll),Ll}};function fe(wn){return D==="string"?Ke(wn):D==="boolean"?Boolean(wn):wn}var Ne=$e(I),it=[],sn=0;if(Q)for(var Kt=0;Kt<Q.length;Kt++){var pa=pe[V[Kt]];pa?(sn===0&&(sn=Bc()),it[Kt]=pa(Q[Kt])):it[Kt]=Q[Kt]}var zl=Ne.apply(null,it);return zl=fe(zl),sn!==0&&Pl(sn),zl}function Xe(I,D,V,Q){V=V||[];var Ae=V.every(function(fe){return fe==="number"}),pe=D!=="string";return pe&&Ae&&!Q?$e(I):function(){return ze(I,D,V,arguments,Q)}}function je(I,D,V){for(var Q=D+V,Ae="";!(D>=Q);){var pe=I[D++];if(!pe)return Ae;if(!(pe&128)){Ae+=String.fromCharCode(pe);continue}var fe=I[D++]&63;if((pe&224)==192){Ae+=String.fromCharCode((pe&31)<<6|fe);continue}var Ne=I[D++]&63;if((pe&240)==224?pe=(pe&15)<<12|fe<<6|Ne:pe=(pe&7)<<18|fe<<12|Ne<<6|I[D++]&63,pe<65536)Ae+=String.fromCharCode(pe);else{var it=pe-65536;Ae+=String.fromCharCode(55296|it>>10,56320|it&1023)}}return Ae}function Ke(I,D){return I?je(o(),I,D):""}function dt(I,D,V,Q){if(!(Q>0))return 0;for(var Ae=V,pe=V+Q-1,fe=0;fe<I.length;++fe){var Ne=I.charCodeAt(fe);if(Ne>=55296&&Ne<=57343){var it=I.charCodeAt(++fe);Ne=65536+((Ne&1023)<<10)|it&1023}if(Ne<=127){if(V>=pe)break;D[V++]=Ne}else if(Ne<=2047){if(V+1>=pe)break;D[V++]=192|Ne>>6,D[V++]=128|Ne&63}else if(Ne<=65535){if(V+2>=pe)break;D[V++]=224|Ne>>12,D[V++]=128|Ne>>6&63,D[V++]=128|Ne&63}else{if(V+3>=pe)break;D[V++]=240|Ne>>18,D[V++]=128|Ne>>12&63,D[V++]=128|Ne>>6&63,D[V++]=128|Ne&63}}return D[V]=0,V-Ae}function st(I,D,V){return dt(I,o(),D,V)}function ht(I){for(var D=0,V=0;V<I.length;++V){var Q=I.charCodeAt(V);Q>=55296&&Q<=57343&&(Q=65536+((Q&1023)<<10)|I.charCodeAt(++V)&1023),Q<=127?++D:Q<=2047?D+=2:Q<=65535?D+=3:D+=4}return D}function St(I,D){a().set(I,D)}function zn(I,D){return I%D>0&&(I+=D-I%D),I}var rt,Zn,pn,Es,Ln,Yn,ps,Rs,fs;function Bn(I){rt=I,u.HEAP8=Zn=new Int8Array(I),u.HEAP16=Es=new Int16Array(I),u.HEAP32=Yn=new Int32Array(I),u.HEAPU8=pn=new Uint8Array(I),u.HEAPU16=Ln=new Uint16Array(I),u.HEAPU32=ps=new Uint32Array(I),u.HEAPF32=Rs=new Float32Array(I),u.HEAPF64=fs=new Float64Array(I)}var oa=u.INITIAL_MEMORY||16777216;if(S)ne=u.wasmMemory,rt=u.buffer;else if(u.wasmMemory)ne=u.wasmMemory;else if(ne=new WebAssembly.Memory({initial:oa/65536,maximum:32768,shared:!0}),!(ne.buffer instanceof SharedArrayBuffer))throw B("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ne&&(rt=ne.buffer),oa=rt.byteLength,Bn(rt);var yn,ia=[],ms=[],Ec=[],Rc=[],Tr=[],Rh=!1,A0=!1;S||ms.push({func:function(){Xh()}});function _h(){if(!S){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)y0(u.preRun.shift());Rl(ia)}}function $h(){Rh=!0,!S&&Rl(ms)}function Dh(){S||Rl(Ec)}function Wn(){S||(A0=!0)}function Fh(){if(!S){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)x0(u.postRun.shift());Rl(Tr)}}function y0(I){ia.unshift(I)}function x0(I){Tr.unshift(I)}var _s=0,_c=null,qo=null;function b0(I){we(!S,"addRunDependency cannot be used in a pthread worker"),_s++,u.monitorRunDependencies&&u.monitorRunDependencies(_s)}function v0(I){if(_s--,u.monitorRunDependencies&&u.monitorRunDependencies(_s),_s==0&&(_c!==null&&(clearInterval(_c),_c=null),qo)){var D=qo;qo=null,D()}}u.preloadedImages={},u.preloadedAudios={};function Er(I){u.onAbort&&u.onAbort(I),S&&console.error("Pthread aborting at "+new Error().stack),I+="",B(I),xe=!0,Ie=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.";var D=new WebAssembly.RuntimeError(I);throw h(D),D}function Xo(I,D){return String.prototype.startsWith?I.startsWith(D):I.indexOf(D)===0}var w0="data:application/octet-stream;base64,";function Ph(I){return Xo(I,w0)}var k0="file://";function Oh(I){return Xo(I,k0)}var Vn="tfjs-backend-wasm-threaded-simd.wasm";Ph(Vn)||(Vn=R(Vn));function S0(I){try{if(I==Vn&&Z)return new Uint8Array(Z);if(_)return _(I);throw"both async and sync fetching of the wasm failed"}catch(D){Er(D)}}function Mh(){if(!Z&&(y||b)){if(typeof fetch=="function"&&!Oh(Vn))return fetch(Vn,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+Vn+"'";return I.arrayBuffer()}).catch(function(){return S0(Vn)});if($)return new Promise(function(I,D){$(Vn,function(V){I(new Uint8Array(V))},D)})}return Promise.resolve().then(function(){return S0(Vn)})}function I0(){var I={a:Ag};function D(fe,Ne){var it=fe.exports;if(u.asm=it,yn=u.asm.nb,de=Ne,!S){var sn=_e.unusedWorkers.length;_e.unusedWorkers.forEach(function(Kt){_e.loadWasmModuleToWorker(Kt,function(){--sn||v0("wasm-instantiate")})})}}S||b0("wasm-instantiate");function V(fe){D(fe.instance,fe.module)}function Q(fe){return Mh().then(function(Ne){return WebAssembly.instantiate(Ne,I)}).then(fe,function(Ne){B("failed to asynchronously prepare wasm: "+Ne),Er(Ne)})}function Ae(){return!Z&&typeof WebAssembly.instantiateStreaming=="function"&&!Ph(Vn)&&!Oh(Vn)&&typeof fetch=="function"?fetch(Vn,{credentials:"same-origin"}).then(function(fe){var Ne=WebAssembly.instantiateStreaming(fe,I);return Ne.then(V,function(it){return B("wasm streaming compile failed: "+it),B("falling back to ArrayBuffer instantiation"),Q(V)})}):Q(V)}if(u.instantiateWasm)try{var pe=u.instantiateWasm(I,D);return pe}catch(fe){return B("Module.instantiateWasm callback failed with error: "+fe),!1}return Ae().catch(h),{}}var zh={10216:function(){throw"Canceled!"},10234:function(I,D){setTimeout(function(){gb(I,D)},0)}};function C0(){_e.initRuntime()}function Rl(I){for(;I.length>0;){var D=I.shift();if(typeof D=="function"){D(u);continue}var V=D.func;typeof V=="number"?D.arg===void 0?yn.get(V)():yn.get(V)(D.arg):V(D.arg===void 0?null:D.arg)}}var la={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function $c(I,D){if(I<=0||I>a().length||I&!0||D<0)return-28;if(D==0)return 0;D>=2147483647&&(D=1/0);var V=Atomics.load(i(),Ml>>2),Q=0;if(V==I){var Ae=Atomics.compareExchange(i(),Ml>>2,V,0);if(Ae==V&&(--D,Q=1,D<=0))return 1}var pe=Atomics.notify(i(),I>>2,D);if(pe>=0)return pe+Q;throw"Atomics.notify returned an unexpected value "+pe}u._emscripten_futex_wake=$c;function N0(I){if(S)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in killThread!";i()[I+12>>2]=0;var D=_e.pthreads[I];D.worker.terminate(),_e.freeThreadData(D),_e.runningWorkers.splice(_e.runningWorkers.indexOf(D.worker),1),D.worker.pthread=void 0}function T0(I){if(S)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cancelThread!";var D=_e.pthreads[I];D.worker.postMessage({cmd:"cancel"})}function Lh(I){if(S)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cleanupThread!";var D=_e.pthreads[I];if(D){i()[I+12>>2]=0;var V=D.worker;_e.returnWorkerToPool(V)}}var _e={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var I=8,D=0;D<I;++D)_e.allocateUnusedWorker()},initRuntime:function(){for(var I=Zo(228),D=0;D<228/4;++D)l()[I/4+D]=0;i()[I+12>>2]=I;var V=I+152;i()[V>>2]=V;for(var Q=Zo(512),D=0;D<128;++D)l()[Q/4+D]=0;Atomics.store(l(),I+100>>2,Q),Atomics.store(l(),I+40>>2,I),Wg(I,!b,1),fb(I)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;_e.threadExitHandlers.length>0;)_e.threadExitHandlers.pop()();S&&ha()&&pb()},runExitHandlersAndDeinitThread:function(I,D){Atomics.store(l(),I+56>>2,1),Atomics.store(l(),I+60>>2,0),_e.runExitHandlers(),Atomics.store(l(),I+4>>2,D),Atomics.store(l(),I+0>>2,1),$c(I+0,2147483647),Wg(0,0,0)},threadExit:function(I){var D=ha();D&&(_e.runExitHandlersAndDeinitThread(D,I),S&&postMessage({cmd:"exit"}))},threadCancel:function(){_e.runExitHandlersAndDeinitThread(ha(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in _e.pthreads){var D=_e.pthreads[I];D&&D.worker&&_e.returnWorkerToPool(D.worker)}_e.pthreads={};for(var V=0;V<_e.unusedWorkers.length;++V){var Q=_e.unusedWorkers[V];Q.terminate()}_e.unusedWorkers=[];for(var V=0;V<_e.runningWorkers.length;++V){var Q=_e.runningWorkers[V],D=Q.pthread;_e.freeThreadData(D),Q.terminate()}_e.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var D=i()[I.threadInfoStruct+100>>2];i()[I.threadInfoStruct+100>>2]=0,Lc(D),Lc(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&Lc(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){_e.runWithoutMainThreadQueuedCalls(function(){delete _e.pthreads[I.pthread.threadInfoStruct],_e.unusedWorkers.push(I),_e.runningWorkers.splice(_e.runningWorkers.indexOf(I),1),_e.freeThreadData(I.pthread),I.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(I){i()[vb>>2]=0;try{I()}finally{i()[vb>>2]=1}},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,D){I.onmessage=function(V){var Q=V.data,Ae=Q.cmd;if(I.pthread&&(_e.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),Q.targetThread&&Q.targetThread!=ha()){var pe=_e.pthreads[Q.targetThread];pe?pe.worker.postMessage(V.data,Q.transferList):console.error('Internal error! Worker sent a message "'+Ae+'" to target pthread '+Q.targetThread+", but that thread no longer exists!"),_e.currentProxiedOperationCallerThread=void 0;return}if(Ae==="processQueuedMainThreadWork")Qh();else if(Ae==="spawnThread")jh(V.data);else if(Ae==="cleanupThread")Lh(Q.thread);else if(Ae==="killThread")N0(Q.thread);else if(Ae==="cancelThread")T0(Q.thread);else if(Ae==="loaded")I.loaded=!0,D&&D(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(Ae==="print")L("Thread "+Q.threadId+": "+Q.text);else if(Ae==="printErr")B("Thread "+Q.threadId+": "+Q.text);else if(Ae==="alert")alert("Thread "+Q.threadId+": "+Q.text);else if(Ae==="exit"){var fe=I.pthread&&Atomics.load(l(),I.pthread.threadInfoStruct+64>>2);fe&&_e.returnWorkerToPool(I)}else if(Ae==="exitProcess")try{XN(Q.returnCode)}catch(Ne){if(Ne instanceof Wc)return;throw Ne}else Ae==="cancelDone"?_e.returnWorkerToPool(I):Ae==="objectTransfer"?_e.receiveObjectTransfer(V.data):V.data.target==="setimmediate"?I.postMessage(V.data):B("worker sent an unknown command "+Ae);_e.currentProxiedOperationCallerThread=void 0},I.onerror=function(V){B("pthread sent an error! "+V.filename+":"+V.lineno+": "+V.message)},v&&(I.on("message",function(V){I.onmessage({data:V})}),I.on("error",function(V){I.onerror(V)}),I.on("exit",function(V){})),I.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:ne,wasmModule:de})},allocateUnusedWorker:function(){var I=R("tfjs-backend-wasm-threaded-simd.worker.js");_e.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return _e.unusedWorkers.length==0&&(_e.allocateUnusedWorker(),_e.loadWasmModuleToWorker(_e.unusedWorkers[0])),_e.unusedWorkers.length>0?_e.unusedWorkers.pop():null},busySpinWait:function(I){for(var D=performance.now()+I;performance.now()<D;);}};function E0(I,D){xb(I,D),Pl(I)}u.establishStackSpace=E0;function R0(){return se}u.getNoExitRuntime=R0;function _0(I,D){return yn.get(I)(D)}u.invokeEntryPoint=_0;function $0(I,D,V,Q){Er("Assertion failed: "+Ke(I)+", at: "+[D?Ke(D):"unknown filename",V,Q?Ke(Q):"unknown function"])}function D0(I,D){var V=_main(I,D)}var Ko;v?Ko=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:S?Ko=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow<"u"?Ko=dateNow:Ko=function(){return performance.now()};function F0(I){return i()[db()>>2]=I,I}function P0(I,D){if(S)return ua(1,1,I,D)}function O0(I,D){if(I==D)postMessage({cmd:"processQueuedMainThreadWork"});else if(S)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var V=_e.pthreads[I],Q=V&&V.worker;if(!Q)return;Q.postMessage({cmd:"processThreadQueue"})}return 1}function M0(){Er()}function z0(I,D,V){var Q=V0(D,V);return zh[I].apply(null,Q)}function L0(I,D){}function Bh(I,D,V){if(I<=0||I>a().length||I&!0)return-28;if(y){if(Atomics.load(i(),I>>2)!=D)return-6;for(var Ae=performance.now(),pe=Ae+V,fe=Atomics.exchange(i(),Ml>>2,I);;){if(Ae=performance.now(),Ae>pe)return fe=Atomics.exchange(i(),Ml>>2,0),-73;if(fe=Atomics.exchange(i(),Ml>>2,0),fe==0)break;if(Qh(),Atomics.load(i(),I>>2)!=D)return-6;fe=Atomics.exchange(i(),Ml>>2,I)}return 0}else{var Q=Atomics.wait(i(),I>>2,D,V);if(Q==="timed-out")return-73;if(Q==="not-equal")return-6;if(Q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+Q}}function B0(I,D,V){o().copyWithin(I,D,D+V)}function W0(){return v?AT().cpus().length:navigator.hardwareConcurrency}function ua(I,D){for(var V=arguments.length-2,Q=Bc(),Ae=V,pe=Ol(Ae*8),fe=pe>>3,Ne=0;Ne<V;Ne++){var it=arguments[2+Ne];c()[fe+Ne]=it}var sn=yb(I,Ae,pe,D);return Pl(Q),sn}var Dc=[],Fc=[];function V0(I,D){Fc.length=0;var V;for(D>>=2;V=o()[I++];){var Q=V<105;Q&&D&1&&D++,Fc.push(Q?c()[D++>>1]:i()[D]),++D}return Fc}function U0(I,D,V){Dc.length=D;for(var Q=V>>3,Ae=0;Ae<D;Ae++)Dc[Ae]=c()[Q+Ae];var pe=I<0,fe=pe?zh[-I-1]:gg[I];return fe.apply(null,Dc)}function G0(){return o().length}function H0(I){try{return ne.grow(I-rt.byteLength+65535>>>16),Bn(ne.buffer),1}catch{}}function j0(I){var D=G0();if(I<=D)return!1;var V=2147483648;if(I>V)return!1;for(var Q=1;Q<=4;Q*=2){var Ae=D*(1+.2/Q);Ae=Math.min(Ae,I+100663296);var pe=Math.min(V,zn(Math.max(I,Ae),65536)),fe=H0(pe);if(fe)return!0}return!1}var Ue={inEventHandler:0,removeAllEventListeners:function(){for(var I=Ue.eventHandlers.length-1;I>=0;--I)Ue._removeHandler(I);Ue.eventHandlers=[],Ue.deferredCalls=[]},registerRemoveEventListeners:function(){Ue.removeEventListenersRegistered||(Rc.push(Ue.removeAllEventListeners),Ue.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,D,V){function Q(fe,Ne){if(fe.length!=Ne.length)return!1;for(var it in fe)if(fe[it]!=Ne[it])return!1;return!0}for(var Ae in Ue.deferredCalls){var pe=Ue.deferredCalls[Ae];if(pe.targetFunction==I&&Q(pe.argsList,V))return}Ue.deferredCalls.push({targetFunction:I,precedence:D,argsList:V}),Ue.deferredCalls.sort(function(fe,Ne){return fe.precedence<Ne.precedence})},removeDeferredCalls:function(I){for(var D=0;D<Ue.deferredCalls.length;++D)Ue.deferredCalls[D].targetFunction==I&&(Ue.deferredCalls.splice(D,1),--D)},canPerformEventHandlerRequests:function(){return Ue.inEventHandler&&Ue.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ue.canPerformEventHandlerRequests())for(var I=0;I<Ue.deferredCalls.length;++I){var D=Ue.deferredCalls[I];Ue.deferredCalls.splice(I,1),--I,D.targetFunction.apply(null,D.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(I,D){for(var V=0;V<Ue.eventHandlers.length;++V)Ue.eventHandlers[V].target==I&&(!D||D==Ue.eventHandlers[V].eventTypeString)&&Ue._removeHandler(V--)},_removeHandler:function(I){var D=Ue.eventHandlers[I];D.target.removeEventListener(D.eventTypeString,D.eventListenerFunc,D.useCapture),Ue.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var D=function(Ae){++Ue.inEventHandler,Ue.currentEventHandler=I,Ue.runDeferredCalls(),I.handlerFunc(Ae),Ue.runDeferredCalls(),--Ue.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=D,I.target.addEventListener(I.eventTypeString,D,I.useCapture),Ue.eventHandlers.push(I),Ue.registerRemoveEventListeners();else for(var V=0;V<Ue.eventHandlers.length;++V)Ue.eventHandlers[V].target==I.target&&Ue.eventHandlers[V].eventTypeString==I.eventTypeString&&Ue._removeHandler(V--)},queueEventHandlerOnThread_iiii:function(I,D,V,Q,Ae){var pe=Bc(),fe=Ol(12);i()[fe>>2]=V,i()[fe+4>>2]=Q,i()[fe+8>>2]=Ae,Bg(0,I,637534208,D,Q,fe),Pl(pe)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return _e.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function q0(I){var D=ht(I)+1,V=Zo(D);return st(I,V,D),V}function X0(I,D,V,Q){var Ae=Bc(),pe=Ol(12),fe=0;D&&(fe=q0(D)),i()[pe>>2]=fe,i()[pe+4>>2]=V,i()[pe+8>>2]=Q,Bg(0,I,657457152,0,fe,pe),Pl(Ae)}function K0(I,D,V,Q){D=D?Ke(D):"",X0(I,D,V,Q)}function Z0(I){return I>2?Ke(I):I}var Y0=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function J0(I){I=Z0(I);var D=Y0[I]||(typeof document<"u"?document.querySelector(I):void 0);return D}function Pc(I){return J0(I)}function Wh(I,D,V){var Q=Pc(I);if(!Q)return-4;if(Q.canvasSharedPtr&&(i()[Q.canvasSharedPtr>>2]=D,i()[Q.canvasSharedPtr+4>>2]=V),Q.offscreenCanvas||!Q.controlTransferredOffscreen){Q.offscreenCanvas&&(Q=Q.offscreenCanvas);var Ae=!1;if(Q.GLctxObject&&Q.GLctxObject.GLctx){var pe=Q.GLctxObject.GLctx.getParameter(2978);Ae=pe[0]===0&&pe[1]===0&&pe[2]===Q.width&&pe[3]===Q.height}Q.width=D,Q.height=V,Ae&&Q.GLctxObject.GLctx.viewport(0,0,D,V)}else if(Q.canvasSharedPtr){var fe=i()[Q.canvasSharedPtr+8>>2];return K0(fe,I,D,V),1}else return-4;return 0}function Vh(I,D,V){return S?ua(2,1,I,D,V):Wh(I,D,V)}function Q0(I,D,V){var Q=Pc(I);return Q?Wh(I,D,V):Vh(I,D,V)}function eg(I){}function tg(I,D){}function ng(I){var D=I.getExtension("ANGLE_instanced_arrays");if(D)return I.vertexAttribDivisor=function(V,Q){D.vertexAttribDivisorANGLE(V,Q)},I.drawArraysInstanced=function(V,Q,Ae,pe){D.drawArraysInstancedANGLE(V,Q,Ae,pe)},I.drawElementsInstanced=function(V,Q,Ae,pe,fe){D.drawElementsInstancedANGLE(V,Q,Ae,pe,fe)},1}function sg(I){var D=I.getExtension("OES_vertex_array_object");if(D)return I.createVertexArray=function(){return D.createVertexArrayOES()},I.deleteVertexArray=function(V){D.deleteVertexArrayOES(V)},I.bindVertexArray=function(V){D.bindVertexArrayOES(V)},I.isVertexArray=function(V){return D.isVertexArrayOES(V)},1}function rg(I){var D=I.getExtension("WEBGL_draw_buffers");if(D)return I.drawBuffers=function(V,Q){D.drawBuffersWEBGL(V,Q)},1}function ag(I){return!!(I.multiDrawWebgl=I.getExtension("WEBGL_multi_draw"))}var ot={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(D){ot.lastError||(ot.lastError=D)},getNewId:function(I){for(var D=ot.counter++,V=I.length;V<D;V++)I[V]=null;return D},getSource:function(I,D,V,Q){for(var Ae="",pe=0;pe<D;++pe){var fe=Q?i()[Q+pe*4>>2]:-1;Ae+=Ke(i()[V+pe*4>>2],fe<0?void 0:fe)}return Ae},createContext:function(I,D){var V=I.getContext("webgl",D);if(!V)return 0;var Q=ot.registerContext(V,D);return Q},registerContext:function(I,D){var V=Zo(8);i()[V+4>>2]=ha();var Q={handle:V,attributes:D,version:D.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=Q),ot.contexts[V]=Q,(typeof D.enableExtensionsByDefault>"u"||D.enableExtensionsByDefault)&&ot.initExtensions(Q),V},makeContextCurrent:function(I){return ot.currentContext=ot.contexts[I],u.ctx=ca=ot.currentContext&&ot.currentContext.GLctx,!(I&&!ca)},getContext:function(I){return ot.contexts[I]},deleteContext:function(I){ot.currentContext===ot.contexts[I]&&(ot.currentContext=null),typeof Ue=="object"&&Ue.removeAllHandlersOnTarget(ot.contexts[I].GLctx.canvas),ot.contexts[I]&&ot.contexts[I].GLctx.canvas&&(ot.contexts[I].GLctx.canvas.GLctxObject=void 0),Lc(ot.contexts[I].handle),ot.contexts[I]=null},initExtensions:function(I){if(I||(I=ot.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var D=I.GLctx;ng(D),sg(D),rg(D),D.disjointTimerQueryExt=D.getExtension("EXT_disjoint_timer_query"),ag(D);var V=D.getSupportedExtensions()||[];V.forEach(function(Q){Q.indexOf("lose_context")<0&&Q.indexOf("debug")<0&&D.getExtension(Q)})}},populateUniformTable:function(I){for(var D=ot.programs[I],V=ot.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},Q=V.uniforms,Ae=ca.getProgramParameter(D,35718),pe=0;pe<Ae;++pe){var fe=ca.getActiveUniform(D,pe),Ne=fe.name;V.maxUniformLength=Math.max(V.maxUniformLength,Ne.length+1),Ne.slice(-1)=="]"&&(Ne=Ne.slice(0,Ne.lastIndexOf("[")));var it=ca.getUniformLocation(D,Ne);if(it){var sn=ot.getNewId(ot.uniforms);Q[Ne]=[fe.size,sn],ot.uniforms[sn]=it;for(var Kt=1;Kt<fe.size;++Kt){var pa=Ne+"["+Kt+"]";it=ca.getUniformLocation(D,pa),sn=ot.getNewId(ot.uniforms),ot.uniforms[sn]=it}}}}},og=["default","low-power","high-performance"];function ig(I,D){var V=D>>2,Q=i()[V+6],Ae={alpha:!!i()[V+0],depth:!!i()[V+1],stencil:!!i()[V+2],antialias:!!i()[V+3],premultipliedAlpha:!!i()[V+4],preserveDrawingBuffer:!!i()[V+5],powerPreference:og[Q],failIfMajorPerformanceCaveat:!!i()[V+7],majorVersion:i()[V+8],minorVersion:i()[V+9],enableExtensionsByDefault:i()[V+10],explicitSwapControl:i()[V+11],proxyContextToMainThread:i()[V+12],renderViaOffscreenBackBuffer:i()[V+13]},pe=Pc(I);if(!pe||Ae.explicitSwapControl)return 0;var fe=ot.createContext(pe,Ae);return fe}function lg(I,D){return ig(I,D)}var _l={mappings:{},buffers:[null,[],[]],printChar:function(I,D){var V=_l.buffers[I];D===0||D===10?((I===1?L:B)(je(V,0)),V.length=0):V.push(D)},varargs:void 0,get:function(){_l.varargs+=4;var I=i()[_l.varargs-4>>2];return I},getStr:function(I){var D=Ke(I);return D},get64:function(I,D){return I}};function Uh(I){return S?ua(3,1,I):0}function Gh(I,D,V,Q,Ae){if(S)return ua(4,1,I,D,V,Q,Ae)}function Hh(I,D,V,Q){if(S)return ua(5,1,I,D,V,Q);for(var Ae=0,pe=0;pe<V;pe++){for(var fe=i()[D+pe*8>>2],Ne=i()[D+(pe*8+4)>>2],it=0;it<Ne;it++)_l.printChar(I,o()[fe+it]);Ae+=Ne}return i()[Q>>2]=Ae,0}function ug(I){var D=_e.threadExitHandlers.pop();I&&D()}function cg(I,D){_e.threadExitHandlers.push(function(){yn.get(I)(D)})}function jh(I){if(S)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var D=_e.getNewWorker();if(D.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";_e.runningWorkers.push(D);for(var V=Zo(128*4),Q=0;Q<128;++Q)i()[V+Q*4>>2]=0;var Ae=I.stackBase+I.stackSize,pe=_e.pthreads[I.pthread_ptr]={worker:D,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,threadInfoStruct:I.pthread_ptr},fe=pe.threadInfoStruct>>2;Atomics.store(l(),fe+16,I.detached),Atomics.store(l(),fe+25,V),Atomics.store(l(),fe+10,pe.threadInfoStruct),Atomics.store(l(),fe+20,I.stackSize),Atomics.store(l(),fe+19,Ae),Atomics.store(l(),fe+26,I.stackSize),Atomics.store(l(),fe+28,Ae),Atomics.store(l(),fe+29,I.detached);var Ne=hb(),it=Ne+40;Atomics.store(l(),fe+43,it),D.pthread=pe;var sn={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};D.runPthread=function(){sn.time=performance.now(),D.postMessage(sn,I.transferList)},D.loaded&&(D.runPthread(),delete D.runPthread)}function dg(I,D,V,Q){if(typeof SharedArrayBuffer>"u")return B("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return B("pthread_create called with a null thread pointer!"),28;var Ae=[],pe=0;if(S&&(Ae.length===0||pe))return Ab(687865856,I,D,V,Q);if(pe)return pe;var fe=0,Ne=0,it=0;D&&D!=-1?(fe=i()[D>>2],fe+=81920,Ne=i()[D+8>>2],it=i()[D+12>>2]!==0):fe=2097152;var sn=Ne==0;sn?Ne=bb(16,fe):(Ne-=fe,we(Ne>0));for(var Kt=Zo(228),pa=0;pa<57;++pa)l()[(Kt>>2)+pa]=0;i()[I>>2]=Kt,i()[Kt+12>>2]=Kt;var zl=Kt+152;i()[zl>>2]=zl;var wn={stackBase:Ne,stackSize:fe,allocatedOwnStack:sn,detached:it,startRoutine:V,pthread_ptr:Kt,arg:Q,transferList:Ae};return S?(wn.cmd="spawnThread",postMessage(wn,Ae)):jh(wn),0}function hg(){if(!!S){var I=ha();if(!!I){var D=Atomics.load(l(),I+56>>2);if(!D){var V=Atomics.load(l(),I+0>>2);if(V==2)throw"Canceled!"}}}}function pg(){v||b||W("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function fg(I,D,V){if(!I)return B("pthread_join attempted on a null thread pointer!"),la.ESRCH;if(S&&ha()==I)return B("PThread "+I+" is attempting to join to itself!"),la.EDEADLK;if(!S&&mb()==I)return B("Main thread "+I+" is attempting to join to itself!"),la.EDEADLK;var Q=i()[I+12>>2];if(Q!==I)return B("pthread_join attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),la.ESRCH;var Ae=Atomics.load(l(),I+64>>2);if(Ae)return B("Attempted to join thread "+I+", which was already detached!"),la.EINVAL;for(V&&pg();;){var pe=Atomics.load(l(),I+0>>2);if(pe==1){var fe=Atomics.load(l(),I+4>>2);return D&&(i()[D>>2]=fe),Atomics.store(l(),I+64>>2,1),S?postMessage({cmd:"cleanupThread",thread:I}):Lh(I),0}if(!V)return la.EBUSY;hg(),S||Qh(),Bh(I+0,pe,S?100:1)}}function mg(I,D){return fg(I,D,!0)}function qh(I){if(S)return ua(6,1,I);switch(I){case 30:return 16384;case 85:var D=2147483648;return D/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return F0(28),-1}S||_e.initMainThreadBlock();var ca,gg=[null,P0,Vh,Uh,Gh,Hh,qh],Ag={e:$0,r:D0,x:O0,b:M0,y:z0,j:L0,d:Bh,c:$c,f:Ko,p:B0,A:W0,u:U0,q:j0,v:Q0,i:eg,s:tg,w:lg,l:Uh,n:Gh,g:Hh,o:C0,a:ne||u.wasmMemory,z:ug,k:cg,h:dg,m:mg,t:qh},cb=I0(),Xh=u.___wasm_call_ctors=function(){return(Xh=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},yg=u._init=function(){return(yg=u._init=u.asm.C).apply(null,arguments)},xg=u._init_with_threads_count=function(){return(xg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},bg=u._get_threads_count=function(){return(bg=u._get_threads_count=u.asm.E).apply(null,arguments)},vg=u._register_tensor=function(){return(vg=u._register_tensor=u.asm.F).apply(null,arguments)},wg=u._dispose_data=function(){return(wg=u._dispose_data=u.asm.G).apply(null,arguments)},kg=u._dispose=function(){return(kg=u._dispose=u.asm.H).apply(null,arguments)},Sg=u._Abs=function(){return(Sg=u._Abs=u.asm.I).apply(null,arguments)},Ig=u._Add=function(){return(Ig=u._Add=u.asm.J).apply(null,arguments)},Cg=u._AddN=function(){return(Cg=u._AddN=u.asm.K).apply(null,arguments)},Ng=u._All=function(){return(Ng=u._All=u.asm.L).apply(null,arguments)},Tg=u._Any=function(){return(Tg=u._Any=u.asm.M).apply(null,arguments)},Eg=u._ArgMax=function(){return(Eg=u._ArgMax=u.asm.N).apply(null,arguments)},Rg=u._AvgPool=function(){return(Rg=u._AvgPool=u.asm.O).apply(null,arguments)},_g=u._BatchMatMul=function(){return(_g=u._BatchMatMul=u.asm.P).apply(null,arguments)},$g=u._Ceil=function(){return($g=u._Ceil=u.asm.Q).apply(null,arguments)},Dg=u._ClipByValue=function(){return(Dg=u._ClipByValue=u.asm.R).apply(null,arguments)},Fg=u._Conv2D=function(){return(Fg=u._Conv2D=u.asm.S).apply(null,arguments)},Pg=u._Conv2DBackpropInput=function(){return(Pg=u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},Og=u._Cos=function(){return(Og=u._Cos=u.asm.U).apply(null,arguments)},Mg=u._Cosh=function(){return(Mg=u._Cosh=u.asm.V).apply(null,arguments)},Kh=u._CropAndResize=function(){return(Kh=u._CropAndResize=u.asm.W).apply(null,arguments)},Zh=u._Cumsum=function(){return(Zh=u._Cumsum=u.asm.X).apply(null,arguments)},Oc=u._DepthToSpace=function(){return(Oc=u._DepthToSpace=u.asm.Y).apply(null,arguments)},$l=u._DepthwiseConv2dNative=function(){return($l=u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},zg=u._Elu=function(){return(zg=u._Elu=u.asm._).apply(null,arguments)},Mc=u._Equal=function(){return(Mc=u._Equal=u.asm.$).apply(null,arguments)},Dl=u._Exp=function(){return(Dl=u._Exp=u.asm.aa).apply(null,arguments)},Fl=u._FlipLeftRight=function(){return(Fl=u._FlipLeftRight=u.asm.ba).apply(null,arguments)},Lg=u._Floor=function(){return(Lg=u._Floor=u.asm.ca).apply(null,arguments)},te=u._FloorDiv=function(){return(te=u._FloorDiv=u.asm.da).apply(null,arguments)},oe=u._FusedBatchNorm=function(){return(oe=u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},ke=u._FusedConv2D=function(){return(ke=u._FusedConv2D=u.asm.fa).apply(null,arguments)},at=u._FusedDepthwiseConv2D=function(){return(at=u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},Pt=u._Gather=function(){return(Pt=u._Gather=u.asm.ha).apply(null,arguments)},It=u._GatherNd=function(){return(It=u._GatherNd=u.asm.ia).apply(null,arguments)},Ze=u._Greater=function(){return(Ze=u._Greater=u.asm.ja).apply(null,arguments)},Ye=u._GreaterEqual=function(){return(Ye=u._GreaterEqual=u.asm.ka).apply(null,arguments)},fn=u._LeakyRelu=function(){return(fn=u._LeakyRelu=u.asm.la).apply(null,arguments)},Rr=u._Less=function(){return(Rr=u._Less=u.asm.ma).apply(null,arguments)},_r=u._LessEqual=function(){return(_r=u._LessEqual=u.asm.na).apply(null,arguments)},Yh=u._Log=function(){return(Yh=u._Log=u.asm.oa).apply(null,arguments)},zc=u._LogicalAnd=function(){return(zc=u._LogicalAnd=u.asm.pa).apply(null,arguments)},Jn=u._Max=function(){return(Jn=u._Max=u.asm.qa).apply(null,arguments)},da=u._MaxPool=function(){return(da=u._MaxPool=u.asm.ra).apply(null,arguments)},Jh=u._Maximum=function(){return(Jh=u._Maximum=u.asm.sa).apply(null,arguments)},tN=u._Mean=function(){return(tN=u._Mean=u.asm.ta).apply(null,arguments)},nN=u._Min=function(){return(nN=u._Min=u.asm.ua).apply(null,arguments)},sN=u._Minimum=function(){return(sN=u._Minimum=u.asm.va).apply(null,arguments)},rN=u._MirrorPad=function(){return(rN=u._MirrorPad=u.asm.wa).apply(null,arguments)},aN=u._Multiply=function(){return(aN=u._Multiply=u.asm.xa).apply(null,arguments)},oN=u._Neg=function(){return(oN=u._Neg=u.asm.ya).apply(null,arguments)},iN=u._NonMaxSuppressionV3=function(){return(iN=u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},lN=u._NonMaxSuppressionV4=function(){return(lN=u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},uN=u._NonMaxSuppressionV5=function(){return(uN=u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},cN=u._NotEqual=function(){return(cN=u._NotEqual=u.asm.Ca).apply(null,arguments)},dN=u._OneHot=function(){return(dN=u._OneHot=u.asm.Da).apply(null,arguments)},hN=u._PadV2=function(){return(hN=u._PadV2=u.asm.Ea).apply(null,arguments)},pN=u._Pow=function(){return(pN=u._Pow=u.asm.Fa).apply(null,arguments)},fN=u._Prelu=function(){return(fN=u._Prelu=u.asm.Ga).apply(null,arguments)},mN=u._Prod=function(){return(mN=u._Prod=u.asm.Ha).apply(null,arguments)},gN=u._RealDiv=function(){return(gN=u._RealDiv=u.asm.Ia).apply(null,arguments)},AN=u._Relu=function(){return(AN=u._Relu=u.asm.Ja).apply(null,arguments)},yN=u._Relu6=function(){return(yN=u._Relu6=u.asm.Ka).apply(null,arguments)},xN=u._ResizeBilinear=function(){return(xN=u._ResizeBilinear=u.asm.La).apply(null,arguments)},bN=u._Reverse=function(){return(bN=u._Reverse=u.asm.Ma).apply(null,arguments)},vN=u._RotateWithOffset=function(){return(vN=u._RotateWithOffset=u.asm.Na).apply(null,arguments)},wN=u._Round=function(){return(wN=u._Round=u.asm.Oa).apply(null,arguments)},kN=u._Rsqrt=function(){return(kN=u._Rsqrt=u.asm.Pa).apply(null,arguments)},SN=u._ScatterNd=function(){return(SN=u._ScatterNd=u.asm.Qa).apply(null,arguments)},IN=u._SelectV2=function(){return(IN=u._SelectV2=u.asm.Ra).apply(null,arguments)},CN=u._Sigmoid=function(){return(CN=u._Sigmoid=u.asm.Sa).apply(null,arguments)},NN=u._Sin=function(){return(NN=u._Sin=u.asm.Ta).apply(null,arguments)},TN=u._Softmax=function(){return(TN=u._Softmax=u.asm.Ua).apply(null,arguments)},EN=u._SparseFillEmptyRows=function(){return(EN=u._SparseFillEmptyRows=u.asm.Va).apply(null,arguments)},RN=u._SparseReshape=function(){return(RN=u._SparseReshape=u.asm.Wa).apply(null,arguments)},_N=u._SparseSegmentReduction=function(){return(_N=u._SparseSegmentReduction=u.asm.Xa).apply(null,arguments)},$N=u._Sqrt=function(){return($N=u._Sqrt=u.asm.Ya).apply(null,arguments)},DN=u._Square=function(){return(DN=u._Square=u.asm.Za).apply(null,arguments)},FN=u._SquaredDifference=function(){return(FN=u._SquaredDifference=u.asm._a).apply(null,arguments)},PN=u._Step=function(){return(PN=u._Step=u.asm.$a).apply(null,arguments)},ON=u._StridedSlice=function(){return(ON=u._StridedSlice=u.asm.ab).apply(null,arguments)},MN=u._Sub=function(){return(MN=u._Sub=u.asm.bb).apply(null,arguments)},zN=u._Sum=function(){return(zN=u._Sum=u.asm.cb).apply(null,arguments)},LN=u._Tan=function(){return(LN=u._Tan=u.asm.db).apply(null,arguments)},BN=u._Tanh=function(){return(BN=u._Tanh=u.asm.eb).apply(null,arguments)},WN=u._Tile=function(){return(WN=u._Tile=u.asm.fb).apply(null,arguments)},VN=u._TopK=function(){return(VN=u._TopK=u.asm.gb).apply(null,arguments)},UN=u._Transform=function(){return(UN=u._Transform=u.asm.hb).apply(null,arguments)},GN=u._Transpose=function(){return(GN=u._Transpose=u.asm.ib).apply(null,arguments)},HN=u.__FusedMatMul=function(){return(HN=u.__FusedMatMul=u.asm.jb).apply(null,arguments)},Zo=u._malloc=function(){return(Zo=u._malloc=u.asm.kb).apply(null,arguments)},Lc=u._free=function(){return(Lc=u._free=u.asm.lb).apply(null,arguments)},db=u.___errno_location=function(){return(db=u.___errno_location=u.asm.mb).apply(null,arguments)},hb=u._emscripten_get_global_libc=function(){return(hb=u._emscripten_get_global_libc=u.asm.ob).apply(null,arguments)},ha=u._pthread_self=function(){return(ha=u._pthread_self=u.asm.pb).apply(null,arguments)},pb=u.___pthread_tsd_run_dtors=function(){return(pb=u.___pthread_tsd_run_dtors=u.asm.qb).apply(null,arguments)},Qh=u._emscripten_main_thread_process_queued_calls=function(){return(Qh=u._emscripten_main_thread_process_queued_calls=u.asm.rb).apply(null,arguments)},jN=u._emscripten_current_thread_process_queued_calls=function(){return(jN=u._emscripten_current_thread_process_queued_calls=u.asm.sb).apply(null,arguments)},fb=u._emscripten_register_main_browser_thread_id=function(){return(fb=u._emscripten_register_main_browser_thread_id=u.asm.tb).apply(null,arguments)},mb=u._emscripten_main_browser_thread_id=function(){return(mb=u._emscripten_main_browser_thread_id=u.asm.ub).apply(null,arguments)},gb=u.__emscripten_do_dispatch_to_thread=function(){return(gb=u.__emscripten_do_dispatch_to_thread=u.asm.vb).apply(null,arguments)},Ab=u._emscripten_sync_run_in_main_thread_4=function(){return(Ab=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},yb=u._emscripten_run_in_main_runtime_thread_js=function(){return(yb=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},Bg=u.__emscripten_call_on_thread=function(){return(Bg=u.__emscripten_call_on_thread=u.asm.yb).apply(null,arguments)},qN=u._emscripten_tls_init=function(){return(qN=u._emscripten_tls_init=u.asm.zb).apply(null,arguments)},Wg=u.__emscripten_thread_init=function(){return(Wg=u.__emscripten_thread_init=u.asm.Ab).apply(null,arguments)},Bc=u.stackSave=function(){return(Bc=u.stackSave=u.asm.Bb).apply(null,arguments)},Pl=u.stackRestore=function(){return(Pl=u.stackRestore=u.asm.Cb).apply(null,arguments)},Ol=u.stackAlloc=function(){return(Ol=u.stackAlloc=u.asm.Db).apply(null,arguments)},xb=u._emscripten_stack_set_limits=function(){return(xb=u._emscripten_stack_set_limits=u.asm.Eb).apply(null,arguments)},bb=u._memalign=function(){return(bb=u._memalign=u.asm.Fb).apply(null,arguments)},vb=u.__emscripten_allow_main_runtime_queued_calls=10208,Ml=u.__emscripten_main_thread_futex=10412;u.cwrap=Xe,u.PThread=_e,u.PThread=_e,u.wasmMemory=ne,u.ExitStatus=Wc;var ep;function Wc(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}qo=function I(){ep||Vg(),ep||(qo=I)};function Vg(I){if(I=I||g,_s>0)return;if(S){d(u),$h(),postMessage({cmd:"loaded"});return}if(_h(),_s>0)return;function D(){ep||(ep=!0,u.calledRun=!0,!xe&&($h(),Dh(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Fh()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),D()},1)):D()}u.run=Vg;function XN(I,D){if(!(D&&se&&I===0)){if(!D&&S)throw postMessage({cmd:"exitProcess",returnCode:I}),new Wc(I);se||(_e.terminateAllThreads(),Ie=I,Wn(),u.onExit&&u.onExit(I),xe=!0),x(I,new Wc(I))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();S&&(se=!1,_e.initWorker()),Vg();var tp;p&&(tp={uncaughtException:process.listeners("uncaughtException").filter(function(I){return!p.uncaughtException.indexOf(I)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(I){return!p.unhandledRejection.indexOf(I)>-1})});var np;if(typeof WasmBackendModule<"u")np=WasmBackendModule;else if(typeof r<"u")np=r;else throw new Error("Could not find wasm module in post.js");if(tp){var KN=np._dispose;np._dispose=function(){KN(),tp.uncaughtException.forEach(function(I){process.removeListener("uncaughtException",I)}),tp.unhandledRejection.forEach(function(I){process.removeListener("unhandledRejection",I)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),xT=nn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};var a=typeof r<"u"?r:{},o,i;a.ready=new Promise(function(te,oe){o=te,i=oe});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},u;for(u in a)a.hasOwnProperty(u)&&(c[u]=a[u]);var d=[],h="./this.program",p=function(te,oe){throw oe},f=!1,m=!1,g=!1,A=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=!f&&!g&&!m;var x="";function y(te){return a.locateFile?a.locateFile(te,x):x+te}var b,v,C,S,E,R;g?(m?x=ad().dirname(x)+"/":x=__dirname+"/",b=function(oe,ke){return E||(E=qp()),R||(R=ad()),oe=R.normalize(oe),E.readFileSync(oe,ke?null:"utf8")},C=function(oe){var ke=b(oe,!0);return ke.buffer||(ke=new Uint8Array(ke)),L(ke.buffer),ke},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(te){if(!(te instanceof zg))throw te}),process.on("unhandledRejection",Tr),p=function(te){process.exit(te)},a.inspect=function(){return"[Emscripten Module object]"}):A?(typeof read<"u"&&(b=function(oe){return read(oe)}),C=function(oe){var ke;return typeof readbuffer=="function"?new Uint8Array(readbuffer(oe)):(ke=read(oe,"binary"),L(typeof ke=="object"),ke)},typeof scriptArgs<"u"?d=scriptArgs:typeof arguments<"u"&&(d=arguments),typeof quit=="function"&&(p=function(te){quit(te)}),typeof print<"u"&&(typeof console>"u"&&(console={}),console.log=print,console.warn=console.error=typeof printErr<"u"?printErr:print)):(f||m)&&(m?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),s&&(x=s),x.indexOf("blob:")!==0?x=x.substr(0,x.lastIndexOf("/")+1):x="",b=function(te){var oe=new XMLHttpRequest;return oe.open("GET",te,!1),oe.send(null),oe.responseText},m&&(C=function(te){var oe=new XMLHttpRequest;return oe.open("GET",te,!1),oe.responseType="arraybuffer",oe.send(null),new Uint8Array(oe.response)}),v=function(te,oe,ke){var at=new XMLHttpRequest;at.open("GET",te,!0),at.responseType="arraybuffer",at.onload=function(){if(at.status==200||at.status==0&&at.response){oe(at.response);return}ke()},at.onerror=ke,at.send(null)},S=function(te){document.title=te});var P=a.print||console.log.bind(console),$=a.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(a[u]=c[u]);c=null,a.arguments&&(d=a.arguments),a.thisProgram&&(h=a.thisProgram),a.quit&&(p=a.quit);var _;a.wasmBinary&&(_=a.wasmBinary);var N=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Tr("no native wasm support detected");var O,z=!1,j;function L(te,oe){te||Tr("Assertion failed: "+oe)}function B(te){var oe=a["_"+te];return L(oe,"Cannot call unknown function "+te+", make sure it is exported"),oe}function W(te,oe,ke,at,Pt){var It={string:function(Jn){var da=0;if(Jn!=null&&Jn!==0){var Jh=(Jn.length<<2)+1;da=Oc(Jh),ne(Jn,da,Jh)}return da},array:function(Jn){var da=Oc(Jn.length);return de(Jn,da),da}};function Ze(Jn){return oe==="string"?Z(Jn):oe==="boolean"?Boolean(Jn):Jn}var Ye=B(te),fn=[],Rr=0;if(at)for(var _r=0;_r<at.length;_r++){var Yh=It[ke[_r]];Yh?(Rr===0&&(Rr=Kh()),fn[_r]=Yh(at[_r])):fn[_r]=at[_r]}var zc=Ye.apply(null,fn);return zc=Ze(zc),Rr!==0&&Zh(Rr),zc}function J(te,oe,ke,at){ke=ke||[];var Pt=ke.every(function(Ze){return Ze==="number"}),It=oe!=="string";return It&&Pt&&!at?B(te):function(){return W(te,oe,ke,arguments,at)}}var ee=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function re(te,oe,ke){for(var at=oe+ke,Pt=oe;te[Pt]&&!(Pt>=at);)++Pt;if(Pt-oe>16&&te.subarray&&ee)return ee.decode(te.subarray(oe,Pt));for(var It="";oe<Pt;){var Ze=te[oe++];if(!(Ze&128)){It+=String.fromCharCode(Ze);continue}var Ye=te[oe++]&63;if((Ze&224)==192){It+=String.fromCharCode((Ze&31)<<6|Ye);continue}var fn=te[oe++]&63;if((Ze&240)==224?Ze=(Ze&15)<<12|Ye<<6|fn:Ze=(Ze&7)<<18|Ye<<12|fn<<6|te[oe++]&63,Ze<65536)It+=String.fromCharCode(Ze);else{var Rr=Ze-65536;It+=String.fromCharCode(55296|Rr>>10,56320|Rr&1023)}}return It}function Z(te,oe){return te?re($e,te,oe):""}function se(te,oe,ke,at){if(!(at>0))return 0;for(var Pt=ke,It=ke+at-1,Ze=0;Ze<te.length;++Ze){var Ye=te.charCodeAt(Ze);if(Ye>=55296&&Ye<=57343){var fn=te.charCodeAt(++Ze);Ye=65536+((Ye&1023)<<10)|fn&1023}if(Ye<=127){if(ke>=It)break;oe[ke++]=Ye}else if(Ye<=2047){if(ke+1>=It)break;oe[ke++]=192|Ye>>6,oe[ke++]=128|Ye&63}else if(Ye<=65535){if(ke+2>=It)break;oe[ke++]=224|Ye>>12,oe[ke++]=128|Ye>>6&63,oe[ke++]=128|Ye&63}else{if(ke+3>=It)break;oe[ke++]=240|Ye>>18,oe[ke++]=128|Ye>>12&63,oe[ke++]=128|Ye>>6&63,oe[ke++]=128|Ye&63}}return oe[ke]=0,ke-Pt}function ne(te,oe,ke){return se(te,$e,oe,ke)}function de(te,oe){we.set(te,oe)}function xe(te,oe){return te%oe>0&&(te+=oe-te%oe),te}var Ie,we,$e,ze,Xe,je,Ke,dt,st;function ht(te){Ie=te,a.HEAP8=we=new Int8Array(te),a.HEAP16=ze=new Int16Array(te),a.HEAP32=je=new Int32Array(te),a.HEAPU8=$e=new Uint8Array(te),a.HEAPU16=Xe=new Uint16Array(te),a.HEAPU32=Ke=new Uint32Array(te),a.HEAPF32=dt=new Float32Array(te),a.HEAPF64=st=new Float64Array(te)}var St=a.INITIAL_MEMORY||16777216,zn,rt=[],Zn=[],pn=[],Es=[],Ln=!1;Zn.push({func:function(){Mh()}});function Yn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Bn(a.preRun.shift());_s(rt)}function ps(){Ln=!0,_s(Zn)}function Rs(){_s(pn)}function fs(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)oa(a.postRun.shift());_s(Es)}function Bn(te){rt.unshift(te)}function oa(te){Es.unshift(te)}var yn=0,ia=null,ms=null;function Ec(te){yn++,a.monitorRunDependencies&&a.monitorRunDependencies(yn)}function Rc(te){if(yn--,a.monitorRunDependencies&&a.monitorRunDependencies(yn),yn==0&&(ia!==null&&(clearInterval(ia),ia=null),ms)){var oe=ms;ms=null,oe()}}a.preloadedImages={},a.preloadedAudios={};function Tr(te){a.onAbort&&a.onAbort(te),te+="",$(te),z=!0,j=1,te="abort("+te+"). Build with -s ASSERTIONS=1 for more info.";var oe=new WebAssembly.RuntimeError(te);throw i(oe),oe}function Rh(te,oe){return String.prototype.startsWith?te.startsWith(oe):te.indexOf(oe)===0}var A0="data:application/octet-stream;base64,";function _h(te){return Rh(te,A0)}var $h="file://";function Dh(te){return Rh(te,$h)}var Wn="tfjs-backend-wasm.wasm";_h(Wn)||(Wn=y(Wn));function Fh(te){try{if(te==Wn&&_)return new Uint8Array(_);if(C)return C(te);throw"both async and sync fetching of the wasm failed"}catch(oe){Tr(oe)}}function y0(){if(!_&&(f||m)){if(typeof fetch=="function"&&!Dh(Wn))return fetch(Wn,{credentials:"same-origin"}).then(function(te){if(!te.ok)throw"failed to load wasm binary file at '"+Wn+"'";return te.arrayBuffer()}).catch(function(){return Fh(Wn)});if(v)return new Promise(function(te,oe){v(Wn,function(ke){te(new Uint8Array(ke))},oe)})}return Promise.resolve().then(function(){return Fh(Wn)})}function x0(){var te={a:Vn};function oe(Ze,Ye){var fn=Ze.exports;a.asm=fn,O=a.asm.h,ht(O.buffer),zn=a.asm.Va,Rc("wasm-instantiate")}Ec("wasm-instantiate");function ke(Ze){oe(Ze.instance)}function at(Ze){return y0().then(function(Ye){return WebAssembly.instantiate(Ye,te)}).then(Ze,function(Ye){$("failed to asynchronously prepare wasm: "+Ye),Tr(Ye)})}function Pt(){return!_&&typeof WebAssembly.instantiateStreaming=="function"&&!_h(Wn)&&!Dh(Wn)&&typeof fetch=="function"?fetch(Wn,{credentials:"same-origin"}).then(function(Ze){var Ye=WebAssembly.instantiateStreaming(Ze,te);return Ye.then(ke,function(fn){return $("wasm streaming compile failed: "+fn),$("falling back to ArrayBuffer instantiation"),at(ke)})}):at(ke)}if(a.instantiateWasm)try{var It=a.instantiateWasm(te,oe);return It}catch(Ze){return $("Module.instantiateWasm callback failed with error: "+Ze),!1}return Pt().catch(i),{}}function _s(te){for(;te.length>0;){var oe=te.shift();if(typeof oe=="function"){oe(a);continue}var ke=oe.func;typeof ke=="number"?oe.arg===void 0?zn.get(ke)():zn.get(ke)(oe.arg):ke(oe.arg===void 0?null:oe.arg)}}function _c(){Tr()}function qo(te,oe,ke){$e.copyWithin(te,oe,oe+ke)}function b0(){return $e.length}function v0(te){try{return O.grow(te-Ie.byteLength+65535>>>16),ht(O.buffer),1}catch{}}function Er(te){var oe=b0(),ke=2147483648;if(te>ke)return!1;for(var at=1;at<=4;at*=2){var Pt=oe*(1+.2/at);Pt=Math.min(Pt,te+100663296);var It=Math.min(ke,xe(Math.max(te,Pt),65536)),Ze=v0(It);if(Ze)return!0}return!1}var Xo={mappings:{},buffers:[null,[],[]],printChar:function(te,oe){var ke=Xo.buffers[te];oe===0||oe===10?((te===1?P:$)(re(ke,0)),ke.length=0):ke.push(oe)},varargs:void 0,get:function(){Xo.varargs+=4;var te=je[Xo.varargs-4>>2];return te},getStr:function(te){var oe=Z(te);return oe},get64:function(te,oe){return te}};function w0(te){return 0}function Ph(te,oe,ke,at,Pt){}function k0(te,oe,ke,at){for(var Pt=0,It=0;It<ke;It++){for(var Ze=je[oe+It*8>>2],Ye=je[oe+(It*8+4)>>2],fn=0;fn<Ye;fn++)Xo.printChar(te,$e[Ze+fn]);Pt+=Ye}return je[at>>2]=Pt,0}function Oh(){return 28}var Vn={a:_c,d:qo,e:Er,f:w0,c:Ph,b:k0,g:Oh},S0=x0(),Mh=a.___wasm_call_ctors=function(){return(Mh=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},I0=a._init=function(){return(I0=a._init=a.asm.j).apply(null,arguments)},zh=a._init_with_threads_count=function(){return(zh=a._init_with_threads_count=a.asm.k).apply(null,arguments)},C0=a._get_threads_count=function(){return(C0=a._get_threads_count=a.asm.l).apply(null,arguments)},Rl=a._register_tensor=function(){return(Rl=a._register_tensor=a.asm.m).apply(null,arguments)},la=a._dispose_data=function(){return(la=a._dispose_data=a.asm.n).apply(null,arguments)},$c=a._dispose=function(){return($c=a._dispose=a.asm.o).apply(null,arguments)},N0=a._Abs=function(){return(N0=a._Abs=a.asm.p).apply(null,arguments)},T0=a._Add=function(){return(T0=a._Add=a.asm.q).apply(null,arguments)},Lh=a._AddN=function(){return(Lh=a._AddN=a.asm.r).apply(null,arguments)},_e=a._All=function(){return(_e=a._All=a.asm.s).apply(null,arguments)},E0=a._Any=function(){return(E0=a._Any=a.asm.t).apply(null,arguments)},R0=a._ArgMax=function(){return(R0=a._ArgMax=a.asm.u).apply(null,arguments)},_0=a._AvgPool=function(){return(_0=a._AvgPool=a.asm.v).apply(null,arguments)},$0=a._BatchMatMul=function(){return($0=a._BatchMatMul=a.asm.w).apply(null,arguments)},D0=a._Ceil=function(){return(D0=a._Ceil=a.asm.x).apply(null,arguments)},Ko=a._ClipByValue=function(){return(Ko=a._ClipByValue=a.asm.y).apply(null,arguments)},F0=a._Conv2D=function(){return(F0=a._Conv2D=a.asm.z).apply(null,arguments)},P0=a._Conv2DBackpropInput=function(){return(P0=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},O0=a._Cos=function(){return(O0=a._Cos=a.asm.B).apply(null,arguments)},M0=a._Cosh=function(){return(M0=a._Cosh=a.asm.C).apply(null,arguments)},z0=a._CropAndResize=function(){return(z0=a._CropAndResize=a.asm.D).apply(null,arguments)},L0=a._Cumsum=function(){return(L0=a._Cumsum=a.asm.E).apply(null,arguments)},Bh=a._DepthToSpace=function(){return(Bh=a._DepthToSpace=a.asm.F).apply(null,arguments)},B0=a._DepthwiseConv2dNative=function(){return(B0=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},W0=a._Elu=function(){return(W0=a._Elu=a.asm.H).apply(null,arguments)},ua=a._Equal=function(){return(ua=a._Equal=a.asm.I).apply(null,arguments)},Dc=a._Exp=function(){return(Dc=a._Exp=a.asm.J).apply(null,arguments)},Fc=a._FlipLeftRight=function(){return(Fc=a._FlipLeftRight=a.asm.K).apply(null,arguments)},V0=a._Floor=function(){return(V0=a._Floor=a.asm.L).apply(null,arguments)},U0=a._FloorDiv=function(){return(U0=a._FloorDiv=a.asm.M).apply(null,arguments)},G0=a._FusedBatchNorm=function(){return(G0=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},H0=a._FusedConv2D=function(){return(H0=a._FusedConv2D=a.asm.O).apply(null,arguments)},j0=a._FusedDepthwiseConv2D=function(){return(j0=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Ue=a._Gather=function(){return(Ue=a._Gather=a.asm.Q).apply(null,arguments)},q0=a._GatherNd=function(){return(q0=a._GatherNd=a.asm.R).apply(null,arguments)},X0=a._Greater=function(){return(X0=a._Greater=a.asm.S).apply(null,arguments)},K0=a._GreaterEqual=function(){return(K0=a._GreaterEqual=a.asm.T).apply(null,arguments)},Z0=a._LeakyRelu=function(){return(Z0=a._LeakyRelu=a.asm.U).apply(null,arguments)},Y0=a._Less=function(){return(Y0=a._Less=a.asm.V).apply(null,arguments)},J0=a._LessEqual=function(){return(J0=a._LessEqual=a.asm.W).apply(null,arguments)},Pc=a._Log=function(){return(Pc=a._Log=a.asm.X).apply(null,arguments)},Wh=a._LogicalAnd=function(){return(Wh=a._LogicalAnd=a.asm.Y).apply(null,arguments)},Vh=a._Max=function(){return(Vh=a._Max=a.asm.Z).apply(null,arguments)},Q0=a._MaxPool=function(){return(Q0=a._MaxPool=a.asm._).apply(null,arguments)},eg=a._Maximum=function(){return(eg=a._Maximum=a.asm.$).apply(null,arguments)},tg=a._Mean=function(){return(tg=a._Mean=a.asm.aa).apply(null,arguments)},ng=a._Min=function(){return(ng=a._Min=a.asm.ba).apply(null,arguments)},sg=a._Minimum=function(){return(sg=a._Minimum=a.asm.ca).apply(null,arguments)},rg=a._MirrorPad=function(){return(rg=a._MirrorPad=a.asm.da).apply(null,arguments)},ag=a._Multiply=function(){return(ag=a._Multiply=a.asm.ea).apply(null,arguments)},ot=a._Neg=function(){return(ot=a._Neg=a.asm.fa).apply(null,arguments)},og=a._NonMaxSuppressionV3=function(){return(og=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},ig=a._NonMaxSuppressionV4=function(){return(ig=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},lg=a._NonMaxSuppressionV5=function(){return(lg=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},_l=a._NotEqual=function(){return(_l=a._NotEqual=a.asm.ja).apply(null,arguments)},Uh=a._OneHot=function(){return(Uh=a._OneHot=a.asm.ka).apply(null,arguments)},Gh=a._PadV2=function(){return(Gh=a._PadV2=a.asm.la).apply(null,arguments)},Hh=a._Pow=function(){return(Hh=a._Pow=a.asm.ma).apply(null,arguments)},ug=a._Prelu=function(){return(ug=a._Prelu=a.asm.na).apply(null,arguments)},cg=a._Prod=function(){return(cg=a._Prod=a.asm.oa).apply(null,arguments)},jh=a._RealDiv=function(){return(jh=a._RealDiv=a.asm.pa).apply(null,arguments)},dg=a._Relu=function(){return(dg=a._Relu=a.asm.qa).apply(null,arguments)},hg=a._Relu6=function(){return(hg=a._Relu6=a.asm.ra).apply(null,arguments)},pg=a._ResizeBilinear=function(){return(pg=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},fg=a._Reverse=function(){return(fg=a._Reverse=a.asm.ta).apply(null,arguments)},mg=a._RotateWithOffset=function(){return(mg=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},qh=a._Round=function(){return(qh=a._Round=a.asm.va).apply(null,arguments)},ca=a._Rsqrt=function(){return(ca=a._Rsqrt=a.asm.wa).apply(null,arguments)},gg=a._ScatterNd=function(){return(gg=a._ScatterNd=a.asm.xa).apply(null,arguments)},Ag=a._SelectV2=function(){return(Ag=a._SelectV2=a.asm.ya).apply(null,arguments)},cb=a._Sigmoid=function(){return(cb=a._Sigmoid=a.asm.za).apply(null,arguments)},Xh=a._Sin=function(){return(Xh=a._Sin=a.asm.Aa).apply(null,arguments)},yg=a._Softmax=function(){return(yg=a._Softmax=a.asm.Ba).apply(null,arguments)},xg=a._SparseFillEmptyRows=function(){return(xg=a._SparseFillEmptyRows=a.asm.Ca).apply(null,arguments)},bg=a._SparseReshape=function(){return(bg=a._SparseReshape=a.asm.Da).apply(null,arguments)},vg=a._SparseSegmentReduction=function(){return(vg=a._SparseSegmentReduction=a.asm.Ea).apply(null,arguments)},wg=a._Sqrt=function(){return(wg=a._Sqrt=a.asm.Fa).apply(null,arguments)},kg=a._Square=function(){return(kg=a._Square=a.asm.Ga).apply(null,arguments)},Sg=a._SquaredDifference=function(){return(Sg=a._SquaredDifference=a.asm.Ha).apply(null,arguments)},Ig=a._Step=function(){return(Ig=a._Step=a.asm.Ia).apply(null,arguments)},Cg=a._StridedSlice=function(){return(Cg=a._StridedSlice=a.asm.Ja).apply(null,arguments)},Ng=a._Sub=function(){return(Ng=a._Sub=a.asm.Ka).apply(null,arguments)},Tg=a._Sum=function(){return(Tg=a._Sum=a.asm.La).apply(null,arguments)},Eg=a._Tan=function(){return(Eg=a._Tan=a.asm.Ma).apply(null,arguments)},Rg=a._Tanh=function(){return(Rg=a._Tanh=a.asm.Na).apply(null,arguments)},_g=a._Tile=function(){return(_g=a._Tile=a.asm.Oa).apply(null,arguments)},$g=a._TopK=function(){return($g=a._TopK=a.asm.Pa).apply(null,arguments)},Dg=a._Transform=function(){return(Dg=a._Transform=a.asm.Qa).apply(null,arguments)},Fg=a._Transpose=function(){return(Fg=a._Transpose=a.asm.Ra).apply(null,arguments)},Pg=a.__FusedMatMul=function(){return(Pg=a.__FusedMatMul=a.asm.Sa).apply(null,arguments)},Og=a._malloc=function(){return(Og=a._malloc=a.asm.Ta).apply(null,arguments)},Mg=a._free=function(){return(Mg=a._free=a.asm.Ua).apply(null,arguments)},Kh=a.stackSave=function(){return(Kh=a.stackSave=a.asm.Wa).apply(null,arguments)},Zh=a.stackRestore=function(){return(Zh=a.stackRestore=a.asm.Xa).apply(null,arguments)},Oc=a.stackAlloc=function(){return(Oc=a.stackAlloc=a.asm.Ya).apply(null,arguments)};a.cwrap=J;var $l;function zg(te){this.name="ExitStatus",this.message="Program terminated with exit("+te+")",this.status=te}ms=function te(){$l||Mc(),$l||(ms=te)};function Mc(te){if(te=te||d,yn>0||(Yn(),yn>0))return;function oe(){$l||($l=!0,a.calledRun=!0,!z&&(ps(),Rs(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),fs()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),oe()},1)):oe()}if(a.run=Mc,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Mc();var Dl;l&&(Dl={uncaughtException:process.listeners("uncaughtException").filter(function(te){return!l.uncaughtException.indexOf(te)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(te){return!l.unhandledRejection.indexOf(te)>-1})});var Fl;if(typeof r<"u")Fl=r;else if(typeof WasmBackendModuleThreadedSimd<"u")Fl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Dl){var Lg=Fl._dispose;Fl._dispose=function(){Lg(),Dl.uncaughtException.forEach(function(te){process.removeListener("uncaughtException",te)}),Dl.unhandledRejection.forEach(function(te){process.removeListener("unhandledRejection",te)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),bT=1e-7,vT=1e-4,Td=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Eu=class{refCount(e){return gs("refCount")}incRef(e){return gs("incRef")}timerAvailable(){return!0}time(e){return gs("time")}read(e){return gs("read")}readSync(e){return gs("readSync")}readToGPU(e,t){return gs("readToGPU")}numDataIds(){return gs("numDataIds")}disposeData(e,t){return gs("disposeData")}write(e,t,n){return gs("write")}move(e,t,n,s,r){return gs("move")}memory(){return gs("memory")}floatPrecision(){return gs("floatPrecision")}epsilon(){return this.floatPrecision()===32?bT:vT}dispose(){return gs("dispose")}};function gs(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function S3(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Xp(e,t,n)}function wT(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,Xp(e,n,s),Xp(t,n,s)}function fd(e,t,n){return Math.max(e,Math.min(t,n))}function kT(e){return e%2===0?e:e+1}function Xp(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function ST(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function IT(e,t){let n=Math.random();return t*n+(1-n)*e}function CT(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Dn(e,t,n=""){M(Ga(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Ri(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function gi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||xn(e)&&!n)for(let s=0;s<e.length;++s)gi(e[s],t,n);else t.push(e);return t}function kt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function NT(e){return e.length===0}function Ga(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function du(e){return e%1===0}function TT(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function ET(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function RT(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return S3(t),t}function od(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function _T(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function $T(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function Bs(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),M(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(s=>du(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function I3(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:Bs(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function C3(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function N3(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function T3(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function E3(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function DT(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function xn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function F1(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function R3(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function ba(e){return typeof e=="string"||e instanceof String}function _3(e){return typeof e=="boolean"}function $3(e){return typeof e=="number"}function _f(e){return Array.isArray(e)?_f(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":$3(e)?"float32":ba(e)?"string":_3(e)?"bool":"float32"}function Ea(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Kp(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Ru(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function D3(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<a;l++)r[l]=D3(e+l*i,o,n,s)}return r}function ou(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return D3(0,e,t,n)}function LA(e,t){let n=$f(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function $f(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function FT(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return ou(e,new Float32Array(n));if(t==="int32")return ou(e,new Int32Array(n));if(t==="bool")return ou(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function BA(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function PT(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function OT(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function WA(e){return e&&e.then&&typeof e.then=="function"}var kb="tfjsflags",F3=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=MT,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(WA(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);kb in e&&e[kb].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=LT(s,r)})}};function MT(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(zT(t,s[0],s[1]),s.join("="))),t}function zT(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function LT(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return Lr}var Lr=null;function BT(e){Lr=e}var Ug;function P3(){if(Ug==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");Ug=e}return Ug}function WT(){let e=P3();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function VA(e,t){let n=WT();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var _i="Abs",_u="Acos",$u="Acosh",Kr="Add",Ha="AddN",Du="All",Fu="Any",ja="ArgMax",Pu="ArgMin",Ou="Asin",Mu="Asinh",zu="Atan",Lu="Atanh",Bu="Atan2",qa="AvgPool",Df="AvgPoolGrad",Ed="AvgPool3D",Ff="AvgPool3DGrad",Xa="BatchMatMul",$i="BatchToSpaceND",Pf="Bincount",O3="BroadcastTo",Of="BroadcastArgs",Ka="Cast",Za="Ceil",Zr="ClipByValue",Rd="Complex",_d="ComplexAbs",Di="Concat",Ya="Conv2D",Mf="Conv2DBackpropFilter",Ja="Conv2DBackpropInput",$d="Conv3D",zf="Conv3DBackpropFilterV2",Lf="Conv3DBackpropInputV2",Qa="Cos",eo="Cosh",Fi="Cumsum",Pi="CropAndResize",Bf="DenseBincount",Oi="DepthToSpace",to="DepthwiseConv2dNative",Wf="DepthwiseConv2dNativeBackpropFilter",Vf="DepthwiseConv2dNativeBackpropInput",Uf="Diag",Dd="Dilation2D",Zp="Dilation2DBackpropInput",Yp="Dilation2DBackpropFilter",no="RealDiv",Fd="Einsum",so="Elu",Gf="EluGrad",Wu="Erf",Mi="Equal",ro="Exp",zi="ExpandDims",Li="Expm1",Hf="FFT",Vu="Fill",Bi="FlipLeftRight",ao="Floor",oo="FloorDiv",io="FusedBatchNorm",Wi="GatherV2",Vi="GatherNd",Ui="Greater",lo="GreaterEqual",uo="Identity",jf="IFFT",Pd="Imag",Uu="IsFinite",Gu="IsInf",Hu="IsNan",co="LeakyRelu",Gi="Less",Hi="LessEqual",qf="LinSpace",ho="Log",ju="Log1p",ji="LogicalAnd",qu="LogicalNot",Od="LogicalOr",M3="LogSoftmax",Md="LRN",Xf="LRNGrad",po="Max",fo="Maximum",mo="MaxPool",Kf="MaxPoolGrad",zd="MaxPool3D",Zf="MaxPool3DGrad",Yf="MaxPoolWithArgmax",go="Mean",Ao="Min",yo="Minimum",xo="MirrorPad",Xu="Mod",Jf="Multinomial",bo="Multiply",qi="Neg",Xi="NotEqual",Ki="NonMaxSuppressionV3",Ku="NonMaxSuppressionV4",Zi="NonMaxSuppressionV5",Yi="OnesLike",Ji="OneHot",Qi="Pack",vo="PadV2",VT="Pool",wo="Pow",ko="Prelu",el="Prod",Zu="Range",Ld="Real",Yu="Reciprocal",So="Relu",tl="Reshape",Ju="ResizeNearestNeighbor",Qf="ResizeNearestNeighborGrad",Io="ResizeBilinear",em="ResizeBilinearGrad",Co="Relu6",nl="Reverse",sl="Round",No="Rsqrt",rl="ScatterNd",al="Select",Qu="Selu",ol="Slice",To="Sin",il="Sinh",ec="Sign",Eo="Sigmoid",tc="Softplus",Ro="Sqrt",_o="Sum",ll="SpaceToBatchND",ul="SplitV",$o="Softmax",Bd="SparseFillEmptyRows",nc="SparseReshape",Wd="SparseSegmentMean",Vd="SparseSegmentSum",Ud="SparseToDense",Do="SquaredDifference",sc="Square",cl="StridedSlice",Gd="StringNGrams",tm="StringSplit",nm="StringToHashBucketFast",Fo="Sub",dl="Tan",Po="Tanh",Yr="Tile",hl="TopK",pl="Transform",Oo="Transpose",sm="Unique",fl="Unpack",Hd="UnsortedSegmentSum",ml="ZerosLike",Mo="Step",md="FromPixels",gl="RotateWithOffset",Ra="_FusedMatMul",_a="FusedConv2D",$a="FusedDepthwiseConv2D";function xa(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function UT(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var hu=VA("kernelRegistry",()=>new Map),gd=VA("gradRegistry",()=>new Map);function Jp(e,t){let n=UA(e,t);return hu.get(n)}function P1(e){return gd.get(e)}function Ai(e){let t=hu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function br(e){let{kernelName:t,backendName:n}=e,s=UA(t,n);hu.has(s)&&xa(`The kernel '${t}' for backend '${n}' is already registered`),hu.set(s,e)}function z3(e){let{kernelName:t}=e;gd.has(t)&&Y().getBool("DEBUG")&&xa(`Overriding the gradient for '${t}'`),gd.set(t,e)}function GT(e,t){let n=UA(e,t);if(!hu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);hu.delete(n)}function HT(e){if(!gd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);gd.delete(e)}function jT(e,t){Ai(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});br(r)})}function UA(e,t){return`${t}_${e}`}var w={};Me(w,{arraysEqual:()=>Ga,assert:()=>M,assertNonNegativeIntegerDimensions:()=>BA,assertNonNull:()=>Ri,assertShapesMatch:()=>Dn,bytesFromStringArray:()=>R3,bytesPerElement:()=>F1,checkConversionForErrors:()=>T3,clamp:()=>fd,computeStrides:()=>Ru,createScalarValue:()=>JT,createShuffledIndices:()=>RT,decodeString:()=>Qp,distSquared:()=>CT,encodeString:()=>qd,fetch:()=>eE,fingerPrint64:()=>YT,flatten:()=>gi,getArrayFromDType:()=>N3,getTypedArrayFromDType:()=>C3,hasEncodingLoss:()=>DT,hexToLong:()=>jd,indexToLoc:()=>OT,inferDtype:()=>_f,inferFromImplicitShape:()=>$T,isBoolean:()=>_3,isFunction:()=>Ea,isInt:()=>du,isNumber:()=>$3,isPromise:()=>WA,isScalarShape:()=>NT,isString:()=>ba,isTypedArray:()=>xn,isValidDtype:()=>E3,locToIndex:()=>PT,makeOnesTypedArray:()=>LA,makeZerosNestedTypedArray:()=>FT,makeZerosTypedArray:()=>$f,nearestDivisor:()=>Kp,nearestLargerEven:()=>kT,now:()=>Ad,parseAxisParam:()=>Bs,randUniform:()=>IT,repeatedTry:()=>_T,rightPad:()=>od,shuffle:()=>S3,shuffleCombo:()=>wT,sizeFromShape:()=>kt,sizeToSquarishShape:()=>ET,squeezeShape:()=>I3,sum:()=>ST,swap:()=>Xp,tanh:()=>TT,toNestedArray:()=>ou,toTypedArray:()=>rm});var Sb=Ei(rT()),ni=Sb.default||Sb;function jd(e){return ni.fromString(e,!0,16)}var L3=jd("c3a5c85c97cb3127"),ei=jd("b492b66fbe98f273"),Sn=jd("9ae16a3b2f90404f");function O1(e){return e.xor(e.shru(47))}function B3(e,t,n){let s=e.slice(t,t+n);return ni.fromBytes(Array.from(s),!0,!0)}function yt(e,t){return B3(e,t,8)}function Ib(e,t){return B3(e,t,4)}function an(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Sa(e,t,n=jd("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function qT(e,t,n,s,r,a){r=r.add(e),a=an(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(an(r,44)),[r.add(s),a.add(o)]}function op(e,t,n,s){return qT(yt(e,t),yt(e,t+8),yt(e,t+16),yt(e,t+24),n,s)}function XT(e,t=e.length){if(t>=8){let n=Sn.add(t*2),s=yt(e,0).add(Sn),r=yt(e,t-8),a=an(r,37).mul(n).add(s),o=an(s,25).add(r).mul(n);return Sa(a,o,n)}if(t>=4){let n=Sn.add(t*2),s=Ib(e,0);return Sa(s.shl(3).add(t),Ib(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return O1(Sn.mul(a).xor(L3.mul(o))).mul(Sn)}return Sn}function KT(e,t=e.length){let n=Sn.add(t*2),s=yt(e,0).mul(ei),r=yt(e,8),a=yt(e,t-8).mul(n),o=yt(e,t-16).mul(Sn);return Sa(an(s.add(r),43).add(an(a,30)).add(o),s.add(an(r.add(Sn),18)).add(a),n)}function ZT(e,t=e.length){let n=Sn.add(t*2),s=yt(e,0).mul(Sn),r=yt(e,8),a=yt(e,t-8).mul(n),o=yt(e,t-16).mul(Sn),i=an(s.add(r),43).add(an(a,30)).add(o),l=Sa(i,s.add(an(r.add(Sn),18)).add(a),n),c=yt(e,16).mul(n),u=yt(e,24),d=i.add(yt(e,t-32)).mul(n),h=l.add(yt(e,t-24)).mul(n);return Sa(an(c.add(u),43).add(an(d,30)).add(h),c.add(an(u.add(s),18)).add(d),n)}function YT(e,t=e.length){let n=ni.fromNumber(81,!0);if(t<=32)return t<=16?XT(e,t):KT(e,t);if(t<=64)return ZT(e,t);let s=n,r=n.mul(ei).add(113),a=O1(r.mul(Sn).add(113)).mul(Sn),o=[ni.UZERO,ni.UZERO],i=[ni.UZERO,ni.UZERO];s=s.mul(Sn).add(yt(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=an(s.add(r).add(o[0]).add(yt(e,l+8)),37).mul(ei),r=an(r.add(o[1]).add(yt(e,l+48)),42).mul(ei),s=s.xor(i[1]),r=r.add(o[0]).add(yt(e,l+40)),a=an(a.add(i[0]),33).mul(ei),o=op(e,l,o[1].mul(ei),s.add(i[0])),i=op(e,l+32,a.add(i[1]),r.add(yt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==c);let d=ei.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=an(s.add(r).add(o[0]).add(yt(e,l+8)),37).mul(d),r=an(r.add(o[1]).add(yt(e,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(yt(e,l+40))),a=an(a.add(i[0]),33).mul(d),o=op(e,l,o[1].mul(d),s.add(i[0])),i=op(e,l+32,a.add(i[1]),r.add(yt(e,l+16))),[a,s]=[s,a],Sa(Sa(o[0],i[0],d).add(O1(r).mul(L3)).add(a),Sa(o[1],i[1],d).add(s),d)}function JT(e,t){return t==="string"?qd(e):rm([e],t)}function QT(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function rm(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=gi(e)),Y().getBool("DEBUG")&&T3(e,t),QT(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Ad(){return Y().platform.now()}function eE(e,t){return Y().platform.fetch(e,t)}function qd(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function Qp(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var tE=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new sE)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=Ad();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:Ad()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{nE(u,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function nE(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var sE=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?od(`${s}ms`,9):s.error,i=od(e,25),l=t.rank,c=t.size,u=od(t.shape.toString(),14),d="";for(let h in r){let p=r[h];if(p!=null){let f=p.shape||t.shape,m=f.length;d+=`${h}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function rE(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let h=u[d],p=!1;for(let f=0;f<t.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let h in u)a[u[h].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&o[c.id]){let u={};for(let h in c.inputs){let p=c.inputs[h];s[p.id]&&(u[h]=p)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function aE(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!Ga(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=s(d,c),d.dispose()}}}}var Cb=20,Vc=3,Gg=7;function oE(e,t,n,s){let r=Ru(t),a=iE(e,t,n,r),o=t.length,i=$p(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function iE(e,t,n,s){let r=kt(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?qc(e):e;if(i>1)for(let c=0;c<r/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],jc(l[u+d],0,n).length)}return o}function jc(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(Gg))} + ${parseFloat(e[1].toFixed(Gg))}j`:ba(e)?s=`'${e}'`:n==="bool"?s=W3(e):s=parseFloat(e.toFixed(Gg)).toString(),od(s,t)}function W3(e){return e===0?"false":"true"}function $p(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=qc(e);return[jc(m[0],0,n)]}return n==="bool"?[W3(e[0])]:[e[0].toString()]}if(l===1){if(i>Cb){let g=Vc*o,A=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-Vc)*o,i*o));return n==="complex64"&&(A=qc(A),x=qc(x)),["["+A.map((y,b)=>jc(y,r[b],n)).join(", ")+", ..., "+x.map((y,b)=>jc(y,r[i-Vc+b],n)).join(", ")+"]"]}let m=n==="complex64"?qc(e):Array.from(e);return["["+m.map((g,A)=>jc(g,r[A],n)).join(", ")+"]"]}let c=t.slice(1),u=s.slice(1),d=s[0]*o,h=[];if(i>Cb){for(let m=0;m<Vc;m++){let g=m*d,A=g+d;h.push(...$p(e.slice(g,A),c,n,u,r,!1))}h.push("...");for(let m=i-Vc;m<i;m++){let g=m*d,A=g+d;h.push(...$p(e.slice(g,A),c,n,u,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,A=g+d;h.push(...$p(e.slice(g,A),c,n,u,r,m===i-1))}let p=l===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":f),h}function qc(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Qt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=kt(e),n!=null){let s=n.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||N3(t,this.size),this.strides=Ru(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Hs().makeTensor(this.values,this.shape,this.dtype)}},Hs=null,Jl=null,lE=null;function uE(e){Hs=e}function cE(e){Jl=e}function dE(e){lE=e}var tt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=kt(e),this.strides=Ru(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Jl.buffer(this.shape,this.dtype,e)}bufferSync(){return Jl.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return ou(this.shape,e,this.dtype==="complex64")}arraySync(){return ou(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Hs().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Qp(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Hs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Hs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Qp(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Hs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Hs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Jl.print(this,e)}clone(){return this.throwIfDisposed(),Jl.clone(this)}toString(e=!1){let t=this.dataSync();return oE(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Jl.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Hs().makeVariable(this,e,t,n)}};Object.defineProperty(tt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function hE(){return VA("Tensor",()=>tt)}hE();var yd=class extends tt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ga(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Hs().disposeTensor(this),this.dataId=e.dataId,Hs().incRef(this,null)}dispose(){Hs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(yd,Symbol.hasInstance,{value:e=>e instanceof tt&&e.assign!=null&&e.assign instanceof Function});var Qs={};Me(Qs,{assertTypesMatch:()=>q3,getTensorsInContainer:()=>GA,isTensorInList:()=>fE,makeTypesMatch:()=>Ft});var V3=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(V3||{}),U3=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(U3||{}),G3=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(G3||{}),H3=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(H3||{}),j3=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(j3||{}),pE={float32:H3,int32:U3,bool:G3,complex64:j3};function En(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return pE[e][t]}function Xd(e){return En(e,"int32")}function Ft(e,t){if(e.dtype===t.dtype)return[e,t];let n=En(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function q3(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function fE(e,t){return t.some(n=>n.id===e.id)}function GA(e){let t=[];return X3(e,t,new Set),t}function X3(e,t,n){if(e==null)return;if(e instanceof tt){t.push(e);return}if(!mE(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),X3(a,t,n))}}function mE(e){return Array.isArray(e)||typeof e=="object"}function Hg(e){return e.kernelName!=null}var Nb=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},M1=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Nb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xa(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new tE(this.backendInstance),!0}setupRegisteredKernels(){Ai(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ai(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof Eu)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,xa(`Initialization of backend ${e} failed`),xa(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return xa(`Initialization of backend ${e} failed`),xa(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return M1.nextTensorId++}nextVariableId(){return M1.nextVariableId++}clone(e){let t=G.runKernel(uo,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return G.runKernel(Ka,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Jp(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=Hg(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Hg(e)){let{kernelName:p,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=Jp(p,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),o=()=>{let A=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,A,x);let y=x.map(b=>{if(b.rank!=null)return b;let{dataId:v,shape:C,dtype:S}=b;return this.makeTensorFromDataId(v,C,S)});if(s){let b=this.getTensorsForGradient(p,f,y);n=this.saveTensorsForBackwardMode(b)}return y}}else{let{forwardFunc:p}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>p(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=Hg(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(h=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs)}),s&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(p=>c[p]!=null?c[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=P1(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&ba(e[0])&&(r=e.map(i=>qd(i)));let a=s.write(r,t,n),o=new tt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=R3(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new tt(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new yd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*F1(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof yd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*F1(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=P1(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],h=$f(d.size,d.dtype);return this.makeTensor(h,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=GA(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(r instanceof tt,()=>"The result y returned by f() must be a tensor.");let a=rE(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n??gE(r.shape),aE(o,a,l=>this.tidy(l),AE);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return M(Ea(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof tt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),M(n.value instanceof tt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(Ea(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];M(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(c.every(d=>d instanceof tt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,h)=>{u[h]=()=>d}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ad(),n=await this.backend.time(e);return n.wallMs=Ad()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Nb;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},HA=M1;HA.nextTensorId=0;HA.nextVariableId=0;function gE(e){let t=LA(kt(e),"float32");return G.makeTensor(t,e,"float32")}function K3(){let e=P3();if(e._tfengine==null){let t=new F3(e);e._tfengine=new HA(t)}return BT(e._tfengine.ENV),uE(()=>e._tfengine),e._tfengine}var G=K3();function AE(e,t){let n={a:e,b:t};return G.runKernel(Kr,n)}var rc={};Me(rc,{isBrowser:()=>Z3,isMobile:()=>bE,mockIsMobile:()=>xE});function yE(){return typeof navigator<"u"&&navigator!=null}var z1;function xE(e){z1=e}function bE(e){if(z1!==void 0)return z1;if(e||yE()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Z3(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var sr=Y();sr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});sr.registerFlag("IS_BROWSER",()=>Z3());sr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");sr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));sr.registerFlag("PROD",()=>!1);sr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>sr.getBool("DEBUG"));sr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);sr.registerFlag("IS_TEST",()=>!1);sr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);sr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function vr(e,t){let n=e;if(xn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||xn(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Y3(e,s,[]),s}function Y3(e,t,n){if(n=n||[],!Array.isArray(e)&&!xn(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)Y3(e[r],s,n.concat(r))}function Tb(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function F(e,t,n,s="numeric"){if(e instanceof tt)return Tb(s,e.dtype,t,n),e;let r=_f(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Tb(s,r,t,n),e==null||!xn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=vr(e,r);!xn(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?rm(e,r):gi(e,[],!0);return G.makeTensor(i,a,r)}function xd(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>F(a,`${t}[${o}]`,n,s))}var J3="__op";function H(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+J3;let r=(...a)=>{G.startScope(n);try{let o=s(...a);return WA(o)&&console.error("Cannot return a Promise inside of tidy."),G.endScope(o),o}catch(o){throw G.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function vE(e,t){let n=F(e,"real","complex"),s=F(t,"imag","complex");Dn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return G.runKernel(Rd,r)}var Da=H({complex_:vE});function zo(e,t,n,s){if(s==null&&(s=_f(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){BA(t);let r=kt(t),a=kt(n);M(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==kt(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!xn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?rm(e,s):gi(e,[],!0),G.makeTensor(e,t,s)}function lt(e,t,n){let s=vr(e,n);return zo(e,t,s,n)}var L1={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ef=4;async function wE(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let h=await l.bytes(),p=h.reduce((g,A)=>g+A.length,0)+ef*h.length,f=new Uint8Array(p),m=0;for(let g=0;g<h.length;g++){let A=h[g],x=new Uint8Array(new Uint32Array([A.length]).buffer);f.set(x,m),m+=ef,f.set(A,m),m+=A.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:kE(a),specs:n}}function Q3(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=kt(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let h=L1[d.dtype],p=e.slice(r,r+c*h),f=d.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=EE()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*h}else if(i==="string"){let d=kt(a.shape);u=[];for(let h=0;h<d;h++){let p=new Uint32Array(e.slice(r,r+ef))[0];r+=ef;let f=new Uint8Array(e.slice(r,r+p));u.push(f),r+=p}}else{let d=L1[i],h=e.slice(r,r+c*d);if(i==="float32")u=new Float32Array(h);else if(i==="int32")u=new Int32Array(h);else if(i==="bool")u=new Uint8Array(h);else if(i==="complex64"){u=new Float32Array(h);let p=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let A=0;A<p.length;A++)p[A]=u[A*2],f[A]=u[A*2+1];let m=lt(p,l,"float32"),g=lt(f,l,"float32");n[o]=Da(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=lt(u,l,i))}return n}function kE(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var jA=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Eb(e){return jA?Buffer.byteLength(e):new Blob([e]).size}function SE(e){if(jA)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function IE(e){if(jA){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function qA(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function Rb(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function ew(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function XA(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Kd(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Eb(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Eb(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function CE(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function NE(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function TE(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function EE(){let e=CE(),t=NE(),n=TE();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Ot=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ot.instance==null&&(Ot.instance=new Ot),Ot.instance}static registerSaveRouter(e){Ot.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ot.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ot.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ot.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Ot.getInstance().loadRouters:Ot.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},RE=e=>Ot.registerSaveRouter(e),_E=e=>Ot.registerLoadRouter(e),$E=e=>Ot.getSaveHandlers(e),DE=(e,t)=>Ot.getLoadHandlers(e,t),B1="tensorflowjs",W1=1,ii="models_store",va="model_info_store";function tw(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function V1(e){let t=e.result;t.createObjectStore(ii,{keyPath:"modelPath"}),t.createObjectStore(va,{keyPath:"modelPath"})}var yi=class{constructor(e){if(this.indexedDB=tw(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(B1,W1);r.onupgradeneeded=()=>V1(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(ii,"readonly"),l=o.objectStore(ii).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=Kd(t),i=a.transaction(va,"readwrite"),l=i.objectStore(va),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(ii,"readwrite");let h=u.objectStore(ii).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});h.onsuccess=()=>n({modelArtifactsInfo:o}),h.onerror=p=>{l=i.objectStore(va);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(h.error)),f.onerror=m=>(a.close(),s(h.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};yi.URL_SCHEME="indexeddb://";var nw=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(yi.URL_SCHEME)?FE(e.slice(yi.URL_SCHEME.length)):null;Ot.registerSaveRouter(nw);Ot.registerLoadRouter(nw);function FE(e){return new yi(e)}function PE(e){return e.startsWith(yi.URL_SCHEME)?e.slice(yi.URL_SCHEME.length):e}var OE=class{constructor(){this.indexedDB=tw()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(B1,W1);n.onupgradeneeded=()=>V1(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(va,"readonly"),o=r.objectStore(va).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=PE(e),new Promise((t,n)=>{let s=this.indexedDB.open(B1,W1);s.onupgradeneeded=()=>V1(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(va,"readwrite"),o=a.objectStore(va),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=r.transaction(ii,"readwrite");let h=l.objectStore(ii).delete(e);h.onsuccess=()=>t(i.result.modelArtifactsInfo),h.onerror=p=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Br="/",Ql="tensorflowjs_models",sw="info",ME="model_topology",zE="weight_specs",LE="weight_data",BE="model_metadata";function rw(e){return{info:[Ql,e,sw].join(Br),topology:[Ql,e,ME].join(Br),weightSpecs:[Ql,e,zE].join(Br),weightData:[Ql,e,LE].join(Br),modelMetadata:[Ql,e,BE].join(Br)}}function aw(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function WE(e){let t=e.split(Br);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Br)}function VE(e){return e.startsWith(xi.URL_SCHEME)?e.slice(xi.URL_SCHEME.length):e}var xi=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=rw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Kd(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,SE(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch{throw aw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=IE(a),t}};xi.URL_SCHEME="localstorage://";var ow=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xi.URL_SCHEME)?UE(e.slice(xi.URL_SCHEME.length)):null;Ot.registerSaveRouter(ow);Ot.registerLoadRouter(ow);function UE(e){return new xi(e)}var GE=class{constructor(){M(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Ql+Br,n=Br+sw;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=WE(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=VE(e);let t=rw(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return aw(t),n}},iu="://",ys=class{constructor(){this.managers={}}static getInstance(){return ys.instance==null&&(ys.instance=new ys),ys.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(iu)&&(e=e.slice(0,e.indexOf(iu))),M(e.length>0,()=>"scheme must not be an empty string.");let n=ys.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Dp(e){if(e.indexOf(iu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ys.getSchemes().join(",")}`);return{scheme:e.split(iu)[0],path:e.split(iu)[1]}}async function iw(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Ot.getLoadHandlers(e);M(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Ot.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Dp(e).scheme,l=Dp(e).path,c=i===Dp(e).scheme,u=await r.load();n&&c&&await ys.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await ys.getManager(i).removeModel(l),d.modelArtifactsInfo}async function HE(){let e=ys.getSchemes(),t={};for(let n of e){let s=await ys.getManager(n).listModels();for(let r in s){let a=n+iu+r;t[a]=s[r]}}return t}async function jE(e){let t=Dp(e);return ys.getManager(t.scheme).removeModel(t.path)}async function qE(e,t){return iw(e,t,!1)}async function XE(e,t){return iw(e,t,!0)}var KE=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new KE);try{ys.registerManager(xi.URL_SCHEME,new GE)}catch{}try{ys.registerManager(yi.URL_SCHEME,new OE)}catch{}}var ZE={importFetch:()=>aT()},jg,YE=class{constructor(){this.util=oT(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(jg==null&&(jg=ZE.importFetch()),jg(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&!Y().get("IS_BROWSER")&&Y().setPlatform("node",new YE);function Le(e,t="float32",n){return t=t||"float32",BA(e),new Qt(e,t,n)}function JE(e,t){let n=F(e,"x","cast");if(!E3(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return G.runKernel(Ka,s,r)}var he=H({cast_:JE});function QE(e){let n={x:F(e,"x","clone","string_or_numeric")};return G.runKernel(uo,n)}var Hn=H({clone_:QE});function lw(e,t=!1){console.log(e.toString(t))}K3();var e9={buffer:Le,cast:he,clone:Hn,print:lw};cE(e9);var In={};Me(In,{browserFiles:()=>i9,browserHTTPRequest:()=>h9,concatenateArrayBuffers:()=>qA,copyModel:()=>qE,decodeWeights:()=>Q3,encodeWeights:()=>wE,fromMemory:()=>f9,getLoadHandlers:()=>DE,getModelArtifactsForJSON:()=>XA,getModelArtifactsInfoForJSON:()=>Kd,getSaveHandlers:()=>$E,http:()=>ZA,isHTTPScheme:()=>G1,listModels:()=>HE,loadWeights:()=>l9,moveModel:()=>XE,registerLoadRouter:()=>_E,registerSaveRouter:()=>RE,removeModel:()=>jE,weightsLoaderFactory:()=>cw,withSaveHandler:()=>m9});var t9="model",n9=".json",s9=".weights.bin";function _b(e){return new Promise(t=>setTimeout(t)).then(e)}var U1=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(U1.URL_SCHEME)&&(e=e.slice(U1.URL_SCHEME.length)),(e==null||e.length===0)&&(e=t9),this.modelJsonFileName=e+n9,this.weightDataFileName=e+s9}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=ew(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await _b(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await _b(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kd(e)}}}},tf=U1;tf.URL_SCHEME="downloads://";var r9=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=XA(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,qA(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>Rb(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=Rb(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},a9=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(tf.URL_SCHEME)?o9(e.slice(tf.URL_SCHEME.length)):null;Ot.registerSaveRouter(a9);function o9(e="model"){return new tf(e)}function i9(e){return new r9(e)}function $b(e,t,n,s){o(e),n=n??0,s=s??1,i(n,s);let r=0,a=l=>(l.then(c=>{let u=n+ ++r/e.length*(s-n);return t(u),c}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),M(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function uw(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await $b(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await $b(i,t.onProgress,l,c)}async function l9(e,t="",n,s){return cw(o=>uw(o,{requestInit:s}))(e,t,n)}function cw(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{let A="quantization"in g?g.quantization.dtype:g.dtype,x=L1[A]*kt(g.shape),y=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,v)=>{b===g.name&&(y(),o[v]=!0)}):y(),i.push(g.name),m+=x})}),!o.every(p=>p)){let p=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),c=[];l.forEach(p=>{t[p].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},h=0;return l.forEach(p=>{let f=t[p].paths.length,m=0;for(let b=0;b<f;b++)m+=u[h+b].byteLength;let g=new ArrayBuffer(m),A=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let v=new Uint8Array(u[h+b]);A.set(v,x),x+=v.byteLength}a[p].forEach(b=>{let v=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),C=Q3(v,[b.manifestEntry]);for(let S in C)d[S]=C[S]}),h+=f}),d}}var u9="application/octet-stream",c9="application/json",KA=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=ew(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:c9}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:u9}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Kd(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return XA(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=d9(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(r+u+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await uw(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,qA(l)]}};KA.URL_SCHEME_REGEX=/^https?:\/\//;function d9(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function G1(e){return e.match(KA.URL_SCHEME_REGEX)!=null}var dw=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>G1(s)):n=G1(e),n)return ZA(e,t)}return null};Ot.registerSaveRouter(dw);Ot.registerLoadRouter(dw);function ZA(e,t){return new KA(e,t)}function h9(e,t){return ZA(e,t)}var qg=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},p9=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function f9(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new qg(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new qg({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new qg({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function m9(e){return new p9(e)}var hw={};Me(hw,{confusionMatrix:()=>b9});function g9(e,t,n=!1,s=!1){let r=F(e,"a","matMul"),a=F(t,"b","matMul");[r,a]=Ft(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return G.runKernel(Xa,o,i)}var He=H({matMul_:g9});function A9(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:F(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return G.runKernel(Ji,a,o)}var bd=H({oneHot_:A9});function y9(e,t){let n=F(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{M(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return G.runKernel(Oo,s,r)}var Je=H({transpose_:y9});function x9(e,t,n){let s=F(e,"labels","confusionMatrix"),r=F(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),M(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=bd(he(s,"int32"),n),o=bd(he(r,"int32"),n),i=Je(a),l=He(i,o);return he(l,"int32")}var b9=H({confusionMatrix_:x9}),Al={};Me(Al,{assertAndGetBroadcastShape:()=>gt,getBroadcastDims:()=>pw,getReductionAxes:()=>jt});function pw(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function jt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function gt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var js={};Me(js,{fromPixels:()=>N9,fromPixelsAsync:()=>I9,toPixels:()=>C9});function fw(e,t,n){if(Ri(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=vr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return zo(e,t,s,n)}var Yo;function mw(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Jp(md,G.backendName)!=null){let f={pixels:e},m={numChannels:t};return G.runKernel(md,f,m)}let[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,u).data;else if(s||n)d=e.data;else if(a||r||i){if(Yo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Yo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Yo=document.createElement("canvas").getContext("2d");Yo.canvas.width=c,Yo.canvas.height=u,Yo.drawImage(e,0,0,c,u),d=Yo.getImageData(0,0,c,u).data}let h;if(t===4)h=new Int32Array(d);else{let f=c*u;h=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)h[m*t+g]=d[m*4+g]}return fw(h,[u,c,t],"int32")}function v9(e){return e!=null&&e.data instanceof Uint8Array}function w9(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function k9(e){return e!=null&&e.width!==0&&e.height!==0}function S9(e){return w9()&&!(e instanceof ImageBitmap)&&k9(e)&&!v9(e)}async function I9(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&S9(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return mw(n,t)}async function C9(e,t){let n=F(e,"img","toPixels");if(!(e instanceof tt)){let c=n;n=he(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let u=[0,0,0,255];for(let h=0;h<a;h++){let p=o[c*a+h];if(n.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(n.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);a===1?(u[0]=p*i,u[1]=p*i,u[2]=p*i):u[h]=p*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var N9=H({fromPixels_:mw}),YA={};Me(YA,{prepareAndValidate:()=>gw});function gw(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(kt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,l=r.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...Ru(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var JA={};Me(JA,{calculateShapes:()=>Aw,validateInput:()=>ey,validateUpdateShape:()=>QA});function QA(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function ey(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}QA(n,t,e)}function Aw(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,l=kt(t.shape)/i,c=[...Ru(n.slice(0,r)),1],u=kt(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var $t={};Me($t,{assertParamsValid:()=>E9,computeFlatOffset:()=>F9,computeOutShape:()=>_9,getNormalizedAxes:()=>$9,isSliceContinous:()=>D9,maskToAxes:()=>R9,parseSliceParams:()=>Cw,sliceInfo:()=>P9,startForAxis:()=>Sw,startIndicesWithElidedDims:()=>vw,stopForAxis:()=>Iw,stopIndicesWithElidedDims:()=>ww,stridesForAxis:()=>kw,stridesWithElidedDims:()=>yw});var H1=-2,T9=-1;function E9(e,t,n){let s=e.shape.length;M(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),M(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)M(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function R9(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function _9(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function yw(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function xw(e,t,n){return n<=e?n:n-(t-1)}function bw(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function $9(e,t,n,s,r,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&n>0){let p=t[0],f=n+1;u=vw(o,p,f,s,e),d=ww(i,p,f,r,e),h=yw(a,p,f,e)}else for(let p=0;p<c;p++)u[p]=Sw(o,s,a,e,p,l),d[p]=Iw(i,r,a,e,p,l),h[p]=kw(a,p,l);return{begin:u,end:d,strides:h}}function vw(e,t,n,s,r){let a=[...r],o=bw(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=xw(t,n,i),c=s[l];e&1<<l&&(c=0),a[i]=c}return a}function ww(e,t,n,s,r){let a=[...r],o=bw(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=xw(t,n,i),c=s[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=fd(0,a[i],r[i])}return a}function kw(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function Sw(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=fd(0,o,l-1),o}function Iw(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=fd(0,o,l):o=fd(-1,o,l-1),o}function D9(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function F9(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Cw(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function P9(e,t,n,s,r,a,o,i,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let y=0;y<d.dims;y++)u&&(1<<y&i)!==0&&d.numAddAxisAfterEllipsis++,1<<y&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};O9(d,h);let p=!0,f=!0,m=!0,g=[],A=[];for(let y=0;y<e.length;++y){if(h.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);let b=!!(h.shrinkAxisMask&1<<y),v=e[y];if(v===-1){g.push(b?1:-1);continue}let C=[h.beginMask&1<<y,h.endMask&1<<y],S=[h.strides[y]>0?0:-1,h.strides[y]>0?v:v-1];if(b&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[y]===1;let E=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(b){let _=h.begin[y]<0?v+h.begin[y]:h.begin[y];if(h.begin[y]=_,h.end[y]=h.begin[y]+1,_<0||_>=v)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=Db(h.begin[y],0,h.strides[y],v,C,S),h.end[y]=Db(h.end[y],1,h.strides[y],v,C,S);let $=h.strides[y]===1&&h.begin[y]===0&&h.end[y]===v;p=p&&$,f=f&&(y===0&&h.strides[y]===1||$)}else p=p&&h.strides[y]===1&&E,f=f&&(y===0&&h.strides[y]===1||E);let R,P=!1;if(h.beginValid&&h.endValid?(R=h.end[y]-h.begin[y],P=!0):b?(R=1,P=!0):E&&v>=0&&(h.strides[y]<0?R=-v:R=v,P=!0),P){let $;R===0||R<0!=h.strides[y]<0?$=0:$=Math.trunc(R/h.strides[y])+(R%h.strides[y]!==0?1:0),g.push($)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){let b=h.finalShapeGatherIndices[y];b>=0?A.push(g[b]):b===H1&&A.push(1)}return{finalShapeSparse:A.filter((y,b)=>h.finalShapeGatherIndices[b]!==H1),finalShape:A,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function O9(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(H1),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(T9),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Db(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var le={};Me(le,{Serializable:()=>Nw,SerializationMap:()=>si,registerClass:()=>Lo});var Nw=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},si=class{constructor(){this.classNameMap={}}static getMap(){return si.instance==null&&(si.instance=new si),si.instance}static register(e){si.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Lo(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),si.register(e)}var Tw={};Me(Tw,{TEST_EPSILON_FLOAT16:()=>Ew,encodeStrings:()=>Rw,expectArrayBuffersEqual:()=>U9,expectArraysClose:()=>z9,expectArraysEqual:()=>B9,expectNumbersClose:()=>W9,expectPromiseToFail:()=>L9,expectValuesInRange:()=>V9,testEpsilon:()=>ty});var M9=.001,Ew=.1;function z9(e,t,n){return n==null&&(n=ty()),j1(e,t,(s,r)=>ny(s,r,n))}function ty(){return G.backend.floatPrecision()===32?M9:Ew}function j1(e,t,n){let s=!0;if((xn(e)||xn(t))&&(s=!1),xn(e)&&xn(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=vr(e),i=vr(t);if(!Ga(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=xn(e)?e:gi(e),a=xn(t)?t:gi(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function L9(e,t){e().then(()=>t.fail(),()=>t())}function B9(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return ba(e)||ba(e[0])||ba(t)||ba(t[0])?j1(e,n,(s,r)=>s==r):j1(e,t,(s,r)=>ny(s,r,0))}function W9(e,t,n){if(n==null&&(n=ty()),!ny(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ny(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function V9(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function U9(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function Rw(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Rw(n):e[t]=qd(n)}return e}var _w="0.0.0";function $w(){Y().set("PROD",!0)}function G9(){Y().set("DEBUG",!0)}function H9(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function sy(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}dE(sy);function j9(){G.disposeVariables()}function rs(){return G}function nf(){return G.memory()}function q9(e){return G.profile(e)}function K(e,t){return G.tidy(e,t)}function ae(e){GA(e).forEach(n=>n.dispose())}function ln(e){return G.keep(e)}function X9(e){return G.time(e)}function Dw(e){return G.setBackend(e)}function sf(){return G.ready()}function Ms(){return G.backendName}function K9(e){G.removeBackend(e)}function Fw(e){return G.findBackend(e)}function Z9(e){return G.findBackendFactory(e)}function ac(e,t,n=1){return G.registerBackend(e,t,n)}function Fa(){return G.backend}function Y9(e,t){Y().setPlatform(e,t)}function J9(e,t){let n=F(e,"a","add"),s=F(t,"b","add");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(Kr,r)}var ie=H({add_:J9});function Q9(e,t){let n=F(e,"a","floorDiv"),s=F(t,"b","floorDiv");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(oo,r)}var am=H({floorDiv_:Q9});function eR(e,t){let n=F(e,"a","div"),s=F(t,"b","div");if([n,s]=Ft(n,s),n.dtype==="int32"&&s.dtype==="int32")return am(n,s);let r={a:n,b:s},a={};return G.runKernel(no,r,a)}var ye=H({div_:eR});function tR(e,t){let n=F(e,"a","mul"),s=F(t,"b","mul");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(bo,r)}var U=H({mul_:tR});function nR(e){let t=F(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return G.runKernel(_d,n)}else{let n={x:t};return G.runKernel(_i,n)}}var Zt=H({abs_:nR});function sR(e){let n={x:F(e,"x","acos")};return G.runKernel(_u,n)}var Pw=H({acos_:sR});function rR(e){let n={x:F(e,"x","acosh")};return G.runKernel($u,n)}var Ow=H({acosh_:rR});function aR(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>F(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Ga(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return G.runKernel(Ha,s)}var ry=H({addN_:aR});function oR(e,t=null,n=!1){let r={x:F(e,"x","all","bool")},a={axis:t,keepDims:n};return G.runKernel(Du,r,a)}var ay=H({all_:oR});function iR(e,t=null,n=!1){let r={x:F(e,"x","any","bool")},a={axis:t,keepDims:n};return G.runKernel(Fu,r,a)}var rf=H({any_:iR});function lR(e,t=0){let s={x:F(e,"x","argMax")},r={axis:t};return G.runKernel(ja,s,r)}var jr=H({argMax_:lR});function uR(e,t=0){let s={x:F(e,"x","argMin")},r={axis:t};return G.runKernel(Pu,s,r)}var Mw=H({argMin_:uR});function cR(e){let n={x:F(e,"x","asin")};return G.runKernel(Ou,n)}var zw=H({asin_:cR});function dR(e){let n={x:F(e,"x","asinh")};return G.runKernel(Mu,n)}var Lw=H({asinh_:dR});function hR(e){let n={x:F(e,"x","atan")};return G.runKernel(zu,n)}var Bw=H({atan_:hR});function pR(e,t){let n=F(e,"a","atan2"),s=F(t,"b","atan2");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(Bu,r)}var Ww=H({atan2_:pR});function fR(e){let n={x:F(e,"x","atanh")};return G.runKernel(Lu,n)}var Vw=H({atanh_:fR});function mR(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=Hw(r);return Zd(e,i,n,a,s,null,null,l)}function Uw(e,t,n,s,r,a,o="channelsLast"){let[i,l]=af(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Zd(e,c,n,s,r,a,!1,o)}function gR(e,t,n,s,r,a,o="NDHWC"){let[i,l,c]=q1(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Gw(e,u,n,s,r,!1,d,a)}function Zd(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,p,,f]=t,[m,g]=af(n),[A,x]=af(s),y=lu(h,A),b=lu(p,x),{padInfo:v,outHeight:C,outWidth:S}=xR(r,c,u,m,g,y,b,a,i),E=o?f*d:f,R;return i==="channelsFirst"?R=[l,E,C,S]:i==="channelsLast"&&(R=[l,C,S,E]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:C,outWidth:S,outChannels:E,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:b,dilationHeight:A,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function Gw(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,c,u,d,h]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,h]=e;else if(o==="channelsFirst")[l,h,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,f,m,,g]=t,[A,x,y]=q1(n),[b,v,C]=q1(s),S=lu(p,b),E=lu(f,v),R=lu(m,C),{padInfo:P,outDepth:$,outHeight:_,outWidth:N}=bR(r,c,u,d,A,x,y,S,E,R,i),O=a?g*h:g,z;return o==="channelsFirst"?z=[l,O,$,_,N]:o==="channelsLast"&&(z=[l,$,_,N,O]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:h,outDepth:$,outHeight:_,outWidth:N,outChannels:O,padInfo:P,strideDepth:A,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:v,dilationWidth:C,inShape:e,outShape:z,filterShape:t}}function AR(e,t,n,s,r){s==null&&(s=oy(e,t,n));let a=e[0],o=e[1],i=di((a-t+2*s)/n+1,r),l=di((o-t+2*s)/n+1,r);return[i,l]}function yR(e,t,n,s,r,a){r==null&&(r=oy(e,t,s));let o=e[0],i=e[1],l=e[2],c=di((o-t+2*r)/s+1,a),u=di((i-t+2*r)/s+1,a),d=di((l-t+2*r)/s+1,a);return[c,u,d,n]}function oy(e,t,n,s=1){let r=lu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function af(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function q1(e){return typeof e=="number"?[e,e,e]:e}function lu(e,t){return t<=1?e:e+(e-1)*(t-1)}function xR(e,t,n,s,r,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=AR([t,n],a,s,e,i);u=p[0],d=p[1]}else if(e==="same"){u=Math.ceil(t/s),d=Math.ceil(n/r);let h=Math.max(0,(u-1)*s+a-t),p=Math.max(0,(d-1)*r+o-n),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),A=p-g;c={top:f,bottom:m,left:g,right:A,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let h=l==="channelsLast"?e[1][0]:e[2][0],p=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=di((t-a+h+p)/s+1,i),d=di((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function bR(e,t,n,s,r,a,o,i,l,c,u){let d,h,p,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=yR([t,n,s,1],i,1,r,e,u);h=g[0],p=g[1],f=g[2]}else if(e==="same"){h=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/o);let m=(h-1)*r+i-t,g=(p-1)*a+l-n,A=(f-1)*o+c-s,x=Math.floor(m/2),y=m-x,b=Math.floor(g/2),v=g-b,C=Math.floor(A/2),S=A-C;d={top:b,bottom:v,left:C,right:S,front:x,back:y,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function di(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Pa(e){let[t,n,s]=af(e);return t===1&&n===1&&s===1}function Sr(e,t){return Pa(e)||Pa(t)}function Hw(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Fn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")M(du(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{M(du(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function vR(e,t){let s={x:F(e,"x","reshape","string_or_numeric")},r={shape:t};return G.runKernel(tl,s,r)}var q=H({reshape_:vR});function wR(e,t,n,s,r){let a=F(e,"x","avgPool","float32"),o=1;M(Sr(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Fn("avgPool",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=G.runKernel(qa,c,u);return d=he(d,a.dtype),l?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var om=H({avgPool_:wR});function kR(e,t,n,s,r,a="NDHWC"){let o=F(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Fn("avgPool3d",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=G.runKernel(Ed,c,u);return d=he(d,i.dtype),l?q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var iy=H({avgPool3d_:kR});function SR(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=xd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Hn(n[0]);let s=n,r={axis:t};return G.runKernel(Di,s,r)}var Tt=H({concat_:SR});function IR(e){let n={x:F(e,"x","sigmoid","float32")};return G.runKernel(Eo,n)}var bs=H({sigmoid_:IR});function CR(e,t,n){let s=F(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return G.runKernel(ol,r,a)}var Pe=H({slice_:CR});function NR(e){let n={x:F(e,"x","tanh","float32")};return G.runKernel(Po,n)}var pu=H({tanh_:NR});function TR(e,t,n,s,r,a){let o=F(e,"forgetBias","basicLSTMCell"),i=F(t,"lstmKernel","basicLSTMCell"),l=F(n,"lstmBias","basicLSTMCell"),c=F(s,"data","basicLSTMCell"),u=F(r,"c","basicLSTMCell"),d=F(a,"h","basicLSTMCell"),h=Tt([c,d],1),p=He(h,i),f=ie(p,l),m=f.shape[0],g=f.shape[1]/4,A=[m,g],x=Pe(f,[0,0],A),y=Pe(f,[0,g],A),b=Pe(f,[0,g*2],A),v=Pe(f,[0,g*3],A),C=ie(U(bs(x),pu(y)),U(u,bs(ie(o,b)))),S=U(pu(C),bs(v));return[C,S]}var ER=H({basicLSTMCell_:TR});function RR(e,t,n){let s=F(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);M(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return G.runKernel($i,a,o)}var im=H({batchToSpaceND_:RR});function _R(e){let t;return e.rank===0||e.rank===1?t=q(e,[1,1,1,e.size]):e.rank===2?t=q(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function $R(e,t,n,s,r,a){a==null&&(a=.001);let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;s!=null&&(u=F(s,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:_R(o),scale:c,offset:u,mean:i,variance:l},p={varianceEpsilon:a},f=G.runKernel(io,h,p);return q(f,o.shape)}var fu=H({batchNorm_:$R});function DR(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),fu(o,i,l,u,c,a)}var jw=H({batchNorm2d_:DR});function FR(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),fu(o,i,l,u,c,a)}var qw=H({batchNorm3d_:FR});function PR(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),fu(o,i,l,u,c,a)}var Xw=H({batchNorm4d_:PR});function OR(e,t,n){let s=F(e,"x","bincount"),r=F(t,"weights","bincount");M(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return G.runKernel(Pf,a,o)}var ly=H({bincount_:OR});function MR(e,t){let n=F(e,"s0","broadcastArgs","int32"),s=F(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return G.runKernel(Of,r)}var Kw=H({broadcastArgs_:MR});function zR(e,t){let n=F(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=q(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Hn(n);let i={x:n},l={reps:a};return G.runKernel(Yr,i,l)}var id=H({broadcastTo_:zR});function LR(e){let n={x:F(e,"x","ceil","float32")};return G.runKernel(Za,n)}var Zw=H({ceil_:LR});function BR(e,t,n){let s=F(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return G.runKernel(Zr,r,a)}var cs=H({clipByValue_:BR});function WR(e){return Tt(e,0)}var Yw=H({concat1d_:WR});function VR(e,t){return Tt(e,t)}var lm=H({concat2d_:VR});function UR(e,t){return Tt(e,t)}var Jw=H({concat3d_:UR});function GR(e,t){return Tt(e,t)}var Qw=H({concat4d_:GR});function HR(e,t,n,s,r="NHWC",a=[1,1],o){let i=F(e,"x","conv2d","float32"),l=F(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Fn("conv2d",s,o);let d=r==="NHWC"?c.shape[3]:c.shape[1];M(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),M(Sr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let h={x:c,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=G.runKernel(Ya,h,p);return u?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Oa=H({conv2d_:HR});function jR(e,t,n,s,r="NWC",a=1,o){let i=F(e,"x","conv1d"),l=F(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=q(i,[1,i.shape[0],i.shape[1]])),M(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Fn("conv1d",s,o),M(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(Sr(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=q(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=q(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Oa(h,d,[1,n],s,"NHWC",[1,a],o);return u?q(g,[g.shape[2],g.shape[3]]):q(g,[g.shape[0],g.shape[2],g.shape[3]])}var uy=H({conv1d_:jR});function qR(e,t,n,s,r,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),M(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),Fn("conv2dDerInput",r,o);let h={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=G.runKernel(Ja,h,p);return c?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var cy=H({conv2DBackpropInput_:qR});function XR(e,t,n,s,r,a){let o=F(e,"x","conv2dTranspose"),i=F(t,"filter","conv2dTranspose");return cy(n,o,i,s,r,"NHWC",a)}var dy=H({conv2dTranspose_:XR});function KR(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=F(e,"x","conv3d"),i=F(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M(Sr(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},h=G.runKernel($d,u,d);return c?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var hy=H({conv3d_:KR});function ZR(e,t,n,s,r){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},h=G.runKernel(Lf,u,d);return i?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var ek=H({conv3DBackpropInput_:ZR});function YR(e,t,n,s,r){let a=F(e,"x","conv3dTranspose"),o=F(t,"filter","conv3dTranspose");return ek(n,a,o,s,r)}var tk=H({conv3dTranspose_:YR});function JR(e){let n={x:F(e,"x","cos","float32")};return G.runKernel(Qa,n)}var um=H({cos_:JR});function QR(e){let n={x:F(e,"x","cosh","float32")};return G.runKernel(eo,n)}var py=H({cosh_:QR});function e_(e,t=0,n=!1,s=!1){let a={x:F(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return G.runKernel(Fi,a,o)}var fy=H({cumsum_:e_});function t_(e,t,n,s=!1){let r=F(e,"x","denseBincount"),a=F(t,"weights","denseBincount");M(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),M(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return G.runKernel(Bf,o,i)}var nk=H({denseBincount_:t_});function n_(e,t,n="NHWC"){let s=F(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),M(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return G.runKernel(Oi,i,l)}var sk=H({depthToSpace_:n_});function s_(e,t,n,s,r="NHWC",a=[1,1],o){let i=F(e,"x","depthwiseConv2d","float32"),l=F(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Fn("depthwiseConv2d",s,o);let d={x:c,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},p=G.runKernel(to,d,h);return u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Yd=H({depthwiseConv2d_:s_});function r_(e){let n={x:F(e,"x","diag")};return G.runKernel(Uf,n)}var a_=H({diag_:r_});function o_(e,t,n,s,r=[1,1],a="NHWC"){let o=F(e,"x","dilation2d"),i=F(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:s,dilations:r},h=G.runKernel(Dd,u,d);return c?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var rk=H({dilation2d_:o_});function i_(e,t){let n=F(e,"a","equal","string_or_numeric"),s=F(t,"b","equal","string_or_numeric");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(Mi,r)}var vs=H({equal_:i_});function l_(e,t,n){let s=F(t,"a","where"),r=F(n,"b","where"),a=F(e,"condition","where","bool"),o=gt(gt(a.shape,s.shape),r.shape),i=id(a,o),l=id(s,o),c=id(r,o),u={condition:i,t:l,e:c};return G.runKernel(al,u)}var Rn=H({where_:l_});function u_(e){let n={x:F(e,"x","zerosLike")};return G.runKernel(ml,n)}var Qe=H({zerosLike_:u_});function c_(e,t){let n=F(e,"a","div"),s=F(t,"b","div");[n,s]=Ft(n,s);let r=ye(n,s),a=Qe(r),o=vs(s,a);return Rn(o,a,r)}var ak=H({divNoNan_:c_});function d_(e,t){let n=F(e,"t1","dot"),s=F(t,"t2","dot");M((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(M(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=q(n,[1,-1]),i=q(s,[-1,1]),l=He(o,i);return q(l,[])}else if(n.rank===1&&s.rank===2){let o=q(n,[1,-1]),i=q(s,[s.shape[0],s.shape[1]]),l=He(o,i);return q(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=q(s,[-1,1]),i=He(n,o);return q(i,[i.size])}else{let o=q(s,[s.shape[0],s.shape[1]]);return He(n,o)}}var h_=H({dot_:d_});function p_(e,...t){let n=t.map((r,a)=>F(r,`tensors${a}`,"einsum")),s={equation:e};return G.runKernel(Fd,n,s)}var ok=H({einsum_:p_});function f_(e){let n={x:F(e,"x","elu","float32")};return G.runKernel(so,n)}var Jd=H({elu_:f_});function m_(e){let t=F(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=he(t,"float32"));let n={x:t};return G.runKernel(Wu,n)}var ik=H({erf_:m_});function g_(e){let n={x:F(e,"x","exp")};return G.runKernel(ro,n)}var ws=H({exp_:g_});function A_(e,t=0){let n=F(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return G.runKernel(zi,s,r)}var on=H({expandDims_:A_});function y_(e){let n={x:F(e,"x","expm1")};return G.runKernel(Li,n)}var lk=H({expm1_:y_});function x_(e,t){let n=F(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return G.runKernel(Yr,s,r)}var zs=H({tile_:x_});function b_(e,t,n,s="float32"){t==null&&(t=e);let r=Le([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=q(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return zs(on(o,0),[n[0],1,1]);if(n.length===2)return zs(on(on(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return zs(on(on(on(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var my=H({eye_:b_});function oc(e,t,n){let s={shape:e,value:t,dtype:n};return G.runKernel(Vu,{},s)}function v_(e){let n={x:F(e,"x","floor","float32")};return G.runKernel(ao,n)}var Qd=H({floor_:v_});function w_(e,t,n=0,s=0){let r=F(e,"x","gather"),a=F(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return G.runKernel(Wi,o,i)}var mu=H({gather_:w_});function k_(e,t){let n=F(e,"a","greater","string_or_numeric"),s=F(t,"b","greater","string_or_numeric");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(Ui,r)}var hs=H({greater_:k_});function S_(e,t){let n=F(e,"a","greaterEqual","string_or_numeric"),s=F(t,"b","greaterEqual","string_or_numeric");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(lo,r)}var yl=H({greaterEqual_:S_});function I_(e){let n={input:F(e,"input","imag")};return G.runKernel(Pd,n)}var cm=H({imag_:I_});function C_(e){let n={x:F(e,"x","isFinite")};return G.runKernel(Uu,n)}var N_=H({isFinite_:C_});function T_(e){let n={x:F(e,"x","isInf")};return G.runKernel(Gu,n)}var E_=H({isInf_:T_});function R_(e){let n={x:F(e,"x","isNaN")};return G.runKernel(Hu,n)}var uk=H({isNaN_:R_});function __(e,t=.2){let s={x:F(e,"x","leakyRelu")},r={alpha:t};return G.runKernel(co,s,r)}var dm=H({leakyRelu_:__});function $_(e,t){let n=F(e,"a","less","string_or_numeric"),s=F(t,"b","less","string_or_numeric");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(Gi,r)}var gy=H({less_:$_});function D_(e,t){let n=F(e,"a","lessEqual","string_or_numeric"),s=F(t,"b","lessEqual","string_or_numeric");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(Hi,r)}var xl=H({lessEqual_:D_});function ck(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return G.runKernel(qf,{},s)}function F_(e,t=5,n=1,s=1,r=.5){let a=F(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(du(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},u=G.runKernel(Md,l,c);return i?q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var dk=H({localResponseNormalization_:F_});function P_(e){let n={x:F(e,"x","log","float32")};return G.runKernel(ho,n)}var ks=H({log_:P_});function O_(e){let n={x:F(e,"x","log1p")};return G.runKernel(ju,n)}var hm=H({log1p_:O_});function M_(e){return M(Ea(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=F(t,"x","tf.grad","string_or_numeric"),r=n!=null?F(n,"dy","tf.grad"):null;return G.tidy(()=>{let{value:a,grads:o}=G.gradients(()=>e(s),[s],r);return r!=null&&Dn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),pm(o),o[0]})}}function z_(e){return M(Ea(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=xd(t,"args","tf.grads","string_or_numeric"),r=n!=null?F(n,"dy","tf.grads"):null;return G.tidy(()=>{let{value:a,grads:o}=G.gradients(()=>e(...s),s,r);return r!=null&&Dn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pm(o),o})}}function L_(e){return M(Ea(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof tt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof tt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=G.gradients(()=>e(t),[t],n);return pm(s),{grad:s[0],value:r}}}function B_(e){return M(Ea(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(r=>r instanceof tt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof tt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=G.gradients(()=>e(...t),t,n);return n!=null&&Dn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pm(s.grads),s}}function hk(e,t){M(Ea(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(c=>c instanceof yd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in G.registeredVariables)t.push(G.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=G.gradients(e,t,null,a);M(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function wr(e){return G.customGrad(e)}function pm(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function W_(e){let n={x:F(e,"x","neg")};return G.runKernel(qi,n)}var Dt=H({neg_:W_});function V_(e){let n={x:F(e,"x","softplus")};return G.runKernel(tc,n)}var ic=H({softplus_:V_});function U_(e){let t=F(e,"x","logSigmoid");return wr(s=>({value:Dt(ic(Dt(s))),gradFunc:o=>U(o,bs(Dt(s)))}))(t)}var G_=H({logSigmoid_:U_});function H_(e,t=null,n=!1){let r={x:F(e,"x","max")},a={reductionIndices:t,keepDims:n};return G.runKernel(po,r,a)}var Tn=H({max_:H_});function j_(e,t){let n=F(e,"a","sub"),s=F(t,"b","sub");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(Fo,r)}var ge=H({sub_:j_});function q_(e,t=null,n=!1){let s=F(e,"x","sum");s.dtype==="bool"&&(s=he(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return G.runKernel(_o,r,a)}var Se=H({sum_:q_});function X_(e,t=-1){let n=F(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return wr((r,a)=>{let i=Tn(r,t,!0),l=ge(r,i),c=ge(he(l,"float32"),ks(Se(ws(l),t,!0)));return a([c]),{value:c,gradFunc:(d,h)=>{let[p]=h,f=!0,m=ws(p);return ge(d,U(Se(d,t,f),m))}}})(n)}var Ay=H({logSoftmax_:X_});function yy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function pk(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function fk(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function bi(e,t){let n=t.map(s=>1);return pk(e,n,t)}function K_(e,t,n){M(yy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function mk(e,t){if(yy(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function xy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function Z_(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function Y_(e,t=null,n=!1){let s=F(e,"x","logSumExp"),r=Bs(t,s.shape),a=Tn(s,r,!0),o=ge(s,a),i=ws(o),l=Se(i,r),c=ks(l),u=ie(q(a,c.shape),c);if(n){let d=bi(u.shape,r);return q(u,d)}return u}var gk=H({logSumExp_:Y_});function J_(e,t){let n=F(e,"a","logicalAnd","bool"),s=F(t,"b","logicalAnd","bool");gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(ji,r)}var rr=H({logicalAnd_:J_});function Q_(e){let n={x:F(e,"x","logicalNot","bool")};return G.runKernel(qu,n)}var fm=H({logicalNot_:Q_});function e$(e,t){let n=F(e,"a","logicalOr","bool"),s=F(t,"b","logicalOr","bool");gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(Od,r)}var by=H({logicalOr_:e$});function t$(e,t){let n=F(e,"a","logicalXor","bool"),s=F(t,"b","logicalXor","bool");return gt(n.shape,s.shape),rr(by(e,t),fm(rr(e,t)))}var n$=H({logicalXor_:t$});function s$(e,t,n,s,r){let a=F(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M(Sr(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Fn("maxPool",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=G.runKernel(mo,c,u);return l?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var mm=H({maxPool_:s$});function r$(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=F(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Fn("maxPool3d",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=G.runKernel(zd,c,u);return l?q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var vy=H({maxPool3d_:r$});function a$(e,t,n,s,r=!1){let o={x:F(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=G.runKernel(Yf,o,i);return{result:l[0],indexes:l[1]}}var Ak=H({maxPoolWithArgmax_:a$});function o$(e,t){let n=F(e,"a","maximum"),s=F(t,"b","maximum");[n,s]=Ft(n,s),n.dtype==="bool"&&(n=he(n,"int32"),s=he(s,"int32")),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(fo,r)}var Jr=H({maximum_:o$});function i$(e,t=null,n=!1){let r={x:F(e,"x","mean")},a={axis:t,keepDims:n};return G.runKernel(go,r,a)}var Mt=H({mean_:i$});function Vt(e,t="float32"){if(t==="complex64"){let s=Vt(e,"float32"),r=Vt(e,"float32");return Da(s,r)}let n=$f(kt(e),t);return G.makeTensor(n,e,t)}function us(e,t="float32"){if(t==="complex64"){let s=us(e,"float32"),r=Vt(e,"float32");return Da(s,r)}let n=LA(kt(e),t);return G.makeTensor(n,e,t)}function l$(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=F(e,"x","meshgrid",e instanceof tt?e.dtype:"float32");if(t===void 0)return[s];let r=F(t,"y","meshgrid",t instanceof tt?t.dtype:"float32"),a=kt(s.shape),o=kt(r.shape);return n==="xy"?(s=q(s,[1,-1]),r=q(r,[-1,1]),[He(us([o,1],s.dtype),s),He(r,us([1,a],r.dtype))]):(s=q(s,[-1,1]),r=q(r,[1,-1]),[He(s,us([1,o],s.dtype)),He(us([a,1],r.dtype),r)])}function u$(e,t=null,n=!1){let r={x:F(e,"x","min")},a={axis:t,keepDims:n};return G.runKernel(Ao,r,a)}var hi=H({min_:u$});function c$(e,t){let n=F(e,"a","minimum"),s=F(t,"b","minimum");[n,s]=Ft(n,s),n.dtype==="bool"&&(n=he(n,"int32"),s=he(s,"int32")),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(yo,r)}var eh=H({minimum_:c$});function d$(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=F(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return G.runKernel(xo,o,a)}var yk=H({mirrorPad_:d$});function h$(e,t){let n=F(e,"a","mod"),s=F(t,"b","mod");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(Xu,r)}var gm=H({mod_:h$});function p$(e){let t=F(e,"x","square"),n={};return G.runKernel("Square",{x:t},n)}var pt=H({square_:p$});function f$(e,t=null,n=!1){e=F(e,"x","moments");let s=Bs(t,e.shape),r=Mt(e,s,n),a=r.shape;n||(a=bi(r.shape,s));let o=pt(ge(he(e,"float32"),q(r,a))),i=Mt(o,s,n);return{mean:r,variance:i}}var Am=H({moments_:f$});function m$(e,t,n,s){let r=F(t,"data","multiRNNCell"),a=xd(n,"c","multiRNNCell"),o=xd(s,"h","multiRNNCell"),i=r,l=[];for(let d=0;d<e.length;d++){let h=e[d](i,a[d],o[d]);l.push(h[0]),l.push(h[1]),i=h[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var g$=H({multiRNNCell_:m$});function A$(e,t,n,s=!1){let r=F(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?q(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},u=G.runKernel(Jf,l,c);return o===1?q(u,[u.size]):u}var xk=H({multinomial_:A$});function y$(e,t){let n=F(e,"a","notEqual","string_or_numeric"),s=F(t,"b","notEqual","string_or_numeric");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s};return G.runKernel(Xi,r)}var gu=H({notEqual_:y$});function x$(e){let n={x:F(e,"x","onesLike")};return G.runKernel(Yi,n)}var Ss=H({onesLike_:x$});function b$(e,t){let n=F(e,"v1","outerProduct"),s=F(t,"v2","outerProduct");M(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=q(n,[-1,1]),a=q(s,[1,-1]);return He(r,a)}var v$=H({outerProduct_:b$});function w$(e,t,n=0){let s=F(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return G.runKernel(vo,a,r)}var Ir=H({pad_:w$});function k$(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ir(e,[t],n)}var S$=H({pad1d_:k$});function I$(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ir(e,t,n)}var C$=H({pad2d_:I$});function N$(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ir(e,t,n)}var T$=H({pad3d_:N$});function E$(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ir(e,t,n)}var R$=H({pad4d_:E$});function _$(e,t,n){let s=F(e,"x","spaceToBatchND");M(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return G.runKernel(ll,r,a)}var ym=H({spaceToBatchND_:_$});function $$(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=F(e,"x","maxPool"),l=i,c=!1;i.rank===3&&(c=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(Sr(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let u=Uw(l.shape,t,a,r,s),d=[u.dilationHeight,u.dilationWidth],h;s==="same"?h=F$([u.filterHeight,u.filterWidth],d):h=[[0,0],[0,0]];let p=d[0]===1&&d[1]===1,[f,m]=D$([u.inHeight,u.inWidth],d,h),g=p?s:"valid",A=p?l:ym(l,d,f),y=(n==="avg"?()=>om(A,t,a,g,o):()=>mm(A,t,a,g,o))(),b=p?y:im(y,d,m);return c?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function D$(e,t,n){let s=n.map(u=>u[0]),r=n.map(u=>u[1]),a=e.concat(s,r),o=t.map((u,d)=>(u-a[d]%u)%u),i=r.map((u,d)=>u+o[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function F$(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var P$=H({pool_:$$});function O$(e,t){let n=F(e,"base","pow"),s=F(t,"exp","pow");[n,s]=Ft(n,s);let r={a:n,b:s};return G.runKernel(wo,r)}var Ma=H({pow_:O$});function M$(e,t){let n=F(e,"x","prelu"),s=F(t,"alpha","prelu"),r={x:n,alpha:s};return G.runKernel(ko,r)}var xm=H({prelu_:M$});function z$(e,t=null,n=!1){let s=F(e,"x","prod");s.dtype==="bool"&&(s=he(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return G.runKernel(el,r,a)}var wy=H({prod_:z$});function L$(e,t,n){let s=kt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return G.makeTensor(r,e,n)}var B$=H({rand_:L$}),ky=Ei(Rf()),Sy=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=ky.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},W$=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=ky.alea(r.toString()),this.randn=new Sy(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},V$=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ky.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function U$(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new W$(t,n,s,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var G$=H({randomGamma_:U$});function H$(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new Sy(t,n,s,!1,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var bk=H({randomNormal_:H$});function j$(e,t=0,n=1,s="float32",r){let a=Le(e,s),o=new V$(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var lc=H({randomUniform_:j$});function Au(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return G.runKernel(Zu,{},r)}function q$(e){let n={input:F(e,"input","real")};return G.runKernel(Ld,n)}var vd=H({real_:q$});function X$(e){let n={x:F(e,"x","reciprocal")};return G.runKernel(Yu,n)}var vk=H({reciprocal_:X$});function K$(e){let n={x:F(e,"x","relu")};return G.runKernel(So,n)}var Cr=H({relu_:K$});function Z$(e){let n={x:F(e,"x","relu6")};return G.runKernel(Co,n)}var Iy=H({relu6_:Z$});function Y$(e,t){let s={x:F(e,"x","reverse")},r={dims:t};return G.runKernel(nl,s,r)}var Is=H({reverse_:Y$});function J$(e){let t=F(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Is(t,0)}var Q$=H({reverse1d_:J$});function eD(e,t){let n=F(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Is(n,t)}var tD=H({reverse2d_:eD});function nD(e,t){let n=F(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Is(n,t)}var sD=H({reverse3d_:nD});function rD(e,t){let n=F(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Is(n,t)}var aD=H({reverse4d_:rD});function oD(e){let n={x:F(e,"x","round")};return G.runKernel(sl,n)}var Cy=H({round_:oD});function iD(e){let n={x:F(e,"x","rsqrt","float32")};return G.runKernel(No,n)}var Ny=H({rsqrt_:iD});function Ce(e,t){if((xn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&xn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return zo(e,[],[],t)}function lD(e){let n={x:F(e,"x","selu")};return G.runKernel(Qu,n)}var Ty=H({selu_:lD});function uD(e,t,n,s,r,a=[1,1],o="NHWC"){let i=F(e,"x","separableConv2d"),l=F(t,"depthwiseFilter","separableConv2d"),c=F(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),M(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let h=l.shape[2],p=l.shape[3];M(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);let f=Yd(u,l,s,r,o,a),g=Oa(f,c,1,"valid",o);return d?q(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var wk=H({separableConv2d_:uD});async function cD(e,t){let n=F(e,"x","setdiff1d"),s=F(t,"y","setdiff1d");M(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;let l=new Qt([i],n.dtype),c=new Qt([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(l.values[d]=r[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var kk=cD;function dD(e){let n={x:F(e,"x","sign")};return G.runKernel(ec,n)}var Sk=H({sign_:dD});function hD(e){let n={x:F(e,"x","sin","float32")};return G.runKernel(To,n)}var Ey=H({sin_:hD});function pD(e){let n={x:F(e,"x","sinh")};return G.runKernel(il,n)}var Ry=H({sinh_:pD});function fD(e,t,n){let s=F(e,"x","slice1d");return M(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Pe(s,[t],[n])}var bm=H({slice1d_:fD});function mD(e,t,n){let s=F(e,"x","slice2d");return M(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,n)}var _y=H({slice2d_:mD});function gD(e,t,n){let s=F(e,"x","slice3d");return M(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,n)}var yu=H({slice3d_:gD});function AD(e,t,n){let s=F(e,"x","slice4d");return M(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,n)}var xu=H({slice4d_:AD});function yD(e,t=-1){let n=F(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return G.runKernel($o,s,r)}var th=H({softmax_:yD});function xD(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return G.runKernel(Hf,t)}var vm=H({fft_:xD});function bD(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return G.runKernel(jf,t)}var wd=H({ifft_:bD});function vD(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=q(e,[n,t]);s=wd(r)}else{let r=[n,2*(t-1)],a=q(vd(e),[n,t]),o=q(cm(e),[n,t]),i=Is(Pe(a,[0,1],[n,t-2]),1),l=U(Is(Pe(o,[0,1],[n,t-2]),1),Ce(-1)),c=Tt([a,i],1),u=Tt([o,l],1),d=q(Da(c,u),[r[0],r[1]]);s=wd(d)}if(s=vd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=q(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var $y=H({irfft_:vD});function wD(e,t,n=0){let r={x:F(e,"x","split")},a={numOrSizeSplits:t,axis:n};return G.runKernel(ul,r,a)}var bn=H({split_:wD});function kD(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Pe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Tt([e,Vt(f)],e.shape.length-1),n=t}else r=e;let a=Qe(r),o=q(Da(r,a),[s,n]),i=vm(o),l=Math.floor(n/2)+1,c=vd(i),u=cm(i),d=bn(c,[l,n-l],c.shape.length-1),h=bn(u,[l,n-l],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,q(Da(d[0],h[0]),p)}var wm=H({rfft_:kD});function SD(e){let n={x:F(e,"x","sqrt","float32")};return G.runKernel(Ro,n)}var vn=H({sqrt_:SD});function ID(e,t){let n=F(e,"a","squaredDifference"),s=F(t,"b","squaredDifference");[n,s]=Ft(n,s),gt(n.shape,s.shape);let r={a:n,b:s},a={};return G.runKernel(Do,r,a)}var Dy=H({squaredDifference_:ID});function CD(e,t){let n=F(e,"x","squeeze");return q(n,I3(n.shape,t).newShape)}var ft=H({squeeze_:CD});function ND(e,t=0){let n=xd(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return G.runKernel(Qi,s,r)}var _n=H({stack_:ND});function TD(e,t=0){let s={x:F(e,"x","step")},r={alpha:t};return G.runKernel(Mo,s,r)}var nh=H({step_:TD});function ED(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let u={x:F(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return G.runKernel(cl,u,d)}var Ik=H({stridedSlice_:ED});function RD(e){let n={x:F(e,"x","tan","float32")};return G.runKernel(dl,n)}var Ck=H({tan_:RD});function zt(e,t){Ri(e);let n=vr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return zo(e,null,n,t)}function Gr(e,t,n){if(Ri(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=vr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return zo(e,t,s,n)}function _D(e,t,n){if(Ri(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=vr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return zo(e,t,s,n)}function $D(e,t,n){if(Ri(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=vr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return zo(e,t,s,n)}function DD(e,t,n){if(Ri(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=vr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,zo(e,t,s,n)}function FD(e,t=1,n=!0){let s=F(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=G.runKernel(hl,a,o);return{values:i,indices:l}}var Nk=H({topk_:FD});function PD(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Sy(t,n,s,!0,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var km=H({truncatedNormal_:PD});function OD(e,t=0){let n=F(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=G.runKernel(sm,s,r);return{values:a,indices:o}}var X1=H({unique_:OD});function MD(e,t,n){let s=F(e,"x","unsortedSegmentSum"),r=F(t,"segmentIds","unsortedSegmentSum","int32");M(du(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return G.runKernel(Hd,a,o)}var Tk=H({unsortedSegmentSum_:MD});function zD(e,t=0){let n=F(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return G.runKernel(fl,s,r)}var Cs=H({unstack_:zD});function Ek(e,t=!0,n,s){return G.makeVariable(e,t,n,s)}function Rk(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=Le(e,"int32"),r=Le([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function LD(e){let t=F(e,"condition","whereAsync","bool"),n=await t.data(),s=Rk(t.shape,n);return e!==t&&t.dispose(),s}var Fy=LD;async function BD(e,t,n){let s=F(e,"tensor","boolMask"),r=F(t,"mask","boolMask","bool"),a=n??0,o=r.rank,i=s.shape;M(o>0,()=>"mask cannot be scalar"),Dn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=q(s,c),d=q(r,[-1]),h=await Fy(d),p=ft(h,[1]),f=mu(u,p,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),p.dispose(),u.dispose(),d.dispose(),h.dispose(),f}var WD=BD;function VD(e,t="euclidean",n=null,s=!1){e=F(e,"x","norm");let r=_k(e,t,n),a=r.shape;if(s){let o=Bs(n,e.shape);a=bi(r.shape,o)}return q(r,a)}function _k(e,t,n=null){if(e.rank===0)return Zt(e);if(e.rank!==1&&n===null)return _k(q(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Se(Zt(e),n);if(t===1/0)return Tn(Zt(e),n);if(t===-1/0)return hi(Zt(e),n);if(t==="euclidean"||t===2)return vn(Se(Ma(Zt(e),Ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Tn(Se(Zt(e),n[0]),n[1]-1);if(t===1/0)return Tn(Se(Zt(e),n[1]),n[0]);if(t===-1/0)return hi(Se(Zt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return vn(Se(pt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Py=H({norm_:VD});function UD(e,t,n,s,r=!0){let a=F(e,"v","movingAverage"),o=F(t,"x","movingAverage"),i=F(n,"decay","movingAverage");q3(a,o),M(Ga(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ce(1),c=ge(l,i),u=U(ge(o,a),c);if(r){M(s!=null,()=>"When using zeroDebias: true, step is required.");let d=F(s,"step","movingAverage");u=ye(u,ge(l,Ma(i,d)))}return ie(a,u)}var GD=H({movingAverage_:UD});function HD(e,t,n){let s=F(e,"indices","scatterND","int32"),r=F(t,"updates","scatterND");ey(r,s,n);let a={indices:s,updates:r},o={shape:n};return G.runKernel(rl,a,o)}var $k=H({scatterND_:HD});function jD(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function qD(e,t,n,s=0){let r=F(e,"sparseIndices","sparseToDense","int32"),a=F(t,"sparseValues","sparseToDense"),o=F(s,"defaultValue","sparseToDense",a.dtype);jD(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return G.runKernel(Ud,i,l)}var Oy=H({sparseToDense_:qD});function XD(e,t){let n=F(t,"indices","gatherND","int32"),r={params:F(e,"x","gatherND","string_or_numeric"),indices:n};return G.runKernel(Vi,r)}var Dk=H({gatherND_:XD});function KD(e,t){if(t==null)return e.shape.slice();if(Ga(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function ZD(e,t,n,s){let r=F(e,"x","dropout");if(M(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof tt?r.clone():r;let a=KD(r,n),o=1-t,i=ye(Qd(ie(lc(a,0,1,"float32",s),o)),o);return U(r,i)}var Fk=H({dropout_:ZD});function Pk(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function My(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return zt(r,"float32")}async function YD(e,t,n=1){let s=F(e,"predictions","inTopK"),r=F(t,"targets","inTopK");M(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),M(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Dn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,c]=[o.length/a,a],u=C3("bool",l);for(let d=0;d<l;d++){let h=d*c,p=o.subarray(h,h+c),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),lt(u,r.shape,"bool")}var JD=YD,za={};Me(za,{conv2d:()=>tF,depthwiseConv2d:()=>aF,matMul:()=>iF});function QD(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),M(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),Fn("conv2dDerFilter",r,o);let d={x:i,dy:l},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return G.runKernel(Mf,d,h)}var zy=H({conv2DBackpropFilter_:QD});function Sm(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return U(e,nh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Im(e,t){let n=t,s=jt(e.shape,t.shape);return s.length>0&&(n=Se(n,s)),q(n,e.shape)}function Cm(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Cr(e);if(t==="elu")return Jd(e);if(t==="relu6")return Iy(e);if(t==="prelu")return xm(e,n);if(t==="leakyrelu")return dm(e,s);if(t==="sigmoid")return bs(e);throw new Error(`Unknown fused activation ${t}.`)}var Nm=(e,t)=>!(e>0)||t==="linear";function eF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Nm(G.state.gradientDepth,l)===!1){let v=Oa(e,t,n,s,r,a,o);return i!=null&&(v=ie(v,i)),Cm(v,l,c,u)}let d=F(e,"x","conv2d","float32"),h=F(t,"filter","conv2d","float32"),p=d,f=!1;d.rank===3&&(f=!0,p=q(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),M(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Fn("fused conv2d",s,o),M(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),M(Sr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Zd(p.shape,h.shape,n,a,s,o),g;i!=null&&(g=F(i,"bias","fused conv2d"),[g]=Ft(g,d),gt(m.outShape,g.shape));let A;c!=null&&(A=F(c,"prelu weights","fused conv2d"));let x=(v,C)=>{let[S,E,R,P]=C,$=Sm(v,R,l);M(Pa(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let _=cy(E.shape,$,S,n,s),N=zy(E,$,S.shape,n,s),O=[_,N];if(P!=null){let z=Im(P,$);O.push(z)}return O},y={x:p,filter:h,bias:g,preluActivationWeights:A},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?wr((C,S,E)=>{let R=G.runKernel(_a,y,b);return E([S,C,R]),f&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(p,h):wr((C,S,E,R)=>{let P=G.runKernel(_a,y,b);return R([S,C,P,E]),f&&(P=q(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:x}})(p,h,g)}var tF=H({fusedConv2d_:eF});function nF(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return G.runKernel(Wf,c,u)}var Ok=H({depthwiseConv2dNativeBackpropFilter_:nF});function sF(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=G.runKernel(Vf,c,u);return l?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Mk=H({depthwiseConv2dNativeBackpropInput_:sF});function rF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Nm(G.state.gradientDepth,l)===!1){let v=Yd(e,t,n,s,r,a,o);return i!=null&&(v=ie(v,i)),Cm(v,l,c,u)}let d=F(e,"x","depthwiseConv2d","float32"),h=F(t,"filter","depthwiseConv2d","float32"),p=d,f=!1;d.rank===3&&(f=!0,p=q(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),M(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),M(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),a==null&&(a=[1,1]),M(Sr(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Fn("fused depthwiseConv2d",s,o);let m=Zd(p.shape,h.shape,n,a,s,o,!0),g;i!=null&&(g=F(i,"bias","fused conv2d"),[g]=Ft(g,d),gt(m.outShape,g.shape));let A;c!=null&&(A=F(c,"prelu weights","fused depthwiseConv2d"));let x=(v,C)=>{M(Pa(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[S,E,R,P]=C,$=Sm(v,R,l),_=Mk(E.shape,$,S,n,s,a,o),N=Ok(E,$,S.shape,n,s,a,o);if(P!=null){let O=Im(g,$);return[_,N,O]}return[_,N]},y={x:p,filter:h,bias:g,preluActivationWeights:A},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?wr((C,S,E)=>{let R=G.runKernel($a,y,b);return E([S,C,R]),f&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(p,h):wr((C,S,E,R)=>{let P=G.runKernel($a,y,b);return R([S,C,P,E]),f&&(P=q(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:x}})(p,h,g)}var aF=H({fusedDepthwiseConv2d_:rF});function oF({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Nm(G.state.gradientDepth,a)===!1){let $=He(e,t,n,s);return r!=null&&($=ie($,r)),Cm($,a,o,i)}let l=F(e,"a","fused matMul"),c=F(t,"b","fused matMul");[l,c]=Ft(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=kt(f),A=kt(m);M(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let y=gt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),b=n?q(l,[g,u,h]):q(l,[g,h,u]),v=s?q(c,[A,p,d]):q(c,[A,d,p]),C;r!=null&&(C=F(r,"bias","fused matMul"),[C]=Ft(C,l),gt(y,C.shape));let S;o!=null&&(S=F(o,"prelu weights","fused matMul"));let E=($,_)=>{let[N,O,z,j]=_,L=Sm(q($,z.shape),z,a),B,W;if(!n&&!s?(B=He(L,O,!1,!0),W=He(N,L,!0,!1)):!n&&s?(B=He(L,O,!1,!1),W=He(L,N,!0,!1)):n&&!s?(B=He(O,L,!1,!0),W=He(N,L,!1,!1)):(B=He(O,L,!0,!0),W=He(L,N,!0,!0)),r!=null){let J=Im(j,L);return[B,W,J]}else return[B,W]},R={a:b,b:v,bias:C,preluActivationWeights:S},P={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?wr((_,N,O)=>{let z=G.runKernel(Ra,R,P);return O([_,N,z]),{value:q(z,y),gradFunc:E}})(b,v):wr((_,N,O,z)=>{let j=G.runKernel(Ra,R,P);return z([_,N,j,O]),{value:q(j,y),gradFunc:E}})(b,v,C)}var iF=H({fusedMatMul_:oF});function lF(e){return My(e,.54,.46)}var uF=H({hammingWindow_:lF});function cF(e){return My(e,.5,.5)}var zk=H({hannWindow_:cF});function dF(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Pe(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=Tt([Pe(e,a,t-i),oc([i],r)]);o.push(l),a+=n}return o.length===0?Gr([],[0,t]):q(Tt(o),[o.length,t])}var Lk=H({frame_:dF});function hF(e,t,n,s,r=zk){s==null&&(s=Pk(t));let a=Lk(e,t,n),o=U(a,r(t));return wm(o,s)}var pF=H({stft_:hF});function fF(e,t,n,s,r="bilinear",a=0){let o=F(e,"image","cropAndResize"),i=F(t,"boxes","cropAndResize","float32"),l=F(n,"boxInd","cropAndResize","int32"),c=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),M(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),M(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),M(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:o,boxes:i,boxInd:l},d={method:r,extrapolationValue:a,cropSize:s};return G.runKernel(Pi,u,d)}var mF=H({cropAndResize_:fF});function gF(e){let t=F(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return G.runKernel(Bi,n,{})}var AF=H({flipLeftRight_:gF});function yF(e){let t=F(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,zs(t,r)}var xF=H({grayscaleToRGB_:yF});function bF(e,t,n=0,s=.5){let r=F(e,"image","rotateWithOffset","float32");M(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return G.runKernel(gl,a,o)}var vF=H({rotateWithOffset_:bF});function uc(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function wF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=F(e,"boxes","nonMaxSuppression","float32"),o=F(t,"scores","nonMaxSuppression","float32"),i=uc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return G.runKernel(Ki,{boxes:a,scores:o},l)}var kF=H({nonMaxSuppression_:wF});function SF(e,t,n){let s=IF(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function IF(e,t,n){return NF(e,t,n||CF)}function CF(e,t){return e>t?1:e<t?-1:0}function NF(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function Bk(e,t,n,s,r){return Ly(e,t,n,s,r,0)}function Wk(e,t,n,s,r,a){return Ly(e,t,n,s,r,0,!1,a,!0)}function Vk(e,t,n,s,r,a){return Ly(e,t,n,s,r,a,!0)}function Ly(e,t,n,s,r,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Fb);let u=a>0?-.5/a:0,d=[],h=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:A,boxIndex:x,suppressBeginIndex:y}=g;if(A<r)break;let b=!1;for(let v=d.length-1;v>=y;--v){let C=TF(e,x,d[v]);if(C>=s){b=!0;break}if(g.score=g.score*EF(s,u,C),g.score<=r)break}g.suppressBeginIndex=d.length,b||(g.score===A?(d.push(x),h.push(g.score)):g.score>r&&SF(c,g,Fb))}let p=d.length,f=n-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function TF(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-a)*(l-o),f=(d-c)*(h-u);if(p<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),A=Math.min(i,d),x=Math.min(l,h),y=Math.max(A-m,0)*Math.max(x-g,0);return y/(p+f-y)}function EF(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Fb(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function RF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=F(e,"boxes","nonMaxSuppressionAsync"),o=F(t,"scores","nonMaxSuppressionAsync"),i=uc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=Bk(c,u,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),zt(d,"int32")}var _F=RF;function $F(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=F(e,"boxes","nonMaxSuppression"),i=F(t,"scores","nonMaxSuppression"),l=uc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=G.runKernel(Zi,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var DF=H({nonMaxSuppressionWithScore_:$F});async function FF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=uc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Vk(u,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zt(h,"int32"),selectedScores:zt(p)}}var PF=FF;function OF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=F(e,"boxes","nonMaxSuppression"),i=F(t,"scores","nonMaxSuppression"),l=uc(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,h={boxes:o,scores:i},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=G.runKernel(Ku,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}var MF=H({nonMaxSuppressionPadded_:OF});async function zF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=uc(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Wk(h,p,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zt(f,"int32"),validOutputs:Ce(m,"int32")}}var LF=zF;function BF(e,t,n=!1,s=!1){let r=F(e,"images","resizeBilinear");M(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=G.runKernel(Io,i,l);return o?q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var WF=H({resizeBilinear_:BF});function VF(e,t,n=!1,s=!1){let r=F(e,"images","resizeNearestNeighbor");M(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=G.runKernel(Ju,i,l);return o?q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var UF=H({resizeNearestNeighbor_:VF});function GF(e,t="binary",n=!1,s=.5){let r=F(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],c=U(zt([s]),255),u,d,h,p;if(M(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),M(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),M(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,h]=bn(r,[1,1,1],-1);let g=U(u,a),A=U(d,o),x=U(h,i);p=ie(ie(g,A),x)}else p=e;if(t==="otsu"){let g=ly(he(Cy(p),"int32"),lt([]),256);c=HF(g,l)}let f=n?xl(p,c):hs(p,c);return he(U(f,255),"int32")}function HF(e,t){let n=zt([-1]),s=zt([0]),r=zt([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=Pe(e,0,d+1),o=Pe(e,d+1),c=ye(Se(a),t),u=ye(Se(o),t);let h=Se(U(a,Au(0,a.size)));i=ye(h,Se(a));let p=oc(o.shape,a.size),f=ie(Au(0,o.size),p),m=U(o,f);l=ye(Se(m),Se(o));let g=ge(i,l),A=ge(i,l),x=U(c,u);r=U(U(x,g),A);let y=hs(r,s);s=Rn(y,r,s),n=Rn(y,zt([d]),n)}return n}var jF=H({threshold_:GF});function qF(e,t,n="nearest",s="constant",r=0,a){let o=F(e,"image","transform","float32"),i=F(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return G.runKernel(pl,l,c)}var XF=H({transform_:qF});function KF(e,t,n){M(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=F(e,"a","bandPart");M(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=q(Au(0,a,1,"int32"),[-1,1]),l=Au(0,o,1,"int32"),c=ge(i,l),u=rr(xl(c,Ce(+t,"int32")),yl(c,Ce(-n,"int32"))),d=Vt([a,o],s.dtype);return q(_n(Cs(q(s,[-1,a,o])).map(h=>Rn(u,h,d))),r)}var ZF=H({bandPart_:KF});function YF(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=bn(e,e.shape[0],0).map(r=>ft(r,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(G.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=U(Se(U(n[o],a)),n[o]);a=ge(a,i)}return ye(a,Py(a,"euclidean"))}));return t?_n(n,0):n}var JF=H({gramSchmidt_:YF});function QF(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Pb(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),s=Cs(q(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[c,u]=Pb(l,t);r.push(c),a.push(u)});let o=q(_n(r,0),e.shape),i=q(_n(a,0),e.shape);return[o,i]}}function Pb(e,t=!1){return G.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=my(n),a=Hn(e),o=Gr([[1]],[1,1]),i=Hn(o),l=n>=s?s:n;for(let c=0;c<l;++c){let u=a,d=i,h=r;[i,a,r]=G.tidy(()=>{let p=Pe(a,[c,c],[n-c,1]),f=Py(p),m=Pe(a,[c,c],[1,1]),g=Rn(hs(m,0),Gr([[-1]]),Gr([[1]])),A=ge(m,U(g,f)),x=ye(p,A);x.shape[0]===1?i=Hn(o):i=Tt([o,Pe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let y=Dt(ye(He(g,A),f)),b=Pe(a,[c,0],[n-c,s]),v=U(y,i),C=Je(i);if(c===0)a=ge(b,He(v,He(C,b)));else{let R=ge(b,He(v,He(C,b)));a=Tt([Pe(a,[0,0],[c,s]),R],0)}let S=Je(v),E=Pe(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=ge(E,He(He(E,i),S));else{let R=ge(E,He(He(E,i),S));r=Tt([Pe(r,[0,0],[n,c]),R],1)}return[i,a,r]}),ae([u,d,h])}return!t&&n>s&&(r=Pe(r,[0,0],[n,s]),a=Pe(a,[0,0],[s,s])),[r,a]})}var eP=H({qr_:QF}),Uk=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(Uk||{});function tP(e,t,n=3){let s=F(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=F(t,"weights","computeWeightedLoss"));let a=r==null?s:U(s,r);if(n===0)return a;if(n===2)return Se(a);if(n===1){if(r==null)return Mt(a);{let o=s.size/r.size,i=ye(Se(a),Se(r));return o>1?ye(i,Ce(o)):i}}if(n===3){if(r==null)return ye(Se(a),Ce(s.size));{let o=U(r,us(s.shape)),i=he(Se(gu(o,Ce(0))),"float32");return ye(Se(a),i)}}throw Error(`Unknown reduction: ${n}`)}var Qr=H({computeWeightedLoss_:tP});function nP(e,t,n,s=3){let r=F(e,"labels","absoluteDifference"),a=F(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=F(n,"weights","absoluteDifference")),Dn(r.shape,a.shape,"Error in absoluteDifference: ");let i=Zt(ge(r,a));return Qr(i,o,s)}var sP=H({absoluteDifference_:nP});function rP(e,t,n,s,r=3){let a=F(e,"labels","cosineDistance"),o=F(t,"predictions","cosineDistance"),i=null;s!=null&&(i=F(s,"weights","cosineDistance")),Dn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ce(1),c=ge(l,Se(U(a,o),n,!0));return Qr(c,i,r)}var aP=H({cosineDistance_:rP});function oP(e,t,n,s=3){let r=F(e,"labels","hingeLoss"),a=F(t,"predictions","hingeLoss"),o=null;n!=null&&(o=F(n,"weights","hingeLoss")),Dn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ce(1);r=ge(U(Ce(2),r),i);let l=Cr(ge(i,U(r,a)));return Qr(l,o,s)}var iP=H({hingeLoss_:oP});function lP(e,t,n,s=1,r=3){let a=F(e,"labels","huberLoss"),o=F(t,"predictions","huberLoss"),i=null;n!=null&&(i=F(n,"weights","huberLoss")),Dn(a.shape,o.shape,"Error in huberLoss: ");let l=Ce(s),c=Zt(ge(o,a)),u=eh(c,l),d=ge(c,u),h=ie(U(Ce(.5),pt(u)),U(l,d));return Qr(h,i,r)}var uP=H({huberLoss_:lP});function cP(e,t,n,s=1e-7,r=3){let a=F(e,"labels","logLoss"),o=F(t,"predictions","logLoss"),i=null;n!=null&&(i=F(n,"weights","logLoss")),Dn(a.shape,o.shape,"Error in logLoss: ");let l=Ce(1),c=Ce(s),u=Dt(U(a,ks(ie(o,c)))),d=U(ge(l,a),ks(ie(ge(l,o),c))),h=ge(u,d);return Qr(h,i,r)}var dP=H({logLoss_:cP});function hP(e,t,n,s=3){let r=F(e,"labels","meanSquaredError"),a=F(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=F(n,"weights","meanSquaredError")),Dn(r.shape,a.shape,"Error in meanSquaredError: ");let i=Dy(r,a);return Qr(i,o,s)}var pP=H({meanSquaredError_:hP});function fP(e,t){let n=F(e,"labels","sigmoidCrossEntropyWithLogits"),s=F(t,"logits","sigmoidCrossEntropyWithLogits");Dn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Cr(s),a=U(s,n),o=hm(ws(Dt(Zt(s))));return ie(ge(r,a),o)}function mP(e,t,n,s=0,r=3){let a=F(e,"multiClassLabels","sigmoidCrossEntropy"),o=F(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=F(n,"weights","sigmoidCrossEntropy")),Dn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Ce(s),u=Ce(1),d=Ce(.5);a=ie(U(a,ge(u,c)),U(d,c))}let l=fP(a,o);return Qr(l,i,r)}var gP=H({sigmoidCrossEntropy_:mP});function AP(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return wr((r,a,o)=>{let l=gk(a,[n],!0),c=ge(he(a,"float32"),l);o([r,c]);let u=Dt(U(c,r));return{value:Se(u,[n]),gradFunc:(p,f)=>{let[m,g]=f,A=bi(p.shape,[n]);return[U(q(p,A),ge(he(m,"float32"),ws(g))),U(q(p,A),ge(ws(g),he(m,"float32")))]}}})(e,t)}function yP(e,t,n,s=0,r=3){let a=F(e,"onehotLabels","softmaxCrossEntropy"),o=F(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=F(n,"weights","softmaxCrossEntropy")),Dn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Ce(s),u=Ce(1),d=Ce(a.shape[1]);a=ie(U(a,ge(u,c)),ye(c,d))}let l=AP(a,o);return Qr(l,i,r)}var xP=H({softmaxCrossEntropy_:yP});function bP(e,t,n,s){let r=F(e,"indices","sparseFillEmptyRows","int32"),a=F(t,"values","sparseFillEmptyRows"),o=F(n,"denseShape","sparseFillEmptyRows","int32"),i=F(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},c=G.runKernel(Bd,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var vP=H({sparseFillEmptyRows_:bP});function wP(e,t,n){let s=F(e,"inputIndices","sparseReshape","int32"),r=F(t,"inputShape","sparseReshape","int32"),a=F(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=G.runKernel(nc,o);return{outputIndices:i[0],outputShape:i[1]}}var kP=H({sparseReshape_:wP});function SP(e,t,n){let s=F(e,"data","sparseSegmentMean"),r=F(t,"indices","sparseSegmentMean","int32"),a=F(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return G.runKernel(Wd,o)}var IP=H({sparseSegmentMean_:SP});function CP(e,t,n){let s=F(e,"data","sparseSegmentSum"),r=F(t,"indices","sparseSegmentSum","int32"),a=F(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return G.runKernel(Vd,o)}var NP=H({sparseSegmentSum_:CP});function TP(e,t,n,s,r,a,o,i){let l=F(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=F(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},h=G.runKernel(Gd,d,u);return{nGrams:h[0],nGramsSplits:h[1]}}var EP=H({stringNGrams_:TP});function RP(e,t,n=!0){let s=F(e,"input","stringSplit","string"),r=F(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=G.runKernel(tm,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var _P=H({stringSplit_:RP});function $P(e,t){let n=F(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return G.runKernel(nm,r,s)}var DP=H({stringToHashBucketFast_:$P}),FP={fft:vm,ifft:wd,rfft:wm,irfft:$y},PP={hammingWindow:uF,hannWindow:zk,frame:Lk,stft:pF},Oe={flipLeftRight:AF,grayscaleToRGB:xF,resizeNearestNeighbor:UF,resizeBilinear:WF,rotateWithOffset:vF,cropAndResize:mF,nonMaxSuppression:kF,nonMaxSuppressionAsync:_F,nonMaxSuppressionWithScore:DF,nonMaxSuppressionWithScoreAsync:PF,nonMaxSuppressionPadded:MF,nonMaxSuppressionPaddedAsync:LF,threshold:jF,transform:XF},Gk={bandPart:ZF,gramSchmidt:JF,qr:eP},OP={absoluteDifference:sP,computeWeightedLoss:Qr,cosineDistance:aP,hingeLoss:iP,huberLoss:uP,logLoss:dP,meanSquaredError:pP,sigmoidCrossEntropy:gP,softmaxCrossEntropy:xP},Xc={sparseFillEmptyRows:vP,sparseReshape:kP,sparseSegmentMean:IP,sparseSegmentSum:NP},Fp={stringNGrams:EP,stringSplit:_P,stringToHashBucketFast:DP},ea=class extends Nw{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return ae(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return hk(e,t)}dispose(){this.iterations_!=null&&ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ea,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Tm=class extends ea{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=G.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:K(()=>Qe(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:K(()=>Qe(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;K(()=>{let c=ie(U(i,this.rho),U(pt(o),1-this.rho)),u=U(ye(vn(ie(l,this.epsilon)),vn(ie(i,this.epsilon))),o),d=ie(U(l,this.rho),U(pt(u),1-this.rho));i.assign(c),l.assign(d);let h=ie(U(u,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ae(this.accumulatedGrads.map(e=>e.variable)),ae(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Tm.className="Adadelta";Lo(Tm);var Em=class extends ea{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=G.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:K(()=>oc(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;K(()=>{let i=ie(o,pt(a));o.assign(i);let l=ie(U(ye(a,vn(ie(i,G.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ae(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Em.className="Adagrad";Lo(Em);var Rm=class extends ea{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],K(()=>{this.accBeta1=Ce(t).variable(),this.accBeta2=Ce(n).variable()}),s==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=ge(1,this.accBeta1),s=ge(1,this.accBeta2);t.forEach((r,a)=>{let o=G.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:K(()=>Qe(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:K(()=>Qe(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=ie(U(c,this.beta1),U(l,1-this.beta1)),h=ie(U(u,this.beta2),U(pt(l),1-this.beta2)),p=ye(d,n),f=ye(h,s);c.assign(d),u.assign(h);let m=ie(U(ye(p,ie(vn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(U(this.accBeta1,this.beta1)),this.accBeta2.assign(U(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ae(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),K(()=>{this.accBeta1.assign(Ma(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ma(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Rm.className="Adam";Lo(Rm);var _m=class extends ea{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],K(()=>{this.iteration=Ce(0).variable(),this.accBeta1=Ce(t).variable()}),s==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=ge(1,this.accBeta1),s=ye(-this.learningRate,ie(U(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=G.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Qe(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:Qe(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=ie(U(c,this.beta1),U(l,1-this.beta1)),h=U(u,this.beta2),p=Zt(l),f=Jr(h,p);c.assign(d),u.assign(f);let m=ie(U(ye(s,n),ye(d,ie(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(U(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ae(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};_m.className="Adamax";Lo(_m);var sh=class extends ea{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=G.registeredVariables[n];K(()=>{let o=ie(U(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=ln(Ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};sh.className="SGD";Lo(sh);var $m=class extends sh{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=G.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:K(()=>Qe(r).variable(!1))});let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&K(()=>{let i,l=ie(U(this.m,a),o);this.useNesterov?i=ie(U(this.c,ie(o,U(l,this.m))),r):i=ie(U(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ae(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};$m.className="Momentum";Lo($m);var Dm=class extends ea{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=G.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=G.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:K(()=>Qe(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:K(()=>Qe(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:K(()=>Qe(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;K(()=>{let c=ie(U(i,this.decay),U(pt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[s].variable,d=ie(U(u,this.decay),U(o,1-this.decay)),h=ye(U(o,this.learningRate),vn(ge(c,ie(pt(d),this.epsilon)))),p=ie(U(l,this.momentum),h);i.assign(c),u.assign(d),l.assign(p);let f=ge(r,p);r.assign(f)}else{let u=ie(U(i,this.decay),U(pt(o),1-this.decay)),d=ie(U(l,this.momentum),ye(U(o,this.learningRate),vn(ie(u,this.epsilon))));i.assign(u),l.assign(d);let h=ge(r,d);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ae(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ae(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ae(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Dm.className="RMSProp";Lo(Dm);var ma=class{static sgd(e){return new sh(e)}static momentum(e,t,n=!1){return new $m(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Dm(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Rm(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Tm(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new _m(e,t,n,s,r)}static adagrad(e,t=.1){return new Em(e,t)}},ti={sgd:ma.sgd,momentum:ma.momentum,adadelta:ma.adadelta,adagrad:ma.adagrad,rmsprop:ma.rmsprop,adamax:ma.adamax,adam:ma.adam},MP=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function Hk(){return new Promise(e=>MP(()=>e()))}var T={};Me(T,{ERF_A1:()=>XP,ERF_A2:()=>KP,ERF_A3:()=>ZP,ERF_A4:()=>YP,ERF_A5:()=>JP,ERF_P:()=>qP,PARALLELIZE_THRESHOLD:()=>By,SELU_SCALE:()=>qk,SELU_SCALEALPHA:()=>jk,applyActivation:()=>Cm,assertAndGetBroadcastShape:()=>gt,assertAxesAreInnerMostDims:()=>K_,assertParamsConsistent:()=>zP,assignToTypedArray:()=>rO,axesAreInnerMostDims:()=>yy,calculateShapes:()=>Aw,checkEinsumDimSizes:()=>cO,checkPadOnDimRoundingMode:()=>Fn,combineLocations:()=>pk,complexWithEvenIndex:()=>tO,complexWithOddIndex:()=>nO,computeConv2DInfo:()=>Zd,computeConv3DInfo:()=>Gw,computeDefaultPad:()=>oy,computeDilation2DInfo:()=>mR,computeOptimalWindowSize:()=>BP,computeOutAndReduceShapes:()=>fk,computeOutShape:()=>LP,computePool2DInfo:()=>Uw,computePool3DInfo:()=>gR,convertConv2DDataFormat:()=>Hw,decodeEinsumEquation:()=>lO,eitherStridesOrDilationsAreOne:()=>Sr,expandShapeToKeepDim:()=>bi,exponent:()=>oO,exponents:()=>aO,fromStringArrayToUint8:()=>_O,fromUint8ToStringArray:()=>RO,getAxesPermutation:()=>mk,getBroadcastDims:()=>pw,getComplexWithIndex:()=>sO,getEinsumComputePath:()=>dO,getEinsumPermutation:()=>uO,getFusedBiasGradient:()=>Im,getFusedDyActivation:()=>Sm,getImageCenter:()=>WP,getInnerMostAxes:()=>Z_,getPermuted:()=>UP,getReductionAxes:()=>jt,getReshaped:()=>VP,getReshapedPermuted:()=>GP,getSliceBeginCoords:()=>HP,getSliceSize:()=>jP,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>mO,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>gO,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>AO,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>bO,getSparseReshapeInputOutputMismatchErrorMessage:()=>wO,getSparseReshapeInputOutputMultipleErrorMessage:()=>vO,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>yO,getSparseReshapeNegativeOutputDimErrorMessage:()=>xO,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>CO,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>kO,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>SO,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>IO,getUndoAxesPermutation:()=>xy,isIdentityPermutation:()=>hO,log:()=>UT,mergeRealAndImagArrays:()=>QP,prepareAndValidate:()=>gw,prepareSplitSize:()=>fO,segment_util:()=>Xk,shouldFuse:()=>Nm,slice_util:()=>$t,splitRealAndImagArrays:()=>eO,tupleValuesAreOne:()=>Pa,upcastType:()=>En,validateInput:()=>ey,validateUpdateShape:()=>QA,warn:()=>xa});function zP(e,t){let n=e[0].length;e.forEach((r,a)=>{M(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)M(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function LP(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var By=30;function BP(e){return e<=By?e:Kp(e,Math.floor(Math.sqrt(e)))}function WP(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function VP(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function UP(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function GP(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function HP(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function jP(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var jk=1.7580993408473768,qk=1.0507009873554805,qP=.3275911,XP=.254829592,KP=-.284496736,ZP=1.421413741,YP=-1.453152027,JP=1.061405429;function QP(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function eO(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function tO(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function nO(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function sO(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function rO(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function aO(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function oO(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Xg="->",iO=/->/g,Ob=",",Mb="...";function lO(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(iO,"").length)/Xg.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Xg}").`);let[s,r]=e.split(Xg);M(s.indexOf(Mb)===-1,()=>`The ellipsis notation ("${Mb}") is not supported yet.`);let a=s.split(Ob),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let h=0;h<r.length;++h){let p=r[h];if(!a.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){let p=s[h];i.indexOf(p)===-1&&p!==Ob&&i.push(p)}let l=new Array(a.length);for(let h=0;h<o;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<a[h].length;++p)l[h].push(i.indexOf(a[h][p]))}let c=i.length,u=r.length,d=[];for(let h=u;h<c;++h)d.push(h);return{allDims:i,summedDims:d,idDims:l}}function uO(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function cO(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:M(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function dO(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=pO(t,i);for(let c of l)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function hO(e){return e.every((t,n)=>t===n)}function pO(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function fO(e,t,n=0){let s=[];if(typeof t=="number")M(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function mO(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function gO(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function AO(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function yO(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function xO(e,t){return`size ${e} must be non-negative, not ${t}`}function bO(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function vO(e,t){let n=kt(e),s=kt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function wO(e,t){let n=kt(e),s=kt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function kO(){return"segment ids must be >= 0"}function SO(){return"segment ids are not increasing"}function IO(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function CO(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Xk={};Me(Xk,{collectGatherOpShapeInfo:()=>EO,computeOutShape:()=>TO,segOpComputeOptimalWindowSize:()=>NO});function NO(e,t){let n=!1,s;for(e<=By?(s=e,n=!0):s=Kp(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=Kp(e,s+1);return s}function TO(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function EO(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function RO(e){try{return e.map(t=>Qp(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function _O(e){return e.map(t=>qd(t))}var Ws={};Me(Ws,{nonMaxSuppressionV3Impl:()=>Bk,nonMaxSuppressionV4Impl:()=>Wk,nonMaxSuppressionV5Impl:()=>Vk,whereImpl:()=>Rk});var Kk={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,nh(he(n,"float32"),-1))}}},$O={kernelName:_u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=pt(he(n,"float32")),r=vn(ge(Ce(1),s));return Dt(ye(e,r))}}}},DO={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=vn(ge(pt(he(n,"float32")),1));return ye(e,s)}}}},FO={kernelName:Kr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=e,l=jt(n.shape,r);return l.length>0&&(i=Se(i,l)),q(i,n.shape)},b:()=>{let i=e,l=jt(s.shape,r);return l.length>0&&(i=Se(i,l)),q(i,s.shape)}}}},PO={kernelName:Ha,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},OO={kernelName:ja,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Qe(n)}}},MO={kernelName:Pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Qe(n)}}},zO={kernelName:Ou,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,vn(ge(Ce(1),pt(he(n,"float32")))))}}},LO={kernelName:Mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=vn(ie(Ce(1),pt(he(n,"float32"))));return ye(e,s)}}}},BO={kernelName:Bu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=ie(pt(n),pt(s)),l=U(e,ye(s,i)),c=jt(n.shape,r);return c.length>0&&(l=Se(l,c)),q(l,n.shape)},b:()=>{let i=ie(pt(n),pt(s)),l=Dt(U(e,ye(n,i))),c=jt(s.shape,r);return c.length>0&&(l=Se(l,c)),q(l,s.shape)}}}},WO={kernelName:zu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,ie(pt(he(n,"float32")),1))}}},VO={kernelName:Lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,ge(Ce(1),pt(he(n,"float32"))))}}};function UO(e,t,n,s,r,a){let o=F(e,"dy","avgPool3dGrad"),i=F(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Fn("avgPool3dGrad",r,a);let d={dy:l,input:c},h={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=G.runKernel(Ff,d,h);return u?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var GO=H({avgPool3dGrad_:UO}),HO={kernelName:Ed,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>GO(e,s,r,a,o,i)}}};function jO(e,t,n,s,r){let a=F(e,"dy","avgPoolGrad"),o=F(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:s,pad:r},h=G.runKernel(Df,u,d);return c?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var qO=H({avgPoolGrad_:jO}),XO={kernelName:qa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>qO(e,s,r,a,o)}}},KO={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>He(e,r,!1,!0),b:()=>He(s,e,!0,!1)}:!a&&o?{a:()=>He(e,r,!1,!1),b:()=>He(e,s,!0,!1)}:a&&!o?{a:()=>He(r,e,!1,!0),b:()=>He(s,e,!1,!1)}:{a:()=>He(r,e,!0,!0),b:()=>He(e,s,!0,!0)}}},ZO={kernelName:$i,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>ym(e,s,r)}}},YO={kernelName:O3,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Se(e,i,!0)}}},JO={kernelName:Ka,gradFunc:e=>({x:()=>e.clone()})},QO={kernelName:Za,gradFunc:e=>({x:()=>Qe(e)})},eM={kernelName:Zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Rn(rr(yl(s,r),xl(s,a)),e,Qe(e))}}},tM={kernelName:_d,inputsToSave:["x"],gradFunc:Kk.gradFunc},nM={kernelName:Di,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=Bs(r,t[0].shape)[0],o=s.map(l=>l[a]);return bn(e,o,a).map(l=>()=>l)}},sM={kernelName:Ya,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(Pa(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>cy(s.shape,e,r,o,i,l),filter:()=>zy(s,e,r.shape,o,i,l)}}},rM={kernelName:Ja,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Oa(e,r,a,o,i,1,l),filter:()=>zy(e,s,r.shape,a,o,i,l)}}};function aM(e,t,n,s,r){let a=e;e.rank===4&&(a=q(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return G.runKernel(zf,i,l)}var oM=H({conv3DBackpropFilter_:aM}),iM={kernelName:$d,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;M(Pa(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>ek(o.shape,e,i,r,a),filter:()=>oM(o,e,i.shape,r,a)}}},lM={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(Dt(Ey(he(n,"float32"))),e)}}},uM={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(Ry(he(n,"float32")),e)}}},cM={kernelName:Fi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=mk([r],s.rank),l=fy(e,r,a,!o);return i!=null&&(l=Je(l,i)),l}}}},dM={kernelName:to,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s??[1,1];M(Pa(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),M(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),M(Sr(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Fn("depthwiseConv2d",a,o),{x:()=>Mk(l.shape,e,c,r,a,i,o),filter:()=>Ok(l,e,c.shape,r,a,i,o)}}},hM={kernelName:Dd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>G.runKernel(Zp,a,n),filter:()=>G.runKernel(Yp,o,n)}}},pM={kernelName:so,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>G.runKernel(Gf,s)}}},fM={kernelName:Wu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=U(ws(Dt(pt(n))),2/Math.sqrt(Math.PI));return{x:()=>U(e,s)}}},mM={kernelName:ro,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n)}}},gM={kernelName:zi,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>q(e,n.shape)}}},AM={kernelName:Li,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,ws(n))}}},yM={kernelName:ao,gradFunc:e=>({x:()=>Qe(e)})},xM={kernelName:oo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=ye(e,he(s,"float32")),l=jt(n.shape,r);return l.length>0?q(Se(i,l),n.shape):i},b:()=>{let i=U(e,he(n,"float32")),l=jt(s.shape,r);l.length>0&&(i=q(Se(i,l),s.shape));let c=pt(s);return Dt(ye(i,he(c,"float32")))}}}},bM={kernelName:io,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i??Ce(1),c=jt(a.shape,r.shape),u=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}let d=ge(r,a),h=U(e,l),p=Ny(ie(o,Ce(s))),f=U(U(U(p,p),p),Ce(-.5));return{x:()=>a.rank===1?q(U(U(e,zs(q(p,[1,1,1,a.shape[0]]),u)),l),r.shape):q(U(U(e,p),l),r.shape),mean:()=>{let b=U(U(p,Ce(-1)),h);return a.rank===1&&(b=Se(b,c)),q(b,a.shape)},variance:()=>{let b=U(U(f,d),h);return a.rank===1&&(b=Se(b,c)),q(b,a.shape)},scale:()=>{let b=U(d,p),v=U(e,b);return a.rank===1&&(v=Se(v,c)),q(v,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=Se(b,c)),q(b,a.shape)}}}},vM={kernelName:Wi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=Bs(a,s.shape)[0];return{x:()=>{let l=s.shape,c=r.size,u=l.slice(0,o),d=u.length,h=l.slice(a,l.length).slice(1),p=h.length,f=zb(0,d),m=zb(d+1,d+1+p),g=Lb([u,[c],h]),A=q(e,g),x=q(r,[c]),y=Lb([[d],f,m]),b=Je(A,y),v=Tk(b,x,s.shape[o]),C=xy(y);return v=Je(v,C),v},indices:()=>r}}};function zb(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Lb(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var wM={kernelName:lo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>Qe(n),b:()=>Qe(s)}}},kM={kernelName:uo,gradFunc:e=>({x:()=>he(e,"float32")})},SM={kernelName:Uu,gradFunc:e=>({x:()=>Qe(e)})},IM={kernelName:Gu,gradFunc:e=>({x:()=>Qe(e)})},CM={kernelName:Hu,gradFunc:e=>({x:()=>Qe(e)})},NM={kernelName:co,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=hs(s,0);return{x:()=>Rn(a,e,U(e,r))}}},TM={kernelName:ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,ie(n,1))}}},EM={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,he(n,"float32"))}}},RM={kernelName:M3,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let o=ws(s);return ge(e,U(Se(e,r,!0),o))}}}};function _M(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return G.runKernel(Xf,i,l)}var $M=H({localResponseNormalizationBackprop_:_M}),DM={kernelName:Md,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>$M(s,r,e,a,o,i,l)}}};function Zk(e,t,n,s){return t.rank<n.rank&&(t=q(t,bi(t.shape,s))),e.rank<n.rank&&(e=q(e,bi(e.shape,s))),{x:()=>U(e,he(vs(n,t),e.dtype))}}var Bb={kernelName:po,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=Bs(r,a.shape),l=Zk(e,o,a,i);return{x:()=>l.x()}}},FM={kernelName:fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>U(e,he(yl(n,s),"float32")),b:()=>U(e,he(gy(n,s),"float32"))}}};function PM(e,t,n,s,r,a,o){let i=F(e,"dy","maxPool3dGrad"),l=F(t,"input","maxPool3dGrad"),c=F(n,"output","maxPool3dGrad"),u=i,d=l,h=c,p=!1;l.rank===4&&(p=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=q(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),M(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Fn("maxPool3dGrad",a,o);let f={dy:u,input:d,output:h},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=G.runKernel(Zf,f,m);return p?q(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var OM=H({maxPool3dGrad_:PM}),MM={kernelName:zd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>OM(e,s,r,a,o,i,l)}}};function zM(e,t,n,s,r,a,o){let i=F(e,"dy","maxPoolGrad"),l=F(t,"input","maxPoolGrad"),c=F(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Fn("maxPoolGrad",a,o);let u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return G.runKernel(Kf,u,d)}var LM=H({maxPoolGrad_:zM}),BM={kernelName:mo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>LM(e,s,r,a,o,i)}}},WM={kernelName:go,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=Bs(r,s.shape),i=fk(s.shape,a)[1],l=kt(i);return{x:()=>{let u=s.shape.slice();a.forEach(p=>{u[p]=1});let d=q(e,u);return ye(U(d,us(s.shape,"float32")),l)}}}},VM={kernelName:Ao,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=Bs(r,a.shape),l=Zk(e,o,a,i);return{x:()=>l.x()}}},UM={kernelName:yo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>U(e,he(xl(n,s),"float32")),b:()=>U(e,he(hs(n,s),"float32"))}}},GM={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Pe(e,a,s.shape)}}},HM={kernelName:Xu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=jt(n.shape,r);return i.length>0?q(Se(e,i),n.shape):e},b:()=>{let i=U(e,Dt(Qd(ye(n,s)))),l=jt(s.shape,r);return l.length>0?q(Se(i,l),s.shape):i}}}},jM={kernelName:bo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=U(e,he(s,"float32")),l=jt(n.shape,r);return l.length>0?q(Se(i,l),n.shape):i},b:()=>{let i=U(e,he(n,"float32")),l=jt(s.shape,r);return l.length>0?q(Se(i,l),s.shape):i}}}},qM={kernelName:qi,gradFunc:e=>({x:()=>Dt(e)})},XM={kernelName:Ji,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Vt(n.shape,"float32")}}},KM={kernelName:Yi,gradFunc:e=>({x:()=>Qe(e)})},ZM={kernelName:Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Cs(e,s).map(a=>()=>a)}},Wb={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Pe(e,a,s.shape)}}},YM={kernelName:wo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=gt(a.shape,o.shape);return{a:()=>{let u=he(o,"float32"),d=U(e,U(u,Ma(a,ge(u,Ce(1))))),h=jt(a.shape,i);return h.length>0&&(d=Se(d,h)),q(d,a.shape)},b:()=>{let u=hs(a,0),d=Rn(u,ks(a),Qe(a)),h=U(e,U(r,d)),p=jt(o.shape,i);return p.length>0&&(h=Se(h,p)),q(h,o.shape)}}}},JM={kernelName:ko,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=hs(n,0);return{x:()=>Rn(r,e,U(e,s)),alpha:()=>{let a=Rn(r,Qe(e),U(e,n)),o=jt(s.shape,e.shape);return o.length>0&&(a=Se(a,o)),q(a,s.shape)}}}},QM={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=ye(e,he(s,"float32")),l=jt(n.shape,r);return l.length>0?q(Se(i,l),n.shape):i},b:()=>{let i=U(e,he(n,"float32")),l=jt(s.shape,r);l.length>0&&(i=q(Se(i,l),s.shape));let c=pt(s);return Dt(ye(i,he(c,"float32")))}}}},ez={kernelName:Yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,Dt(pt(n)))}}},tz={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=U(xl(n,6),nh(n));return{x:()=>U(e,he(s,"float32"))}}},nz={kernelName:So,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,he(nh(n),"float32"))}}},sz={kernelName:tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>q(e,n.shape)}}},rz={kernelName:Io,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>G.runKernel(em,r,n)}}},az={kernelName:Ju,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>G.runKernel(Qf,r,n)}}},oz={kernelName:nl,gradFunc:(e,t,n)=>{let{dims:s}=n,r=Bs(s,e.shape);return{x:()=>Is(e,r)}}},iz={kernelName:sl,gradFunc:e=>({x:()=>Qe(e)})},lz={kernelName:No,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Dt(ye(e,U(Ma(n,1.5),2)))}}},uz={kernelName:al,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>he(Qe(n),"float32"),t:()=>U(e,he(n,e.dtype)),e:()=>U(e,he(fm(n),e.dtype))}}},cz={kernelName:Qu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=hs(n,Ce(0)),r=Ce(jk),a=Ce(qk),o=U(e,a),i=U(U(e,r),ws(he(n,"float32")));return Rn(s,o,i)}}}},dz={kernelName:Eo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,U(n,ge(Ce(1),n)))}}},hz={kernelName:ec,gradFunc:e=>({x:()=>Qe(e)})},pz={kernelName:To,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(um(he(n,"float32")),e)}}},fz={kernelName:il,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(py(he(n,"float32")),e)}}},mz={kernelName:ol,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=Cw(s,r,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>Ir(e,c)}}},gz={kernelName:$o,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=U(e,s);return{logits:()=>ge(o,U(Se(o,[r],a),s))}}},Az={kernelName:tc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,bs(n))}}},Vb={kernelName:ll,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>im(e,s,r)}}},Ub={kernelName:ul,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>Tt(e,s)}}},yz={kernelName:Ro,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,U(vn(he(n,"float32")),2))}}},xz={kernelName:sc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,U(he(n,"float32"),2))}}},bz={kernelName:Do,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ce(2);return{a:()=>U(e,U(r,ge(n,s))),b:()=>U(e,U(r,ge(s,n)))}}},vz={kernelName:Mo,gradFunc:e=>({x:()=>Qe(e)})},wz={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=gt(n.shape,s.shape);return{a:()=>{let i=e,l=jt(n.shape,r);return l.length>0&&(i=Se(i,l)),q(i,n.shape)},b:()=>{let i=e,l=jt(s.shape,r);return l.length>0&&(i=Se(i,l)),q(Dt(i),s.shape)}}}},kz={kernelName:_o,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;Bs(a,s.shape).forEach(c=>{r[c]=1});let i=q(e,r),l=U(i,us(s.shape,"float32"));return{x:()=>l}}},Sz={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,pt(um(n)))}}},Iz={kernelName:Po,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(ge(Ce(1),pt(n)),e)}}},Cz={kernelName:Yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=Qe(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ie(o,Pe(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ie(o,Pe(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=ie(o,Pe(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=ie(o,Pe(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},Nz={kernelName:Oo,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=xy(r);return{x:()=>Je(e,a)}}},Tz={kernelName:fl,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>_n(e,r)}}},Ez={kernelName:Hd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Rz(e,n)}}};function Rz(e,t){let n=Jr(t,Qe(t)),s=mu(e,n),r=yl(t,Ce(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=on(r,i+1);r=rr(r,us(s.shape,"bool"));let o=Qe(s);return Rn(r,s,o)}var _z={kernelName:ml,gradFunc:e=>({x:()=>Qe(e)})},$z=[Kk,$O,DO,FO,PO,OO,MO,zO,LO,BO,WO,VO,HO,XO,KO,ZO,YO,JO,QO,eM,tM,nM,rM,sM,iM,lM,uM,cM,dM,hM,QM,pM,fM,mM,gM,AM,xM,yM,bM,vM,wM,kM,SM,IM,CM,NM,TM,EM,RM,DM,Bb,Bb,FM,MM,BM,WM,VM,UM,GM,HM,jM,qM,XM,KM,ZM,Wb,Wb,YM,JM,ez,tz,nz,sz,rz,az,oz,iz,lz,uz,cz,dz,hz,pz,fz,mz,gz,Az,Vb,Vb,Ub,Ub,yz,bz,xz,vz,wz,kz,Sz,Iz,Cz,Nz,Tz,Ez,_z];for(let e of $z)z3(e);var Yk={};Me(Yk,{maxNorm:()=>Oz,minMaxNorm:()=>Lz,nonNeg:()=>zz,unitNorm:()=>Mz});var Kg;function Jt(){return Kg==null&&(Kg=Fa().epsilon()),Kg}function ar(){return"channelsLast"}var Or=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Or.prototype)}},Ys=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ys.prototype)}},X=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,X.prototype)}},Be=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Be.prototype)}},Jk=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Jk.prototype)}};function vi(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function mr(e,t){if(!e)throw new Jk(t)}function Gb(e,t){let n=0;for(let s of e)s===t&&n++;return n}function Gn(e){return e.length===1?e[0]:e}function wt(e){return Array.isArray(e)?e:[e]}function Mr(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ri(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var $s={};function Wy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function K1(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>K1(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:K1(s))}}}function rh(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in $s)o=$s[a];else if(o=t[a],o==null)throw new X(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in $s?[i,l]=$s.className:o in t&&([i,l]=t[o]),i==null)throw new X(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let p of Object.keys($s))c[p]=$s[p];for(let p of Object.keys(n))c[p]=n[p];let u=a.config;u.customObjects=c;let d={...$s};for(let p of Object.keys(n))$s[p]=n[p];K1(a.config);let h=l(i,a.config,n,r);return $s={...d},h}else{let c={...$s};for(let d of Object.keys(n))$s[d]=n[d];let u=new i(a.config);return $s={...c},u}}}function Dz(e,t){return e<t?-1:e>t?1:0}function ip(e,t){return-1*Dz(e,t)}function Ia(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function Fz(e){if(e==null)throw new X(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function bl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new X(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Vy(e,t,n=0,s=1/0){return mr(n>=0),mr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function un(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>un(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Qk(e)}.`)}function Qk(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Qk(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Pz(e,t,n){let s=n!=null?n():w.now(),r;return(...o)=>{let i=n!=null?n():w.now();return i-s<t||(s=i,r=e(...o)),r}}function eS(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Uy(e,t){return K(()=>vn(Se(U(e,e),t,!0)))}var ah=class extends le.Serializable{getConfig(){return{}}},Gy=class extends ah{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=Uy(e,this.axis),n=cs(t,0,this.maxValue);return U(e,ye(n,ie(Jt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Gy.className="MaxNorm";le.registerClass(Gy);var Hy=class extends ah{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>ye(e,ie(Jt(),Uy(e,this.axis))))}getConfig(){return{axis:this.axis}}};Hy.className="UnitNorm";le.registerClass(Hy);var jy=class extends ah{apply(e){return Cr(e)}};jy.className="NonNeg";le.registerClass(jy);var qy=class extends ah{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=Uy(e,this.axis),n=ie(U(this.rate,cs(t,this.minValue,this.maxValue)),U(1-this.rate,t));return U(e,ye(n,ie(Jt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};qy.className="MinMaxNorm";le.registerClass(qy);var Hb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function en(e){return Wy(e)}function jb(e,t={}){return rh(e,le.SerializationMap.getMap().classNameMap,t,"constraint")}function tn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Hb?Hb[e]:e,config:{}};return jb(n)}else return e instanceof ah?e:jb(e)}function Oz(e){return new Gy(e)}function Mz(e){return new Hy(e)}function zz(){return new jy}function Lz(e){return new qy(e)}var tS={};Me(tS,{constant:()=>lL,glorotNormal:()=>mL,glorotUniform:()=>fL,heNormal:()=>gL,heUniform:()=>AL,identity:()=>hL,leCunNormal:()=>yL,leCunUniform:()=>xL,ones:()=>iL,orthogonal:()=>bL,randomNormal:()=>cL,randomUniform:()=>uL,truncatedNormal:()=>dL,varianceScaling:()=>pL,zeros:()=>oL});var Bz=["channelsFirst","channelsLast"],Wz=["nearest","bilinear"],Vz=["valid","same","causal"],Uz=["max","avg"],Gz=["sum","mul","concat","ave"],Wl=new Map;function Ut(e){bl(Bz,"DataFormat",e)}function Hz(e){bl(Wz,"InterpolationFormat",e)}function Ts(e){bl(Vz,"PaddingMode",e)}function nS(e){bl(Uz,"PoolMode",e)}var ld=[],qb="/";function pi(e,t){ld.push(e);try{let n=t();return ld.pop(),n}catch(n){throw ld.pop(),n}}function jz(){return ld.length===0?"":ld.join(qb)+qb}function sS(e){if(!aS(e))throw new Error("Not a valid tensor name: '"+e+"'");return jz()+e}function rS(e){if(!aS(e))throw new Error("Not a valid tensor name: '"+e+"'");Wl.has(e)||Wl.set(e,0);let t=Wl.get(e);if(Wl.set(e,Wl.get(e)+1),t>0){let n=`${e}_${t}`;return Wl.set(n,1),n}else return e}var qz=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function aS(e){return!!e.match(qz)}function Xz(e){return e===parseInt(e.toString(),10)}function Ca(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function bu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function La(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function or(e,t){if(t<e)throw new X(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Fm(e,t){return he(e,t)}function oh(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),q(e,n)}function Kz(e,t){return K(()=>{if(e.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=oh(e,1);return Z1(n,[1,t,1])})}function Zz(e){let t=[Ca(e.shape)];return q(e,t)}function Yz(e){if(e.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ca(e.shape,1)];return q(e,t)}function fi(e,t,n){return K(()=>{switch(e.rank){case 1:return bm(e,t,n);case 2:return _y(e,[t,0],[n,e.shape[1]]);case 3:return yu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return xu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Pe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Pe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Zg(e,t,n){return K(()=>{switch(e.rank){case 1:return bm(e,t,n);case 2:return _y(e,[0,t],[e.shape[0],n]);case 3:return yu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return xu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function lp(e,t,n,s){return K(()=>{switch(e.rank){case 1:return bm(e,t,n);case 2:switch(s){case 1:return fi(e,t,n);case 2:return Zg(e,t,n);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return fi(e,t,n);case 2:return yu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Zg(e,t,n);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return fi(e,t,n);case 2:return xu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return xu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Zg(e,t,n);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Xy(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Tt(e,t)}function Xb(e,t){switch(e.rank){case 1:return Yw([e,t]);case 2:return lm([e,t],0);case 3:return Jw([e,t],0);case 4:return Qw([e,t],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Z1(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new X(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return zs(e,t)}function Pm(e,t=0,n=1,s,r){return bk(e,t,n,s,r)}function xr(e,t,n,s){if(e.rank<2||t.rank<2)throw new Be(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Be(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return za.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Y1(e.rank,s,ar()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=q(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=q(Je(t,u),[l,-1]);let d=[...r,...c],h=!1,p=!1;return q(za.matMul({a:e,b:t,transposeA:h,transposeB:p,bias:s?Y1(e.rank,s,ar()):null,activation:n}),d)}}function oS(e,t,n){return K(()=>(Array.isArray(t)?t=zt(t,"int32"):t=he(t,"int32"),mu(e,t,n)))}function ih(e){return U(e,e)}function Y1(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new X(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?q(t,[1,s[0],1,1,1]):q(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?q(t,[1,1,1,1,s[0]]):q(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?q(t,[1,s[0],1,1]):q(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?q(t,[1,1,1,s[0]]):q(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?q(t,[1,s[0],1]):q(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?q(t,[1,1,s[0]]):q(t,[1].concat(s))}else if(e<3)return t;throw new X(`Unsupported input rank by biasAdd: ${t.rank}`)}function lr(e,t,n){return K(()=>(n==null&&(n=ar()),Ut(n),ie(e,Y1(e.rank,t,n))))}function Jz(e,t=1){if(t!==1)throw new Be(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Jd(e)}function Qz(e){return K(()=>ye(e,ie(Zt(e),1)))}function iS(e,t,n,s){return K(()=>Fk(e,t,n,s))}function eL(e){return K(()=>{let t=ie(.5,U(.2,e));return cs(t,0,1)})}function lh(e,t,n=!1){return n?e():t()}var tL=["fanIn","fanOut","fanAvg"],nL=["normal","uniform","truncatedNormal"];function sL(e){bl(tL,"FanMode",e)}function rL(e){bl(nL,"Distribution",e)}var Vs=class extends le.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Ky=class extends Vs{apply(e,t){return Vt(e,t)}};Ky.className="Zeros";le.registerClass(Ky);var Om=class extends Vs{apply(e,t){return us(e,t)}};Om.className="Ones";le.registerClass(Om);var Zy=class extends Vs{constructor(e){super();if(typeof e!="object")throw new X(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new X(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return K(()=>U(Ce(this.value),us(e,t)))}getConfig(){return{value:this.value}}};Zy.className="Constant";le.registerClass(Zy);var Yy=class extends Vs{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return lc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Yy.className="RandomUniform";le.registerClass(Yy);var Jy=class extends Vs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`randomNormal does not support dType ${t}.`);return Pm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Jy.className="RandomNormal";le.registerClass(Jy);var Qy=class extends Vs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`truncatedNormal does not support dType ${t}.`);return km(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Qy.className="TruncatedNormal";le.registerClass(Qy);var e2=class extends Vs{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return K(()=>{if(e.length!==2||e[0]!==e[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return U(this.gain,my(e[0]))})}getConfig(){return{gain:this.gain}}};e2.className="Identity";le.registerClass(e2);function aL(e,t="channelsLast"){let n,s;if(Ut(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Ca(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Ca(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Ca(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var qn=class extends Vs{constructor(e){super();if(e.scale<0)throw new X(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,sL(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,rL(this.distribution),this.seed=e.seed}apply(e,t){let n=aL(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`${this.getClassName()} does not support dType ${t}.`);return km(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return lc(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};qn.className="VarianceScaling";le.registerClass(qn);var Mm=class extends qn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return qn.className}};Mm.className="GlorotUniform";le.registerClass(Mm);var zm=class extends qn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return qn.className}};zm.className="GlorotNormal";le.registerClass(zm);var Lm=class extends qn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return qn.className}};Lm.className="HeNormal";le.registerClass(Lm);var Bm=class extends qn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return qn.className}};Bm.className="HeUniform";le.registerClass(Bm);var Wm=class extends qn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return qn.className}};Wm.className="LeCunNormal";le.registerClass(Wm);var Vm=class extends qn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return qn.className}};Vm.className="LeCunNormal";le.registerClass(Vm);var t2=class extends Vs{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Be("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return K(()=>{if(e.length<2)throw new Be("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Pm(n,0,1,"float32"),r=Gk.gramSchmidt(s);return e[0]>e[1]&&(r=Je(r)),U(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};t2.className="Orthogonal";le.registerClass(t2);var Kb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Zb(e,t={}){return rh(e,le.SerializationMap.getMap().classNameMap,t,"initializer")}function _t(e){return Wy(e)}function Nt(e){if(typeof e=="string"){let t=e in Kb?Kb[e]:e;if(t==="GlorotNormal")return new zm;if(t==="GlorotUniform")return new Mm;if(t==="HeNormal")return new Lm;if(t==="HeUniform")return new Bm;if(t==="LeCunNormal")return new Wm;if(t==="LeCunUniform")return new Vm;{let n={};return n.className=t,n.config={},Zb(n)}}else return e instanceof Vs?e:Zb(e)}function oL(){return new Ky}function iL(){return new Om}function lL(e){return new Zy(e)}function uL(e){return new Yy(e)}function cL(e){return new Jy(e)}function dL(e){return new Qy(e)}function hL(e){return new e2(e)}function pL(e){return new qn(e)}function fL(e){return new Mm(e)}function mL(e){return new zm(e)}function gL(e){return new Lm(e)}function AL(e){return new Bm(e)}function yL(e){return new Wm(e)}function xL(e){return new Vm(e)}function bL(e){return new t2(e)}var lS={};Me(lS,{Layer:()=>et,RNN:()=>ta,RNNCell:()=>dh,activation:()=>tW,add:()=>cW,alphaDropout:()=>qW,average:()=>dW,averagePooling1d:()=>dx,averagePooling2d:()=>hx,averagePooling3d:()=>px,avgPool1d:()=>bW,avgPool2d:()=>wW,avgPool3d:()=>SW,avgPooling1d:()=>vW,avgPooling2d:()=>kW,avgPooling3d:()=>IW,batchNormalization:()=>AW,bidirectional:()=>LW,concatenate:()=>hW,conv1d:()=>jB,conv2d:()=>qB,conv2dTranspose:()=>XB,conv3d:()=>KB,conv3dTranspose:()=>ZB,convLstm2d:()=>PW,convLstm2dCell:()=>OW,cropping2D:()=>JB,dense:()=>nW,depthwiseConv2d:()=>eW,dot:()=>gW,dropout:()=>sW,elu:()=>BB,embedding:()=>uW,flatten:()=>aW,gaussianDropout:()=>jW,gaussianNoise:()=>HW,globalAveragePooling1d:()=>CW,globalAveragePooling2d:()=>NW,globalMaxPool1d:()=>WW,globalMaxPool2d:()=>VW,globalMaxPooling1d:()=>i7,globalMaxPooling2d:()=>l7,gru:()=>EW,gruCell:()=>RW,input:()=>RS,inputLayer:()=>LB,layerNormalization:()=>yW,leakyReLU:()=>VB,lstm:()=>_W,lstmCell:()=>$W,masking:()=>XW,maxPool1d:()=>UW,maxPool2d:()=>GW,maxPooling1d:()=>u7,maxPooling2d:()=>c7,maxPooling3d:()=>TW,maximum:()=>pW,minimum:()=>fW,multiply:()=>mW,permute:()=>lW,prelu:()=>UB,reLU:()=>WB,repeatVector:()=>oW,reshape:()=>iW,rnn:()=>MW,separableConv2d:()=>YB,simpleRNN:()=>DW,simpleRNNCell:()=>FW,softmax:()=>GB,spatialDropout1d:()=>rW,stackedRNNCells:()=>zW,thresholdedReLU:()=>HB,timeDistributed:()=>BW,upSampling2d:()=>QB,zeroPadding2d:()=>xW});var vL=0;function uS(){return vL++}var up={};function Um(e=""){return e in up||(up[e]=0),up[e]+=1,e+up[e].toString()}function J1(e){return Array.isArray(e)&&Array.isArray(e[0])}function of(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function We(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new X(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ut(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new X(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function lf(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var Yb="Variable",cS=class{constructor(e,t="float32",n=Yb,s=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=uS(),n=n??Yb,this.originalName=sS(n),this.name=rS(this.originalName),this.trainable_=s,this.constraint=r,this.val=Ek(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),wL(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function wL(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Q1(e){return e.map(t=>t.read())}function n2(e){e.forEach(t=>{t[0].write(t[1])})}var Ht=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Js=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=uS(),a!=null&&(this.originalName=sS(a),this.name=rS(this.originalName)),this.rank=t.length}},kL=0,Gm=class{constructor(e,t){this.callArgs=t,this.id=kL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},SL=0,et=class extends le.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=SL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Mr(n)+"_"+Um(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Ys(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new X(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Gn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Gn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Or(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Or(`Layer ${this.name} is not connected, no input to return.`);return Gn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Or(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Or(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Gn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=wt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=wt(this.inputSpec);if(e.length!==t.length)throw new X(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new X(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),c=r.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=wt(e),s=!0;for(let a of n)if(!(a instanceof Js)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Js){r=!1;break}if(s===r)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return pi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of wt(e))a.push(o.shape);this.build(Gn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=wt(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=Gn(i),this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=IL(e),o=this.computeOutputShape(a),i,l=CL(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new Js(l,c,this,wt(e),t,this.name,u)):i=new Js(l,o,this,wt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Or(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Or(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ys(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return lf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Q1(e?this.trainableWeights:this.weights)}setWeights(e){K(()=>{let t=this.weights;if(t.length!==e.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=Q1(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!w.arraysEqual(a.shape,i.shape))throw new X(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}n2(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new X(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Nt("zeros"));let l=s.apply(t,n),c=new cS(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=wt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=wt(e);t=wt(t),n=wt(n),s=wt(s),r=of(r),a=of(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new Gm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function IL(e){e=wt(e);let t=[];for(let n of e)t.push(n.shape);return Gn(t)}function CL(e){return"float32"}function dS(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],c=dS(o,i,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var cc=class extends et{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Um("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Js(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Gm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};cc.className="InputLayer";le.registerClass(cc);function hS(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new cc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function ga(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];ae(s)}}function pS(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var NL=125,vu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},fS=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},TL=class extends vu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=K(()=>ie(this.totals[s],U(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:K(()=>{let s=U(ye(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),ln(t[n])}))}},mS=class extends vu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},gS=class extends vu{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Hk,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=NL),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=Pz(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await ga(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ga(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ga(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ga(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ga(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ga(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ga(e),await this.trainEnd(e))}};function AS(e,t){return e==null&&(e={}),e instanceof vu?[e]:Array.isArray(e)&&e[0]instanceof vu?e:wt(e).map(s=>new gS(s,t))}var pr=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),pr.checkForDuplicate(t),pr.constructors[e]==null&&(pr.constructors[e]=[]),pr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in pr.constructors)pr.constructors[+t].forEach(s=>{if(s===e)throw new X("Duplicate callback constructor.")})}static clear(){pr.constructors={}}static createCallbacks(e){let t=[];for(let n in pr.constructors){let s=+n;e>=s&&t.push(...pr.constructors[s])}return t.map(n=>new n)}},s2=pr;s2.constructors={};function yS(e,t,n,s,r,a,o,i,l){let c=new mS,u=[new TL,...s2.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new fS(u);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function er(e,t={},n=!1){return rh(e,le.SerializationMap.getMap().classNameMap,t,"layer",n)}function uf(e,t){return K(()=>{e.dtype!=="float32"&&(e=he(e,"float32"));let n=Se(ih(e),t,!0),s=oc(n.shape,Jt()),r=vn(Jr(n,s));return ye(e,r)})}function vl(e,t){return K(()=>Mt(ih(ge(t,e)),-1))}function Hm(e,t){return K(()=>Mt(Zt(ge(t,e)),-1))}function dc(e,t){return K(()=>{let n=ge(e,t),s=cs(Zt(e),Jt(),Number.MAX_VALUE),r=Zt(ye(n,s));return U(100,Mt(r,-1))})}function EL(e,t){return K(()=>{let n=cs(t,Jt(),Number.MAX_VALUE),s=ks(ie(1,n)),r=cs(e,Jt(),Number.MAX_VALUE),a=ks(ie(1,r));return Mt(ih(ge(s,a)),-1)})}function RL(e,t){return K(()=>{let n=Jr(0,ge(1,U(e,t)));return Mt(ih(n),-1)})}function _L(e,t){return K(()=>{let n=Jr(0,ge(1,U(e,t)));return Mt(n,-1)})}function $L(e,t){return K(()=>{let n=Se(U(e,t),-1),s=Tn(U(ge(1,e),t),-1);return Jr(0,ie(1,ge(s,n)))})}function DL(e,t){return K(()=>{let n=Math.log(2),s=ge(t,e),r=ge(ie(s,ic(U(-2,s))),n);return Mt(r,-1)})}function kd(e,t,n=!1){return K(()=>{if(n)t=th(t);else{let s=Se(t,t.shape.length-1,!0);t=ye(t,s)}return t=cs(t,Jt(),1-Jt()),Dt(Se(U(he(e,"float32"),ks(t)),t.shape.length-1))})}function cf(e,t,n=!1){return K(()=>{let s=he(Qd(Zz(e)),"int32");t=cs(t,Jt(),1-Jt());let r=t.shape,a=q(bd(s,r[r.length-1]),r);return kd(a,t,n)})}function FL(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return K(()=>{let n=Cr(t),s=Dt(Zt(t));return ie(ge(n,U(t,e)),hm(ws(s)))})}function jm(e,t){return K(()=>{let n;return n=cs(t,Jt(),1-Jt()),n=ks(ye(n,ge(1,n))),Mt(FL(e,n),-1)})}function PL(e,t){return K(()=>{let n=cs(e,Jt(),1),s=cs(t,Jt(),1);return Se(U(e,ks(ye(n,s))),-1)})}function OL(e,t){return K(()=>{let n=ks(ie(Jt(),t));return Mt(ge(t,U(e,n)),-1)})}function r2(e,t){return K(()=>{let n=uf(e,-1),s=uf(t,-1),r=U(n,s);return Dt(Se(r,-1))})}var df={meanSquaredError:vl,meanAbsoluteError:Hm,meanAbsolutePercentageError:dc,meanSquaredLogarithmicError:EL,squaredHinge:RL,hinge:_L,categoricalHinge:$L,logcosh:DL,categoricalCrossentropy:kd,sparseCategoricalCrossentropy:cf,binaryCrossentropy:jm,kullbackLeiblerDivergence:PL,poisson:OL,cosineProximity:r2};function Yg(e){if(typeof e=="string"){if(e in df)return df[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(t)}else return e}function a2(e,t){return K(()=>{let n=U(.5,Ss(t)),s=Fm(hs(t,n),e.dtype);return Mt(vs(e,s),-1)})}function o2(e,t){return K(()=>Fm(vs(jr(e,-1),jr(t,-1)),"float32"))}function xS(e,t){return K(()=>he(Se(rr(vs(e,1),vs(t,1))),"float32"))}function ML(e,t){return K(()=>he(Se(rr(vs(e,1),vs(t,0))),"float32"))}function zL(e,t){return K(()=>he(Se(rr(vs(e,0),vs(t,1))),"float32"))}function bS(e,t){return K(()=>{let n=xS(e,t),s=zL(e,t),r=ie(n,s);return he(Rn(hs(r,0),ye(n,r),0),"float32")})}function LL(e,t){return K(()=>{let n=xS(e,t),s=ML(e,t),r=ie(n,s);return he(Rn(hs(r,0),ye(n,r),0),"float32")})}function vS(e,t){return jm(e,t)}function wS(e,t){return e.rank===t.rank&&(e=ft(e,[e.rank-1])),t=jr(t,-1),t.dtype!==e.dtype&&(t=he(t,e.dtype)),he(vs(e,t),"float32")}var BL=vl,WL=vl,VL=Hm,UL=Hm,GL=dc,HL=dc,i2=kd,jL=r2,kS=cf,hf={binaryAccuracy:a2,categoricalAccuracy:o2,precision:bS,categoricalCrossentropy:i2,sparseCategoricalCrossentropy:kS,mse:BL,MSE:WL,mae:VL,MAE:UL,mape:GL,MAPE:HL,cosine:jL};function qL(e){if(typeof e=="string"&&e in hf)return hf[e];if(typeof e!="string"&&e!=null)return e;throw new X(`Unknown metric ${e}`)}function cp(e){if(mr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(df))if(df[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(hf))if(hf[n]===e){t=n;break}return t!==void 0?t:e.name}}function XL(e){let t={Adagrad:()=>ti.adagrad(.01),Adadelta:()=>ti.adadelta(1,.95,Jt()),Adam:()=>ti.adam(.001,.9,.999,Jt()),Adamax:()=>ti.adamax(.002,.9,.999,Jt(),0),RMSProp:()=>ti.rmsprop(.001,.9,0,Jt()),SGD:()=>ti.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new X(`Unknown Optimizer ${e}`)}var Jb=1*1024*1024;function Qb(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!eA(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>Jb&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Jb}.`)}}function eA(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!eA(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!eA(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function KL(e,t,n,s=console.log){let r=YL(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!r){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}s("_".repeat(t)),pf(a,n,s),s("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)r?JL(i[u],n,s):QL(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=ZL(e),c=lf(e.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function ZL(e){let t;return e.collectedTrainableWeights!=null?t=lf(e.collectedTrainableWeights):t=lf(e.trainableWeights),t}function YL(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function pf(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function JL(e,t,n){let s,r;try{r=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}let a=e.name,o=e.getClassName(),i=[`${a} (${o})`,r,s,e.countParams().toString()];pf(i,t,n)}function QL(e,t,n,s){let r,a;try{a=e.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let o=[];for(let d of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){let p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];o.push(`${p}[${f}][${m}]`)}let i=e.name,l=e.getClassName(),c=o.length===0?"":o[0],u=[`${i} (${l})`,a,r,e.countParams().toString(),c];pf(u,t,s);for(let d=1;d<o.length;++d)pf(["","","","",o[d]],t,s)}function SS(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Sd(e,t){if(e===null)return null;if(typeof e=="string")return ri(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];SS(t,r,a)?n.push(a):n.push(Sd(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=ri(s);n[a]=Sd(r,a)}}return n}}function tA(e,t){if(e==null)return null;if(typeof e=="string")return Mr(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];SS(t,r,a)?n.push(a):n.push(tA(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Mr(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=tA(r,s)}return n}}var l2="0.0.0";function eB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return he(t,e.dtype)}catch{throw new X(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var li=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof li)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=eB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new X(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Js){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Js){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ae(this.id2Mask)}},Jg={},e5={};function Kc(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,h;if(Jg[u]==null){let f=tB(o,t);d=f.sorted,h=f.recipientCounts,Jg[u]=d,e5[u]=h}d=Jg[u],h={},r||Object.assign(h,e5[u]);let p=new li(t);for(let f=0;f<d.length;++f){if(s!=null){let R=nf().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof cc)continue;let A=[],x=[],y=[],b=!1;for(let R of m.inputs){let P=p.getValue(R),$=p.getMask(R);A.push(P),x.push($),$!=null&&(b=!0),r||(h[R.name]--,h[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!P.isDisposed&&R.sourceLayer.stateful!==!0&&y.push(P))}b&&(n=n||{},n.mask=x[0]);let v=wt(g.apply(A,n)),C=null;g.supportsMasking&&(C=g.computeMask(A,x));let S=sB(m),E=Array.isArray(S)?S:[S];for(let R=0;R<E.length;++R){p.hasKey(E[R])||p.add(E[R],v[R],Array.isArray(C)?C[0]:C);let P=i.indexOf(E[R].name);P!==-1&&(l[P]=v[R])}r||ae(y)}return p.disposeMasks(),a?l:l[0]}function tB(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=t5(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=t5(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:nB(s)}}function nB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function t5(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function sB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var fr=class extends et{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let A=this.getClassName().toLowerCase();this.name=Um(A)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ia(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(A=>A.name)}`);Ia(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(A=>A.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let A of this.outputs){let x=A.sourceLayer,y=A.nodeIndex,b=A.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(b)}for(let A of this.inputs){let x=A.sourceLayer,y=A.nodeIndex,b=A.tensorIndex;mr(y===0,"input layer has >1 nodes"),mr(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let A=0;A<this.inputLayers.length;A++){let x=this.inputLayers[A];if(!(x instanceof cc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${A} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let A of this.outputLayers)this.outputNames.push(A.name);this.internalInputShapes=this.inputs.map(A=>A.shape),this.internalOutputShapes=this.outputs.map(A=>A.shape);let t={},n={},s={},r={},a={},o=[],i=(A,x,y,b,v,C)=>{(b==null||v==null||C==null)&&(b=A.sourceLayer,v=A.nodeIndex,C=A.tensorIndex);let S=b.inboundNodes[v];if(y.indexOf(S)!==-1)throw new Ys(`The tensor ${A.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(S)!==-1)return;this.containerNodes.add(fr.nodeKey(b,v)),b.id in a||(a[b.id]=Object.keys(a).length),y.indexOf(S)===-1&&y.push(S);let E=S.inboundLayers.length;for(let R=0;R<E;R++){let P=S.inputTensors[R],$=S.inboundLayers[R],_=S.nodeIndices[R],N=S.tensorIndices[R];i(P,x,y,$,_,N)}for(x.push(S);y.indexOf(S)>=0;)y.splice(y.indexOf(S),1);o.push(S)},l=[],c=[];for(let A of this.outputs)i(A,l,c);let u=o.slice().reverse();for(let A of u){n[A.id]=A,A.id in t||(t[A.id]=0);let x=t[A.id],y=s[A.outboundLayer.id]==null?0:s[A.outboundLayer.id];x=Math.max(x,y),s[A.outboundLayer.id]=x,r[A.outboundLayer.id]=A.outboundLayer,t[A.id]=x;for(let b=0;b<A.inboundLayers.length;b++){let v=A.inboundLayers[b],C=A.nodeIndices[b],S=v.inboundNodes[C],E=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(x+1,E),n[S.id]=S}}let d={};for(let A in t){let x=t[A];x in d||(d[x]=[]),d[x].push(n[A])}let h={};for(let A in s){let x=s[A];x in h||(h[x]=[]),h[x].push(r[A])}let p=Object.keys(h).map(A=>parseInt(A,10)).sort(ip);this.layers=[];for(let A of p){let x=h[A];x.sort((y,b)=>{let v=a[y.id],C=a[b.id];return v<C?-1:v>C?1:0});for(let y of x)y instanceof fr&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=h,p=Object.keys(d).map(A=>parseInt(A,10)).sort(ip);let f=this.inputs.slice(),m=[];for(let A of p)for(let x of d[A]){let y=x.outboundLayer;if(y!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new Ys(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${y.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(y.name)}}this.nodesByDepth=d;let g=this.layers.map(A=>A.name);for(let A of g){let x=g.filter(y=>y===A).length;if(x!==1)throw new Ys(`The name "${A}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Gm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(A=>null),outputMasks:this.outputs.map(A=>null),inputShapes:this.inputs.map(A=>A.shape),outputShapes:this.outputs.map(A=>A.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new X(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new X(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new X(`${a.length} of ${s} weights are not set: ${a}`)}n2(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${l2}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=tA(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return K(()=>{e=wt(e);let n=new li;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Kc(this.outputs,n,t)})}computeMask(e,t){return K(()=>{e=wt(e);let n;return t==null?n=vi(null,e.length):n=wt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=of(e);if(t.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(ip);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],A=l.tensorIndices[f],x=`${m.name}_${g}_${A}`,y=n[x];u.push(y)}let d=c.computeOutputShape(Gn(u)),h=of(d),p=c.inboundNodes.indexOf(l);for(let f=0;f<h.length;f++){let m=`${c.name}_${p}_${f}`;n[m]=h[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];mr(i in n),r.push(n[i])}return Gn(r)}runInternalGraph(e,t){t==null&&(t=vi(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(ip);for(let i of s){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,h=c.outputTensors,p=new Array;for(let f of d)f.id in n&&p.push(n[f.id]);if(p.length===d.length){let f={},m,g,A,x;if(c.callArgs!=null&&(f=c.callArgs),p.length===1){let[y,b]=p[0];f.mask==null&&(f.mask=b),A=wt(u.call(y,f)),x=wt(u.computeMask(y,b)),m=[y],g=[b]}else m=p.map(y=>y[0]),g=p.map(y=>y[1]),f.mask==null&&(f.mask=g),A=wt(u.call(m,f)),x=wt(u.computeMask(m,g));if(u.activityRegularizer)throw new Be("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<h.length;++y){let b=h[y],v=A[y],C=x[y];n[b.id]=[v,C]}}}}let r=[],a=[],o=[];for(let i of this.outputs){mr(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),r.push(l),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof fr?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=fr.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new X(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new X("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new X(`No such layer: ${e}`)}calculateLosses(){return K(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=fr.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],h=fr.nodeKey(a,u),p={};if(this.containerNodes.has(h)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],A=d.nodeIndices[m],x=d.tensorIndices[m],y=fr.nodeKey(g,A),b=t[y];b==null&&(b=0),f.push([g.name,b,x,p])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=fr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];s.push([o.name,c,u])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=fr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];r.push([o.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let A=[],x;for(let y of g){let b=y[0],v=y[1],C=y[2];if(x=y[3]==null?{}:y[3],!(b in r)){o(m,g);return}let S=r[b];if(S.inboundNodes.length<=v){o(m,g);return}let E=S.inboundNodes[v];A.push(E.outputTensors[C])}A.length>0&&m.apply(Gn(A),x)}function l(m){let g=m.name,A=er(m,t.customObjects!=null?t.customObjects:{});A.setFastWeightInitDuringBuild(s),r[g]=A,m.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${y}`);o(A,y)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!Fz(a);)for(let m of u){let g=r[m.name];if(g.name in a){let A=a[g.name];delete a[g.name];for(let x of A)i(g,x)}}let d=[],h=[],p=t.inputLayers;for(let m of p){let g=m[0],A=m[1],x=m[2];mr(g in r);let b=r[g].inboundNodes[A].outputTensors;d.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],A=m[1],x=m[2];mr(g in r);let b=r[g].inboundNodes[A].outputTensors;h.push(b[x])}return new e({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){K(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function rB(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function IS(e,t){return rB(e,t,"classWeight")}async function CS(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=K(()=>{if(e.shape.length===1)return Hn(e);if(e.shape.length===2){if(e.shape[1]>1)return jr(e,1);if(e.shape[1]===1)return q(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());ae(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),zt(o,"float32")}else return null}function aB(e,t){return U(e,t)}var oB=32;function NS(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=n5("input",e.inputNames,n),o=n5("output",e.outputNames,s),i=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)w.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)w.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function n5(e,t,n){if(n instanceof tt)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new X(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function iB(e){if(e.length===3)throw new Be("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function lB(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(s5(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=iB(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=AS(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:h,history:p}=yS(u,d,n.epochs,null,null,uB(t,n),null,r,c);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await h.onEpochBegin(f);let A=0,x=0;for(s||(m=await t.iterator());s?A<n.batchesPerEpoch:!0;){let y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${A} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){let{xs:b,ys:v}=NS(e,y.value),C={};C.batch=x,C.size=b[0].shape[0],await h.onBatchBegin(x,C);let S=[];if(n.classWeight!=null){let P=IS(n.classWeight,e.outputNames);for(let $=0;$<P.length;++$)S.push(await CS(v[$],null,P[$]))}let E=b.concat(v).concat(S),R=i(E);ae(E);for(let P=0;P<l.length;++P){let $=l[P],_=R[P];C[$]=_,ln(_)}await h.onBatchEnd(x,C),pS(C),x++,A++}if(s?A>=n.batchesPerEpoch:y.done){if(r){let b;s5(n.validationData)?b=wt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=wt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?oB:n.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=b[v]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function uB(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function s5(e){return typeof e.iterator=="function"}function cB(e){return typeof e.next=="function"}async function dB(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Be("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=cB(t)?t:await t.iterator(),i=0,l=0;for(;s?l<n.batches:!0;){let c=await o.next();if(a=K(()=>{if(c.value){let{xs:u,ys:d}=NS(e,c.value),h=u.concat(d),p=K(()=>r(h));if(ae(h),l===0)for(let m=0;m<p.length;++m)a.push(Ce(0));let f=h[0].shape[0];for(let m=0;m<p.length;++m){let g=p[m],A=a[m];a[m]=K(()=>ie(a[m],U(f,g))),l>0&&ae(A)}ae(p),i+=f,++l}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=ye(a[c],i),ae(u)}return Gn(a)}function nA(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Zc(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>fi(s,t,n-t)):fi(e,t,n-t)}function u2(e,t){return K(()=>e==null?null:Array.isArray(e)?e.map(n=>u2(n,t)):oS(e,t.dtype==="int32"?t:he(t,"int32")))}function sA(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function hB(e,t,n,s,r,a,o,i,l,c,u,d,h,p,f){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,p,"steps_per_epoch"),A;g!=null&&(A=or(0,g)),o==null&&(o=1);let{callbackList:x,history:y}=yS(i,o,a,h,g,p,r,m,d);x.setModel(e),e.history=y,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=h;b<a;++b){await x.onEpochBegin(b);let v={};if(p!=null)throw new Be("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Be("batch shuffling is not implemneted yet");u&&w.shuffle(A);let C=zt(A),S=sA(g,r);for(let E=0;E<S.length;++E){let R={};if(await x.onBatchBegin(E,R),K(()=>{let P=S[E][0],$=S[E][1],_=fi(C,P,$-P);R.batch=E,R.size=$-P;let N=u2(n,_),O=t(N);for(let z=0;z<s.length;++z){let j=s[z],L=O[z];R[j]=L,ln(L)}if(E===S.length-1&&m){let z=e.testLoop(l,c,r);for(let j=0;j<s.length;++j){let L=s[j],B=z[j];ln(B),v["val_"+L]=B}}}),await x.onBatchEnd(E,R),pS(R),e.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(b,v),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function pB(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,c,u,d,h;try{let p=s.batchSize==null?32:s.batchSize;nA(p);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],a=m[1],h=m[2];let g=!1,A;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Be("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let R=!0,P=await e.standardizeUserData(l,c,null,null,R,p);u=P[0],d=P[1],A=u.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),P=r[0].shape[0];u=Zc(r,R,P),o=r,r=Zc(r,0,R),d=Zc(a,R,P),i=a,a=Zc(a,0,R),A=u.concat(d)}else s.validationSteps!=null&&(g=!0);let x=r.concat(a).concat(h);e.checkTrainableWeightsConsistency();let y=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),v,C;g?(e.makeTestFunction(),v=e.testFunction,C=b.slice().concat(b.map(R=>"val_"+R))):(v=null,A=[],C=b.slice());let S=AS(s.callbacks,s.yieldEvery);return await hB(e,y,x,b,p,s.epochs,s.verbose,S,v,A,s.shuffle,C,s.initialEpoch,null,null)}finally{e.isTraining=!1,qs(r,t),qs(a,n),qs(o,t),qs(i,n),qs(u,l),qs(d,c),h!=null&&ae(h)}}function TS(e){let t=[];e instanceof tt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(oh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function qs(e,t){if(e==null)return;let n=[];if(t instanceof tt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof tt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function fB(e){return e instanceof tt}function rA(e){return Array.isArray(e)}function r5(e){return!fB(e)&&!rA(e)}function a5(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(rA(e)&&e.length>0)o=!0;else if(r5(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new X(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(r5(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new X(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(rA(e)){if(e=e,e.length!==t.length)throw new X(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new X(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=TS(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new X(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new X(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function mB(e,t,n){let s=Ia(e.map(a=>a.shape[0]));s.sort();let r=Ia(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function gB(e,t,n){let s=[vl,jm,kd];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===kd&&a.shape[a.shape.length-1]===1)throw new X(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],h=c[u];if(h!=null&&d!==h)throw new X(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function o5(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new X(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new X(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new X(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new X(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function AB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var yB="layers-model",Hr=class extends fr{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");KL(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=XL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ea))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new X(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Yg(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Yg(o))}else{let a=Yg(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],pi("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=AB(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};pi("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let c="",u,d,h;for(let p of l){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===jm?["accuracy","acc"].indexOf(p)!==-1?d=a2:["crossentropy","ce"].indexOf(p)!==-1&&(d=vS):this.lossFunctions[a]===cf?["accuracy","acc"].indexOf(p)!==-1?d=wS:["crossentropy","ce"].indexOf(p)!==-1&&(d=kS):["accuracy","acc"].indexOf(p)!==-1?d=o2:["crossentropy","ce"].indexOf(p)!==-1&&(d=i2);let g;["accuracy","acc"].indexOf(p)!==-1?g="acc":["crossentropy","ce"].indexOf(p)!==-1&&(g="ce"),h=d,u=c+g}else h=qL(p),u=c+cp(p);let f;pi(u,()=>{f=h}),r(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;nA(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return Gn(l)}finally{qs(a[0],e),qs(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),dB(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new X(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new X(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new li;if(e instanceof tt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new X(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new X(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=Kc(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=vi(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return K(()=>{let s=this.checkNumSamples(e);if(n)throw new Be("Verbose predictLoop() is not implemented yet.");let r=sA(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)K(()=>{let l=r[o][0],c=r[o][1],u=Zc(e,l,c),d=[];if(Array.isArray(u))for(let p=0;p<u.length;++p)d.push({key:this.inputs[p],value:u[p]});else d.push({key:this.inputs[0],value:u});let h=new li(d);return Kc(this.outputs,h)}).forEach((l,c)=>a[c].push(l));return Gn(a.map(o=>Tt(o,0)))})}predict(e,t={}){let n=TS(e);o5(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return nA(s),this.predictLoop(n,s)}finally{qs(n,e)}}predictOnBatch(e){o5(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new Ys("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===cf?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=a5(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=a5(t,this.feedOutputNames,r,!1,"target"),mB(e,t,null),gB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let c=IS(s,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await CS(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return K(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Be("Verbose mode is not implemented yet.");if(r!=null)throw new Be("steps mode in testLoop() is not implemented yet");{let i=sA(a,n),l=zt(or(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],h=fi(l,u,d-u),p=u2(t,h),f=e(p);if(c===0)for(let m=0;m<f.length;++m)o.push(Ce(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ie(o[m],U(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=ye(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Gb(e,s)>1&&(r+=`_${Gb(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new li(u),h=Kc(this.outputs,d,{training:!0}),p;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],h[f]);r[f]!=null&&(g=aB(g,r[f]));let A=Mt(g);t.push(A),f===0?p=g:p=ie(p,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],A=this.metricsTensors[f][1];m=Mt(g(s[A],h[A]))}ln(m),a.push(m)}return p=Mt(p),this.calculateLosses().forEach(f=>{p=ie(p,f)}),p},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>K(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new li(a),i=Kc(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Mt(c(r[l],i[l]));l===0?n=u:n=ie(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Mt(c(r[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return pB(this,e,t,n)}async fitDataset(e,t){return lB(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return ae(o),qs(n[0],e),qs(n[1],t),Gn(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=nf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-nf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Mr(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Mr(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Mr(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Mr(cp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Mr(cp(e)));{let e={};for(let t in this.metrics)e[t]=Mr(cp(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Sd(e.optimizer_config),n=er(t),s;if(typeof e.loss=="string")s=ri(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>ri(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=ri(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>ri(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=ri(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=In.getSaveHandlers(e);if(l.length===0)throw new X(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new X(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await In.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:yB,generatedBy:`TensorFlow.js tfjs-layers v${l2}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await In.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=In.concatenateArrayBuffers([n.data,c])}return this.userDefinedMetadata!=null&&(Qb(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){Qb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Hr.className="Model";le.registerClass(Hr);var ES=class extends Hr{};ES.className="Functional";le.registerClass(ES);async function xB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Sd(n),r=er(s,t);if(e.weightsManifest!=null){let a=await In.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),ae(a)}return r}async function bB(e,t){if(t==null&&(t={}),typeof e=="string"){let n=In.getLoadHandlers(e,t);if(n.length===0)n.push(In.browserHTTPRequest(e,t));else if(n.length>1)throw new X(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return vB(e,void 0,t)}async function vB(e,t,n){if(n==null&&(n={}),e.load==null)throw new X("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=er(Sd(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new X("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=wB(s.weightData,s.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),ae(c),ae(u.map(d=>d.tensor))}return i}function wB(e,t){let n=In.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var aA=class extends Hr{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Um("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new X(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof aA||e instanceof Hr,n;if(t){if(n=e,n.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=hS({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=dS(this.outputs[0])}this.inboundNodes=[],new Gm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ut(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Hr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof aA))throw new Be(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=er(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},qm=aA;qm.className="Sequential";le.registerClass(qm);function kB(e){return new Hr(e)}function SB(e){return new qm(e)}function IB(e,t){return t==null&&(t={}),bB(e,t)}function RS(e){return hS(e)}function CB(e,t){s2.registerCallbackConstructor(e,t)}var Xn=class extends le.Serializable{getConfig(){return{}}},_S=class extends Xn{apply(e,t=1){return Jz(e,t)}};_S.className="elu";le.registerClass(_S);var $S=class extends Xn{apply(e){return Ty(e)}};$S.className="selu";le.registerClass($S);var DS=class extends Xn{apply(e){return Cr(e)}};DS.className="relu";le.registerClass(DS);var FS=class extends Xn{apply(e){return K(()=>eh(6,Cr(e)))}};FS.className="relu6";le.registerClass(FS);var PS=class extends Xn{apply(e){return e}};PS.className="linear";le.registerClass(PS);var OS=class extends Xn{apply(e){return bs(e)}};OS.className="sigmoid";le.registerClass(OS);var MS=class extends Xn{apply(e){return eL(e)}};MS.className="hardSigmoid";le.registerClass(MS);var zS=class extends Xn{apply(e){return ic(e)}};zS.className="softplus";le.registerClass(zS);var LS=class extends Xn{apply(e){return Qz(e)}};LS.className="softsign";le.registerClass(LS);var BS=class extends Xn{apply(e){return pu(e)}};BS.className="tanh";le.registerClass(BS);var c2=class extends Xn{apply(e,t=-1){return th(e,t)}};c2.className="softmax";le.registerClass(c2);var WS=class extends Xn{apply(e,t=-1){return Ay(e,t)}};WS.className="logSoftmax";le.registerClass(WS);var VS=class extends Xn{apply(e,t=1){return K(()=>U(bs(U(e,t)),e))}};VS.className="swish";le.registerClass(VS);var US=class extends Xn{apply(e){return K(()=>U(e,pu(ic(e))))}};US.className="mish";le.registerClass(US);function Ba(e){return e.getClassName()}function Qg(e,t={}){return rh(e,le.SerializationMap.getMap().classNameMap,t,"activation")}function Wa(e){if(e==null){let t={};return t.className="linear",t.config={},Qg(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Qg(t)}else return e instanceof Xn?e:Qg(e)}function d2(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var GS=class extends le.Serializable{},uh=class extends GS{constructor(e){super();d2(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return K(()=>{let t=Vt([1]);return this.hasL1&&(t=ie(t,Se(U(this.l1,Zt(e))))),this.hasL2&&(t=ie(t,Se(U(this.l2,ih(e))))),q(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};uh.className="L1L2";le.registerClass(uh);function NB(e){return d2(e),new uh({l1:e!=null?e.l1:null,l2:0})}function TB(e){return d2(e),new uh({l2:e!=null?e.l2:null,l1:0})}var i5={l1l2:"L1L2"};function mt(e){return Wy(e)}function l5(e,t={}){return rh(e,le.SerializationMap.getMap().classNameMap,t,"regularizer")}function Et(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in i5?i5[e]:e,config:{}};return l5(n)}else return e instanceof GS?e:l5(e)}var h2=class extends et{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=We(e);let n=Cr(e);return this.maxValue!=null&&(n=cs(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};h2.className="ReLU";le.registerClass(h2);var p2=class extends et{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=We(e);return dm(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};p2.className="LeakyReLU";le.registerClass(p2);var f2=class extends et{constructor(e){super(e??{});if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Nt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Et(e.alphaRegularizer),this.alphaConstraint=tn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ut(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Ht({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=We(e),xm(e,this.alpha.read())}getConfig(){let e={alphaInitializer:_t(this.alphaInitializer),alphaRegularizer:mt(this.alphaRegularizer),alphaConstraint:en(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};f2.className="PReLU";le.registerClass(f2);var m2=class extends et{constructor(e){super(e??{});if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Be(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=We(e);return Jd(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};m2.className="ELU";le.registerClass(m2);var g2=class extends et{constructor(e){super(e??{});this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=We(e);return U(n,he(hs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};g2.className="ThresholdedReLU";le.registerClass(g2);var A2=class extends et{constructor(e){super(e??{});this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new c2().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=We(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};A2.className="Softmax";le.registerClass(A2);function uu(e,t,n){if(typeof e=="number")return vi(e,t);if(e.length!==t)throw new X(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!Xz(r))throw new X(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function tr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function gr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+La([n-t,0]);else if(s==="same")e=e*t;else throw new X(`Unsupport padding mode: ${s}.`);return e}function y2(e,t){return K(()=>(Ut(t),t==="channelsFirst"?Je(e,[0,2,3,1]):e))}function HS(e,t){return K(()=>(Ut(t),t==="channelsFirst"?Je(e,[0,2,3,4,1]):e))}function EB(e,t,n,s=1,r="valid",a,o=1){return K(()=>{if(a==null&&(a=ar()),Ut(a),e.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Je(e,[0,2,1])),r==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=uy(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=lr(i,n)),i})}function u5(e,t,n,s=[1,1],r="valid",a,o,i=null){return K(()=>{if(a==null&&(a=ar()),Ut(a),e.rank!==3&&e.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=y2(e,a);if(r==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=za.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=Je(l,[0,3,1,2])),l})}function RB(e,t,n,s=[1,1,1],r="valid",a,o){return K(()=>{if(a==null&&(a=ar()),Ut(a),e.rank!==4&&e.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=HS(e,a);if(r==="causal")throw new Be("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=hy(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=lr(i,n)),a==="channelsFirst"&&(i=Je(i,[0,4,1,2,3])),i})}var x2=class extends et{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",x2.verifyArgs(t),this.rank=e,un(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Be(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=uu(t.kernelSize,e,"kernelSize"),this.strides=uu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ts(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ut(this.dataFormat),this.activation=Wa(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Nt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=tn(t.biasConstraint),this.biasRegularizer=Et(t.biasRegularizer),this.activityRegularizer=Et(t.activityRegularizer),this.dilationRate=uu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(mr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Vy(e.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ba(this.activation),useBias:this.useBias,biasInitializer:_t(this.biasInitializer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),biasConstraint:en(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},ch=class extends x2{constructor(e,t){super(e,t);this.kernel=null,ch.verifyArgs(t),this.filters=t.filters,un(this.filters,"filters"),this.kernelInitializer=Nt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=tn(t.kernelConstraint),this.kernelRegularizer=Et(t.kernelRegularizer)}build(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return K(()=>{e=We(e);let n,s=this.bias==null?null:this.bias.read(),r=eS(this.activation.getClassName());if(r!=null&&this.rank===2)n=u5(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=EB(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=u5(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=RB(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Be("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=ut(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=tr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:_t(this.kernelInitializer),kernelRegularizer:mt(this.kernelRegularizer),kernelConstraint:en(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},jS=class extends ch{constructor(e){super(2,e);jS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Vy(e.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Xm=jS;Xm.className="Conv2D";le.registerClass(Xm);var qS=class extends ch{constructor(e){super(3,e);qS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Km=qS;Km.className="Conv3D";le.registerClass(Km);var b2=class extends Xm{constructor(e){super(e);if(this.inputSpec=[new Ht({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ut(e),e.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ht({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=We(e);if(n.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=gr(i,d,c,this.padding),f=gr(l,h,u,this.padding),m=[r,p,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Je(n,[0,2,3,1]));let g=dy(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Je(g,[0,3,1,2])),this.bias!=null&&(g=lr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ut(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=gr(t[s],i,a,this.padding),t[r]=gr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};b2.className="Conv2DTranspose";le.registerClass(b2);var v2=class extends Km{constructor(e){super(e);if(this.inputSpec=[new Ht({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ut(e),e.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ht({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=We(e);if(n.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],c=s[a],u=s[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],A=gr(l,f,d,this.padding),x=gr(c,m,h,this.padding),y=gr(u,g,p,this.padding),b=[r,A,x,y,this.filters];this.dataFormat!=="channelsLast"&&(n=Je(n,[0,2,3,4,1]));let v=tk(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=Je(v,[0,4,1,2,3])),this.bias!==null&&(v=lr(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=ut(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=gr(t[s],c,o,this.padding),t[r]=gr(t[r],u,i,this.padding),t[a]=gr(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};v2.className="Conv3DTranspose";le.registerClass(v2);var XS=class extends ch{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Nt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Et(t.depthwiseRegularizer),this.depthwiseConstraint=tn(t.depthwiseConstraint),this.pointwiseInitializer=Nt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Et(t.pointwiseRegularizer),this.pointwiseConstraint=tn(t.pointwiseConstraint)}build(e){if(e=ut(e),e.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ht({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{e=We(e);let n;if(this.rank===1)throw new Be("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Je(e,[0,2,3,1])),n=wk(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=lr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Je(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=_t(this.depthwiseInitializer),e.pointwiseInitializer=_t(this.pointwiseInitializer),e.depthwiseRegularizer=mt(this.depthwiseRegularizer),e.pointwiseRegularizer=mt(this.pointwiseRegularizer),e.depthwiseConstraint=en(this.depthwiseConstraint),e.pointwiseConstraint=en(this.pointwiseConstraint),e}};XS.className="SeparableConv";var w2=class extends XS{constructor(e){super(2,e)}};w2.className="SeparableConv2D";le.registerClass(w2);var KS=class extends ch{constructor(e){super(1,e);KS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Vy(e.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},k2=KS;k2.className="Conv1D";le.registerClass(k2);var S2=class extends et{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return K(()=>{if(e=We(e),this.dataFormat==="channelsLast"){let n=lp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return lp(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=lp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return lp(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};S2.className="Cropping2D";le.registerClass(S2);var I2=class extends et{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Hz(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return K(()=>{let n=We(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Je(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Oe.resizeNearestNeighbor(n,[r,a]):Oe.resizeBilinear(n,[r,a]);return Je(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Oe.resizeNearestNeighbor(n,[r,a]):Oe.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};I2.className="UpSampling2D";le.registerClass(I2);function _B(e,t,n=[1,1],s="valid",r,a){return K(()=>{r==null&&(r=ar()),Ut(r);let o=y2(e,r);if(e.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Yd(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=Je(o,[0,3,1,2])),o})}var C2=class extends x2{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Nt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=tn(e.depthwiseConstraint),this.depthwiseRegularizer=Et(e.depthwiseRegularizer)}build(e){if(e=ut(e),e.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{e=We(e);let n=_B(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=lr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=tr(t,this.kernelSize[0],this.padding,this.strides[0]),a=tr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=_t(this.depthwiseInitializer),e.depthwiseRegularizer=mt(this.depthwiseRegularizer),e.depthwiseConstraint=en(this.depthwiseRegularizer),e}};C2.className="DepthwiseConv2D";le.registerClass(C2);function ZS(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function YS(e,t,n,s=!1,r,a,o=!1,i=!1){return K(()=>{let l=t.shape.length;if(l<3)throw new X(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(or(2,l));if(t=Je(t,c),a!=null)throw new Be("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=he(he(r,"bool"),"float32"),r.rank===l-1&&(r=on(r,-1)),r=Je(r,c)),s&&(t=Is(t,0),r!=null&&(r=Is(r,0)));let u=[],d,h=n,p=t.shape[0],f=Cs(t),m;r!=null&&(m=Cs(r));for(let A=0;A<p;++A){let x=f[A],y=K(()=>e(x,h));if(r==null)d=y[0],h=y[1];else{let b=K(()=>{let v=m[A],C=ge(Ss(v),v),S=ie(U(y[0],v),U(h[0],C)),E=h.map((R,P)=>ie(U(y[1][P],v),U(R,C)));return{output:S,newStates:E}});d=b.output,h=b.newStates}i&&u.push(d)}let g;return i&&(g=_n(u,1)),[d,g,h]})}var JS=class extends et{constructor(e){super(e);let t;if(e.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Jm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ht({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return or(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){J1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return K(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Be("Constants support is not implemented in RNN yet.");J1(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Ht({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Ht({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new Or("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Vt([n,s])):this.states_=[Vt([n,this.cell.stateSize])];else if(e==null)ae(this.states_),this.keptStates!=null&&(ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Vt([n,s])):this.states_[0]=Vt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ae(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!w.arraysEqual(r.shape,o))throw new X(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>ln(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=ZS(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Ht({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Js){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=We(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new X(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=YS((p,f)=>{let m=this.cell.call([p].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let h=this.returnSequences?u:c;return this.returnState?[h].concat(d):h})}getInitialState(e){return K(()=>{let t=Vt(e.shape);return t=Se(t,[1,2]),t=oh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Z1(t,[1,n]):t):this.cell.stateSize>1?[Z1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===JS.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=er(s,n);return new e(Object.assign(t,{cell:r}))}},ta=JS;ta.className="RNN";le.registerClass(ta);var dh=class extends et{},Zm=class extends dh{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,un(this.units,"units"),this.activation=Wa(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Et(e.kernelRegularizer),this.recurrentRegularizer=Et(e.recurrentRegularizer),this.biasRegularizer=Et(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=bu([1,La([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=bu([1,La([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Va({ones:()=>Ss(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Va({ones:()=>Ss(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=xr(U(e,a),this.kernel.read()):r=xr(e,this.kernel.read()),this.bias!=null&&(r=lr(r,this.bias.read())),o!=null&&(n=U(n,o));let i=ie(r,xr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ba(this.activation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),recurrentInitializer:_t(this.recurrentInitializer),biasInitializer:_t(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Zm.className="SimpleRNNCell";le.registerClass(Zm);var N2=class extends ta{constructor(e){e.cell=new Zm(e);super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};N2.className="SimpleRNN";le.registerClass(N2);var Ym=class extends dh{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=e.units,un(this.units,"units"),this.activation=Wa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Et(e.kernelRegularizer),this.recurrentRegularizer=Et(e.recurrentRegularizer),this.biasRegularizer=Et(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=bu([1,La([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=bu([1,La([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Va({ones:()=>Ss(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Va({ones:()=>Ss(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=U(e,r[0]));let c=xr(e,this.kernel.read());this.useBias&&(c=lr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=U(s,a[0]));let u=this.recurrentKernel.read(),[d,h]=bn(u,[2*this.units,this.units],u.rank-1),p=xr(s,d),[f,m,g]=bn(c,3,c.rank-1),[A,x]=bn(p,2,p.rank-1);o=this.recurrentActivation.apply(ie(f,A)),i=this.recurrentActivation.apply(ie(m,x));let y=xr(U(i,s),h);l=this.activation.apply(ie(g,y));let b=ie(U(o,s),U(ie(1,Dt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ba(this.activation),recurrentActivation:Ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),recurrentInitializer:_t(this.recurrentInitializer),biasInitializer:_t(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Ym.className="GRUCell";le.registerClass(Ym);var T2=class extends ta{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ym(e);super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};T2.className="GRU";le.registerClass(T2);var hh=class extends dh{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,un(this.units,"units"),this.activation=Wa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Et(e.kernelRegularizer),this.recurrentRegularizer=Et(e.recurrentRegularizer),this.biasRegularizer=Et(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=bu([1,La([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=bu([1,La([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ut(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends Vs{apply(o,i){let l=r.apply([a]),c=new Om().apply([a]),u=r.apply([a*2]);return Xb(Xb(l,c),u)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Va({ones:()=>Ss(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Va({ones:()=>Ss(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=U(e,a[0]));let d=xr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=U(s,o[0])),d=ie(d,xr(s,this.recurrentKernel.read())),this.useBias&&(d=lr(d,this.bias.read()));let[h,p,f,m]=bn(d,4,d.rank-1);i=this.recurrentActivation.apply(h),l=this.recurrentActivation.apply(p),c=ie(U(l,r),U(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=U(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ba(this.activation),recurrentActivation:Ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),recurrentInitializer:_t(this.recurrentInitializer),biasInitializer:_t(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};hh.className="LSTMCell";le.registerClass(hh);var E2=class extends ta{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hh(e);super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};E2.className="LSTM";le.registerClass(E2);var Jm=class extends dh{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return K(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){J1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{pi(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(er(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Q1(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}n2(t)}};Jm.className="StackedRNNCells";le.registerClass(Jm);function Va(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):iS(t(),n),i=()=>lh(o,t,s);return!r||r<=1?ln(i().clone()):Array(r).fill(void 0).map(i).map(c=>ln(c.clone()))}var QS=class extends ta{constructor(e){if(e.unroll)throw new Be("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Be("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Ht({ndim:5})]}call(e,t){return K(()=>{if(this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new X("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return K(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Vt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new Or("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Vt(r)):this.states_=[Vt(r)];else if(e==null)ae(this.states_),this.keptStates!=null&&(ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Vt(r)):this.states_[0]=Vt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ae(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!w.arraysEqual(i.shape,l))throw new X(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>ln(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=tr(l,s[0],r,a[0],o[0]),d=tr(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};QS.className="ConvRNN2D";var Qm=class extends hh{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,un(this.filters,"filters"),this.kernelSize=uu(n,2,"kernelSize"),this.kernelSize.forEach(i=>un(i,"kernelSize")),this.strides=uu(s||1,2,"strides"),this.strides.forEach(i=>un(i,"strides")),this.padding=r||"valid",Ts(this.padding),this.dataFormat=a||"channelsLast",Ut(this.dataFormat),this.dilationRate=uu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>un(i,"dilationRate"))}build(e){var t;e=ut(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends Vs{apply(u,d){let h=l.apply([c]),p=us([c]),f=l.apply([c*2]);return Xy([h,p,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return K(()=>{if(e.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Va({ones:()=>Ss(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(W,J,ee)=>!J||!J[ee]?W:U(J[ee],W),c=l(s,i,0),u=l(s,i,1),d=l(s,i,2),h=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Va({ones:()=>Ss(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,f=l(r,p,0),m=l(r,p,1),g=l(r,p,2),A=l(r,p,3),x=3,[y,b,v,C]=bn(this.kernel.read(),o,x),[S,E,R,P]=this.useBias?bn(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,y,S,this.padding),u=this.inputConv(u,b,E,this.padding),d=this.inputConv(d,v,R,this.padding),h=this.inputConv(h,C,P,this.padding);let[$,_,N,O]=bn(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,$),m=this.recurrentConv(m,_),g=this.recurrentConv(g,N),A=this.recurrentConv(A,O);let z=this.recurrentActivation.apply(ie(c,f)),j=this.recurrentActivation.apply(ie(u,m)),L=ie(U(j,a),U(z,this.activation.apply(ie(d,g)))),B=U(this.recurrentActivation.apply(ie(h,A)),this.activation.apply(L));return[B,B,L]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=Oa(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?lr(r,n,this.dataFormat):r}recurrentConv(e,t){return Oa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Qm.className="ConvLSTM2DCell";le.registerClass(Qm);var R2=class extends QS{constructor(e){let t=new Qm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};R2.className="ConvLSTM2D";le.registerClass(R2);var e0=class extends et{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return lh(()=>iS(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};e0.className="Dropout";le.registerClass(e0);var _2=class extends e0{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};_2.className="SpatialDropout1D";le.registerClass(_2);var $2=class extends et{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,un(this.units,"units"),this.activation=Wa(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=tn(e.kernelConstraint),this.biasConstraint=tn(e.biasConstraint),this.kernelRegularizer=Et(e.kernelRegularizer),this.biasRegularizer=Et(e.biasRegularizer),this.activityRegularizer=Et(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ut(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ut(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e),s=eS(this.activation.getClassName()),r;return s!=null?r=xr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=xr(n,this.kernel.read()),this.bias!=null&&(r=lr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Ba(this.activation),useBias:this.useBias,kernelInitializer:_t(this.kernelInitializer),biasInitializer:_t(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),biasConstraint:en(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};$2.className="Dense";le.registerClass($2);var D2=class extends et{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ut(e);for(let t of e.slice(1))if(t==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ca(e,1)]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=Je(n,s)}return Yz(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};D2.className="Flatten";le.registerClass(D2);var F2=class extends et{constructor(e){super(e);this.supportsMasking=!0,this.activation=Wa(e.activation)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e);return this.activation.apply(n)})}getConfig(){let e={activation:Ba(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};F2.className="Activation";le.registerClass(F2);var P2=class extends et{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return K(()=>(e=We(e),Kz(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};P2.className="RepeatVector";le.registerClass(P2);var O2=class extends et{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new X("Can only specifiy one unknown dimension.");else r*=l}let o=Ca(e);if(a!==null){if(r===0||o%r!==0)throw new X(n);s[a]=o/r}else if(o!==r)throw new X(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return q(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};O2.className="Reshape";le.registerClass(O2);var M2=class extends et{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=or(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ht({ndim:this.dims.length+1})]}computeOutputShape(e){e=ut(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return Je(We(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};M2.className="Permute";le.registerClass(M2);var z2=class extends et{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=We(e),s=-1;return rf(gu(n,this.maskValue),s)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e),s=-1,r=!0,a=rf(gu(n,this.maskValue),s,r);return U(n,he(a,n.dtype))})}};z2.className="Masking";le.registerClass(z2);var L2=class extends et{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(wt(e.inputLength))}this.inputDim=e.inputDim,un(this.inputDim,"inputDim"),this.outputDim=e.outputDim,un(this.outputDim,"outputDim"),this.embeddingsInitializer=Nt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Et(e.embeddingsRegularizer),this.activityRegularizer=Et(e.activityRegularizer),this.embeddingsConstraint=tn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return K(()=>this.maskZero?(e=We(e),gu(e,Qe(e))):null)}computeOutputShape(e){if(e=ut(e),this.inputLength==null)return[...e,this.outputDim];let t=wt(this.inputLength);if(t.length!==e.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e);n.dtype!=="int32"&&(n=Fm(n,"int32"));let s=oS(this.embeddings.read(),q(n,[n.size]));return q(s,ut(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:_t(this.embeddingsInitializer),embeddingsRegularizer:mt(this.embeddingsRegularizer),activityRegularizer:mt(this.activityRegularizer),embeddingsConstraint:en(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};L2.className="Embedding";le.registerClass(L2);var wl=class extends et{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Be}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ut(e)]),e=e,e.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Ia(t),t.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Ia(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return K(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=La(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=oh(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),h=q(i,[u].concat(Ca(c.slice(1))));h=Je(h,[1,0]),h=q(h,d),n.push(h),r=!0}else if(l>1){let c=or(1,l).concat([0]);n.push(Je(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=q(Je(q(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(or(0,o-1));a=Je(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Ia(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return K(()=>{if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an Array");if(!Array.isArray(e))throw new X("`inputs` should be an Array");if(t.length!==e.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:on(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=rr(n,t[s]);return n})}},B2=class extends wl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return t})}};B2.className="Add";le.registerClass(B2);var W2=class extends wl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=U(t,e[n]);return t})}};W2.className="Multiply";le.registerClass(W2);var V2=class extends wl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return U(1/e.length,t)})}};V2.className="Average";le.registerClass(V2);var U2=class extends wl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Jr(t,e[n]);return t})}};U2.className="Maximum";le.registerClass(U2);var G2=class extends wl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=eh(t,e[n]);return t})}};G2.className="Minimum";le.registerClass(G2);var H2=class extends wl{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(w.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return K(()=>Xy(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new X("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new X(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return K(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(he(Ss(e[a]),"bool")):t[a].rank<e[a].rank?s.push(on(t[a],-1)):s.push(t[a]);let r=Tt(s,this.axis);return ay(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};H2.className="Concatenate";le.registerClass(H2);function Uc(e,t){for(;e<0;)e+=t;return e}function $B(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Be("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Be("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return K(()=>{let o;if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);t=q(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);e=q(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=Se(U(e,t),a[0]):i=Se(U(Je(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=He(e,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=ft(i,c)}return i.shape.length===1&&(i=on(i,1)),i})}var j2=class extends wl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new X(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Uc(r,e[a].shape.length)):s=[Uc(this.axes,t.shape.length),Uc(this.axes,n.shape.length)],this.normalize&&(t=uf(t,s[0]),n=uf(n,s[1])),$B(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Uc(this.axes,e.length),Uc(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};j2.className="Dot";le.registerClass(j2);var q2=class extends et{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e);return lh(()=>ie(Pm(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};q2.className="GaussianNoise";le.registerClass(q2);var X2=class extends et{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=We(e);return this.rate>0&&this.rate<1?lh(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return U(n,Pm(n.shape,1,r))},()=>n,t.training||!1):n})}};X2.className="GaussianDropout";le.registerClass(X2);var K2=class extends et{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||We(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return lh(()=>{let r=We(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=yl(lc(n),this.rate);l=Fm(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=ie(U(r,l),U(ie(l,-1),i));return ie(U(d,c),u)},()=>We(e),t.training||!1)}return e})}};K2.className="AlphaDropout";le.registerClass(K2);function Id(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=jw(e,t,n,s,r,a);else if(e.rank===3)o=qw(e,t,n,s,r,a);else if(e.rank===4)o=Xw(e,t,n,s,r,a);else throw new Be(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function DB(e,t,n,s,r=.001){return K(()=>{let a=Am(e,s),o=a.mean,i=a.variance;return[Id(e,o,i,n,t,r),o,i]})}function FB(e,t,n,s,r=.001){return K(()=>{let a=Am(e,s),o=a.mean,i=a.variance,l=[];for(let f of or(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=q(o,l),u=q(i,l),d=t==null?null:q(t,l),h=n==null?null:q(n,l);return[Id(e,c,u,h,d,r),o,i]})}function PB(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),or(0,e.rank-1))?DB(e,t,n,s,r):FB(e,t,n,s,r)}var Z2=class extends et{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Nt(e.betaInitializer||"zeros"),this.gammaInitializer=Nt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Nt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Nt(e.movingVarianceInitializer||"ones"),this.betaConstraint=tn(e.betaConstraint),this.gammaConstraint=tn(e.gammaConstraint),this.betaRegularizer=Et(e.betaRegularizer),this.gammaRegularizer=Et(e.gammaRegularizer)}build(e){e=ut(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new X(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ht({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training,s=We(e),r=s.shape,a=r.length,o=or(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=vi(1,a);l[i]=r[i];let c=o.slice();c.sort();let u=!w.arraysEqual(c,or(0,a).slice(0,a-1)),d=()=>{if(u){let A=q(this.movingMean.read(),l),x=q(this.movingVariance.read(),l),y=this.center?q(this.beta.read(),l):null,b=this.scale?q(this.gamma.read(),l):null;return Id(s,A,x,y,b,this.epsilon)}else return Id(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[h,p,f]=PB(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(A,x,y)=>{K(()=>{let b=1-y,v=A.read(),C=U(ge(v,x),b);A.write(ge(v,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_t(this.betaInitializer),gammaInitializer:_t(this.gammaInitializer),movingMeanInitializer:_t(this.movingMeanInitializer),movingVarianceInitializer:_t(this.movingVarianceInitializer),betaRegularizer:mt(this.betaRegularizer),gammaRegularizer:mt(this.gammaRegularizer),betaConstraint:en(this.betaConstraint),gammaConstraint:en(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Z2.className="BatchNormalization";le.registerClass(Z2);var Y2=class extends et{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Nt(e.betaInitializer||"zeros"),this.gammaInitializer=Nt(e.gammaInitializer||"ones"),this.betaRegularizer=Et(e.betaRegularizer),this.gammaRegularizer=Et(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ut(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Ia(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=We(e),s=n.shape,r=s.length;return K(()=>{let{mean:o,variance:i}=Am(n,this.axis,!0),l=vi(1,r);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?q(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),h=[],p=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(h.push(s[f]),p.push(1)):(h.push(1),p.push(s[f]));return o=zs(o,h),i=zs(i,h),u=zs(u,p),d=zs(d,p),Id(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_t(this.betaInitializer),gammaInitializer:_t(this.gammaInitializer),betaRegularizer:mt(this.betaRegularizer),gammaRegularizer:mt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Y2.className="LayerNormalization";le.registerClass(Y2);function OB(e,t,n){return K(()=>{if(e.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=ar()),n!=="channelsLast"&&n!=="channelsFirst")throw new X(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Ir(e,s)})}var J2=class extends et{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?ar():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ht({ndim:4})]}computeOutputShape(e){e=ut(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return K(()=>OB(We(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};J2.className="ZeroPadding2D";le.registerClass(J2);function t0(e,t,n,s,r,a){return K(()=>{Ut(r),nS(a),Ts(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=ar()),a==null&&(a="max"),e=y2(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=mm(e,t,n,i):o=om(e,t,n,i),r==="channelsFirst"&&(o=Je(o,[0,3,1,2])),o})}function e7(e,t,n,s,r,a){return K(()=>{Ut(r),nS(a),Ts(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=ar()),a==null&&(a="max"),e=HS(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=vy(e,t,n,i):o=iy(e,t,n,i),r==="channelsFirst"&&(o=Je(o,[0,4,1,2,3])),o})}var t7=class extends et{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(un(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);un(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ts(this.padding),this.inputSpec=[new Ht({ndim:3})]}computeOutputShape(e){e=ut(e);let t=tr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return K(()=>{this.invokeCallHook(e,t),e=oh(We(e),2);let n=this.poolingFunction(We(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ft(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Q2=class extends t7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ut(r),Ts(s),t0(e,t,n,s,r,"max")}};Q2.className="MaxPooling1D";le.registerClass(Q2);var ex=class extends t7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ut(r),Ts(s),t0(e,t,n,s,r,"avg")}};ex.className="AveragePooling1D";le.registerClass(ex);var n7=class extends et{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];un(this.poolSize,"poolSize"),un(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Ts(this.padding),this.inputSpec=[new Ht({ndim:4})]}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=tr(t,this.poolSize[0],this.padding,this.strides[0]),n=tr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(We(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},tx=class extends n7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ut(r),Ts(s),t0(e,t,n,s,r,"max")}};tx.className="MaxPooling2D";le.registerClass(tx);var nx=class extends n7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ut(r),Ts(s),t0(e,t,n,s,r,"avg")}};nx.className="AveragePooling2D";le.registerClass(nx);var s7=class extends et{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];un(this.poolSize,"poolSize"),un(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Ts(this.padding),this.inputSpec=[new Ht({ndim:5})]}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=tr(t,this.poolSize[0],this.padding,this.strides[0]),n=tr(n,this.poolSize[1],this.padding,this.strides[1]),s=tr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(We(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},sx=class extends s7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ut(r),Ts(s),e7(e,t,n,s,r,"max")}};sx.className="MaxPooling3D";le.registerClass(sx);var rx=class extends s7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ut(r),Ts(s),e7(e,t,n,s,r,"avg")}};rx.className="AveragePooling3D";le.registerClass(rx);var r7=class extends et{constructor(e){super(e);this.inputSpec=[new Ht({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Be}},ax=class extends r7{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=We(e);return Mt(n,1)})}};ax.className="GlobalAveragePooling1D";le.registerClass(ax);var ox=class extends r7{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=We(e);return Tn(n,1)})}};ox.className="GlobalMaxPooling1D";le.registerClass(ox);var a7=class extends et{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.inputSpec=[new Ht({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Be}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ix=class extends a7{call(e,t){return K(()=>{let n=We(e);return this.dataFormat==="channelsLast"?Mt(n,[1,2]):Mt(n,[2,3])})}};ix.className="GlobalAveragePooling2D";le.registerClass(ix);var lx=class extends a7{call(e,t){return K(()=>{let n=We(e);return this.dataFormat==="channelsLast"?Tn(n,[1,2]):Tn(n,[2,3])})}};lx.className="GlobalMaxPooling2D";le.registerClass(lx);var o7=class extends et{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=er(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},ux=class extends o7{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=ut(e),e.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ut(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return K(()=>(e=We(e),YS((a,o)=>[We(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};ux.className="TimeDistributed";le.registerClass(ux);function MB(e){bl(Gz,"BidirectionalMergeMode",e)}var zB="concat",cx=class extends o7{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=er(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=er(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?zB:e.mergeMode,MB(this.mergeMode),e.weights)throw new Be("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):Gn(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=ZS(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new Ht({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(s!=null)throw new Be("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Js;for(let l of a)if(l instanceof Js!==i)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Is(r,1));let o;return this.mergeMode==="concat"?o=Xy([s,r]):this.mergeMode==="sum"?o=ie(s,r):this.mergeMode==="ave"?o=U(.5,ie(s,r)):this.mergeMode==="mul"?o=U(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){pi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),pi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=er(t.layer);if(delete t.layer,t.numConstants!=null)throw new Be("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};cx.className="Bidirectional";le.registerClass(cx);function LB(e){return new cc(e)}function BB(e){return new m2(e)}function WB(e){return new h2(e)}function VB(e){return new p2(e)}function UB(e){return new f2(e)}function GB(e){return new A2(e)}function HB(e){return new g2(e)}function jB(e){return new k2(e)}function qB(e){return new Xm(e)}function XB(e){return new b2(e)}function KB(e){return new Km(e)}function ZB(e){return new v2(e)}function YB(e){return new w2(e)}function JB(e){return new S2(e)}function QB(e){return new I2(e)}function eW(e){return new C2(e)}function tW(e){return new F2(e)}function nW(e){return new $2(e)}function sW(e){return new e0(e)}function rW(e){return new _2(e)}function aW(e){return new D2(e)}function oW(e){return new P2(e)}function iW(e){return new O2(e)}function lW(e){return new M2(e)}function uW(e){return new L2(e)}function cW(e){return new B2(e)}function dW(e){return new V2(e)}function hW(e){return new H2(e)}function pW(e){return new U2(e)}function fW(e){return new G2(e)}function mW(e){return new W2(e)}function gW(e){return new j2(e)}function AW(e){return new Z2(e)}function yW(e){return new Y2(e)}function xW(e){return new J2(e)}function dx(e){return new ex(e)}function bW(e){return dx(e)}function vW(e){return dx(e)}function hx(e){return new nx(e)}function wW(e){return hx(e)}function kW(e){return hx(e)}function px(e){return new rx(e)}function SW(e){return px(e)}function IW(e){return px(e)}function CW(e){return new ax(e)}function NW(e){return new ix(e)}function i7(e){return new ox(e)}function l7(e){return new lx(e)}function u7(e){return new Q2(e)}function c7(e){return new tx(e)}function TW(e){return new sx(e)}function EW(e){return new T2(e)}function RW(e){return new Ym(e)}function _W(e){return new E2(e)}function $W(e){return new hh(e)}function DW(e){return new N2(e)}function FW(e){return new Zm(e)}function PW(e){return new R2(e)}function OW(e){return new Qm(e)}function MW(e){return new ta(e)}function zW(e){return new Jm(e)}function LW(e){return new cx(e)}function BW(e){return new ux(e)}var WW=i7,VW=l7,UW=u7,GW=c7;function HW(e){return new q2(e)}function jW(e){return new X2(e)}function qW(e){return new K2(e)}function XW(e){return new z2(e)}var d7={};Me(d7,{MAPE:()=>aV,MSE:()=>lV,binaryAccuracy:()=>KW,binaryCrossentropy:()=>ZW,categoricalAccuracy:()=>JW,categoricalCrossentropy:()=>QW,cosineProximity:()=>nV,mape:()=>oV,meanAbsoluteError:()=>sV,meanAbsolutePercentageError:()=>rV,meanSquaredError:()=>iV,mse:()=>uV,precision:()=>eV,recall:()=>tV,sparseCategoricalAccuracy:()=>YW});function KW(e,t){return a2(e,t)}function ZW(e,t){return vS(e,t)}function YW(e,t){return wS(e,t)}function JW(e,t){return o2(e,t)}function QW(e,t){return i2(e,t)}function eV(e,t){return bS(e,t)}function tV(e,t){return LL(e,t)}function nV(e,t){return r2(e,t)}function sV(e,t){return Hm(e,t)}function rV(e,t){return dc(e,t)}function aV(e,t){return dc(e,t)}function oV(e,t){return dc(e,t)}function iV(e,t){return vl(e,t)}function lV(e,t){return vl(e,t)}function uV(e,t){return vl(e,t)}var h7={};Me(h7,{modelFromJSON:()=>xB});var p7={};Me(p7,{l1:()=>dV,l1l2:()=>cV,l2:()=>hV});function cV(e){return new uh(e)}function dV(e){return NB(e)}function hV(e){return TB(e)}var f7=class extends vu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Hr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function dp(e,t){return e<t}function c5(e,t){return e>t}var m7=class extends f7{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Be("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=dp:this.mode==="max"?this.monitorFunc=c5:this.monitor.indexOf("acc")!==-1?this.monitorFunc=c5:this.monitorFunc=dp,this.monitorFunc===dp&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===dp?1/0:-1/0}async onEpochEnd(e,t){await ga(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function pV(e){return new m7(e)}var fV={earlyStopping:pV},mV=Y();mV.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var g7=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(g7||{}),d5;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(d5||(d5={}));var fx={};function gV(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};fx[e]=n}function A7(e){return fx[e]}function AV(e){delete fx[e]}function k(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Cn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(h=>Cn(h,n,s,r));let c=Cn(t.inputNames.slice(i)[0],n,s,r),u=c.dataSync();return a.type==="number"?u[0]:w.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function Cn(e,t,n,s){let[r,a]=es(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[ff(r,i)]);return o!==void 0?t[ff(r,o)][a]:void 0}function yV(e,t,n){return t[ff(e,n.currentContextId)]}function Ar(e,t){let[n,s,r]=es(e);return[ff(n,t&&t.currentContextId),s,r]}function ff(e,t){return t?`${e}-${t}`:e}function es(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function Pp(e,t,n){let s=k("pad",e,t,n);if(s==="explicit"){s=k("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function zr(e){return e.kept?e:Hn(e)}var y7={};Me(y7,{json:()=>xV});var xV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],x7={};Me(x7,{json:()=>bV});var bV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],b7={};Me(b7,{json:()=>vV});var vV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],v7={};Me(v7,{json:()=>wV});var wV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],w7={};Me(w7,{json:()=>kV});var kV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],k7={};Me(k7,{json:()=>SV});var SV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],S7={};Me(S7,{json:()=>IV});var IV=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],I7={};Me(I7,{json:()=>CV});var CV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],C7={};Me(C7,{json:()=>NV});var NV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],N7={};Me(N7,{json:()=>TV});var TV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],T7={};Me(T7,{json:()=>EV});var EV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],E7={};Me(E7,{json:()=>RV});var RV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],R7={};Me(R7,{json:()=>_V});var _V=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_7={};Me(_7,{json:()=>$V});var $V=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],$7={};Me($7,{json:()=>DV});var DV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],D7={};Me(D7,{json:()=>FV});var FV=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],F7={};Me(F7,{json:()=>PV});var PV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],P7={};Me(P7,{json:()=>OV});var OV=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],O7={};Me(O7,{json:()=>MV});var MV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],h5=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[y7,x7,b7,v7,w7,k7,S7,I7,C7,N7,T7,E7,R7,_7,$7,D7,F7,P7,O7],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,A)=>{let[x,,y]=Ar(g),b=o[x];if(b.outputs!=null){let v=b.outputs.indexOf(y);if(v!==-1){let C=`${x}:${v}`;m.inputNames[A]=C}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=Ar(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=Ar(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=s;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let p={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:h};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=A7(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=oA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=oA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=pA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=pA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=lA(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=lA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=hA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=hA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=iA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=iA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=mA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=mA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=dA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=dA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=fA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=fA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=uA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=uA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=cA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=cA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=p5(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=p5(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&s.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=Ar(u.name),h={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:mx(u.type),type:"dtype"}},children:[]};h.signatureKey=u.name,a.push(h),r[d]=h}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((h,p)=>{let[f,,m]=Ar(h),g=r[f];if(g.outputs!=null){let A=g.outputs.indexOf(m);if(A!==-1){let x=`${f}:${A}`;d.inputNames[p]=x}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,h]=Ar(l[u.name]),p=r[d];p!=null&&(p.defaultOutput=h,o.push(p))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function zV(e){let t=Y().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function M7(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):zV(e);return t?n:n.toLowerCase()}function oA(e,t,n,s=!1){let r=e[t];return r!=null?M7(r.s,s):n}function iA(e,t,n){let s=e[t];return s?s.b:n}function lA(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function mx(e){switch(typeof e=="string"&&(e=g7[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function p5(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function uA(e,t,n){let s=e[t];return s&&s.type?mx(s.type):n}function cA(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>mx(r)):n}function z7(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function dA(e,t,n){let s=e[t];return s&&s.shape?z7(s.shape):n}function hA(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function pA(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>M7(a,s)):n}function fA(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>z7(r)):n}function mA(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var LV=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Cn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Cn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return lA(this.node.rawAttrs,e,t);if(n.s!=null)return oA(this.node.rawAttrs,e,t);if(n.b!=null)return iA(this.node.rawAttrs,e,t);if(n.shape!=null)return dA(this.node.rawAttrs,e,t);if(n.type!=null)return uA(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return hA(this.node.rawAttrs,e,t);if(n.list.s!=null)return pA(this.node.rawAttrs,e,t);if(n.list.shape!=null)return fA(this.node.rawAttrs,e,t);if(n.list.b!=null)return mA(this.node.rawAttrs,e,t);if(n.list.type!=null)return cA(this.node.rawAttrs,e,t)}return t}},BV=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ie(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[ry(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[gm(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[U(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[ye(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[ak(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[am(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[ge(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[eh(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[Jr(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[Ma(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[Dy(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},WV=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Zt(k("x",e,t,n))];case"Acos":return[Pw(k("x",e,t,n))];case"Acosh":return[Ow(k("x",e,t,n))];case"Asin":return[zw(k("x",e,t,n))];case"Asinh":return[Lw(k("x",e,t,n))];case"Atan":return[Bw(k("x",e,t,n))];case"Atan2":return[Ww(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[Vw(k("x",e,t,n))];case"Ceil":return[Zw(k("x",e,t,n))];case"Complex":return[Da(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[um(k("x",e,t,n))];case"Cosh":return[py(k("x",e,t,n))];case"Elu":return[Jd(k("x",e,t,n))];case"Erf":return[ik(k("x",e,t,n))];case"Exp":return[ws(k("x",e,t,n))];case"Expm1":return[lk(k("x",e,t,n))];case"Floor":return[Qd(k("x",e,t,n))];case"Log":return[ks(k("x",e,t,n))];case"Log1p":return[hm(k("x",e,t,n))];case"Imag":return[cm(k("x",e,t,n))];case"Neg":return[Dt(k("x",e,t,n))];case"Reciprocal":return[vk(k("x",e,t,n))];case"Real":return[vd(k("x",e,t,n))];case"Relu":return[Cr(k("x",e,t,n))];case"Round":return[Cy(k("x",e,t,n))];case"Selu":return[Ty(k("x",e,t,n))];case"Sigmoid":return[bs(k("x",e,t,n))];case"Sin":return[Ey(k("x",e,t,n))];case"Sign":return[Sk(k("x",e,t,n))];case"Sinh":return[Ry(k("x",e,t,n))];case"Softplus":return[ic(k("x",e,t,n))];case"Sqrt":return[vn(k("x",e,t,n))];case"Square":return[pt(k("x",e,t,n))];case"Tanh":return[pu(k("x",e,t,n))];case"Tan":return[Ck(k("x",e,t,n))];case"ClipByValue":return[cs(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[Iy(k("x",e,t,n))];case"Rsqrt":return[Ny(Cn(e.inputNames[0],t,n))];case"Prod":return[wy(k("x",e,t,n),k("axes",e,t,n))];case"LeakyRelu":return[dm(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[xm(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[uk(Cn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ds(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function f5(e){return!(typeof e=="number"||e.some(t=>t<0))}function Gc(e,t,n){let s=gA(e,n),r=!f5(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=gA(a.shape,s)}),!f5(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function gA(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var VV=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ce(0),ln(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ds(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ln(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return lt([],[0].concat(this.elementShape));let n=this.readMany(e);return Ds(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),_n(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return lt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return Ds(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Tt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Cs(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];K(()=>{t=q(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],c=[0,l,0],u=[1,e[i],r];a[i]=q(Pe(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},ph=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);Ds(t,r.shape,"TensorList shape mismatch: "),ln(r)}),this.idTensor=Ce(0),this.maxNumElements=s,ln(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ph([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Ds(e,this.elementShape,"TensorList shape mismatch: ");let s=Gc(this.elementShape,this.tensors,e);return K(()=>{let r=this.tensors.map(a=>q(a,s));return _n(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Gc(this.elementShape,this.tensors,e),s=this.tensors.pop();return Ds(s.shape,e,"TensorList shape mismatch: "),q(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ds(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ln(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ds(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Gc(this.elementShape,this.tensors,t);return q(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ds(this.elementShape,t.shape,"TensorList shape mismatch: "),ln(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ds(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Gc(this.elementShape,this.tensors,n);return e.length===0?lt([],[0].concat(s)):K(()=>{let r=e.map(a=>q(this.tensors[a],s));return _n(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ds(this.elementShape,t,"TensorList shape mismatch: ");let n=Gc(this.elementShape,this.tensors,t);return this.size()===0?lt([],[0].concat(n)):K(()=>{let s=this.tensors.map(r=>q(r,n));return Tt(s,0)})}};function UV(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);Ds(r,t,"TensorList shape mismatch: ");let a=Cs(e);return new ph(a,t,s)}function GV(e,t,n){return new ph([],e,t,n)}function HV(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new ph([],n,e.dtype,s),o=Cs(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function jV(e,t,n){let s=0,r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=gA(a,n),i=s===0?0:e.size/s,l=K(()=>{let u=[];e=q(e,[1,s,i]);for(let d=0;d<t.length;++d){let h=d===0?0:r[d-1],p=[0,h,0],f=[1,t[d],i];u[d]=q(Pe(e,p,f),o)}return e.dispose(),u}),c=new ph([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var qV=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=k("thenBranch",e,t,n),r=k("elseBranch",e,t,n),a=k("cond",e,t,n),o=k("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=k("body",e,t,n),r=k("cond",e,t,n),a=k("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(p=>p.id);u.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});let h=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await h[0].data(),h.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{let s=k("pred",e,t,n);return[zr(s)]}case"Switch":{let s=k("pred",e,t,n),r=k("data",e,t,n);return r.kept||(r=zr(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Cn(r,t,n)!==void 0);if(s){let r=Cn(s,t,n);return[zr(r)]}return}case"Enter":{let s=k("frameName",e,t,n),r=k("tensor",e,t,n);return n.enterFrame(s),[zr(r)]}case"Exit":{let s=k("tensor",e,t,n);return n.exitFrame(),[zr(s)]}case"NextIteration":{let s=k("tensor",e,t,n);return n.nextIteration(),[zr(s)]}case"TensorArrayV3":{let s=k("size",e,t,n),r=k("dtype",e,t,n),a=k("elementShape",e,t,n),o=k("dynamicSize",e,t,n),i=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),c=k("name",e,t,n),u=new VV(c,r,s,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Ce(1)]}case"TensorArrayWriteV3":{let s=k("tensorArrayId",e,t,n),r=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=k("tensorArrayId",e,t,n),r=k("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=k("tensorArrayId",e,t,n),r=k("indices",e,t,n),a=k("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=k("tensorArrayId",e,t,n),r=k("indices",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=k("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=k("tensorArrayId",e,t,n),r=k("tensor",e,t,n),a=k("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=k("tensorListId",e,t,n),r=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=k("tensorListId",e,t,n),r=k("index",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=k("indices",e,t,n),r=k("tensor",e,t,n),a=k("elementShape",e,t,n),o=k("numElements",e,t,n),i=HV(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=k("elementShape",e,t,n),r=k("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=k(a,e,t,n),i=GV(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=k("tensorListId",e,t,n),r=k("indices",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=k("tensorListId",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=k("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=k("tensor",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=UV(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=k("tensorListId",e,t,n),r=n.getTensorList(s.id),a=k("dtype",e,t,n),o=k("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=k("tensorListId",e,t,n),r=k("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=k("tensorListId",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=k("tensor",e,t,n),r=k("elementShape",e,t,n),a=k("lengths",e,t,n),o=jV(s,a,r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function m5(e,t,n){let[s,r]=k("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",c=k("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=k("strides",e,t,n),d=Pp(e,t,n),h=k("dataFormat",e,t,n).toUpperCase(),p=k("dilations",e,t,n),[f,m]=k("args",e,t,n);o&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var XV=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=k("stride",e,t,n),r=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[uy(k("x",e,t,n),k("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=k("strides",e,t,n),r=Pp(e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[Oa(k("x",e,t,n),k("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=m5(e,t,n);return[za.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=m5(e,t,n);return[za.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=k("outputShape",e,t,n),r=k("strides",e,t,n),a=Pp(e,t,n);return[dy(k("x",e,t,n),k("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=k("strides",e,t,n),r=Pp(e,t,n),a=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[Yd(k("input",e,t,n),k("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[hy(k("x",e,t,n),k("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[om(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[mm(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Ak(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[iy(k("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[vy(k("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("dilations",e,t,n),o=s[1],i=s[2],l=a[1],c=a[2];return[rk(k("x",e,t,n),k("filter",e,t,n),[o,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},KV=(e,t,n)=>{switch(e.op){case"Fill":{let s=k("shape",e,t,n),r=k("dtype",e,t,n),a=k("value",e,t,n);return[oc(s,a,r)]}case"LinSpace":{let s=k("start",e,t,n),r=k("stop",e,t,n),a=k("num",e,t,n);return[ck(s,r,a)]}case"Multinomial":{let s=k("logits",e,t,n),r=k("numSamples",e,t,n),a=k("seed",e,t,n);return[xk(s,r,a)]}case"OneHot":{let s=k("indices",e,t,n),r=k("depth",e,t,n),a=k("onValue",e,t,n),o=k("offValue",e,t,n);return[bd(s,r,a,o)]}case"Ones":return[us(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[Ss(k("x",e,t,n))];case"RandomUniform":return[lc(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"Range":{let s=k("start",e,t,n),r=k("stop",e,t,n),a=k("step",e,t,n);return[Au(s,r,a,k("dtype",e,t,n))]}case"TruncatedNormal":{let s=k("shape",e,t,n),r=k("mean",e,t,n),a=k("stdDev",e,t,n),o=k("seed",e,t,n);return[km(s,r,a,k("dtype",e,t,n),o)]}case"Zeros":return[Vt(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[Qe(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function e1(e,t,n){let s=k("boxes",e,t,n),r=k("scores",e,t,n),a=k("maxOutputSize",e,t,n),o=k("iouThreshold",e,t,n),i=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var ZV=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=e1(e,t,n),c=await Oe.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=e1(e,t,n),l=k("padToMaxOutputSize",e,t,n),c=await Oe.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=e1(e,t,n);return[await Oe.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=he(k("condition",e,t,n),"bool"),r=[await Fy(s)];return s.dispose(),r}case"ListDiff":return kk(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},YV=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=k("x",e,t,n),r=k("k",e,t,n),a=k("sorted",e,t,n),o=Nk(s,r,a);return[o.values,o.indices]}case"Unique":{let s=k("x",e,t,n),r=X1(s);return[r.values,r.indices]}case"UniqueV2":{let s=k("x",e,t,n),r=k("axis",e,t,n),a=X1(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},JV=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=k("default",e,t,n);return[Cn(e.name,t,n)||s];case"Placeholder":return[Cn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=k("x",e,t,n);return[zr(c)]}case"IdentityN":return k("x",e,t,n).map(c=>zr(c));case"Snapshot":let r=k("x",e,t,n);return[zr(r)];case"Shape":return[zt(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(c=>zt(c.shape));case"Size":return[Ce(k("x",e,t,n).size,"int32")];case"Rank":return[Ce(k("x",e,t,n).rank,"int32")];case"NoOp":return[Ce(1)];case"Print":let a=k("x",e,t,n),o=k("data",e,t,n),i=k("message",e,t,n),l=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},QV=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ce(0),this.tensorMap=new Map,ln(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),K(()=>{let s=Cs(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];ln(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return K(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return _n(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},eU=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=k("keyDType",e,t,n),a=k("valueDType",e,t,n),o=new QV(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=k("tableHandle",e,t,n,s),a=k("keys",e,t,n),o=k("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=k("tableHandle",e,t,n,s),a=k("keys",e,t,n),o=k("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=k("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},tU=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=k("images",e,t,n),r=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Oe.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=k("images",e,t,n),r=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Oe.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=k("image",e,t,n),r=k("boxes",e,t,n),a=k("boxInd",e,t,n),o=k("cropSize",e,t,n),i=k("method",e,t,n),l=k("extrapolationValue",e,t,n);return[Oe.cropAndResize(s,r,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},nU=(e,t,n)=>{switch(e.op){case"Equal":return[vs(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[gu(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[hs(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[yl(k("a",e,t,n),k("b",e,t,n))];case"Less":return[gy(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[xl(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[rr(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[fm(k("a",e,t,n))];case"LogicalOr":return[by(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[Rn(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sU=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[He(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[ok(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[Je(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[s,r]=k("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=k("numArgs",e,t,n),l=k("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=k("args",e,t,n);return[za.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},rU=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[fu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[fu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[dk(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[th(k("x",e,t,n))];case"LogSoftmax":return[Ay(k("x",e,t,n))];case"SparseToDense":return[Oy(k("sparseIndices",e,t,n),k("outputShape",e,t,n),k("sparseValues",e,t,n),k("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aU=(e,t,n)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Tn(k("x",e,t,n),o,i)]}case"Mean":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Mt(k("x",e,t,n),o,i)]}case"Min":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[hi(k("x",e,t,n),o,i)]}case"Sum":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Se(k("x",e,t,n),o,i)]}case"All":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[ay(k("x",e,t,n),o,i)]}case"Any":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[rf(k("x",e,t,n),o,i)]}case"ArgMax":{let o=k("axis",e,t,n);return[jr(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[Mw(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[wy(k("x",e,t,n),o,i)]}case"Cumsum":{let o=k("axis",e,t,n),i=k("exclusive",e,t,n),l=k("reverse",e,t,n);return[fy(k("x",e,t,n),o,i,l)]}case"Bincount":let s=k("x",e,t,n),r=k("weights",e,t,n),a=k("size",e,t,n);return[ly(s,r,a)];case"DenseBincount":{let o=k("x",e,t,n),i=k("weights",e,t,n),l=k("size",e,t,n),c=k("binaryOutput",e,t,n);return[nk(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},oU=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=k("n",e,t,n),r=k("axis",e,t,n),a=k("tensors",e,t,n);return a=a.slice(0,s),[Tt(a,r)]}case"Gather":{let s=k("x",e,t,n),r=k("indices",e,t,n);return[mu(s,he(r,"int32"),0)]}case"GatherV2":{let s=k("axis",e,t,n),r=k("batchDims",e,t,n),a=k("x",e,t,n),o=k("indices",e,t,n);return[mu(a,he(o,"int32"),s,r)]}case"Reverse":{let s=k("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=k("x",e,t,n);return[Is(a,r)]}case"ReverseV2":{let s=k("axis",e,t,n),r=k("x",e,t,n);return[Is(r,s)]}case"Slice":{let s=k("begin",e,t,n),r=k("size",e,t,n);return[Pe(k("x",e,t,n),s,r)]}case"StridedSlice":{let s=k("begin",e,t,n),r=k("end",e,t,n),a=k("strides",e,t,n),o=k("beginMask",e,t,n),i=k("endMask",e,t,n),l=k("ellipsisMask",e,t,n),c=k("newAxisMask",e,t,n),u=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[Ik(d,s,r,a,o,i,l,c,u)]}case"Pack":return K(()=>{let s=k("axis",e,t,n),r=k("tensors",e,t,n),a=r[0].shape,o=ft(r[0]).shape,i=r.map(l=>{let c=w.arraysEqual(l.shape,a);if(!c&&!w.arraysEqual(ft(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:q(l,a)});return[_n(i,s)]});case"Unpack":{let s=k("axis",e,t,n),r=k("tensor",e,t,n);return Cs(r,s)}case"Tile":{let s=k("reps",e,t,n);return[zs(k("x",e,t,n),s)]}case"Split":case"SplitV":{let s=k("axis",e,t,n),r=k("numOrSizeSplits",e,t,n),a=k("x",e,t,n);return bn(a,r,s)}case"ScatterNd":{let s=k("indices",e,t,n),r=k("values",e,t,n),a=k("shape",e,t,n);return[$k(s,r,a)]}case"GatherNd":{let s=k("x",e,t,n),r=k("indices",e,t,n);return[Dk(s,r)]}case"SparseToDense":{let s=k("sparseIndices",e,t,n),r=k("outputShape",e,t,n),a=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[Oy(s,a,r,a.dtype===o.dtype?o:he(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},iU=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=Xc.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=Xc.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Xc.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[Xc.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lU=(e,t,n)=>{switch(e.op){case"FFT":return[vm(k("x",e,t,n))];case"IFFT":return[wd(k("x",e,t,n))];case"RFFT":return[wm(k("x",e,t,n))];case"IRFFT":return[$y(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},uU=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=Fp.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=Fp.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Fp.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},cU=(e,t,n)=>{switch(e.op){case"Cast":return[he(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let s=k("axis",e,t,n);return[on(k("x",e,t,n),s)]}case"Squeeze":{let s=k("axis",e,t,n);return[ft(k("x",e,t,n),s)]}case"Reshape":return[q(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[yk(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[Ir(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let s=k("blockShape",e,t,n),r=k("paddings",e,t,n);return[ym(k("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=k("blockShape",e,t,n),r=k("crops",e,t,n);return[im(k("x",e,t,n),s,r)]}case"DepthToSpace":{let s=k("blockSize",e,t,n),r=k("dataFormat",e,t,n).toUpperCase();return[sk(k("x",e,t,n),s,r)]}case"BroadcastTo":return[id(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[Kw(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function g5(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return K(()=>BV(a,o,i));case"basic_math":return K(()=>WV(a,o,i));case"control":return qV(a,o,i);case"convolution":return K(()=>XV(a,o,i));case"creation":return K(()=>KV(a,o,i));case"dynamic":return ZV(a,o,i);case"evaluation":return K(()=>YV(a,o,i));case"image":return K(()=>tU(a,o,i));case"graph":return K(()=>JV(a,o,i));case"logical":return K(()=>nU(a,o,i));case"matrices":return K(()=>sU(a,o,i));case"normalization":return K(()=>rU(a,o,i));case"reduction":return K(()=>aU(a,o,i));case"slice_join":return K(()=>oU(a,o,i));case"sparse":return K(()=>iU(a,o,i));case"spectral":return K(()=>lU(a,o,i));case"string":return K(()=>uU(a,o,i));case"transformation":return K(()=>cU(a,o,i));case"hash_table":return eU(a,o,i,s);case"custom":let l=A7(a.op);if(l&&l.customExecutor)return l.customExecutor(new LV(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var A5=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function y5(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(h=>es(h)[0]),u=[];s!=null&&(u=s.map(h=>es(h.name)[0]));let d=[...t];for(;d.length>0;){let h=d.pop();if((L7(h)||mU(h)||gU(h))&&o==null&&(o=h,i=o.children.map(p=>p.name).filter(p=>r.has(p))),r.add(h.name),n[h.name]==null&&c.indexOf(h.name)===-1&&u.indexOf(h.name)===-1){if(h.inputs.length===0){a.push(h.name);continue}h.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),d.push(p))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function dU(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(u=>es(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{s.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{s.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&s.has(d.name)&&d.inputs.every(h=>l.has(h.name))&&a.push(d)})}return c}var hU=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],pU=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],fU=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function L7(e){return hU.indexOf(e.op)>=0}function mU(e){return pU.indexOf(e.op)>=0}function gU(e){return fU.indexOf(e.op)>=0}var AA=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new AA(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=y5(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return dU(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(u=>this.graph.nodes[es(u)[0]]),r=t.map(u=>es(u)[0]),a=r.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return K(()=>{let u=new A5(this.weightMap,l,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=es(f),A=[];A[g]=e[f],d[m]=A});let h=this.getFrozenTensorIds(d),p={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=g5(m,d,u,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,h,r,p)}}return this.parent==null&&u.dispose(h),t.map(f=>Cn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=yV(i.name,n,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let u=o[c.id];if(u===1){if(!this.keepTensorForDebug)c.dispose();else{let[d,h]=Ar(t.name,s);this.intermediateTensors[d]?this.intermediateTensors[d][h]=c:(this.intermediateTensors[d]=[],this.intermediateTensors[d][h]=c)}delete o[c.id]}else u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();let a=new A5(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(c=>Cn(c,this.tensorsMap,a)),i=o.map(c=>c.id),l=Object.keys(e).map(c=>e[c].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[es(x)[0]]),o=n.map(x=>es(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=y5(e,i,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),p={...this.weightMap};Object.keys(e).forEach(x=>{let[y,b]=es(x),v=[];v[b]=e[x],p[y]=v});let f={},m=this.getFrozenTensorIds(p),g={};for(;h.length>0;){let x=this.processStack(a,h,t,p,g,m,o,f,l);await Promise.all(x)}u==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=i.filter(x=>!L7(x)&&!Cn(x.name,p,t)).map(x=>x.name);if(A.length>0){let x="";throw u!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${x}`)}return p}processStack(e,t,n,s,r,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&k("isConstant",u.node,s,n)&&([d]=Ar(u.node.name,n)),s[u.node.name]==null){let h=g5(u.node,s,n,this._resourceManager);d||([d]=Ar(u.node.name,n));let p=n.currentContext;w.isPromise(h)?c.push(h.then(f=>(s[d]=f,n.currentContext=p,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l),f))):(s[d]=h,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l))}else this.processChildNodes(u.node,t,n,s,r,l)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=Ar(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Cn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Cn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=es(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);w.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=es(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=es(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},AU=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},yU="?tfjs-format=file",xU="model.json",gx=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new AU}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=In.browserHTTPRequest(e,this.loadOptions);else{let t=In.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(In.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=In.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new AA(h5.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=h5.Instance.transformGraph(e.modelInitializer);this.initializer=new AA(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=In.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof tt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function bU(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${xU}${yU}`);let n=new gx(e,t);return await n.load(),n}var vU="0.0.0",B7={};Me(B7,{CSVDataset:()=>J7,Dataset:()=>hc,FileDataSource:()=>aI,TextLineDataset:()=>Y7,URLDataSource:()=>oI,array:()=>GU,csv:()=>tG,func:()=>nG,generator:()=>sG,microphone:()=>aG,version_data:()=>oG,webcam:()=>rG,zip:()=>HU});var wU=Ei(Rf()),kU=Ei(Rf());function SU(e,t){return mf(e,t)}function mf(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(wu(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=mf(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function IU(e,t=V7){return W7(e,t)}function W7(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(wu(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),l=W7(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function V7(e){return e===null?null:wu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function U7(e,t){let n=new Map;mf(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let o=await a;n.set(r,o)}}return mf(e,t,n)}function wu(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=k3();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof tt)&&!(e instanceof Promise)&&!t)}function CU(e){return e==null||NU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof tt||w.isTypedArray(e)}function NU(e){return e===null||typeof e!="object"&&typeof e!="function"}function TU(e){return SU(e,EU)}function EU(e){return e instanceof tt?{value:e.clone(),recurse:!1}:wu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var G7=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},H7=class extends G7{constructor(){super(H7.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},j7=H7;j7.INITIAL_CAPACITY=32;function q7(e){return new $U(e)}function Ax(e){return new DU(e)}function RU(e,t){return new X7(e,t)}function _U(e,t=K7.FAIL){return new VU(e,t)}var dn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new BU(this,e)}filter(e){return new zU(this,e)}map(e){return new LU(this,e)}mapAsync(e){return new x5(this,e)}serialMapAsync(e){return new x5(this,e).serial()}flatmap(e){return new WU(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new MU(this,e,t)}columnMajorBatch(e,t=!0,n=V7){return this.rowMajorBatch(e,t).map(r=>IU(r,n))}concatenate(e,t){return new X7(q7([this,e]),t)}take(e){return e<0||e==null?this:new OU(this,e)}skip(e){return e<0||e==null?this:new PU(this,e)}prefetch(e){return new Z7(this,e)}shuffle(e,t){return new UU(this,e,t)}serial(){return new FU(this)}},$U=class extends dn{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:TU(e),done:!1}}},DU=class extends dn{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},FU=class extends dn{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},PU=class extends dn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ae(e.value)}return this.upstream.next()}},OU=class extends dn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},MU=class extends dn{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},zU=class extends dn{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ae(e.value)}}},LU=class extends dn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Qs.getTensorsInContainer(e.value),n=this.transform(e.value),s=Qs.getTensorsInContainer(n);for(let r of t)Qs.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},BU=class extends dn{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},x5=class extends dn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Qs.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Qs.getTensorsInContainer(n);for(let r of t)Qs.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},yx=class extends dn{constructor(){super();this.outputQueue=new j7,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},WU=class extends yx{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Qs.getTensorsInContainer(e.value),n=this.transform(e.value),s=Qs.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Qs.isTensorInList(r,s)||r.dispose();return!0}},X7=class extends dn{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},K7=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(K7||{}),VU=class extends dn{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof dn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await U7(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Z7=class extends dn{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new G7(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},UU=class extends Z7{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=kU.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},hc=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Qn(async()=>(await n.iterator()).columnMajorBatch(e,t,jU),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Qn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Qn(async()=>(await t.iterator()).filter(s=>K(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Qn(async()=>(await t.iterator()).map(n=>K(()=>e(n))),this.size)}mapAsync(e){let t=this;return Qn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Qn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Qn(async()=>{let s=Ax(async()=>({value:await t.iterator(),done:!1}));return RU(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Qn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=wU.alea(t||w.now().toString());return Qn(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Qn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};hc.MAX_BUFFER_SIZE=1e4;function Qn(e,t=null){return new class extends hc{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function GU(e){return Qn(async()=>q7(e),e.length)}function HU(e){if(!wu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Qn(async()=>{let n=await U7(e,s=>{if(s instanceof hc)return{value:s.iterator(),recurse:!1};if(wu(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return _U(n,1)},t)}function jU(e){if(e===null)return null;let t=e[0];return CU(t)?{value:qU(e),recurse:!1}:{value:null,recurse:!0}}function qU(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof tt?_n(e):lt(e)}var Y7=class extends hc{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},hp='"',Hc=Symbol("out"),b5=Symbol("field"),pp=Symbol("quote"),t1=Symbol("quoteafterquote"),v5=Symbol("quoteinquote"),J7=class extends hc{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Y7(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Hc;for(let o=0;o<r;o++)switch(a){case Hc:switch(e.charAt(o)){case hp:s=o+1,a=pp;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Hc;break;default:a=b5,s=o;break}break;case b5:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=Hc,s=o+1;break;default:}break;case pp:switch(e.charAt(o)){case hp:a=t1;break;default:}break;case t1:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=Hc,s=o+1;break;case hp:a=pp;break;default:a=v5;break}break;case v5:switch(e.charAt(o)){case hp:a=pp;break;default:}break;default:}if(a===t1?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},Q7=class extends dn{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Y().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new Q7(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),lt(n,t)}},eI=class extends dn{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=zt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=Gr([a,r,i,o],[1,4])}else this.cropBox=Gr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Y().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new eI(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=js.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return K(()=>{let t=on(he(e,"float32"),0),n;n=Oe.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return q(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},tI=class{},nI=class extends dn{split(e){return new XU(this,e)}},XU=class extends nI{constructor(e,t){super();this.upstream=e,this.impl=new KU(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},KU=class extends yx{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},ZU=class extends dn{decodeUTF8(){return new YU(this)}},YU=class extends nI{constructor(e){super();this.upstream=e,this.impl=new JU(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},JU=class extends yx{constructor(e){super();if(this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=k3();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},sI=class extends ZU{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function QU(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=eG(e));let a=await(n||w.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new sI(o,t)}else throw new Error(a.statusText)}var eG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function rI(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var aI=class extends tI{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(rI(this.input)&&Y().get("IS_NODE")){let e=qp();this.input=e.readFileSync(this.input.substr(7))}return new sI(this.input,this.options)}},oI=class extends tI{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return rI(this.url)?new aI(this.url,this.fileOptions).iterator():QU(this.url,this.fileOptions)}};function tG(e,t={}){return new J7(new oI(e),t)}function nG(e){let t=Ax(e);return Qn(async()=>t)}function sG(e){return Qn(async()=>{let t=await e();return Ax(()=>t.next())})}async function rG(e,t){return eI.create(e,t)}async function aG(e){return Q7.create(e)}var oG="0.0.0";function Ee(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var iG=Ws.whereImpl,iI=class extends Eu{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Td(this,rs())}nextDataId(){return iI.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&T.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return rs().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ee([e],"where");let t=this.readSync(e.dataId);return iG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},xx=iI;xx.nextDataId=0;var n0={};Me(n0,{addImpl:()=>uI,bincountImpl:()=>vx,bincountReduceImpl:()=>cI,ceilImpl:()=>dI,concatImpl:()=>wx,equalImpl:()=>hI,expImpl:()=>fI,expm1Impl:()=>gI,floorImpl:()=>AI,gatherNdImpl:()=>yI,gatherV2Impl:()=>xI,greaterEqualImpl:()=>vI,greaterImpl:()=>bI,lessEqualImpl:()=>kI,lessImpl:()=>wI,linSpaceImpl:()=>SI,logImpl:()=>II,maxImpl:()=>CI,maximumImpl:()=>NI,minimumImpl:()=>TI,multiplyImpl:()=>kx,negImpl:()=>EI,notEqualImpl:()=>RI,prodImpl:()=>_I,rangeImpl:()=>Ix,rsqrtImpl:()=>$I,sigmoidImpl:()=>KG,simpleAbsImpl:()=>lI,sliceImpl:()=>Af,sparseFillEmptyRowsImpl:()=>FI,sparseReshapeImpl:()=>PI,sparseSegmentReductionImpl:()=>Cx,sqrtImpl:()=>JG,squaredDifferenceImpl:()=>OI,stridedSliceImpl:()=>MI,stringNGramsImpl:()=>zI,stringSplitImpl:()=>LI,stringToHashBucketFastImpl:()=>BI,subImpl:()=>WI,tileImpl:()=>VI,topKImpl:()=>GI,transposeImpl:()=>Sx,uniqueImpl:()=>HI});function lI(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var lG=e=>{let{x:t}=e.inputs,n=e.backend;Ee(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=lI(r),n.makeOutput(s,t.shape,t.dtype)},uG={kernelName:_i,backendName:"cpu",kernelFunc:lG};function qt(e){return(t,n,s,r,a)=>{let o=T.assertAndGetBroadcastShape(t,n),i=o.length,l=w.computeStrides(o),c=w.sizeFromShape(o),u=w.getTypedArrayFromDType(a,c),d=t.length,h=n.length,p=w.computeStrides(t),f=w.computeStrides(n),m=T.getBroadcastDims(t,o),g=T.getBroadcastDims(n,o);if(m.length+g.length===0)for(let A=0;A<u.length;++A)u[A]=e(s[A%s.length],r[A%r.length]);else for(let A=0;A<u.length;++A){let x=w.indexToLoc(A,i,l),y=x.slice(-d);m.forEach(S=>y[S]=0);let b=w.locToIndex(y,d,p),v=x.slice(-h);g.forEach(S=>v[S]=0);let C=w.locToIndex(v,h,f);u[A]=e(s[b],r[C])}return[u,o]}}function is(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var cG={kernelName:Rd,backendName:"cpu",kernelFunc:is};function gf(e,t,n="float32"){if(n==="complex64"){let r=gf(e,t,"float32"),a=gf(e,t,"float32");return is({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function kr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var dG={kernelName:uo,backendName:"cpu",kernelFunc:kr};function wi(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var hG={kernelName:Ld,backendName:"cpu",kernelFunc:wi};function Ua(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return kr({inputs:{x:r},backend:n});let o=gf(n,r.shape,r.dtype),i=Ua({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=is({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=wi({inputs:{input:r},backend:n}),i=Ua({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=kr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=w.toTypedArray([0],r.dtype),[l,c]=qt((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var pG={kernelName:Ka,backendName:"cpu",kernelFunc:Ua};function hn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Ee([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?T.fromUint8ToStringArray(c):c,h=o.dtype==="string"?T.fromUint8ToStringArray(u):u,p=s||o.dtype,[f,m]=t(o.shape,i.shape,d,h,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=Ua({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,p=l.data.get(d.dataId).values,f=l.data.get(h.dataId).values,m=Ua({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),A=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,y=l.data.get(A.dataId).values,b=l.data.get(x.dataId).values,[v,C,S]=n(o.shape,i.shape,p,f,y,b),E=l.makeTensorInfo(S,"float32",v),R=l.makeTensorInfo(S,"float32",C),P=is({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),P}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[h,p]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(p,d,h)}}}function bx(e){return(t,n,s,r,a,o)=>{let i=T.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(i),c=i.length,u=w.computeStrides(i),d=w.getTypedArrayFromDType("float32",l),h=w.getTypedArrayFromDType("float32",l),p=T.getBroadcastDims(t,i),f=T.getBroadcastDims(n,i),m=T.mergeRealAndImagArrays(s,r),g=T.mergeRealAndImagArrays(a,o),A=t.length,x=w.computeStrides(t),y=n.length,b=w.computeStrides(n);if(p.length+f.length===0)for(let v=0;v<d.length;v++){let C=v%m.length,S=v%g.length,E=e(m[C*2],m[C*2+1],g[S*2],g[S*2+1]);d[v]=E.real,h[v]=E.imag}else for(let v=0;v<d.length;v++){let C=w.indexToLoc(v,c,u),S=C.slice(-A);p.forEach(_=>S[_]=0);let E=w.locToIndex(S,A,x),R=C.slice(-y);f.forEach(_=>R[_]=0);let P=w.locToIndex(R,y,b),$=e(m[E*2],m[E*2+1],g[P*2],g[P*2+1]);d[v]=$.real,h[v]=$.imag}return[d,h,i]}}var uI=qt((e,t)=>e+t),fG=bx((e,t,n,s)=>({real:e+n,imag:t+s})),fh=hn(Kr,uI,fG),mG={kernelName:Kr,backendName:"cpu",kernelFunc:fh};function vx(e,t,n,s,r){let a=w.sizeFromShape(s),o=w.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function cI(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=Le([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Bo(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function ct(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ee(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=w.sizeFromShape(o.shape),u=n||o.dtype,d=w.getArrayFromDType(u,c);for(let h=0;h<c;++h)d[h]=t(l[h],r);return i.makeTensorInfo(o.shape,u,d)}}function pc(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ee(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var dI=Bo(e=>Math.ceil(e)),gG=pc(Za,dI),AG={kernelName:Za,backendName:"cpu",kernelFunc:gG};function wx(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=w.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?T.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var hI=qt((e,t)=>e===t?1:0),pI=hn(Mi,hI,null,"bool"),yG={kernelName:Mi,backendName:"cpu",kernelFunc:pI},fI=Bo(e=>Math.exp(e)),mI=pc(ro,fI,"float32"),xG={kernelName:ro,backendName:"cpu",kernelFunc:mI},gI=Bo(e=>Math.expm1(e)),bG=pc(Li,gI),vG={kernelName:Li,backendName:"cpu",kernelFunc:bG},AI=Bo(e=>Math.floor(e)),wG=pc(ao,AI),kG={kernelName:ao,backendName:"cpu",kernelFunc:wG};function yI(e,t,n,s,r,a,o,i,l){let c=Le([s,a],n);for(let u=0;u<s;u++){let d=[],h=0;for(let p=0;p<r;p++){let f=e[u*r+p];h+=f*o[p],d.push(f)}if(h<0||h>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<a;p++)c.values[u*a+p]=t.get(...t.indexToLoc(h*a+p))}return c}function xI(e,t,n){let s=Le(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}var bI=qt((e,t)=>e>t?1:0),SG=hn(Ui,bI,null,"bool"),IG={kernelName:Ui,backendName:"cpu",kernelFunc:SG},vI=qt((e,t)=>e>=t?1:0),CG=hn(lo,vI,null,"bool"),NG={kernelName:lo,backendName:"cpu",kernelFunc:CG},wI=qt((e,t)=>e<t?1:0),TG=hn(Gi,wI,null,"bool"),EG={kernelName:Gi,backendName:"cpu",kernelFunc:TG},kI=qt((e,t)=>e<=t?1:0),RG=hn(Hi,kI,null,"bool"),_G={kernelName:Hi,backendName:"cpu",kernelFunc:RG};function SI(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var II=Bo(e=>Math.log(e)),$G=pc(ho,II),DG={kernelName:ho,backendName:"cpu",kernelFunc:$G};function CI(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var NI=qt((e,t)=>Math.max(e,t)),FG=hn(fo,NI),PG={kernelName:fo,backendName:"cpu",kernelFunc:FG},TI=qt((e,t)=>Math.min(e,t)),OG=hn(yo,TI),MG={kernelName:yo,backendName:"cpu",kernelFunc:OG},kx=qt((e,t)=>e*t),zG=bx((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),s0=hn(bo,kx,zG),LG={kernelName:bo,backendName:"cpu",kernelFunc:s0};function EI(e,t,n){let s=w.createScalarValue(-1,n);return kx([],t,s,e,n)}function BG(e){let{inputs:t,backend:n}=e,{x:s}=t;Ee(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=EI(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var WG={kernelName:qi,backendName:"cpu",kernelFunc:BG},RI=qt((e,t)=>e!==t?1:0),VG=hn(Xi,RI,null,"bool"),UG={kernelName:Xi,backendName:"cpu",kernelFunc:VG};function Sx(e,t,n,s,r){let a=t.length,o=w.sizeFromShape(t),i=w.computeStrides(t),l=w.computeStrides(r),c=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let u=0;u<o;++u){let d=w.indexToLoc(u,a,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];let p=w.locToIndex(h,a,l);c[p]=e[u]}return c}function Ns(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ee(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let l=s.data.get(r.dataId).values,c=Sx(l,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var GG={kernelName:Oo,backendName:"cpu",kernelFunc:Ns};function _I(e,t,n,s){let[r,a]=T.computeOutAndReduceShapes(e,s),o=En(t,"int32"),i=w.makeZerosTypedArray(w.sizeFromShape(r),o),l=w.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let h=0;h<l;++h)d*=n[u+h];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function HG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"prod");let i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=T.getAxesPermutation(l,i),u=l,d=r,h=[];c!=null&&(d=Ns({inputs:{x:r},backend:n,attrs:{perm:c}}),h.push(d),u=T.getInnerMostAxes(u.length,i));let p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=_I(d.shape,d.dtype,p,u),A=m;return o&&(A=T.expandShapeToKeepDim(m,l)),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(A,g,f)}var jG={kernelName:el,backendName:"cpu",kernelFunc:HG};function Ix(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return w.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var $I=Bo(e=>1/Math.sqrt(e)),qG=pc(No,$I),XG={kernelName:No,backendName:"cpu",kernelFunc:qG},KG=Bo(e=>1/(1+Math.exp(-e))),DI=ct(Eo,e=>1/(1+Math.exp(-e))),ZG={kernelName:Eo,backendName:"cpu",kernelFunc:DI};function Af(e,t,n,s,r){let a=$t.isSliceContinous(s,t,n),o=w.sizeFromShape(n),i=w.computeStrides(s);if(a){let d=$t.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?T.fromUint8ToStringArray(e):e,c=Le(s,r,l),u=Le(n,r);for(let d=0;d<u.size;++d){let h=u.indexToLoc(d),p=h.map((f,m)=>f+t[m]);u.set(c.get(...p),...h)}return r==="string"?T.fromStringArrayToUint8(u.values):u.values}function ki(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Ee(r,"slice");let[i,l]=$t.parseSliceParams(r,a,o);$t.assertParamsValid(r,i,l);let c=n.data.get(r.dataId).values,u=Af(c,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var YG={kernelName:ol,backendName:"cpu",kernelFunc:ki};function FI(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=w.getArrayFromDType(n,0),A=w.getArrayFromDType(r,0);return[g,[0,d],A,c,u]}let h=!0,p=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let A=e[g*d];if(A<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,A));if(A>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,A,l));++f[A],h=h&&A>=p,p=A}let m=!0;for(let g=0;g<l;++g){let A=f[g]===0;c[g]=A,m=m&&!A,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){let g=e,A=s;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],A,c,u]}else{let g=f[l-1],A=w.getArrayFromDType(n,g*d),x=w.getArrayFromDType(r,g),y=new Array(l).fill(0);for(let b=0;b<i;++b){let v=e[b*d],C=y[v],S=(v===0?0:f[v-1])+C;y[v]++;for(let E=0;E<d;++E)A[S*d+E]=e[b*d+E];x[S]=s[b],u[b]=S}for(let b=0;b<l;++b)if(y[b]===0){let C=b===0?0:f[b-1];A[C*d+0]=b;for(let S=1;S<d;++S)A[C*d+S]=0;x[C]=o}return[A,[g,d],x,c,u]}}function PI(e,t,n,s,r){let a=w.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let A=r[g];if(A===-1){if(u!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,l.push(1)}else{if(A<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(g,A));c*=A,l.push(A)}}if(u!==-1){if(c<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/c);if(c*g!==a)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[u]=g}if(w.sizeFromShape(l)!==a)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=w.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let A=0;for(let x=0;x<h;++x)A+=e[g*h+x]*p[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(A/f[x]),A%=f[x]}return[m,[o,i],l]}function Cx(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce((y,b)=>y*b,1),f=w.getArrayFromDType(n,p);if(i===0)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,A=0,x=r[m];for(;;){let y=0;if(g<i){if(y=r[g],x===y){++g;continue}if(x>=y)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>A&&f.fill(o,A*c,x*c);for(let b=m;b<g;++b){let v=s[b];if(v<0||v>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let C=0;C<c;C++)f[x*c+C]+=e[v*c+C]}if(a)for(let b=0;b<c;b++)f[x*c+b]/=g-m;if(m=g,++g,A=x+1,x=y,g>i)break}return A<d&&f.fill(o,A*c,d*c),[f,h]}var JG=Bo(e=>Math.sqrt(e)),QG=ct(Ro,e=>Math.sqrt(e)),eH={kernelName:Ro,backendName:"cpu",kernelFunc:QG},OI=qt((e,t)=>{let n=e-t;return n*n}),tH=hn(Do,OI),nH={kernelName:Do,backendName:"cpu",kernelFunc:tH};function MI(e,t,n,s){let r=Le(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var sH=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),h=0;h+=l*this.leftPad.length;for(let A=0;A<u;++A)h+=e[d+A].length;h+=c*this.rightPad.length,h+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(h);let f=n[s+o],m=0,g=A=>A.forEach(x=>f[m++]=x);for(let A=0;A<l;++A)g(this.leftPad),g(this.separator);for(let A=0;A<u-1;++A)g(e[d+A]),g(this.separator);if(u>0){g(e[d+u-1]);for(let A=0;A<c;++A)g(this.separator),g(this.rightPad)}else{for(let A=0;A<c-1;++A)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],h=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,h,u),c+=h}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,h=1;this.createNGrams(e,l,o,c,h,d)}}return[o,a]}};function zI(e,t,n,s,r,a,o,i){return new sH(n,s,r,a,o,i).compute(e,t)}function rH(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function LI(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let h=0;h<s;++h){let p=r.length;rH(e[h],t,n,r);let f=r.length-p;i[h]=f,a+=f,o=Math.max(o,f)}let l=w.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)l[d*2]=h,l[d*2+1]=p,c[d]=r[d],++d;return[l,c,u]}function BI(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var WI=qt((e,t)=>e-t),aH=bx((e,t,n,s)=>({real:e-n,imag:t-s})),Nx=hn(Fo,WI,aH),oH={kernelName:Fo,backendName:"cpu",kernelFunc:Nx};function VI(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=Le(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var Yc=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function UI(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),h=Math.max(n,Math.floor(t-l*u/i+d)),p=Math.min(s,Math.floor(t+(i-l)*u/i+d));UI(e,t,h,p)}let r=e[t],a=n,o=s;for(w.swap(e,n,t),Yc(e[s],r)>0&&w.swap(e,n,s);a<o;){for(w.swap(e,a,o),a++,o--;Yc(e[a],r)<0;)a=a+1;for(;Yc(e[o],r)>0;)o=o-1}Yc(e[n],r)===0?w.swap(e,n,o):(o=o+1,w.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function GI(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=w.getTypedArrayFromDType(n,o*s),c=w.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let h=d*i,p=e.subarray(h,h+i),f=new Array(p.length);p.forEach((x,y)=>f[y]={value:x,index:y}),s<f.length&&(UI(f,s),f=f.slice(0,s)),r&&f.sort(Yc);let m=d*s,g=l.subarray(m,m+s),A=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,A[x]=f[x].index}let u=t.slice();return u[u.length-1]=s,[Le(u,n,l),Le(u,"int32",c)]}function HI(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new Qt(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let A=0;A<a[0];A++)for(let x=0;x<a[2];x++)g.push(l.get(A,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let h=new Qt(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let A=0;A<a[2];A++)h.set(l.get(g,f,A),g,m,A)});let p=n.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}var iH="0.0.0";ac("cpu",()=>new xx,1);var jI=ct(so,e=>e>=0?e:Math.exp(e)-1),lH={kernelName:so,backendName:"cpu",kernelFunc:jI};function qI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ee([r],"leakyRelu");let o=w.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=w.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",l)}var uH={kernelName:co,backendName:"cpu",kernelFunc:qI},cH=qt((e,t)=>e<0?t*e:e);function XI(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ee([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=cH(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var dH={kernelName:ko,backendName:"cpu",kernelFunc:XI},KI=ct(So,e=>Math.max(0,e)),hH={kernelName:So,backendName:"cpu",kernelFunc:KI},ZI=ct(Co,e=>Math.min(Math.max(0,e),6)),pH={kernelName:Co,backendName:"cpu",kernelFunc:ZI};function Tx(e,t,n,s,r){if(n==="linear")return kr({inputs:{x:t},backend:e});if(n==="relu")return KI({inputs:{x:t},backend:e});if(n==="elu")return jI({inputs:{x:t},backend:e});if(n==="relu6")return ZI({inputs:{x:t},backend:e});if(n==="prelu")return XI({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return qI({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return DI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Rt(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(i);w.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var fH={kernelName:tl,backendName:"cpu",kernelFunc:Rt};function YI(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Ee([r,a],"matMul");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],h=o?r.shape[l-1]:r.shape[l-2],p=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),A=w.sizeFromShape(m),y=Al.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,h]:[g,h,u],v=i?[A,p,d]:[A,d,p],C=Rt({inputs:{x:r},backend:n,attrs:{shape:b}}),S=Rt({inputs:{x:a},backend:n,attrs:{shape:v}}),E=o?C.shape[1]:C.shape[2],R=o?C.shape[2]:C.shape[1],P=i?S.shape[1]:S.shape[2],$=Math.max(g,A),_=n.data.get(C.dataId).values,N=n.data.get(S.dataId).values,O=w.computeStrides(C.shape),z=w.computeStrides(S.shape),[j,L,B]=o?[O[0],1,O[1]]:[O[0],O[1],1],[W,J,ee]=i?[1,z[1],z[0]]:[z[1],1,z[0]],re=R*P,Z=Le([$,R,P],C.dtype),se=Z.values,ne=n.blockSize;for(let de=0;de<$;de++)for(let xe=0;xe<R;xe+=ne)for(let Ie=0;Ie<P;Ie+=ne)for(let we=0;we<E;we+=ne){let $e=Math.min(xe+ne,R),ze=Math.min(Ie+ne,P),Xe=Math.min(we+ne,E);for(let je=xe;je<$e;je++)for(let Ke=Ie;Ke<ze;Ke++){let dt=0;for(let st=we;st<Xe;st++){let ht=Math.min(de,g-1)*j,St=Math.min(de,A-1)*ee,zn=_[ht+je*L+st*B],rt=N[st*W+Ke*J+St];dt+=zn*rt}se[de*re+(je*P+Ke)]+=dt}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(y,Z.dtype,Z.values)}var mH={kernelName:Xa,backendName:"cpu",kernelFunc:YI};function gH(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,h,p,f,m=[];h=YI({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(p=fh({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),u&&(f=Tx(n,h,u,i,d),m.push(h),h=f);for(let A of m)n.disposeIntermediateTensorInfo(A);return h}var AH={kernelName:Ra,backendName:"cpu",kernelFunc:gH},yH=ct(_u,e=>Math.acos(e)),xH={kernelName:_u,backendName:"cpu",kernelFunc:yH},bH=ct($u,e=>Math.acosh(e)),vH={kernelName:$u,backendName:"cpu",kernelFunc:bH};function wH(e){let{inputs:t,backend:n}=e,s=t;Ee(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=Le(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var kH={kernelName:Ha,backendName:"cpu",kernelFunc:wH};function SH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"all");let i=w.parseAxisParam(a,r.shape),l=i,c=T.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ns({inputs:{x:r},backend:n,attrs:{perm:c}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),p=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*p,y=m[x];for(let b=0;b<p;++b){let v=m[x+b];y=y&&v}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=T.expandShapeToKeepDim(d,i),x=Rt({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var IH={kernelName:Du,backendName:"cpu",kernelFunc:SH};function CH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"any");let i=w.parseAxisParam(a,r.shape),l=i,c=T.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ns({inputs:{x:r},backend:n,attrs:{perm:c}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),p=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*p,y=m[x];for(let b=0;b<p;++b){let v=m[x+b];y=y||v}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=T.expandShapeToKeepDim(d,i),x=Rt({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var NH={kernelName:Fu,backendName:"cpu",kernelFunc:CH};function TH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ee(r,"argMax");let o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ns({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=T.computeOutAndReduceShapes(l.shape,o),h=w.sizeFromShape(u),p=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<p.length;++g){let A=g*f,x=m[A],y=0;for(let b=0;b<f;++b){let v=m[A+b];v>x&&(x=v,y=b)}p[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",p)}var EH={kernelName:ja,backendName:"cpu",kernelFunc:TH};function RH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ee(r,"argMin");let o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ns({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=T.computeOutAndReduceShapes(l.shape,o),h=w.sizeFromShape(u),p=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<p.length;++g){let A=g*f,x=m[A],y=0;for(let b=0;b<f;++b){let v=m[A+b];v<x&&(x=v,y=b)}p[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",p)}var _H={kernelName:Pu,backendName:"cpu",kernelFunc:RH},$H=ct(Ou,e=>Math.asin(e)),DH={kernelName:Ou,backendName:"cpu",kernelFunc:$H},FH=ct(Mu,e=>Math.asinh(e)),PH={kernelName:Mu,backendName:"cpu",kernelFunc:FH},OH=ct(zu,e=>Math.atan(e)),MH={kernelName:zu,backendName:"cpu",kernelFunc:OH},zH=qt((e,t)=>Math.atan2(e,t)),LH=hn(Bu,zH),BH={kernelName:Bu,backendName:"cpu",kernelFunc:LH},WH=ct(Lu,e=>Math.atanh(e)),VH={kernelName:Lu,backendName:"cpu",kernelFunc:WH};function Ex(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(r.outShape,n),g=m.values,A=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let b=0;b<r.batchSize;++b){let v=b*A,C=b*s[0];for(let S=0;S<r.inChannels;++S)for(let E=0;E<r.outHeight;++E){let R=E*o-h,P=Math.max(0,R),$=Math.min(r.inHeight,u+R),_=v+E*x;for(let N=0;N<r.outWidth;++N){let O=N*i-p,z=Math.max(0,O),j=Math.min(r.inWidth,d+O),L=f,B=0,W=0;for(let ee=P;ee<$;ee+=l){let re=C+ee*s[1];for(let Z=z;Z<j;Z+=c){let se=re+Z*s[2],ne=e[se+S];a==="max"&&ne>L?L=ne:a==="avg"&&(B+=ne,W++)}if(isNaN(L))break}let J=_+N*y+S;g[J]=a==="avg"?B/W:L}}}return m}function JI(e,t,n,s,r=!1,a=!1){let o=Le(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Le(t,n,e);for(let g=0;g<s.batchSize;++g)for(let A=0;A<s.inChannels;++A)for(let x=0;x<s.outHeight;++x){let y=x*i-p,b=y;for(;b<0;)b+=c;let v=Math.min(s.inHeight,d+y);for(let C=0;C<s.outWidth;++C){let S=C*l-f,E=S;for(;E<0;)E+=u;let R=Math.min(s.inWidth,h+S),P=Number.NEGATIVE_INFINITY,$=-1;for(let _=b;_<v;_+=c){let N=_-y;for(let O=E;O<R;O+=u){let z=O-S,j=m.get(g,_,O,A);j>P&&(P=j,r?$=a?((g*s.inHeight+_)*s.inWidth+O)*s.inChannels+A:(_*s.inWidth+O)*s.inChannels+A:$=N*h+z)}}o.set($,g,x,C,A)}}return o}function QI(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,A=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Le(r.outShape,n),b=y.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let P=R*v,$=R*s[0];for(let _=0;_<r.inChannels;++_)for(let N=0;N<r.outDepth;++N){let O=N*o-m,z=O;for(;z<0;)z+=c;let j=Math.min(r.inDepth,h+O),L=P+N*C;for(let B=0;B<r.outHeight;++B){let W=B*i-g,J=W;for(;J<0;)J+=u;let ee=Math.min(r.inHeight,p+W),re=L+B*S;for(let Z=0;Z<r.outWidth;++Z){let se=Z*l-A,ne=se;for(;ne<0;)ne+=d;let de=Math.min(r.inWidth,f+se),xe=re+Z*E,Ie=x,we=0,$e=0;for(let Xe=z;Xe<j;Xe+=c){let je=$+Xe*s[1];for(let Ke=J;Ke<ee;Ke+=u){let dt=je+Ke*s[2];for(let st=ne;st<de;st+=d){let ht=dt+st*s[3],St=e[ht+_];if(a==="max"&&St>Ie?Ie=St:a==="avg"&&(we+=St,$e++),isNaN(Ie))break}if(isNaN(Ie))break}if(isNaN(Ie))break}let ze=xe+_;b[ze]=a==="avg"?we/$e:Ie}}}}return y}function UH(e,t){let n=Le(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let A=0;A<t.outDepth;++A){let x=A*s-h,y=x;for(;y<0;)y+=o;let b=Math.min(t.inDepth,c+x);for(let v=0;v<t.outHeight;++v){let C=v*r-p,S=C;for(;S<0;)S+=i;let E=Math.min(t.inHeight,u+C);for(let R=0;R<t.outWidth;++R){let P=R*a-f,$=P;for(;$<0;)$+=l;let _=Math.min(t.inWidth,d+P),N=Number.NEGATIVE_INFINITY,O=-1;for(let z=y;z<b;z+=o){let j=z-x;for(let L=S;L<E;L+=i){let B=L-C;for(let W=$;W<_;W+=l){let J=W-P,ee=e.get(m,z,L,W,g);ee>=N&&(N=ee,O=j*u*d+B*u+J)}}}n.set(O,m,A,v,R,g)}}}return n}function GH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ee(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=T.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=kr({inputs:{x:r},backend:n});else{let h=n.data.get(r.dataId).values,p=w.computeStrides(r.shape),f=Ex(h,r.shape,r.dtype,p,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var HH={kernelName:qa,backendName:"cpu",kernelFunc:GH};function jH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ee(r,"avgPool3d");let u=T.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,h=QI(d,r.shape,r.dtype,w.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}var qH={kernelName:Ed,backendName:"cpu",kernelFunc:jH};function XH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ee([r,a],"avgPool3DGrad");let u=T.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,h=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,A=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,C=u.effectiveFilterWidth,S=b-1-u.padInfo.front,E=C-1-u.padInfo.left,R=v-1-u.padInfo.top,P=Le(a.shape,"float32"),$=1/(f*m*g),_=n.bufferSync(r);for(let N=0;N<u.batchSize;++N)for(let O=0;O<u.inChannels;++O)for(let z=0;z<u.inDepth;++z)for(let j=0;j<u.inHeight;++j)for(let L=0;L<u.inWidth;++L){let B=z-S,W=j-R,J=L-E,ee=0;for(let re=0;re<b;re+=A){let Z=(B+re)/d;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let se=0;se<v;se+=x){let ne=(W+se)/h;if(!(ne<0||ne>=u.outHeight||Math.floor(ne)!==ne))for(let de=0;de<C;de+=y){let xe=(J+de)/p;if(xe<0||xe>=u.outWidth||Math.floor(xe)!==xe)continue;ee+=_.get(N,Z,ne,xe,O)}}}P.set(ee*$,N,z,j,L,O)}return n.makeTensorInfo(P.shape,P.dtype,P.values)}var KH={kernelName:Ff,backendName:"cpu",kernelFunc:XH};function ZH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ee([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=T.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,h=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,A=u.effectiveFilterHeight,x=u.effectiveFilterWidth,y=x-1-u.padInfo.left,b=A-1-u.padInfo.top,v=Le(o.shape,"float32"),C=1/(p*f),S=n.data.get(r.dataId).values,E=Le(r.shape,"float32",S);for(let R=0;R<u.batchSize;++R)for(let P=0;P<u.inChannels;++P)for(let $=0;$<u.inHeight;++$)for(let _=0;_<u.inWidth;++_){let N=$-b,O=_-y,z=0;for(let j=0;j<A;j+=m){let L=(N+j)/d;if(!(L<0||L>=u.outHeight||Math.floor(L)!==L))for(let B=0;B<x;B+=g){let W=(O+B)/h;if(W<0||W>=u.outWidth||Math.floor(W)!==W)continue;z+=E.get(R,L,W,P)}}v.set(z*C,R,$,_,P)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var YH={kernelName:Df,backendName:"cpu",kernelFunc:ZH};function JH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;w.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ee([r,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,h=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,A=p.length,x=h.length,y=d.length,b=0,v=0,C=0,S=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-d[v++])*p[C++]/Math.sqrt(h[S++]+c),b>=g&&(b=0),v>=y&&(v=0),C>=A&&(C=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var QH={kernelName:io,backendName:"cpu",kernelFunc:JH};function ej(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Ee([r],"batchToSpaceND");let i=a.reduce((A,x)=>A*x),l=T.getReshaped(r.shape,a,i),c=T.getPermuted(l.length,a.length),u=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(u,o,a.length),p=Rt({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Ns({inputs:{x:p},backend:n,attrs:{perm:c}}),m=Rt({inputs:{x:f},backend:n,attrs:{shape:u}}),g=ki({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var tj={kernelName:$i,backendName:"cpu",kernelFunc:ej};function nj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=vx(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var sj={kernelName:Pf,backendName:"cpu",kernelFunc:nj};function rj(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var aj={kernelName:Of,backendName:"cpu",kernelFunc:rj},oj=ct(Zr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),ij={kernelName:Zr,backendName:"cpu",kernelFunc:oj},lj=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return n.makeOutput(s,t.shape,"float32")},uj={kernelName:_d,backendName:"cpu",kernelFunc:lj};function ku(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var cj={kernelName:Pd,backendName:"cpu",kernelFunc:ku};function Su(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>w.sizeFromShape(m.shape)>0);if(i.length===1)return kr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(T.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>wi({inputs:{input:b},backend:n})),g=i.map(b=>ku({inputs:{input:b},backend:n})),A=Su({inputs:m,backend:n,attrs:{axis:a}}),x=Su({inputs:g,backend:n,attrs:{axis:a}}),y=is({inputs:{real:A,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),y}let c=i.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return Rt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,h=wx(u,o,t[0].dtype,d),p=T.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(p,t[0].dtype,h);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var dj={kernelName:Di,backendName:"cpu",kernelFunc:Su};function e4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Ee([r,a],"conv2d");let d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,A=h.padInfo.left,x=h.padInfo.top,y=h.dataFormat==="channelsLast",b=new Qt(h.outShape,r.dtype),v=w.computeStrides(r.shape),C=w.computeStrides(a.shape),S=v[0],E=y?v[1]:v[2],R=y?v[2]:1,P=y?1:v[1],$=b.strides[0],_=y?b.strides[1]:b.strides[2],N=y?b.strides[2]:1,O=y?1:b.strides[1],z=n.data.get(r.dataId).values,j=n.data.get(a.dataId).values,L=b.values;for(let B=0;B<h.batchSize;++B){let W=B*S,J=B*$;for(let ee=0;ee<h.outHeight;++ee){let re=J+ee*_,Z=ee*h.strideHeight-x;for(let se=0;se<p;++se){let ne=Z+se*m;if(ne<0||ne>=h.inHeight)continue;let de=se*C[0],xe=W+ne*E;for(let Ie=0;Ie<h.outWidth;++Ie){let we=re+Ie*N,$e=Ie*h.strideWidth-A;for(let ze=0;ze<f;++ze){let Xe=$e+ze*g;if(Xe<0||Xe>=h.inWidth)continue;let je=de+ze*C[1],Ke=xe+Xe*R,dt=je;for(let st=0;st<h.inChannels;++st){let ht=z[Ke+st*P];for(let St=0;St<h.outChannels;++St)L[we+St*O]+=ht*j[dt+St];dt+=h.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,L)}var hj={kernelName:Ya,backendName:"cpu",kernelFunc:e4};function pj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Ee([r,a],"conv2dBackpropFilter");let d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,A=h.dataFormat==="channelsLast",x=new Qt(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,S=new Qt(r.shape,r.dtype,v),E=new Qt(a.shape,a.dtype,C);for(let R=0;R<m;++R){let P=Math.max(0,Math.ceil((b-R)/p)),$=Math.min(h.outHeight,(h.inHeight+b-R)/p);for(let _=0;_<g;++_){let N=Math.max(0,Math.ceil((y-_)/f)),O=Math.min(h.outWidth,(h.inWidth+y-_)/f);for(let z=0;z<h.inChannels;++z)for(let j=0;j<h.outChannels;++j){let L=0;for(let B=0;B<h.batchSize;++B)for(let W=P;W<$;++W){let J=R+W*p-b;for(let ee=N;ee<O;++ee){let re=_+ee*f-y;A?L+=S.get(B,J,re,z)*E.get(B,W,ee,j):L+=S.get(B,z,J,re)*E.get(B,j,W,ee)}}x.set(L,R,_,z,j)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var fj={kernelName:Mf,backendName:"cpu",kernelFunc:pj};function mj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;Ee([r,a],"conv2dBackpropInput");let d=w.computeStrides(a.shape),h=w.computeStrides(r.shape),p=T.convertConv2DDataFormat(c),f=T.computeConv2DInfo(o,a.shape,i,1,l,u,!1,p),m=new Qt(f.inShape,"float32"),g=m.values,A=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[y,b,v]=d,{batchSize:C,filterHeight:S,filterWidth:E,inChannels:R,inHeight:P,inWidth:$,outChannels:_,outHeight:N,outWidth:O,strideHeight:z,strideWidth:j}=f;p=f.dataFormat;let L=S-1-f.padInfo.top,B=E-1-f.padInfo.left,W=p==="channelsLast",J=m.strides[0],ee=W?m.strides[1]:m.strides[2],re=W?m.strides[2]:1,Z=W?1:m.strides[1],se=h[0],ne=W?h[1]:h[2],de=W?h[2]:1,xe=W?1:h[1];for(let Ie=0;Ie<C;++Ie)for(let we=0;we<R;++we)for(let $e=0;$e<P;++$e){let ze=$e-L,Xe=Math.max(0,Math.ceil(ze/z)),je=Math.min(N,(S+ze)/z);for(let Ke=0;Ke<$;++Ke){let dt=Ke-B,st=Math.max(0,Math.ceil(dt/j)),ht=Math.min(O,(E+dt)/j),St=0;for(let rt=Xe;rt<je;++rt){let Zn=rt*z-ze;for(let pn=st;pn<ht;++pn){let Es=pn*j-dt,Ln=se*Ie+ne*rt+de*pn,Yn=y*(S-1-Zn)+b*(E-1-Es)+v*we;for(let ps=0;ps<_;++ps){let Rs=A[Ln+xe*ps],fs=x[Yn+ps];St+=Rs*fs}}}let zn=J*Ie+ee*$e+re*Ke+Z*we;g[zn]=St}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var gj={kernelName:Ja,backendName:"cpu",kernelFunc:mj};function Aj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Ee([r,a],"conv3d");let c=T.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,A=g.front,x=g.left,y=g.top,b=new Qt(c.outShape,r.dtype),v=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,S=b.values,E=w.computeStrides(r.shape),R=w.computeStrides(a.shape);for(let P=0;P<c.batchSize;++P){let $=P*E[0],_=P*b.strides[0];for(let N=0;N<c.outDepth;++N){let O=_+N*b.strides[1],z=N*c.strideDepth-A;for(let j=0;j<u;++j){let L=z+j*p;if(L<0||L>=c.inDepth)continue;let B=j*R[0],W=$+L*E[1];for(let J=0;J<c.outHeight;++J){let ee=O+J*b.strides[2],re=J*c.strideHeight-y;for(let Z=0;Z<d;++Z){let se=re+Z*f;if(se<0||se>=c.inHeight)continue;let ne=B+Z*R[1],de=W+se*E[2];for(let xe=0;xe<c.outWidth;++xe){let Ie=ee+xe*c.outChannels,we=xe*c.strideWidth-x;for(let $e=0;$e<h;++$e){let ze=we+$e*m;if(ze<0||ze>=c.inWidth)continue;let Xe=ne+$e*R[2],je=de+ze*c.inChannels,Ke=Xe;for(let dt=0;dt<c.inChannels;++dt){let st=v[je+dt];for(let ht=0;ht<c.outChannels;++ht)S[Ie+ht]+=st*C[Ke+ht];Ke+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var yj={kernelName:$d,backendName:"cpu",kernelFunc:Aj};function xj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Ee([r,a],"conv3dBackpropFilterV2");let c=w.computeStrides(r.shape),u=w.computeStrides(a.shape),d=T.computeConv3DInfo(r.shape,l,o,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,A=d.filterWidth,x=new Qt(d.filterShape,"float32"),y=x.values,[b,v,C,S]=x.strides,E=n.data.get(a.dataId).values,[R,P,$,_]=u,N=n.data.get(r.dataId).values,[O,z,j,L]=c,B=d.padInfo.front,W=d.padInfo.left,J=d.padInfo.top;for(let ee=0;ee<m;++ee){let re=Math.max(0,Math.ceil((B-ee)/h)),Z=Math.min(d.outDepth,(d.inDepth+B-ee)/h),se=ee*b;for(let ne=0;ne<g;++ne){let de=Math.max(0,Math.ceil((J-ne)/p)),xe=Math.min(d.outHeight,(d.inHeight+J-ne)/p),Ie=ne*v+se;for(let we=0;we<A;++we){let $e=Math.max(0,Math.ceil((W-we)/f)),ze=Math.min(d.outWidth,(d.inWidth+W-we)/f),Xe=we*C+Ie;for(let je=0;je<d.inChannels;++je){let Ke=je*S+Xe;for(let dt=0;dt<d.outChannels;++dt){let st=0;for(let ht=0;ht<d.batchSize;++ht){let St=ht*O,zn=ht*R;for(let rt=re;rt<Z;++rt){let pn=(ee+rt*h-B)*z+St,Es=rt*P+zn;for(let Ln=de;Ln<xe;++Ln){let ps=(ne+Ln*p-J)*j+pn,Rs=Ln*$+Es;for(let fs=$e;fs<ze;++fs){let oa=(we+fs*f-W)*L+ps,yn=fs*_+Rs;st+=N[oa+je]*E[yn+dt]}}}}y[Ke+dt]=st}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var bj={kernelName:zf,backendName:"cpu",kernelFunc:xj};function vj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Ee([r],"conv3dBackpropInputV2");let c=w.computeStrides(r.shape),u=w.computeStrides(a.shape),d=T.computeConv3DInfo(l,a.shape,i,1,o),h=new Qt(d.inShape,"float32"),p=h.values,[f,m,g,A]=h.strides,x=n.data.get(r.dataId).values,[y,b,v,C]=c,S=n.data.get(a.dataId).values,[E,R,P,$]=u,{batchSize:_,filterDepth:N,filterHeight:O,filterWidth:z,inChannels:j,inDepth:L,inHeight:B,inWidth:W,outChannels:J,outDepth:ee,outHeight:re,outWidth:Z,strideDepth:se,strideHeight:ne,strideWidth:de}=d,xe=N-1-d.padInfo.front,Ie=O-1-d.padInfo.top,we=z-1-d.padInfo.left;for(let $e=0;$e<_;++$e)for(let ze=0;ze<j;++ze)for(let Xe=0;Xe<L;++Xe){let je=Xe-xe,Ke=Math.max(0,Math.ceil(je/se)),dt=Math.min(ee,(N+je)/se);for(let st=0;st<B;++st){let ht=st-Ie,St=Math.max(0,Math.ceil(ht/ne)),zn=Math.min(re,(O+ht)/ne);for(let rt=0;rt<W;++rt){let Zn=rt-we,pn=Math.max(0,Math.ceil(Zn/de)),Es=Math.min(Z,(z+Zn)/de),Ln=0;for(let Yn=Ke;Yn<dt;++Yn){let ps=Yn*se-je;for(let Rs=St;Rs<zn;++Rs){let fs=Rs*ne-ht;for(let Bn=pn;Bn<Es;++Bn){let oa=Bn*de-Zn,yn=y*$e+b*Yn+v*Rs+C*Bn,ia=E*(N-1-ps)+R*(O-1-fs)+P*(z-1-oa)+$*ze;for(let ms=0;ms<J;++ms){let Ec=x[yn+ms],Rc=S[ia+ms];Ln+=Ec*Rc}}}}p[f*$e+m*Xe+g*st+A*rt+ze]=Ln}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}var wj={kernelName:Lf,backendName:"cpu",kernelFunc:vj},kj=ct(Qa,e=>Math.cos(e)),Sj={kernelName:Qa,backendName:"cpu",kernelFunc:kj},Ij=ct(eo,e=>Math.cosh(e)),Cj={kernelName:eo,backendName:"cpu",kernelFunc:Ij};function Nj(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,h,p]=r.shape,f=a.shape[0],[m,g]=i,A=Le([f,m,g,p],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,v=w.computeStrides(r.shape),C=w.computeStrides(A.shape);for(let S=0;S<f;S++){let E=S*4,R=x[E],P=x[E+1],$=x[E+2],_=x[E+3],N=y[S];if(N>=u)continue;let O=m>1?($-R)*(d-1)/(m-1):0,z=g>1?(_-P)*(h-1)/(g-1):0;for(let j=0;j<m;j++){let L=m>1?R*(d-1)+j*O:.5*(R+$)*(d-1);if(L<0||L>d-1){for(let B=0;B<g;B++)for(let W=0;W<p;W++){let J=W+B*C[2]+j*C[1]+S*C[0];A.values[J]=c}continue}if(l==="bilinear"){let B=Math.floor(L),W=Math.ceil(L),J=L-B;for(let ee=0;ee<g;ee++){let re=g>1?P*(h-1)+ee*z:.5*(P+_)*(h-1);if(re<0||re>h-1){for(let de=0;de<p;de++){let xe=de+ee*C[2]+j*C[1]+S*C[0];A.values[xe]=c}continue}let Z=Math.floor(re),se=Math.ceil(re),ne=re-Z;for(let de=0;de<p;de++){let xe=de+Z*v[2]+B*v[1]+N*v[0],Ie=b[xe];xe=de+se*v[2]+B*v[1]+N*v[0];let we=b[xe];xe=de+Z*v[2]+W*v[1]+N*v[0];let $e=b[xe];xe=de+se*v[2]+W*v[1]+N*v[0];let ze=b[xe],Xe=Ie+(we-Ie)*ne,je=$e+(ze-$e)*ne;xe=de+ee*C[2]+j*C[1]+S*C[0],A.values[xe]=Xe+(je-Xe)*J}}}else for(let B=0;B<g;++B){let W=g>1?P*(h-1)+B*z:.5*(P+_)*(h-1);if(W<0||W>h-1){for(let re=0;re<p;re++){let Z=re+B*C[2]+j*C[1]+S*C[0];A.values[Z]=c}continue}let J=Math.round(W),ee=Math.round(L);for(let re=0;re<p;re++){let Z=re+J*v[2]+ee*v[1]+N*v[0],se=re+B*C[2]+j*C[1]+S*C[0];A.values[se]=b[Z]}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var Tj={kernelName:Pi,backendName:"cpu",kernelFunc:Nj};function Ej(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ee(r,"cumsum");let l=T.getAxesPermutation([a],r.shape.length),c=r;l!=null&&(c=Ns({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=T.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=En(c.dtype,"int32"),h=w.makeZerosTypedArray(w.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(A,x)=>A+f-x-1:(A,x)=>A+x;for(let A=0;A<p.length;A+=f)for(let x=0;x<f;x++){let y=m(A,x);if(x===0)h[y]=o?0:p[y];else{let b=m(A,x-1);h[y]=o?p[b]+h[b]:p[y]+h[b]}}let g=n.makeTensorInfo(c.shape,d,h);if(l!=null){let A=T.getUndoAxesPermutation(l),x=Ns({inputs:{x:g},backend:n,attrs:{perm:A}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),x}return g}var Rj={kernelName:Fi,backendName:"cpu",kernelFunc:Ej};function _j(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=vx(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=cI(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var $j={kernelName:Bf,backendName:"cpu",kernelFunc:_j};function Dj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;w.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*a,h=c*a,p=u/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*h*p),g=0;for(let A=0;A<i;++A)for(let x=0;x<d;++x){let y=Math.floor(x/a),b=x%a;for(let v=0;v<h;++v){let C=Math.floor(v/a),S=v%a,E=(b*a+S)*p;for(let R=0;R<p;++R){let $=R+E+u*(C+c*(y+l*A));m[g++]=f[$]}}}return n.makeTensorInfo([i,d,h,p],r.dtype,m)}var Fj={kernelName:Oi,backendName:"cpu",kernelFunc:Dj};function t4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s;Ee([r,a],"depthwiseConv2DNative");let u=w.computeStrides(r.shape),d=w.computeStrides(a.shape),h=l;h==null&&(h=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);let p=T.computeConv2DInfo(r.shape,a.shape,o,h,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:A,padInfo:x}=p,y=x.left,b=x.top,v=p.outChannels/p.inChannels,C=new Qt(p.outShape,r.dtype),S=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=C.values;for(let P=0;P<p.batchSize;++P){let $=P*u[0],_=P*C.strides[0];for(let N=0;N<p.outHeight;++N){let O=_+N*C.strides[1],z=N*p.strideHeight-b;for(let j=0;j<f;++j){let L=z+j*g;if(L<0||L>=p.inHeight)continue;let B=j*d[0],W=$+L*u[1];for(let J=0;J<p.outWidth;++J){let ee=O+J*C.strides[2],re=J*p.strideWidth-y;for(let Z=0;Z<m;++Z){let se=re+Z*A;if(se<0||se>=p.inWidth)continue;let ne=B+Z*d[1],de=W+se*p.inChannels,xe=ee,Ie=ne;for(let we=0;we<p.inChannels;++we){let $e=S[de+we];for(let ze=0;ze<v;++ze)R[xe+ze]+=$e*E[Ie+ze];xe+=v,Ie+=v}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var Pj={kernelName:to,backendName:"cpu",kernelFunc:t4};function Oj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;Ee([r,a],"depthwiseConv2dNativeBackpropFilter");let d=T.computeConv2DInfo(r.shape,u,o,i,l,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new Qt(d.filterShape,"float32"),A=d.padInfo.left,x=d.padInfo.top,y=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,v=new Qt(r.shape,r.dtype,b),C=n.data.get(a.dataId).values,S=new Qt(a.shape,a.dtype,C);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/h)),P=Math.min(d.outHeight,(d.inHeight+x-E)/h);for(let $=0;$<m;++$){let _=Math.max(0,Math.ceil((A-$)/p)),N=Math.min(d.outWidth,(d.inWidth+A-$)/p);for(let O=0;O<d.outChannels;++O){let z=Math.trunc(O/y),j=O%y,L=0;for(let B=0;B<d.batchSize;++B)for(let W=R;W<P;++W){let J=E+W*h-x;for(let ee=_;ee<N;++ee){let re=$+ee*p-A;L+=v.get(B,J,re,z)*S.get(B,W,ee,O)}}g.set(L,E,$,z,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var Mj={kernelName:Wf,backendName:"cpu",kernelFunc:Oj};function zj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;Ee([r,a],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(r.shape),h=w.computeStrides(a.shape),p=T.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new Qt(p.inShape,"float32"),m=f.values,[g,A,x]=f.strides,y=n.data.get(r.dataId).values,[b,v,C]=d,S=n.data.get(a.dataId).values,[E,R,P]=h,{batchSize:$,filterHeight:_,filterWidth:N,inChannels:O,inHeight:z,inWidth:j,outChannels:L,outHeight:B,outWidth:W,strideHeight:J,strideWidth:ee}=p,re=_-1-p.padInfo.top,Z=N-1-p.padInfo.left,se=L/O;for(let ne=0;ne<$;++ne)for(let de=0;de<O;++de)for(let xe=0;xe<z;++xe){let Ie=xe-re,we=Math.max(0,Math.ceil(Ie/J)),$e=Math.min(B,(_+Ie)/J);for(let ze=0;ze<j;++ze){let Xe=ze-Z,je=Math.max(0,Math.ceil(Xe/ee)),Ke=Math.min(W,(N+Xe)/ee),dt=0;for(let st=we;st<$e;++st){let ht=st*J-Ie;for(let St=je;St<Ke;++St){let zn=St*ee-Xe,rt=b*ne+v*st+C*St,Zn=E*(_-1-ht)+R*(N-1-zn)+P*de;for(let pn=0;pn<se;++pn){let Es=de*se+pn,Ln=y[rt+Es],Yn=S[Zn+pn];dt+=Ln*Yn}}}m[g*ne+A*xe+x*ze+de]=dt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var Lj={kernelName:Vf,backendName:"cpu",kernelFunc:zj};function Bj(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=Le([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var Wj={kernelName:Uf,backendName:"cpu",kernelFunc:Bj},Vj={kernelName:Dd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:A,outWidth:x,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:C,filterWidth:S,dilationHeight:E,dilationWidth:R,outShape:P}=T.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),$=w.sizeFromShape(P),_=P.length,N=w.getArrayFromDType(s.dtype,$);for(let z=0;z<p;++z)for(let j=0;j<A;++j){let L=j*b-y.top;for(let B=0;B<x;++B){let W=B*v-y.left;for(let J=0;J<g;++J){let ee=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<C;++Z){let se=L+Z*E;if(se>=0&&se<f)for(let ne=0;ne<S;++ne){let de=W+ne*R;if(de>=0&&de<m){let xe=w.locToIndex([z,se,de,J],u,w.computeStrides(s.shape)),Ie=w.locToIndex([Z,ne,J],h,w.computeStrides(r.shape)),we=c[xe]+d[Ie];we>ee&&(ee=we)}}}let re=w.locToIndex([z,j,B,J],_,w.computeStrides(P));N[re]=ee}}}return{dataId:l.write(w.toTypedArray(N,s.dtype),P,s.dtype),shape:P,dtype:s.dtype}}},Uj={kernelName:Yp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=w.toNestedArray(s.shape,c.data.get(s.dataId).values),d=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:x,strideHeight:y,strideWidth:b,filterHeight:v,filterWidth:C,dilationHeight:S,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Yp}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let P=w.toNestedArray(R,c.data.get(a.dataId).values),$=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let N=0;N<h;++N)for(let O=0;O<g;++O){let z=O*y-x.top;for(let j=0;j<A;++j){let L=j*b-x.left;for(let B=0;B<m;++B){let W=Number.MIN_SAFE_INTEGER,J=0,ee=0;for(let re=0;re<v;++re){let Z=z+re*S;if(Z>=0&&Z<p)for(let se=0;se<C;++se){let ne=L+se*E;if(ne>=0&&ne<f){let de=u[N][Z][ne][B]+d[re][se][B];de>W&&(W=de,J=re,ee=se)}}}$[J][ee][B]+=P[N][O][j][B]}}}return{dataId:c.write(w.toTypedArray($,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Gj={kernelName:Zp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=w.toNestedArray(s.shape,c.data.get(s.dataId).values),d=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:x,strideHeight:y,strideWidth:b,filterHeight:v,filterWidth:C,dilationHeight:S,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Zp}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let P=w.toNestedArray(R,c.data.get(a.dataId).values),$=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let N=0;N<h;++N)for(let O=0;O<g;++O){let z=O*y-x.top;for(let j=0;j<A;++j){let L=j*b-x.left;for(let B=0;B<m;++B){let W=Number.MIN_SAFE_INTEGER,J=z<0?0:z,ee=L<0?0:L;for(let re=0;re<v;++re){let Z=z+re*S;if(Z>=0&&Z<p)for(let se=0;se<C;++se){let ne=L+se*E;if(ne>=0&&ne<f){let de=u[N][Z][ne][B]+d[re][se][B];de>W&&(W=de,J=Z,ee=ne)}}}$[N][J][ee][B]+=P[N][O][j][B]}}}return{dataId:c.write(w.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function mh(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"sum");let i;r.dtype==="bool"?i=Ua({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=kr({inputs:{x:r},backend:n});let l=i.shape.length,c=w.parseAxisParam(a,i.shape),u=T.getAxesPermutation(c,l),d=c,h=i;u!=null&&(h=Ns({inputs:{x:i},backend:n,attrs:{perm:u}}),d=T.getInnerMostAxes(d.length,l)),T.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[p,f]=T.computeOutAndReduceShapes(h.shape,d),m=T.upcastType(h.dtype,"int32"),g=gf(n,p,m),A=w.sizeFromShape(f),x=n.data.get(g.dataId).values,y=n.data.get(h.dataId).values;for(let b=0;b<x.length;++b){let v=b*A,C=0;for(let S=0;S<A;++S)C+=y[v+S];x[b]=C}if(o){let b=T.expandShapeToKeepDim(g.shape,c),v=g;g=Rt({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(h),g}var Hj={kernelName:_o,backendName:"cpu",kernelFunc:mh};function jj(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=T.getEinsumComputePath(i,l),d=u.length,h=null,p=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=T.getEinsumPermutation(p,l[g]),y;T.isIdentityPermutation(A)?y=a[g]:(y=Ns({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(y.shape,b)||(y=Rt({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),h===null?h=y:(h=s0({inputs:{a:y,b:h},backend:n}),f.push(h))}m<d-1&&(c[m]>=0&&(h=mh({inputs:{x:h},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(let m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}var qj={kernelName:Fd,backendName:"cpu",kernelFunc:jj};function Xj(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ee([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var Kj={kernelName:Gf,backendName:"cpu",kernelFunc:Xj},Zj=T.ERF_P,Yj=T.ERF_A1,Jj=T.ERF_A2,Qj=T.ERF_A3,eq=T.ERF_A4,tq=T.ERF_A5,nq=ct(Wu,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+Zj*n);return t*(1-((((tq*s+eq)*s+Qj)*s+Jj)*s+Yj)*s*Math.exp(-n*n))}),sq={kernelName:Wu,backendName:"cpu",kernelFunc:nq};function yf(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Rt({inputs:{x:r},backend:n,attrs:{shape:i}})}var rq={kernelName:zi,backendName:"cpu",kernelFunc:yf},aq=qt((e,t)=>e/t),Rx=hn(no,aq),yA={kernelName:no,backendName:"cpu",kernelFunc:Rx};function n4(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,a],u=w.sizeFromShape(c),d=w.getTypedArrayFromDType("float32",u),h=w.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let A=ki({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=ki({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=is({inputs:{real:A,imag:x},backend:n}),{real:b,imag:v}=oq(y,t,n),C=T.mergeRealAndImagArrays(b,v);for(let S=0;S<a;S++){let E=T.getComplexWithIndex(C,S);d[g*a+S]=E.real,h[g*a+S]=E.imag}n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y)}let p=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",h),m=is({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function oq(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(iq(s)){let i=xA(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),h=kr({inputs:{x:d},backend:n}),p=yA.kernelFunc({inputs:{a:c,b:d},backend:n}),f=yA.kernelFunc({inputs:{a:u,b:h},backend:n}),m=n.data.get(p.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(a,o),l=lq(i,s,t);return T.splitRealAndImagArrays(l)}}function iq(e){return(e&e-1)===0}function xA(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=T.mergeRealAndImagArrays(e,t),o=n/2,i=T.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),h=r.makeTensorInfo(u,"float32",c),p=is({inputs:{real:d,imag:h},backend:r}),f=T.complexWithOddIndex(a),m=f.real,g=f.imag,A=[m.length],x=r.makeTensorInfo(A,"float32",m),y=r.makeTensorInfo(A,"float32",g),b=is({inputs:{real:x,imag:y},backend:r}),v=xA(l,c,o,s,r),C=v.real,S=v.imag,E=[C.length],R=r.makeTensorInfo(E,"float32",C),P=r.makeTensorInfo(E,"float32",S),$=is({inputs:{real:R,imag:P},backend:r}),_=xA(m,g,o,s,r),N=_.real,O=_.imag,z=[N.length],j=r.makeTensorInfo(z,"float32",N),L=r.makeTensorInfo(z,"float32",O),B=is({inputs:{real:j,imag:L},backend:r}),W=T.exponents(n,s),J=[W.real.length],ee=r.makeTensorInfo(J,"float32",W.real),re=r.makeTensorInfo(J,"float32",W.imag),Z=is({inputs:{real:ee,imag:re},backend:r}),se=s0({inputs:{a:Z,b:B},backend:r}),ne=fh({inputs:{a:$,b:se},backend:r}),de=Nx({inputs:{a:$,b:se},backend:r}),xe=wi({inputs:{input:ne},backend:r}),Ie=wi({inputs:{input:de},backend:r}),we=ku({inputs:{input:ne},backend:r}),$e=ku({inputs:{input:de},backend:r}),ze=Su({inputs:[xe,Ie],backend:r,attrs:{axis:0}}),Xe=Su({inputs:[we,$e],backend:r,attrs:{axis:0}}),je=r.data.get(ze.dataId).values,Ke=r.data.get(Xe.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(ze),r.disposeIntermediateTensorInfo(Xe),{real:je,imag:Ke}}function lq(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=T.exponent(r*i,t,n),c=T.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),T.assignToTypedArray(s,a,o,r)}return s}function uq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Rt({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=n4(i,!1,n),c=Rt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var cq={kernelName:Hf,backendName:"cpu",kernelFunc:uq};function _x(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||w.inferDtype(r),i=w.getArrayFromDType(o,w.sizeFromShape(s));return hq(i,r,o),t.makeTensorInfo(s,o,i)}var dq={kernelName:Vu,backendName:"cpu",kernelFunc:_x};function hq(e,t,n){e.fill(t)}var pq={kernelName:Bi,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[o,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let h=0;h<o;h++){let p=h*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let A=g*c;for(let x=0;x<c;x++){let y=Math.round(l-g-1),b=p+m+A+x,v=u[b];if(y>=0&&y<l){let C=y*c,S=p+m+C+x;v=u[S]}a[b]=v}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},fq=qt((e,t)=>Math.floor(e/t)),mq=hn(oo,fq,null,"int32"),gq={kernelName:oo,backendName:"cpu",kernelFunc:mq};function Aq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=e4({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){let g=m;m=fh({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){let g=m;m=Tx(n,m,p,i,f),n.disposeIntermediateTensorInfo(g)}return m}var yq={kernelName:_a,backendName:"cpu",kernelFunc:Aq};function xq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=t4({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){let g=m;m=fh({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){let g=m;m=Tx(n,m,p,i,f),n.disposeIntermediateTensorInfo(g)}return m}var bq={kernelName:$a,backendName:"cpu",kernelFunc:xq};function vq(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,c,u,d]=T.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);let h=n.data.get(r.dataId).values,p=n.bufferSync(s),f=yI(h,p,s.dtype,c,i,u,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var wq={kernelName:Vi,backendName:"cpu",kernelFunc:vq};function kq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Ee([r,a],"gatherV2");let l=w.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){let v=c[b];w.assert(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let h=w.sizeFromShape(a.shape),p=T.segment_util.collectGatherOpShapeInfo(r,a,l,d),f=Rt({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Rt({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],A=n.bufferSync(m),x=n.bufferSync(f),y=xI(x,A,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}var Sq={kernelName:Wi,backendName:"cpu",kernelFunc:kq};function Iq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Rt({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=n4(i,!0,n),c=Rt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var Cq={kernelName:jf,backendName:"cpu",kernelFunc:Iq},Nq=ct(Uu,e=>Number.isFinite(e)?1:0,"bool"),Tq={kernelName:Uu,backendName:"cpu",kernelFunc:Nq},Eq=ct(Gu,e=>Math.abs(e)===1/0?1:0,"bool"),Rq={kernelName:Gu,backendName:"cpu",kernelFunc:Eq},_q=ct(Hu,e=>Number.isNaN(e)?1:0,"bool"),$q={kernelName:Hu,backendName:"cpu",kernelFunc:_q};function Dq(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=SI(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var Fq={kernelName:qf,backendName:"cpu",kernelFunc:Dq},Pq=ct(ju,e=>Math.log1p(e)),Oq={kernelName:ju,backendName:"cpu",kernelFunc:Pq},Mq=qt((e,t)=>e&&t),zq=hn(ji,Mq,null,"bool"),Lq={kernelName:ji,backendName:"cpu",kernelFunc:zq},Bq=ct(qu,e=>e?0:1,"bool"),Wq={kernelName:qu,backendName:"cpu",kernelFunc:Bq},Vq=qt((e,t)=>e||t),Uq=hn(Od,Vq,null,"bool"),Gq={kernelName:Od,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Ee(r,"LRN");let c=r.shape[3],u=c-1,d=n.data.get(r.dataId).values,h=w.sizeFromShape(r.shape),p=new Float32Array(h);function f(m){let g=m%c,A=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,u),y=0;for(;A<=x;A++){let b=d[A];y+=b*b}return y}for(let m=0;m<h;m++){let g=f(m),A=d[m]*Math.pow(o+i*g,-l);p[m]=A}return n.makeTensorInfo(r.shape,r.dtype,p)}var jq={kernelName:Md,backendName:"cpu",kernelFunc:Hq};function qq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;Ee(o,"LRNGrad");let d=w.sizeFromShape(o.shape),h=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),A=d;for(let x=0;x<A;x++){let y=x%h,b=x-y+Math.max(0,y-i),v=x-y+Math.min(h,y+i+1),C=0;for(let S=b;S<v;S++)C+=Math.pow(f[S],2);C=c*C+l;for(let S=b;S<v;S++){let E=-2*c*u*f[S]*m[x]/C;x===S&&(E+=Math.pow(C,-u)),E*=p[x],g[S]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var Xq={kernelName:Xf,backendName:"cpu",kernelFunc:qq};function s4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,c=l.length,u=w.parseAxisParam(a,l),d=u,h=T.getAxesPermutation(d,c),p=i.data.get(r.dataId).values;if(h!=null){let b=new Array(c);for(let v=0;v<b.length;v++)b[v]=l[h[v]];p=Sx(p,l,r.dtype,h,b),d=T.getInnerMostAxes(d.length,c),l=b}Ee(r,"max"),T.assertAxesAreInnerMostDims("max",d,c);let[f,m]=T.computeOutAndReduceShapes(l,d),g=w.sizeFromShape(m),A=CI(p,g,f,r.dtype),x=i.write(A,f,r.dtype),y=f;return o&&(y=T.expandShapeToKeepDim(f,u)),{dataId:x,shape:y,dtype:r.dtype}}var Kq={kernelName:po,backendName:"cpu",kernelFunc:s4};function Zq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ee(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=T.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=kr({inputs:{x:r},backend:n});else{let h=n.data.get(r.dataId).values,p=w.computeStrides(r.shape),f=Ex(h,r.shape,r.dtype,p,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var Yq={kernelName:mo,backendName:"cpu",kernelFunc:Zq};function Jq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ee(r,"maxPool3d");let u=T.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,h=QI(d,r.shape,r.dtype,w.computeStrides(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}var Qq={kernelName:zd,backendName:"cpu",kernelFunc:Jq};function eX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ee([r,a],"maxPool3DGrad");let u=T.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),h=UH(d,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,A=u.dilationHeight,x=u.dilationWidth,y=u.effectiveFilterDepth,b=u.effectiveFilterHeight,v=u.effectiveFilterWidth,C=y-1-u.padInfo.front,S=v-1-u.padInfo.left,E=b-1-u.padInfo.top,R=Le(a.shape,"float32"),P=n.bufferSync(r);for(let $=0;$<u.batchSize;++$)for(let _=0;_<u.inChannels;++_)for(let N=0;N<u.inDepth;++N)for(let O=0;O<u.inHeight;++O)for(let z=0;z<u.inWidth;++z){let j=N-C,L=O-E,B=z-S,W=0;for(let J=0;J<y;J+=g){let ee=(j+J)/p;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let re=0;re<b;re+=A){let Z=(L+re)/f;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let se=0;se<v;se+=x){let ne=(B+se)/m;if(ne<0||ne>=u.outWidth||Math.floor(ne)!==ne)continue;let de=y*b*v-1-h.get($,ee,Z,ne,_),xe=J*b*v+re*v+se,Ie=de===xe?1:0;if(Ie===0)continue;W+=P.get($,ee,Z,ne,_)*Ie}}}R.set(W,$,N,O,z,_)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var tX={kernelName:Zf,backendName:"cpu",kernelFunc:eX};function nX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ee([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,h=T.computePool2DInfo(i.shape,l,c,1,u,d),p=n.data.get(i.dataId).values,f=Le(h.outShape,i.dtype,JI(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,A=h.dilationHeight,x=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,v=b-1-h.padInfo.left,C=y-1-h.padInfo.top,S=Le(i.shape,"float32"),E=n.data.get(r.dataId).values,R=Le(r.shape,"float32",E);for(let P=0;P<h.batchSize;++P)for(let $=0;$<h.inChannels;++$)for(let _=0;_<h.inHeight;++_)for(let N=0;N<h.inWidth;++N){let O=_-C,z=N-v,j=0;for(let L=0;L<y;L+=A){let B=(O+L)/m;if(!(B<0||B>=h.outHeight||Math.floor(B)!==B))for(let W=0;W<b;W+=x){let J=(z+W)/g;if(J<0||J>=h.outWidth||Math.floor(J)!==J)continue;let ee=y*b-1-f.get(P,B,J,$),re=L*b+W,Z=ee===re?1:0;if(Z===0)continue;j+=R.get(P,B,J,$)*Z}}S.set(j,P,_,N,$)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var sX={kernelName:Kf,backendName:"cpu",kernelFunc:nX};function rX(e,t,n,s,r){let a=w.computeStrides(t),o=Ex(e,t,n,a,r,"max"),i=JI(e,t,n,r,!0,s);return[o.values,i.values]}var aX={kernelName:Yf,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Ee(s,"MaxPoolWithArgmax");let c=l.data.get(s.dataId).values,u=T.computePool2DInfo(s.shape,r,a,[1,1],o),[d,h]=rX(c,s.shape,s.dtype,i,u),p=l.write(d,u.outShape,s.dtype),f=l.write(h,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function oX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=w.parseAxisParam(a,r.shape),c=T.computeOutAndReduceShapes(r.shape,i)[1],u=w.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);let p=Ua({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(p);let f=Rx({inputs:{a:p,b:h},backend:n});d.push(f);let m=mh({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var iX={kernelName:go,backendName:"cpu",kernelFunc:oX};function lX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"min");let i=w.parseAxisParam(a,r.shape),l=i,c=T.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ns({inputs:{x:r},backend:n,attrs:{perm:c}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),p=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*p,y=m[x];for(let b=0;b<p;++b){let v=m[x+b];(Number.isNaN(v)||v<y)&&(y=v)}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=T.expandShapeToKeepDim(d,i),x=Rt({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var uX={kernelName:Ao,backendName:"cpu",kernelFunc:lX};function cX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Ee(r,"mirrorPad");let i=a.map((y,b)=>y[0]+r.shape[b]+y[1]),l=a.map(y=>y[0]),c=a.map((y,b)=>y[0]+r.shape[b]),u=o==="reflect"?0:1,d=n.data.get(r.dataId).values,h=r.shape.length,p=w.computeStrides(r.shape),f=w.sizeFromShape(i),m=i.length,g=w.computeStrides(i),A=w.getTypedArrayFromDType(r.dtype,f);for(let y=0;y<f;y++){let b=w.indexToLoc(y,m,g);for(let C=0;C<m;C++)b[C]<l[C]?b[C]=l[C]*2-b[C]-u:b[C]>=c[C]&&(b[C]=(c[C]-1)*2-b[C]+u);b=b.map((C,S)=>C-l[S]);let v=w.locToIndex(b,h,p);A[y]=d[v]}return{dataId:n.write(A,i,r.dtype),shape:i,dtype:r.dtype}}var dX={kernelName:xo,backendName:"cpu",kernelFunc:cX},hX=qt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),pX=hn(Xu,hX),fX={kernelName:Xu,backendName:"cpu",kernelFunc:pX},mX=Ei(Rf());function r4(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=w.parseAxisParam([i],r.shape),c=s4({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=T.expandShapeToKeepDim(c.shape,l),d=Rt({inputs:{x:c},backend:n,attrs:{shape:u}}),h=Nx({inputs:{a:r,b:d},backend:n}),p=mI({inputs:{x:h},backend:n}),f=mh({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=Rt({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Rx({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var gX={kernelName:$o,backendName:"cpu",kernelFunc:r4};function AX(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Ee(r,"multinomial");let l=i?r:r4({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,h=[c,a],p=w.makeZerosTypedArray(w.sizeFromShape(h),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];let A=mX.alea(o.toString()),x=f*a;for(let y=0;y<a;++y){let b=A();p[x+y]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){p[x+y]=v;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",p)}var yX={kernelName:Jf,backendName:"cpu",kernelFunc:AX},xX=Ws.nonMaxSuppressionV3Impl;function bX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Ee(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=xX(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var vX={kernelName:Ki,backendName:"cpu",kernelFunc:bX},wX=Ws.nonMaxSuppressionV4Impl;function kX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;Ee(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=wX(u,d,o,i,l,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var SX={kernelName:Ku,backendName:"cpu",kernelFunc:kX},IX=Ws.nonMaxSuppressionV5Impl;function CX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;Ee(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,h=o,p=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=IX(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var NX={kernelName:Zi,backendName:"cpu",kernelFunc:CX};function TX(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Ee(r,"oneHot");let l=w.sizeFromShape(r.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(r.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var EX={kernelName:Ji,backendName:"cpu",kernelFunc:TX};function xf(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=wi({inputs:{input:s},backend:n}),a=xf({inputs:{x:r},backend:n}),o=ku({inputs:{input:s},backend:n}),i=xf({inputs:{x:o},backend:n}),l=is({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return _x({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var RX={kernelName:ml,backendName:"cpu",kernelFunc:xf};function a4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=wi({inputs:{input:s},backend:n}),a=a4({inputs:{x:r},backend:n}),o=ku({inputs:{input:s},backend:n}),i=xf({inputs:{x:o},backend:n}),l=is({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return _x({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var _X={kernelName:Yi,backendName:"cpu",kernelFunc:a4};function o4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return yf({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=yf({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=Su({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var $X={kernelName:Qi,backendName:"cpu",kernelFunc:o4};function DX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Ee(r,"pad");let i=a.map((x,y)=>x[0]+r.shape[y]+x[1]),l=a.map(x=>x[0]),c=n.data.get(r.dataId).values,u=w.sizeFromShape(r.shape),d=r.shape.length,h=w.computeStrides(r.shape),p=w.sizeFromShape(i),f=i.length,m=w.computeStrides(i),g=w.getTypedArrayFromDType(r.dtype,p);o!==0&&g.fill(o);for(let x=0;x<u;x++){let b=w.indexToLoc(x,d,h).map((C,S)=>C+l[S]),v=w.locToIndex(b,f,m);g[v]=c[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var i4={kernelName:vo,backendName:"cpu",kernelFunc:DX},FX=qt((e,t)=>Math.pow(e,t)),PX=hn(wo,FX),OX={kernelName:wo,backendName:"cpu",kernelFunc:PX};function MX(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=Ix(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var zX={kernelName:Zu,backendName:"cpu",kernelFunc:MX},LX=ct(Yu,e=>1/e),BX={kernelName:Yu,backendName:"cpu",kernelFunc:LX};function WX(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ee(r,"resizeBilinear");let l=w.computeStrides(r.shape),[c,u]=i,[d,h,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([d,c,u,f])),A=[a&&c>1?h-1:h,a&&u>1?p-1:p],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],y=0,b=A[0]/x[0],v=A[1]/x[1];for(let C=0;C<d;C++)for(let S=0;S<c;S++){let E;o?E=b*(S+.5)-.5:E=b*S;let R=Math.max(0,Math.floor(E)),P=E-R,$=Math.min(h-1,Math.ceil(E)),_=C*l[0]+R*l[1],N=C*l[0]+$*l[1];for(let O=0;O<u;O++){let z;o?z=v*(O+.5)-.5:z=v*O;let j=Math.max(0,Math.floor(z)),L=z-j,B=Math.min(p-1,Math.ceil(z)),W=_+j*l[2],J=N+j*l[2],ee=_+B*l[2],re=N+B*l[2];for(let Z=0;Z<f;Z++){let se=m[W+Z],ne=m[J+Z],de=m[ee+Z],xe=m[re+Z],Ie=se+(de-se)*L,we=ne+(xe-ne)*L,$e=Ie+(we-Ie)*P;g[y++]=$e}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var VX={kernelName:Io,backendName:"cpu",kernelFunc:WX};function UX(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ee([a,r],"resizeBilinearGrad");let i=w.computeStrides(r.shape),[l,c,u,d]=r.shape,[,h,p]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&h>1?c-1:c,o&&p>1?u-1:u],g=[o&&h>1?h-1:h,o&&p>1?p-1:p],A=m[0]/g[0],x=m[1]/g[1],y=n.data.get(a.dataId).values,b=0;for(let v=0;v<l;v++){let C=v*i[0];for(let S=0;S<h;S++){let E=S*A,R=Math.floor(E),P=Math.min(Math.ceil(E),c-1),$=C+R*i[1],_=C+P*i[1],N=E-R,O=1-N;for(let z=0;z<p;z++){let j=z*x,L=Math.floor(j),B=Math.min(Math.ceil(j),u-1),W=j-L,J=1-W,ee=$+L*i[2],re=$+B*i[2],Z=_+L*i[2],se=_+B*i[2],ne=O*J,de=O*W,xe=N*J,Ie=N*W;for(let we=0;we<d;we++){let $e=y[b++];f[ee+we]+=$e*ne,f[re+we]+=$e*de,f[Z+we]+=$e*xe,f[se+we]+=$e*Ie}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var GX={kernelName:em,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ee(r,"resizeNearestNeighbor");let l=w.computeStrides(r.shape),[c,u]=i,[d,h,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),A=[a&&c>1?h-1:h,a&&u>1?p-1:p],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],y=A[0]/x[0],b=A[1]/x[1],v=0;for(let C=0;C<d;C++){let S=C*l[0];for(let E=0;E<c;E++){let R=o?y*(E+.5):y*E,P=Math.min(h-1,a?Math.round(R):Math.floor(R));o&&(P=Math.max(0,P));let $=S+P*l[1];for(let _=0;_<u;_++){let N=o?b*(_+.5):b*_,O=Math.min(p-1,a?Math.round(N):Math.floor(N));o&&(O=Math.max(0,O));let z=$+O*l[2];for(let j=0;j<f;j++){let L=m[z+j];g[v++]=L}}}}return n.makeTensorInfo([d,c,u,f],r.dtype,g)}var jX={kernelName:Ju,backendName:"cpu",kernelFunc:HX};function qX(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ee([a,r],"resizeNearestNeighborGrad");let i=w.computeStrides(r.shape),l=w.computeStrides(a.shape),[c,u,d,h]=r.shape,[,p,f]=a.shape,m=new Float32Array(c*u*d*h),g=n.data.get(a.dataId).values,A=[o&&p>1?u-1:u,o&&f>1?d-1:d],x=[o&&p>1?p-1:p,o&&f>1?f-1:f],y=A[0]/x[0],b=A[1]/x[1],v=1/y,C=1/b,S=Math.ceil(v)*2+2,E=Math.ceil(C)*2+2;for(let R=0;R<c;R++){let P=R*i[0];for(let $=0;$<u;$++){let _=P+$*i[1],N=Math.floor($*v),O=Math.floor(N-S/2);for(let z=0;z<d;z++){let j=_+z*i[2],L=Math.floor(z*C),B=Math.floor(L-E/2);for(let W=0;W<h;W++){let J=0;for(let ee=0;ee<S;ee++){let re=ee+O;if(re<0||re>=p)continue;let Z=P+re*l[1],se=re*y,ne=Math.min(u-1,o?Math.round(se):Math.floor(se));if($===ne)for(let de=0;de<E;de++){let xe=de+B;if(xe<0||xe>=f)continue;let Ie=Z+xe*l[2],we=xe*b,$e=Math.min(d-1,o?Math.round(we):Math.floor(we));z===$e&&(J+=g[Ie+W])}}m[j+W]=J}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var XX={kernelName:Qf,backendName:"cpu",kernelFunc:qX};function KX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ee(r,"reverse");let o=r.shape.length,i=w.parseAxisParam(a,r.shape);if(o===0)return kr({inputs:{x:r},backend:n});let l=new Qt(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),l.set(c.get(...h),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var ZX={kernelName:nl,backendName:"cpu",kernelFunc:KX},YX={kernelName:gl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[c,u,d,h]=s.shape,[p,f]=T.getImageCenter(o,u,d),m=255,g=Math.sin(r),A=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<c;b++){let v=b*d*u*h;for(let C=0;C<u;C++){let S=C*(d*h);for(let E=0;E<d;E++){let R=E*h;for(let P=0;P<h;P++){let $=[c,C,E,P],_=$[2],N=$[1],O=(_-p)*A-(N-f)*g,z=(_-p)*g+(N-f)*A;O=Math.round(O+p),z=Math.round(z+f);let j=a;if(typeof a!="number"&&(P===3?j=m:j=a[P]),O>=0&&O<d&&z>=0&&z<u){let B=z*(d*h),W=O*h,J=v+B+W+P;j=x[J]}let L=v+S+R+P;l[L]=j}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},JX=ct(sl,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),QX={kernelName:sl,backendName:"cpu",kernelFunc:JX};function l4(e,t,n,s,r,a,o,i,l,c){let u=[s/r,r],d=e.values,h=t.values;if(s===0)return Le(n,t.dtype);let p=Le(u,t.dtype);p.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let A=0;A<o;A++){let x=d[f*o+A];m.push(x),g+=x*i[A]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let A=0;A<r;A++)c?p.values[g*r+A]+=h[f*r+A]:p.values[g*r+A]=t.rank===0?h[0]:h[f*r+A]}return p}function eK(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=T.calculateShapes(a,r,o),h=!0,p=n.bufferSync(r),f=n.bufferSync(a),m=l4(p,f,o,d,c,l,i,u,0,h);return n.makeTensorInfo(o,m.dtype,m.values)}var tK={kernelName:rl,backendName:"cpu",kernelFunc:eK};function nK(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ee([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=En(r.dtype,a.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(r.shape),u),h=0,p=o===0||o>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=l[f]:d[h++]=c[f];return n.makeTensorInfo(r.shape,u,d)}var sK={kernelName:al,backendName:"cpu",kernelFunc:nK},rK=T.SELU_SCALEALPHA,aK=T.SELU_SCALE,oK=ct(Qu,e=>e>=0?aK*e:rK*(Math.exp(e)-1)),iK={kernelName:Qu,backendName:"cpu",kernelFunc:oK},lK=ct(ec,e=>e<0?-1:e>0?1:0),uK={kernelName:ec,backendName:"cpu",kernelFunc:lK},cK=ct(To,e=>Math.sin(e)),dK={kernelName:To,backendName:"cpu",kernelFunc:cK},hK=ct(il,e=>Math.sinh(e)),pK={kernelName:il,backendName:"cpu",kernelFunc:hK},fK=11920928955078125e-23,w5=Math.log(fK)+2,mK=ct(tc,e=>{let t=e>-w5,n=e<w5,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),gK={kernelName:tc,backendName:"cpu",kernelFunc:mK};function AK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Ee([r],"spaceToBatchND");let i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);let c=i4.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(u.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),m=Rt({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Ns({inputs:{x:m},backend:n,attrs:{perm:d}}),v=Rt({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}var yK={kernelName:ll,backendName:"cpu",kernelFunc:AK};function xK(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,h,p,f,m]=FI(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var bK={kernelName:Bd,backendName:"cpu",kernelFunc:xK};function vK(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=PI(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var wK={kernelName:nc,backendName:"cpu",kernelFunc:vK};function kK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=Cx(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var SK={kernelName:Wd,backendName:"cpu",kernelFunc:kK};function IK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=Cx(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var CK={kernelName:Vd,backendName:"cpu",kernelFunc:IK};function NK(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(a,r,i),p=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],A=l4(f,m,i,h,u,c,l,d,g,p);return n.makeTensorInfo(i,A.dtype,A.values)}var TK={kernelName:Ud,backendName:"cpu",kernelFunc:NK};function EK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let h=[...u];h[i]=d;let p=ki({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,p})}var RK={kernelName:ul,backendName:"cpu",kernelFunc:EK},_K={kernelName:sc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Ee(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},$K=ct(Mo,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),DK={kernelName:Mo,backendName:"cpu",kernelFunc:$K};function FK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s;Ee(r,"stridedSlice");let{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=$t.sliceInfo(r.shape,a,o,i,l,c,u,d,h),v;if(m)v=Rt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=$t.computeOutShape(x,y,b),S=ki({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});v=Rt({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(S)}else{let C=n.bufferSync(r),S=MI(p,C,b,x);v=n.makeTensorInfo(f,S.dtype,S.values)}return v}var PK={kernelName:cl,backendName:"cpu",kernelFunc:FK};function OK(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,p=n.data.get(d.dataId).values,[f,m]=zI(h,p,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var MK={kernelName:Gd,backendName:"cpu",kernelFunc:OK};function zK(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=LI(i,l,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var LK={kernelName:tm,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=BI(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var WK={kernelName:nm,backendName:"cpu",kernelFunc:BK},VK=ct(dl,e=>Math.tan(e)),UK={kernelName:dl,backendName:"cpu",kernelFunc:VK},GK=ct(Po,e=>Math.tanh(e)),HK={kernelName:Po,backendName:"cpu",kernelFunc:GK};function jK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ee(r,"tile");let o=VI(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var qK={kernelName:Yr,backendName:"cpu",kernelFunc:jK};function XK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Ee(r,"topk");let i=n.data.get(r.dataId).values,[l,c]=GI(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var KK={kernelName:hl,backendName:"cpu",kernelFunc:XK};function ZK(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],A=w.computeStrides(r.shape),x=A[0],y=A[1],b=A[2],v=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));v.fill(l);let C=s.data.get(r.dataId).values,S=s.data.get(a.dataId).values;for(let R=0;R<u;++R){let P=a.shape[0]===1?S:S.subarray(R*8,R*8+8);for(let $=0;$<f;++$)for(let _=0;_<m;++_)for(let N=0;N<p;++N){let O,z=P[6]*_+P[7]*$+1;if(z===0)continue;let j=(P[0]*_+P[1]*$+P[2])/z,L=(P[3]*_+P[4]*$+P[5])/z,B=k5(j,h,i),W=k5(L,d,i);switch(o){case"nearest":O=nZ(C,d,h,x,y,b,R,W,B,N,l);break;case"bilinear":O=sZ(C,d,h,x,y,b,R,W,B,N,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let J=R*x+$*y+_*b+N;v[J]=O}return s.makeTensorInfo(g,r.dtype,v)}return{dataId:s.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}var YK={kernelName:pl,backendName:"cpu",kernelFunc:ZK};function k5(e,t,n){switch(n){case"reflect":return JK(e,t);case"wrap":return QK(e,t);case"nearest":return tZ(e,t);case"constant":default:return eZ(e,t)}}function JK(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function QK(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function eZ(e,t){return e}function tZ(e,t){return w.clamp(0,e,t-1)}function Jc(e,t,n,s,r,a,o,i,l,c,u){let d=o*s+i*r+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function nZ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.round(i),h=Math.round(l);return Jc(e,t,n,s,r,a,o,d,h,c,u)}function sZ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.floor(i),h=Math.floor(l),p=d+1,f=h+1,m=(f-l)*Jc(e,t,n,s,r,a,o,d,h,c,u)+(l-h)*Jc(e,t,n,s,r,a,o,d,f,c,u),g=(f-l)*Jc(e,t,n,s,r,a,o,p,h,c,u)+(l-h)*Jc(e,t,n,s,r,a,o,p,f,c,u);return(p-i)*m+(i-d)*g}function rZ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ee(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=HI(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var aZ={kernelName:sm,backendName:"cpu",kernelFunc:rZ};function oZ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),c=0;for(let p=0;p<o;p++)p!==a&&(l[c++]=r.shape[p]);let u=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let h=new Array(i);for(let p=0;p<h.length;p++){u[a]=p;let f=ki({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});h[p]=Rt({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return h}var iZ={kernelName:fl,backendName:"cpu",kernelFunc:oZ};function lZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Ee(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,c=[],u=[],d=i-l,h=a;for(let f=0;f<d;++f){let m=yf({inputs:{input:h},backend:n,attrs:{dim:f+1}});h=m,u.push(m)}for(let f=0;f<o;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),A=pI({inputs:{a:g,b:h},backend:n}),x=Ua({inputs:{x:A},backend:n,attrs:{dtype:"float32"}}),y=s0({inputs:{a:x,b:r},backend:n}),b=mh({inputs:{x:y},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(A),u.push(x),u.push(y),u.push(b)}let p=o4({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var uZ={kernelName:Hd,backendName:"cpu",kernelFunc:lZ},cZ=[AH,uG,xH,vH,mG,kH,IH,NH,EH,_H,DH,PH,MH,BH,VH,HH,qH,KH,YH,mH,QH,tj,sj,aj,pG,AG,ij,cG,uj,dj,hj,fj,gj,yj,bj,wj,Sj,Cj,Tj,Rj,$j,Fj,Pj,Mj,Lj,Wj,Vj,Uj,Gj,qj,lH,Kj,yG,sq,xG,rq,vG,cq,dq,pq,kG,gq,yq,bq,wq,Sq,IG,NG,dG,Cq,cj,Tq,Rq,$q,uH,EG,_G,Fq,DG,Oq,Lq,Wq,Gq,jq,Xq,Kq,PG,Yq,Qq,tX,sX,aX,iX,uX,MG,dX,fX,yX,LG,WG,vX,SX,NX,UG,EX,_X,$X,i4,OX,dH,jG,zX,hG,yA,BX,hH,pH,fH,VX,GX,jX,XX,ZX,YX,QX,XG,tK,sK,iK,ZG,uK,dK,pK,YG,gX,gK,yK,bK,wK,SK,CK,TK,RK,eH,_K,nH,DK,PK,MK,LK,WK,oH,Hj,UK,HK,qK,KK,YK,GG,aZ,iZ,uZ,RX];for(let e of cZ)br(e);var u4={};Me(u4,{assertNotComplex:()=>mc,bindCanvasToFramebuffer:()=>wZ,bindColorTextureToFramebuffer:()=>Mp,bindTextureToProgramUniformSampler:()=>S4,bindTextureUnit:()=>v4,bindVertexBufferToProgramAttribute:()=>bA,callAndCheck:()=>ve,canBeRepresented:()=>c4,createFragmentShader:()=>p4,createFramebuffer:()=>b4,createProgram:()=>f4,createStaticIndexBuffer:()=>A4,createStaticVertexBuffer:()=>g4,createTexture:()=>y4,createVertexShader:()=>h4,getBatchDim:()=>Si,getExtensionOrThrow:()=>Qc,getFramebufferErrorMessage:()=>I4,getMaxTexturesInShader:()=>E4,getNumChannels:()=>bZ,getProgramUniformLocation:()=>k4,getProgramUniformLocationOrThrow:()=>w4,getRowsCols:()=>Ii,getShapeAs3D:()=>zp,getTextureShapeFromLogicalShape:()=>N4,getWebGLDisjointQueryTimerVersion:()=>R4,getWebGLErrorMessage:()=>d4,getWebGLMaxTextureSize:()=>T4,hasExtension:()=>xs,isCapableOfRenderingToFloatTexture:()=>_4,isDownloadFloatTextureEnabled:()=>$4,isReshapeFree:()=>Cd,isWebGLFenceEnabled:()=>D4,isWebGLVersionEnabled:()=>wA,linkProgram:()=>m4,resetMaxTextureSize:()=>kZ,resetMaxTexturesInShader:()=>SZ,unbindColorTextureFromFramebuffer:()=>vA,unbindTextureUnit:()=>vZ,validateFramebuffer:()=>ed,validateProgram:()=>Op,validateTextureSize:()=>x4});var ai={},n1={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function $x(e,t){ai[e]=t}function ir(e,t){if(!(e in ai)||t!=null){let s=hZ(e,t);if(s!==null)ai[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=ai[e];return n==null||n.isContextLost()?(delete ai[e],ir(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ai[e])}function dZ(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function hZ(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??dZ(e);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ai[e]},!1),e===1?n.getContext("webgl",n1)||n.getContext("experimental-webgl",n1):n.getContext("webgl2",n1)}function gh(e,t){return[t,e]}function pZ(e,t){return e*t}function fp(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function fc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function fZ(e,t){let[n,s]=fc(e,t);return n*s*4}function Dx(e,t){let n=e,s,r,a,o,i,l,c,u,d,h;return Y().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}function ve(e,t){let n=t();return Y().getBool("DEBUG")&&mZ(e),n}function mZ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+d4(e,t))}var gZ=596e-10,AZ=65504;function c4(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||gZ<Math.abs(e)&&Math.abs(e)<AZ)}function d4(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Qc(e,t){return na(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function h4(e,t){let n=na(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(e,()=>e.shaderSource(n,t)),ve(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function p4(e,t){let n=na(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(e,()=>e.shaderSource(n,t)),ve(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw xZ(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var yZ=/ERROR: [0-9]+:([0-9]+):/g;function xZ(e,t){let n=yZ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,h)=>w.rightPad((h+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function f4(e){return na(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function m4(e,t){if(ve(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Op(e,t){if(ve(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function g4(e,t){let n=na(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ve(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function A4(e,t){let n=na(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),ve(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function bZ(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function y4(e){return na(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function x4(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function b4(e){return na(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bA(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),ve(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),ve(e,()=>e.enableVertexAttribArray(i)),!0)}function v4(e,t,n){C4(e,n),ve(e,()=>e.activeTexture(e.TEXTURE0+n)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function vZ(e,t){C4(e,t),ve(e,()=>e.activeTexture(e.TEXTURE0+t)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function w4(e,t,n){return na(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function k4(e,t,n){return e.getUniformLocation(t,n)}function S4(e,t,n,s){ve(e,()=>v4(e,t,s)),ve(e,()=>e.uniform1i(n,s))}function wZ(e){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ve(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Mp(e,t,n){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),ve(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function vA(e,t){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ve(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function ed(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+I4(e,t))}function I4(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function na(e,t,n){let s=ve(e,()=>t());if(s==null)throw new Error(n);return s}function C4(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Si(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Ii(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function zp(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Si(e),...Ii(e)]),t}function N4(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=Si(e),a=2,o=2;return e.length&&([a,o]=Ii(e)),s=r*(a/2)*(o/2),w.sizeToSquarishShape(s).map(i=>i*2)}return w.sizeToSquarishShape(s)}function mp(e){return e%2===0}function Cd(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||mp(n)&&mp(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&mp(e[0])&&mp(t[0])}var Lp,Bp;function T4(e){if(Lp==null){let t=ir(e);Lp=t.getParameter(t.MAX_TEXTURE_SIZE)}return Lp}function kZ(){Lp=null}function SZ(){Bp=null}function E4(e){if(Bp==null){let t=ir(e);Bp=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Bp)}function R4(e){if(e===0)return 0;let t,n=ir(e);return xs(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:xs(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function xs(e,t){return e.getExtension(t)!=null}function wA(e){try{if(ir(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _4(e){if(e===0)return!1;let t=ir(e);if(e===1){if(!xs(t,"OES_texture_float"))return!1}else if(!xs(t,"EXT_color_buffer_float"))return!1;return kA(t)}function $4(e){if(e===0)return!1;let t=ir(e);if(e===1){if(!xs(t,"OES_texture_float")||!xs(t,"WEBGL_color_buffer_float"))return!1}else{if(xs(t,"EXT_color_buffer_float"))return kA(t);let s="EXT_color_buffer_half_float";if(xs(t,s)){let r=t.getExtension(s);return IZ(t,r)}return!1}return kA(t)}function kA(e){let t=Dx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function IZ(e,t){let n=Dx(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function D4(e){return e!==2?!1:ir(e).fenceSync!=null}function mc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var De=Y();De.registerFlag("HAS_WEBGL",()=>De.getNumber("WEBGL_VERSION")>0);De.registerFlag("WEBGL_VERSION",()=>wA(2)?2:wA(1)?1:0);De.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);De.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>De.get("WEBGL_VERSION")===2);De.registerFlag("WEBGL_CPU_FORWARD",()=>!0);De.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);De.registerFlag("WEBGL_PACK",()=>De.getBool("HAS_WEBGL"));De.registerFlag("WEBGL_PACK_NORMALIZATION",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_CLIP",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_REDUCE",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_LAZILY_UNPACK",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_CONV_IM2COL",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>T4(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>E4(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=De.getNumber("WEBGL_VERSION");return e===0?0:R4(e)});De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>De.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!rc.isMobile());De.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_4(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>De.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:De.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));De.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>$4(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_FENCE_API_ENABLED",()=>D4(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>De.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);De.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});De.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>rc.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});De.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);De.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);De.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);De.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Pn(){let e,t,n,s,r,a,o,i,l,c;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function kl(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function r0(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function CZ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function NZ(e,t,n="index"){let s=e.map((a,o)=>o),r=CZ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function Fx(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Px(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var F4=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:P4}=T;function TZ(e,t,n){let s=[];if(e.forEach(p=>{let f=w.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Ox(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(p=>EZ(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=Pn(),l=$Z(i),c,u,d=PZ(i);return t.isPacked?(c=RZ(t.logicalShape,o,n.enableShapeUniforms),u=FZ(i)):(c=_Z(t.logicalShape,o,n.enableShapeUniforms),u=DZ(i)),n.packedInputs&&(d+=LZ),[d,l,u,r,c,a,n.userCode].join(`
`)}function gc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return YZ(e,t);case 1:return QZ(e,t);case 2:return tY(e,t);case 3:return sY(e,t);case 4:return aY(e,t);case 5:return oY(e);case 6:return iY(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function O4(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return ZZ(e);case 1:return JZ(e,t);case 2:return eY(e,t);case 3:return nY(e,t);default:return rY(e,t)}}function EZ(e,t,n=!1,s){let r="";n?r+=O4(e,s):r+=gc(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=lY(e,t):r+=uY(e,t)),r}function RZ(e,t,n){switch(e.length){case 0:return M4();case 1:return BZ(e,t,n);case 2:return XZ(e,t,n);case 3:return VZ(e,t,n);default:return GZ(e,t,n)}}function _Z(e,t,n){switch(e.length){case 0:return M4();case 1:return WZ(e,t,n);case 2:return KZ(e,t,n);case 3:return UZ(e,t,n);case 4:return HZ(e,t,n);case 5:return jZ(e,t);case 6:return qZ(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function $Z(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function DZ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function FZ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function PZ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${OZ}
    ${MZ}
    ${zZ}
  `}var OZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,MZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,zZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,LZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function M4(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function BZ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function WZ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function VZ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function UZ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${r0(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=kl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function GZ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function HZ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${r0(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=kl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function jZ(e,t){let n=kl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function qZ(e,t){let n=kl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function XZ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function KZ(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Sl(e){return`offset${e}`}function ZZ(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Pn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function YZ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Sl(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function JZ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=Pn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function QZ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Ac(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Sl(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function eY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Pn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function tY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let h=a[0],p=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=w.squeezeShape(n),l=o;if(l.length<n.length){let h=yc(e,l),p=["row","col"];return`
      ${gc(h,t)}
      float ${r}(int row, int col) {
        return ${r}(${xc(p,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Ac(e)}
      }
    `;let c=a[0],u=a[1],d=Sl(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function nY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let h=n.slice(1),p=[1,2],f=yc(e,h),m=["b","row","col"];return`
        ${O4(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${xc(m,p)});
        }
      `}let i=Pn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function sY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=w.squeezeShape(n),c=i;if(c.length<n.length){let m=yc(e,c),g=["row","col","depth"];return`
        ${gc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${xc(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${Ac(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],h=u[1],p=e.shapeInfo.flatOffset;if(h===a&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Sl(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function rY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Pn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),h=d*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,h*=a[o-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function aY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=w.squeezeShape(n);if(l.length<n.length){let x=yc(e,l),y=["row","col","depth","depth2"];return`
      ${gc(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${xc(y,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${Ac(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;let A=Sl(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${A});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${A});
      return sampleTexture(${s}, uv);
    }
  `}function oY(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=w.squeezeShape(t);if(l.length<t.length){let m=yc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${gc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${xc(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${Ac(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Sl(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function iY(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=yc(e,r),A=["row","col","depth","depth2","depth3","depth4"];return`
      ${gc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${xc(A,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Ac(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Sl(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Ac(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function lY(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=P4(e.shapeInfo.logicalShape,t.logicalShape),l=At(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let h="";o<2&&a>0?h="coords":h=e.shapeInfo.logicalShape.map((x,y)=>`coords.${d[y+c]}`).join(", ");let p="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,A=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!A)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!A)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,y=a-1;i.indexOf(x)>-1&&i.indexOf(y)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function uY(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=At(l),u=P4(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,h,p=["x","y","z","w","u","v"];i===0?h="":l<2&&u.length>=1?h="coords = 0;":h=u.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function At(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ox(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function yc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xc(e,t){return t.map(n=>e[n]).join(", ")}function cY(e,t,n,s){let r=n.map((b,v)=>{let C={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(C.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[v],shapeInfo:C}}),a=r.map(b=>b.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=TZ(r,o,t),l=p4(e.gl,i),c=e.createProgram(l),u=null,d=e.getUniformLocation(c,"NAN",!1);Y().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let h=!1,p={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let v=t.variableNames[b];p[v]=e.getUniformLocation(c,v,h),p[`offset${v}`]=e.getUniformLocation(c,`offset${v}`,h),t.enableShapeUniforms&&(f[`${v}Shape`]=e.getUniformLocation(c,`${v}Shape`,h),m[`${v}TexShape`]=e.getUniformLocation(c,`${v}TexShape`,h))}let g,A,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",h),x=e.getUniformLocation(c,"outShapeStrides",h),A=e.getUniformLocation(c,"outTexShape",h));let y=[];return t.customUniforms&&t.customUniforms.forEach((b,v)=>{y[v]=e.getUniformLocation(c,b.name,h)}),{program:t,fragmentShader:l,source:i,webGLProgram:c,uniformLocations:p,customUniformLocations:y,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:A}}function S5(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!w.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function dY(e,t,n,s,r){t.program.enableShapeUniforms||(S5(t.inShapeInfos,n),S5([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],h=t.uniformLocations[`offset${u}`],p=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(p){let{uniformShape:m}=Ox(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(w.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&h!=null&&e.gl.uniform1i(h,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=r[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function hY(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=Ox(e.packedInputs,o.shape,l),h="",p="",f="";if(u.length===1&&e.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!e.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let v=w.computeStrides(u);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&w.arraysEqual(o.shape,l),A=w.sizeFromShape(o.shape)===1,x=T.getBroadcastDims(o.shape,n.shape),y=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${y}_${c?d:""}_${u.length}_${A}_${x}_${g}_${h}_${p}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function Kn(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var pY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Pn();this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?r0(["r","c","d"],e):kl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},fY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Pn();this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?r0(["r","c","d"],e):kl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},mY=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=Pn();this.outputShape=e,this.userCode=`
      ${F4}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},gY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=Pn();this.outputShape=e,this.userCode=`
      ${F4}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},AY=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Pn();this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Px():Fx(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},yY=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Pn();this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Px():Fx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},z4={};Me(z4,{bindVertexProgramAttributeStreams:()=>q4,createBufferFromOutputTexture:()=>Z4,createFloat16MatrixTexture:()=>U4,createFloat16PackedMatrixTexture:()=>j4,createFloat32MatrixTexture:()=>V4,createIndexBuffer:()=>W4,createPackedMatrixTexture:()=>H4,createUnsignedBytesMatrixTexture:()=>G4,createVertexBuffer:()=>B4,createVertexShader:()=>L4,downloadByteEncodedFloatMatrixFromOutputTexture:()=>J4,downloadFloat32MatrixFromBuffer:()=>Y4,downloadMatrixFromPackedOutputTexture:()=>eC,downloadPackedMatrixFromBuffer:()=>Q4,getInternalFormatForFloat16MatrixTexture:()=>zx,getInternalFormatForFloat16PackedMatrixTexture:()=>Wx,getInternalFormatForFloat32MatrixTexture:()=>Mx,getInternalFormatForPackedMatrixTexture:()=>Bx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Lx,uploadDenseMatrixToTexture:()=>X4,uploadPixelDataToTexture:()=>K4});function L4(e){let t=Pn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return h4(e,n)}function B4(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return g4(e,t)}function W4(e){let t=new Uint16Array([0,1,2,2,1,3]);return A4(e,t)}function Ah(e,t,n,s,r,a){x4(t,n);let o=y4(e),i=e.TEXTURE_2D;return ve(e,()=>e.bindTexture(i,o)),ve(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ve(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ve(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),ve(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?ve(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):ve(e,()=>e.texStorage2D(i,1,s,t,n)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function Mx(e){return e.internalFormatFloat}function V4(e,t,n,s){let[r,a]=gh(t,n);return Ah(e,r,a,Mx(s),s.textureFormatFloat,e.FLOAT)}function zx(e){return e.internalFormatHalfFloat}function U4(e,t,n,s){let[r,a]=gh(t,n);return Ah(e,r,a,zx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Lx(e){return e.downloadTextureFormat}function G4(e,t,n,s){let[r,a]=gh(t,n);return Ah(e,r,a,Lx(s),e.RGBA,e.UNSIGNED_BYTE)}function Bx(e){return e.internalFormatPackedFloat}function H4(e,t,n,s){let[r,a]=fc(t,n);return Ah(e,r,a,Bx(s),e.RGBA,e.FLOAT)}function Wx(e){return e.internalFormatPackedHalfFloat}function j4(e,t,n,s){let[r,a]=fc(t,n);return Ah(e,r,a,Wx(s),e.RGBA,s.textureTypeHalfFloat)}function q4(e,t,n){return ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),bA(e,t,"clipSpacePos",n,3,20,0)&&bA(e,t,"uv",n,2,20,12)}function X4(e,t,n,s,r,a){ve(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function K4(e,t,n){ve(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Z4(e,t,n,s){let r=e.createBuffer();ve(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return ve(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),ve(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),ve(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function Y4(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function J4(e,t,n,s){let[r,a]=gh(t,n),o=4,i=new Uint8Array(pZ(t*n,o));return ve(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Q4(e,t,n,s,r,a,o,i){let l=e,c=new Float32Array(fZ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function eC(e,t,n){let s=new Float32Array(t*n*4);return ve(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var ud=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,$x(t,e)):this.gl=ir(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(Y().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Qc(this.gl,r),xs(this.gl,a))this.textureHalfFloatExtension=Qc(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),xs(this.gl,s))this.colorBufferHalfFloatExtension=Qc(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",xs(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(xs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=B4(this.gl),this.indexBuffer=W4(this.gl),this.framebuffer=b4(this.gl),this.textureConfig=Dx(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ve(e,()=>e.finish()),ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.deleteFramebuffer(this.framebuffer)),ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ve(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),V4(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),U4(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),G4(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),K4(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),X4(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),j4(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),H4(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(vA(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>J4(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return Q4(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Y4(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=Z4(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>eC(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=L4(t));let n=f4(t);return ve(t,()=>t.attachShader(n,this.vertexShader)),ve(t,()=>t.attachShader(n,e)),m4(t,n),this.debug&&Op(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=q4(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ve(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Op(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?w4(this.gl,e,t):k4(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),S4(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=fc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Op(this.gl,this.program),ed(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ve(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Qc(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=xY(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Mp(this.gl,e,this.framebuffer),this.debug&&ed(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Mp(this.gl,this.outputTexture,this.framebuffer),this.debug&&ed(this.gl)):vA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Mp(s,e,this.framebuffer),this.debug&&ed(s),this.outputTexture=e,ve(s,()=>s.viewport(0,0,t,n)),ve(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function xY(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:bY,bincountImpl:tC,bincountReduceImpl:vY,ceilImpl:wY,concatImpl:kY,equalImpl:SY,expImpl:IY,expm1Impl:CY,floorImpl:NY,gatherNdImpl:TY,gatherV2Impl:EY,greaterImpl:RY,greaterEqualImpl:_Y,lessImpl:$Y,lessEqualImpl:DY,linSpaceImpl:FY,logImpl:PY,maxImpl:OY,maximumImpl:MY,minimumImpl:zY,multiplyImpl:LY,negImpl:BY,notEqualImpl:WY,prodImpl:VY,rangeImpl:UY,rsqrtImpl:GY,sigmoidImpl:HY,simpleAbsImpl:nC,sliceImpl:jY,sparseFillEmptyRowsImpl:qY,sparseReshapeImpl:XY,sparseSegmentReductionImpl:sC,sqrtImpl:KY,stridedSliceImpl:ZY,stringNGramsImpl:YY,stringSplitImpl:JY,stringToHashBucketFastImpl:QY,subImpl:eJ,tileImpl:tJ,topKImpl:nJ,transposeImpl:Vx,uniqueImpl:sJ}=n0;function rC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Nn(e,t){return t===1?[e]:rC(e,t)}function rJ(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var aJ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Kn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Nn("rc",this.rank),n=At(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},aC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${oJ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Px():Fx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function oJ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?NZ(["r","c","d"],"inputShape"):kl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var iJ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=C5(t,n),r=N5(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=I5(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===3?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===4?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===1?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===0?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===2&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=C5(n,s),a=N5(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=I5(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function lJ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function I5(e,t,n,s,r){let a=uJ(t,s),o;if(r){let[l,c]=fc(e[0],e[1]);o=l*c}else{let[l,c]=gh(e[0],e[1]);o=l*c}let i=lJ(n,a);return o*i}function uJ(e,t){switch(e){case 3:return Bx(t);case 4:return Wx(t);case 1:return Mx(t);case 0:return zx(t);case 2:return Lx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function cJ(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function C5(e,t){if(e===1)return 3;if(e===0||e==null)return cJ(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function N5(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Vr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Us="if (isnan(x)) return x;",dJ="return x;",T5="return abs(x);",hJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",pJ=Us+`
  return (x < 0.0) ? 0.0 : x;
`,fJ=Us+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Vl="return x;",mJ="return 1.0 / (1.0 + exp(-1.0 * x));",gJ="return x;",AJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,yJ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bJ="return 1.0 / (1.0 + exp(-1.0 * x));",ui=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},vJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length);let t=e.length,n=Nn("rc",t),s=At(t),r=rJ(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},wJ=Ws.whereImpl,kJ=1e-7,SJ=1e-4,gp={};function IJ(e){return e in gp||(gp[e]={}),gp[e]}var CJ=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),NJ=600;function TJ(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*NJ/1024/1024}var oC=class extends Eu{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof ud)t=e;else{let n=ir(Y().getNumber("WEBGL_VERSION"),e);t=new ud(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=ir(Y().getNumber("WEBGL_VERSION"));t=new ud(n),this.binaryCache=IJ(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new iJ(this.gpgpu),this.numMBBeforeWarning=TJ(),this.texData=new Td(this,rs())}nextDataId(){return oC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:1,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new ui(o,Vl):d=new Vr(o,Vl);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),p=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),p}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,c;l&&(c=w.now());let u;if(s==="complex64"){let d=this.readSync(r.real.dataId),h=this.readSync(r.imag.dataId);u=T.mergeRealAndImagArrays(d,h)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let p=this.pendingRead.get(e);return new Promise(f=>p.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let p;i?p=new ui(s,Vl):p=new Vr(s,Vl);let f=this.runWebGLProgram(p,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let p=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(p.texture.texture,...fp(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let p=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=p[0],m=p[1];u=T.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let p=w.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,p)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let p=this.gpgpu.gl;ve(p,()=>p.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&rs().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let h;i?h=new ui(r,Vl):h=new Vr(r,Vl);let p=this.runWebGLProgram(h,[{dataId:e,shape:r,dtype:o}],o),f=this.readToGPU(p,t);return this.disposeIntermediateTensorInfo(p),f}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let c=this.decode(e,t.customTexShape),u=rs().makeTensorFromDataId(c.dataId,c.shape,c.dtype),d=this.texData.get(c.dataId);return{tensorRef:u,...d.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!c4(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),h=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...fp(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}let a=Y().getBool("WEBGL_PACK")&&s===!0,o=a?zp(t):t,i=a?new gY(o):new mY(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=w.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=CJ){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return wJ(e.shape,t)}packedUnaryOp(e,t,n){let s=new ui(e.shape,t),r=this.compileAndRun(s,[e],n);return rs().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=nC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,T5,e.dtype);let t=new Vr(e.shape,T5),n=this.compileAndRun(t,[e]);return rs().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return rs().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new vJ(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new aJ(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Si(e.shape),...Ii(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Si(t),...Ii(t)],a=new aC(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let d=w.sizeFromShape(r),h=t[0]*t[1]*4;w.assert(d<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=zp(r),i;s?i=new fY(o):i=new pY(o);let l=!0,c=[t??fp(o)],u=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,c,l,t);return{dtype:a,shape:r,dataId:u.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===0){let g=a??fp(e.outputShape);i.texShape=g.map(A=>A*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),w.sizeFromShape(o.shape)===0)return i.values=w.getTypedArrayFromDType(o.dtype,0),o;let l=[],c=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let A=this.texData.get(g.dataId);if(A.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:A.values};e.packedInputs&&(A.isPacked=!0,A.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!A.isPacked!=!!e.packedInputs)g=A.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),A=this.texData.get(g.dataId);else if(A.isPacked&&!Cd(A.shape,g.shape)){let x=g,y=g.shape;g.shape=A.shape,g=this.packedReshape(g,y),l.push(g),A=this.texData.get(g.dataId),x.shape=y}return{shape:g.shape,texData:A,isUniform:!1}});this.uploadToGPU(o.dataId);let u={shape:o.shape,texData:i,isUniform:!1},d=hY(e,c,u),h=this.getAndSaveBinary(d,()=>cY(this.gpgpu,e,c,u)),p=this.activeTimers!=null,f;p&&(f=this.startTimer()),dY(this.gpgpu,h,c,u,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=K(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Ce(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?kJ:SJ}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=w.now());let u=t.texShape;if(u==null&&(u=N4(n,i),t.texShape=u),r!=null){let d=zp(n),h,p=u[1],f=u[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([p,f]=fc(u[0],u[1])),i?h=new yY(d,m):h=new AY(d,m);let g=m?[f,p]:u,A=this.makeTensorInfo(g,s),x=this.texData.get(A.dataId);m?x.usage=2:x.usage=1,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(A.dataId),p,f,r);let y=[[f,p]],b=!0,v=this.runWebGLProgram(h,[A],s,y,b),C=this.texData.get(v.dataId);t.texture=C.texture,t.texShape=C.texShape,t.isPacked=C.isPacked,t.usage=C.usage,this.disposeIntermediateTensorInfo(A),this.texData.delete(v.dataId),t.values=null,l&&(this.uploadWaitMs+=w.now()-c)}else{let d=this.acquireTexture(u,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=EJ(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}},a0=oC;a0.nextDataId=0;function EJ(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var RJ="0.0.0";function iC(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}rc.isBrowser()&&ac("webgl",()=>new a0,2);var _J={forceHalfFloat:iC},lC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Iu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Kn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},o0=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,yh=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=Kn(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${At(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Nn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function ds(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var $J={kernelName:uo,backendName:"webgl",kernelFunc:ds};function Wo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=ds({inputs:{x:s},backend:n}),l=ds({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var DJ={kernelName:Rd,backendName:"webgl",kernelFunc:Wo},uC="return (a < 0.) ? b * a : a;",cC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function FJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh(cC,r.shape,o.shape):new Iu(uC,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var PJ={kernelName:co,backendName:"webgl",kernelFunc:FJ},dC="return (a < 0.) ? b * a : a;",hC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function OJ(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh(hC,s.shape,r.shape):new Iu(dC,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var MJ={kernelName:ko,backendName:"webgl",kernelFunc:OJ},bc="if (isnan(x)) return x;",zJ=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,LJ=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function nt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),h=n(d.values,l);return i.makeTensorInfo(o.shape,l,h)}let c=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new ui(o.shape,t):u=new Vr(o.shape,e),i.runWebGLProgram(u,[o],l)}}function mn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(s&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,A]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{let[b,v]=y,C={dataId:b.dataId,dtype:b.dtype,shape:l.shape},S={dataId:v.dataId,dtype:v.dtype,shape:c.shape},E=new Iu(e,l.shape,c.shape);return u.runWebGLProgram(E,[C,S],En(b.dtype,v.dtype))}),x=Wo({inputs:{real:g,imag:A},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(A),x}let d=a||En(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,A=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[x,y]=r(l.shape,c.shape,g,A,d),b=u.makeTensorInfo(y,d),v=u.texData.get(b.dataId);return v.values=x,b}let h=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,p;return h?p=new yh(t,l.shape,c.shape,n):p=new Iu(e,l.shape,c.shape),u.runWebGLProgram(p,[l,c],d)}}function i0(e,t=!1){if(e==="linear")return t?gJ:dJ;if(e==="relu")return t?yJ:pJ;if(e==="elu")return t?AJ:hJ;if(e==="relu6")return t?xJ:fJ;if(e==="prelu")return t?hC:dC;if(e==="leakyrelu")return t?cC:uC;if(e==="sigmoid")return t?bJ:mJ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var pC=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Kn(this.outputShape.length);let c=s?e[1]:e[2],u=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let A=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${x};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${f[0]});
          result += (${p[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${A}

        ${g}

        setOutput(result);
      }
    `}},E5={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},R5=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},_5="return a * b;";function Ux(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=T.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),c=new R5(E5.REAL,s.shape,r.shape),u=new R5(E5.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=Wo({inputs:{real:h,imag:p},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[c,u]=LY(s.shape,r.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),h=n.texData.get(d.dataId);return h.values=c,d}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new yh(_5,s.shape,r.shape):o=new Iu(_5,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var BJ={kernelName:bo,backendName:"webgl",kernelFunc:Ux};function WJ(e,t,n){let s=[Si(e.shape),...Ii(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Si(t),...Ii(t)],o=new aC(a,s),i=!0,l=[s],c=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function be(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=w.sizeFromShape(r.shape),l=w.inferFromImplicitShape(a,i),c=w.sizeFromShape(l);w.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(r.dataId);return u.isPacked&&!Cd(r.shape,l)&&!(u.texture!==null&&Cd(u.shape,l))?WJ(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var VJ={kernelName:tl,backendName:"webgl",kernelFunc:be},$5=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${w.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},UJ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function GJ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Il(e,t,n,s){let r=GJ(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:c}=r[o],u,d;n==="mean"?u=o===0?new $5({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new $5({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new UJ({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var HJ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=At(this.rank),r=jJ(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function jJ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var qJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=At(this.rank),r=rC("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function l0(e,t,n){let s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qJ(e.shape,t):new HJ(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function XJ(e,t,n,s){let r=t,a=e.shape.length,o=w.parseAxisParam(r,e.shape),i=o,l=T.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=l0(e,l,s),i=T.getInnerMostAxes(i.length,a)),T.assertAxesAreInnerMostDims("sum",i,a);let[d,h]=T.computeOutAndReduceShapes(u.shape,i),p=d;n&&(p=T.expandShapeToKeepDim(d,o));let f=w.sizeFromShape(h),g=w.sizeFromShape(e.shape)/f,A=be({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=Xd(e.dtype),y=Il(A,x,"sum",s),b=be({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(u),b}function u0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return XJ(r,a,o,n)}var KJ={kernelName:_o,backendName:"webgl",kernelFunc:u0};function $n(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,h=Vx(d,r.shape,r.dtype,a,l);c=o.makeTensorInfo(l,r.dtype);let p=o.texData.get(c.dataId);p.values=h}else c=l0(r,a,o);return c}var ZJ={kernelName:Oo,backendName:"webgl",kernelFunc:$n},fC=1e3;function bf({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=s?t.shape[u-1]:t.shape[u-2],p=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=w.sizeFromShape(m),x=w.sizeFromShape(g),b=Al.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=n?[A,d,p]:[A,p,d],C=s?[x,f,h]:[x,h,f],S=be({inputs:{x:e},backend:r,attrs:{shape:v}}),E=be({inputs:{x:t},backend:r,attrs:{shape:C}}),R=[S,E],P=Math.max(A,x),$=n?S.shape[1]:S.shape[2],_=a!=null,N=o!=null,O=l==="leakyrelu",z=l!=null?i0(l,!0):null,j=_||N||O||z!=null,L;if((p===1||f===1)&&$>fC&&j===!1){let W=S,J=E;n&&(W=$n({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),R.push(W)),s&&(J=$n({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(J));let ee=f!==1,re=f===1,Z=W;ee&&(Z=be({inputs:{x:W},backend:r,attrs:{shape:[P,$,1]}}),R.push(Z));let se=f===1?2:1,ne=J;re&&(ne=be({inputs:{x:J},backend:r,attrs:{shape:[P,1,$]}}),R.push(ne));let de=Ux({inputs:{a:Z,b:ne},backend:r});L=u0({inputs:{x:de},backend:r,attrs:{axis:se,keepDims:!0}}),R.push(de)}else{let W=En(e.dtype,t.dtype),J=new pC(v,C,[P,p,f],n,s,_,z,N,O),ee=[S,E];if(a!=null&&ee.push(a),N&&ee.push(o),O){let re=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));ee.push(re),R.push(re)}L=r.runWebGLProgram(J,ee,W)}let B=be({inputs:{x:L},backend:r,attrs:{shape:b}});R.push(L);for(let W of R)r.disposeIntermediateTensorInfo(W);return B}function YJ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return bf({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var JJ={kernelName:Ra,backendName:"webgl",kernelFunc:YJ},D5="return abs(x);";function QJ(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=nC(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ui(s.shape,D5):r=new Vr(s.shape,D5),n.runWebGLProgram(r,[s],s.dtype)}var eQ={kernelName:_i,backendName:"webgl",kernelFunc:QJ},tQ=Us+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,nQ=nt({opSnippet:tQ}),sQ={kernelName:_u,backendName:"webgl",kernelFunc:nQ},rQ=Us+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,aQ=nt({opSnippet:rQ}),oQ={kernelName:$u,backendName:"webgl",kernelFunc:aQ},F5="return a + b;",iQ=mn({opSnippet:F5,packedOpSnippet:F5,supportsComplex:!0,cpuKernelImpl:bY}),lQ={kernelName:Kr,backendName:"webgl",kernelFunc:iQ},uQ=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},cQ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function Wp(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return ds({inputs:{x:s[0]},backend:n});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=Wp({inputs:s.slice(0,l),backend:n}),u=Wp({inputs:s.slice(l),backend:n});return Wp({inputs:[c,u],backend:n})}let r=s.map(l=>l.dtype).reduce((l,c)=>En(l,c)),a=s.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new cQ(s[0].shape,a):new uQ(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var dQ={kernelName:Ha,backendName:"webgl",kernelFunc:Wp};function hQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=T.getAxesPermutation(c,i),d=r;u!=null&&(d=$n({inputs:{x:r},backend:n,attrs:{perm:u}}),c=T.getInnerMostAxes(c.length,i)),T.assertAxesAreInnerMostDims("all",c,i);let[h,p]=T.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(p),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Il(m,m.dtype,"all",n),A;if(o){let x=T.expandShapeToKeepDim(h,l);A=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=be({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var pQ={kernelName:Du,backendName:"webgl",kernelFunc:hQ};function fQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=T.getAxesPermutation(c,i),d=r;u!=null&&(d=$n({inputs:{x:r},backend:n,attrs:{perm:u}}),c=T.getInnerMostAxes(c.length,i)),T.assertAxesAreInnerMostDims("any",c,i);let[h,p]=T.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(p),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Il(m,m.dtype,"any",n),A;if(o){let x=T.expandShapeToKeepDim(h,l);A=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=be({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var mQ={kernelName:Fu,backendName:"webgl",kernelFunc:fQ},gQ=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},AQ=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=At(i),c=Nn("coords",i),u,d;if(a===1){d=i+1;let S=At(d);u=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[i-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[i-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[i-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map(S=>"int "+S),m=Nn("sourceLocR",d-1).concat("inIdx.r"),g=Nn("sourceLocG",d-1).concat("inIdx.g"),A=Nn("sourceLocB",d-1).concat("inIdx.b"),x=Nn("sourceLocA",d-1).concat("inIdx.a"),y=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${A.join()}),
                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${A.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,C=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function mC(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new gQ(i,n,s==null),c=[t];s!=null&&c.push(s);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=mC(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function gC(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=T.computeOptimalWindowSize(a),i=new AQ(r,o,n,s==null),l=s==null?[t]:[t,s],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=gC(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function AC(e,t,n,s){let r=[n];if(T.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=T.computeOutAndReduceShapes(l.shape,r),d=w.sizeFromShape(u),h=be({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(h);let p=mC(e,h,s);a.push(p);let f=be({inputs:{x:p},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return gC(e,t,s)}function yQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=$n({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=AC(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var xQ={kernelName:ja,backendName:"webgl",kernelFunc:yQ};function bQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=$n({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=AC(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var vQ={kernelName:Pu,backendName:"webgl",kernelFunc:bQ},wQ=Us+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,kQ=nt({opSnippet:wQ}),SQ={kernelName:Ou,backendName:"webgl",kernelFunc:kQ},IQ=Us+"return log(x + sqrt(x * x + 1.0));",CQ=nt({opSnippet:IQ}),NQ={kernelName:Mu,backendName:"webgl",kernelFunc:CQ},TQ=Us+`
  return atan(x);
`,EQ=nt({opSnippet:TQ}),RQ={kernelName:zu,backendName:"webgl",kernelFunc:EQ},_Q=zJ+`
  return atan(a, b);
`,$Q=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+LJ+`
  return result;
`,DQ=mn({opSnippet:_Q,packedOpSnippet:$Q}),FQ={kernelName:Bu,backendName:"webgl",kernelFunc:DQ},PQ=Us+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,OQ=nt({opSnippet:PQ}),MQ={kernelName:Lu,backendName:"webgl",kernelFunc:OQ},Nd=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,A="0.0";if(f||(A="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${h}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(y="avgValue / count");let b=Math.floor(a/4)*4,v=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${p});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${b};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${y});
      }
    `}},Gx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,A=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",y="0.0";if(x||(y="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${A});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let C=Math.floor(a/4)*4,S=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${A});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${C};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${v});
        }
      }
    `}};function zQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;mc(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=T.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return ds({inputs:{x:r},backend:n});let d=new Nd(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var LQ={kernelName:qa,backendName:"webgl",kernelFunc:zQ};function BQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=T.computePool3DInfo(r.shape,a,o,u,i,l,c),h=new Gx(d,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}var WQ={kernelName:Ed,backendName:"webgl",kernelFunc:BQ},VQ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},UQ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function GQ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],h=T.computePool3DInfo(o.shape,i,l,d,c,u),p=new UQ(h);return n.runWebGLProgram(p,[r],o.dtype)}var HQ={kernelName:Ff,backendName:"webgl",kernelFunc:GQ};function jQ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;mc([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=T.computePool2DInfo(o.shape,i,l,1,c),d=new VQ(u);return n.runWebGLProgram(d,[r],o.dtype)}var qQ={kernelName:Df,backendName:"webgl",kernelFunc:jQ};function XQ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return bf({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var KQ={kernelName:Xa,backendName:"webgl",kernelFunc:XQ},ZQ=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},YQ=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},JQ=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[s,r,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let h=Y().getBool("WEBGL_PACK_NORMALIZATION")?new YQ(s.shape,r.shape,a.shape,u,d,l):new ZQ(s.shape,r.shape,a.shape,u,d,l);return t.runWebGLProgram(h,c,c[0].dtype)},QQ={kernelName:io,backendName:"webgl",kernelFunc:JQ},eee=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=At(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=tee(this.rank),s,r=e.map((a,o)=>`sourceLoc.${SA[o]} = start[${o}] + coords.${SA[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},SA=["x","y","z","w","u","v"];function tee(e){if(e===1)return"sourceLoc";if(e<=6)return SA.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var nee=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=At(this.rank),n=Nn("coords",this.rank),s=Nn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${s[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function see(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=$t.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function vc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=$t.parseSliceParams(r,a,o);if($t.assertParamsValid(r,i,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),h=jY(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,h)}let{isPacked:c}=n.texData.get(r.dataId),u=$t.isSliceContinous(r.shape,i,l);if(c||!u){let d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nee(l):new eee(l),h=[i];return n.runWebGLProgram(d,[r],r.dtype,h)}return n.uploadToGPU(r.dataId),see(r,i,l,n)}var ree={kernelName:ol,backendName:"webgl",kernelFunc:vc},aee=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,y)=>x*y),l=T.getReshaped(r.shape,a,i),c=T.getPermuted(l.length,a.length),u=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(u,o,a.length),p=[],f=be({inputs:{x:r},backend:n,attrs:{shape:l}}),m=$n({inputs:{x:f},backend:n,attrs:{perm:c}}),g=be({inputs:{x:m},backend:n,attrs:{shape:u}}),A=vc({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),A},oee={kernelName:$i,backendName:"webgl",kernelFunc:aee};function iee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),c=tC(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var lee={kernelName:Pf,backendName:"webgl",kernelFunc:iee};function uee(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var cee={kernelName:Of,backendName:"webgl",kernelFunc:uee},dee="return float(a != b);",yC=mn({opSnippet:dee,cpuKernelImpl:WY,dtype:"bool"}),hee={kernelName:Xi,backendName:"webgl",kernelFunc:yC};function xh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ds({inputs:{x:r.complexTensorInfos.real},backend:n})}var pee={kernelName:Ld,backendName:"webgl",kernelFunc:xh},fee="return float(int(x));";function mee(e,t){let n=new Vr(e.shape,fee),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function IA(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ds({inputs:{x:r},backend:n});let o=Vt(r.shape),i=IA({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Wo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=xh({inputs:{input:r},backend:n}),i=IA({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=ds({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return mee(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=yC({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var gee={kernelName:Ka,backendName:"webgl",kernelFunc:IA},P5="return ceil(x);",Aee=nt({opSnippet:P5,packedOpSnippet:P5,cpuKernelImpl:wY}),yee={kernelName:Za,backendName:"webgl",kernelFunc:Aee},xee=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},bee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function vee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;Y().getBool("WEBGL_PACK_CLIP")?i=new bee(r.shape):i=new xee(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var wee={kernelName:Zr,backendName:"webgl",kernelFunc:vee},kee=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function O5(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function See(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new kee(s.shape),o=[O5(s,r.complexTensorInfos.real),O5(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Iee={kernelName:_d,backendName:"webgl",kernelFunc:See},Cee=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Nee=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=At(s),a=Nn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${Ap(o,l,m)}),
            vec2(${Ap(c,l,m)}));
        }`}let h=i.length,p=i[i.length-1];d+=`
        return getChannel(
          getT${h}(${Ap(o,l,p)}),
          vec2(${Ap(c,l,p)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Ap(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function c0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ds({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Tee={kernelName:Pd,backendName:"webgl",kernelFunc:c0};function eu(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>xh({inputs:{input:m},backend:n})),d=e.map(m=>c0({inputs:{input:m},backend:n})),h=eu(u,t,n),p=eu(d,t,n),f=Wo({inputs:{real:h,imag:p},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(A=>{let x=w.sizeFromShape(A.shape.slice(t));return be({inputs:{x:A},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(A=>({vals:n.readSync(A.dataId),shape:A.shape})),h=T.computeOutShape(u.map(A=>A.shape),1),p=u[0].shape[0]===1,f=kY(d,h,s,p),m=T.computeOutShape(e.map(A=>A.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(A=>n.disposeIntermediateTensorInfo(A)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=eu(e.slice(0,u),t,n),h=eu(e.slice(u),t,n),p=eu([d,h],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),p}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new Nee(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,s)}let{tensors2D:a,outShape:o}=Eee(e,t,n),i=new Cee(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=be({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Eee(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>be({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function xC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return ds({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return T.assertParamsConsistent(l,a),eu(i,a,n)}var Ree={kernelName:Di,backendName:"webgl",kernelFunc:xC},bC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,A=m?2:3,x=m?3:1,y="",b="";n&&(s?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${A}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}},_ee=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$ee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Kn(this.outputShape.length);let{dataFormat:n}=t,s=Pn(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function vC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=s.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1,g,A=[];if(!((d===1||h===1)&&u>fC)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&w.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),v={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,w.assert(Cd(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);let S=be({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});A.push(S);let E=bf({a:v,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);w.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,R.shape=n.outShape,g=ds({inputs:{x:E},backend:s}),g.shape=n.outShape,A.push(E)}else{let b=p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],v=be({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),C=be({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),S=bf({a:v,b:C,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=be({inputs:{x:S},backend:s,attrs:{shape:n.outShape}}),A.push(v),A.push(C),A.push(S)}for(let b of A)s.disposeIntermediateTensorInfo(b);return g}function wC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:h,dataFormat:p}=n,f=p==="channelsLast",m=l*c*u,g=h*d,A=[m,g],x=!0,y=!1,b=[],v=be({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),C=be({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});b.push(v),b.push(C);let S=new $ee(A,n),E=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(S,[v],"float32",E),P=be({inputs:{x:R},backend:s,attrs:{shape:[1,A[0],A[1]]}});b.push(R),b.push(P);let $=r!=null,_=a!=null,N=i==="leakyrelu",O=i?i0(i,!0):null,z=new pC(P.shape,C.shape,[1,g,n.outChannels],x,y,$,O,_,N),j=[P,C];if(r&&j.push(r),_&&j.push(a),N){let J=s.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));j.push(J),b.push(J)}let L=s.runWebGLProgram(z,j,"float32"),B=f?[1,h,d,n.outChannels]:[1,n.outChannels,h,d],W=be({inputs:{x:L},backend:s,attrs:{shape:B}});b.push(L);for(let J of b)s.disposeIntermediateTensorInfo(J);return W}function Dee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=vC({x:r,filter:a,convInfo:h,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)p=wC({x:r,filter:a,convInfo:h,backend:n});else{let m=new bC(h);p=n.runWebGLProgram(m,[r,a],"float32")}let f=be({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}var Fee={kernelName:Ya,backendName:"webgl",kernelFunc:Dee},Pee=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Oee=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Mee=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zee=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Lee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),p=new Pee(h);return n.runWebGLProgram(p,[r,a],"float32")}var Bee={kernelName:Mf,backendName:"webgl",kernelFunc:Lee};function Wee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=T.convertConv2DDataFormat(c),h=T.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),p=new Oee(h);return n.runWebGLProgram(p,[r,a],"float32")}var Vee={kernelName:Ja,backendName:"webgl",kernelFunc:Wee};function Uee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=T.computeConv3DInfo(r.shape,a.shape,o,l,i),u=new _ee(c);return n.runWebGLProgram(u,[r,a],"float32")}var Gee={kernelName:$d,backendName:"webgl",kernelFunc:Uee};function Hee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,c=T.computeConv3DInfo(r.shape,l,o,1,i),u=new Mee(c);return n.runWebGLProgram(u,[r,a],"float32")}var jee={kernelName:zf,backendName:"webgl",kernelFunc:Hee};function qee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,c=T.computeConv3DInfo(l,a.shape,i,1,o),u=new zee(c);return n.runWebGLProgram(u,[r,a],"float32")}var Xee={kernelName:Lf,backendName:"webgl",kernelFunc:qee},Kee=bc+`
  return cos(x);
`,Zee=nt({opSnippet:Kee}),Yee={kernelName:Qa,backendName:"webgl",kernelFunc:Zee},Jee=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Qee=nt({opSnippet:Jee}),ete={kernelName:eo,backendName:"webgl",kernelFunc:Qee},tte=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let h=s==="bilinear"?1:0,[p,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,A]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${y};

        float in_y = ${A};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},nte=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new tte(r.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[r,a,o],"float32")},ste={kernelName:Pi,backendName:"webgl",kernelFunc:nte},M5=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${z5(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${At(s)} coords = getOutputCoords();
        int end = ${L5(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${L5(s,"coords")} = idx;
          val += getX(${z5(s,"coords")});
        }
        setOutput(val);
      }
    `}};function z5(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function L5(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length,c=T.getAxesPermutation([a],l),u=r;c!=null&&(u=$n({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=T.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let h=u.shape[d],p=ds({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){let m=new M5(u.shape,!1,i),g=[[f]],A=p;p=n.runWebGLProgram(m,[p],p.dtype,g),n.disposeIntermediateTensorInfo(A)}if(o){let f=new M5(u.shape,o,i),m=p;p=n.runWebGLProgram(f,[p],p.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=T.getUndoAxesPermutation(c),m=$n({inputs:{x:p},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),m}return p}var ate={kernelName:Fi,backendName:"webgl",kernelFunc:rte};function ote(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=tC(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=vY(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var ite={kernelName:Bf,backendName:"webgl",kernelFunc:ote},lte=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ute(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,h=c*a,p=u/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new lte(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var cte={kernelName:Oi,backendName:"webgl",kernelFunc:ute},kC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Kn(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},SC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Kn(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let A=g*2;if(h+=`
          xC = xCCorner + ${A*l};
          `,i===1){if(A<u&&(o%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }
              `,l===1&&A>0?h+=`
                xC${A} = vec4(xTexelC${A-2}.zw, xTexelC${A}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${A} = vec4(previous.zw, xTexelC${A}.xy);
                  } else {
                    xC${A} = vec4(0.0, 0.0, xTexelC${A}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xC${A} = xTexelC${A};
                `,A+1<u)){let x=o%2===0?w.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                    xTexelC${A+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${A+1}.zw = vec2(0.0);
                    }
                    xTexelC${A+1}Ready = 1;
                  }
                  `,l>1&&(h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                      xTexelC${A} = getX(batch, xR, xCOffset, d1);
                      xTexelC${A}Ready = 1;
                    }
                    `),h+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.xy);
                  `):x===1?h+=`
                    xC${A+1} = xTexelC${A};
                    `:h+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                      xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${A+1}.zw = vec2(0.0);
                      }
                      xTexelC${A+1}Ready = 1;
                    }

                    xC${A+1} = xTexelC${A+1};
                    `}}else A<u&&(o%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.0);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
              `,A+1<u&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${A+1} = vec4(xTexelC${A+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(
                  xTexelC${A}.xy, xTexelC${A+1}.xy);
              `,A+1<u&&(h+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
                `)));A<u&&(h+=`
            wTexel = getW(r, ${A}, d1, q);
            dotProd += xC${A} * vec4(wTexel.xz, wTexel.xz);
          `,A+1<u&&(h+=`
              wTexel = getW(r, ${A+1}, d1, q);
              dotProd += xC${A+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let p="",f="";n&&(s?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function dte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),h;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new SC(d):h=new kC(d);let p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[r,a],"float32",p)}var hte={kernelName:to,backendName:"webgl",kernelFunc:dte},pte=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},fte=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function mte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=T.computeConv2DInfo(r.shape,u,o,i,l,c,!0),h=new pte(d);return n.runWebGLProgram(h,[r,a],"float32")}var gte={kernelName:Wf,backendName:"webgl",kernelFunc:mte};function Ate(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=T.computeConv2DInfo(u,a.shape,o,i,l,c,!0),h=new fte(d);return n.runWebGLProgram(h,[r,a],"float32")}var yte={kernelName:Vf,backendName:"webgl",kernelFunc:Ate},xte=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function bte(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),o=be({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new xte(a),l=n.runWebGLProgram(i,[o],o.dtype),c=be({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var vte={kernelName:Uf,backendName:"webgl",kernelFunc:bte},wte=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function kte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=T.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),u,d=new wte(c);u=n.runWebGLProgram(d,[r,a],"float32");let h=be({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),h}var Ste={kernelName:Dd,backendName:"webgl",kernelFunc:kte};function Ite(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=T.getEinsumComputePath(i,l),d=u.length,h=null,p=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=T.getEinsumPermutation(p,l[g]),y;T.isIdentityPermutation(A)?y=a[g]:(y=$n({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(y.shape,b)||(y=be({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),h===null?h=y:(h=Ux({inputs:{a:y,b:h},backend:n}),f.push(h))}m<d-1&&(c[m]>=0&&(h=u0({inputs:{x:h},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(let m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}var Cte={kernelName:Fd,backendName:"webgl",kernelFunc:Ite},Nte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Tte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ete=nt({opSnippet:Nte,packedOpSnippet:Tte}),Rte={kernelName:so,backendName:"webgl",kernelFunc:Ete},_te="return (b >= 1.0) ? a : a * (b + 1.0);",$te=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Dte=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh($te,s.shape,r.shape):new Iu(_te,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},Fte={kernelName:Gf,backendName:"webgl",kernelFunc:Dte},Pte=`
  return vec4(equal(a, b));
`,Ote="return float(a == b);",Mte=mn({opSnippet:Ote,packedOpSnippet:Pte,dtype:"bool",cpuKernelImpl:SY}),zte={kernelName:Mi,backendName:"webgl",kernelFunc:Mte},Lte=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Bte=nt({opSnippet:Lte}),Wte={kernelName:Wu,backendName:"webgl",kernelFunc:Bte},Vte=bc+`
  return exp(x);
`,Ute=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,IC=nt({opSnippet:Vte,packedOpSnippet:Ute,cpuKernelImpl:IY,dtype:"float32"}),Gte={kernelName:ro,backendName:"webgl",kernelFunc:IC};function CA(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(w.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),be({inputs:{x:a},backend:s,attrs:{shape:i}})}var Hte={kernelName:zi,backendName:"webgl",kernelFunc:CA},B5="return exp(x) - 1.0;",jte=nt({opSnippet:B5,packedOpSnippet:B5,cpuKernelImpl:CY}),qte={kernelName:Li,backendName:"webgl",kernelFunc:jte},W5=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function CC(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=be({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new W5("real",l,t),u=new W5("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=Wo({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);let m=be({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function Xte(e){let{inputs:t,backend:n}=e,{input:s}=t;return CC(s,!1,n)}var Kte={kernelName:Hf,backendName:"webgl",kernelFunc:Xte},Zte=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function bh(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Zte(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var Yte={kernelName:Vu,backendName:"webgl",kernelFunc:bh},Jte=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Qte={kernelName:Bi,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Jte(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},V5="return floor(x);",ene=nt({opSnippet:V5,packedOpSnippet:V5,cpuKernelImpl:NY}),tne={kernelName:ao,backendName:"webgl",kernelFunc:ene},nne=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,sne=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,rne=mn({opSnippet:nne,packedOpSnippet:sne,dtype:"int32"}),ane={kernelName:oo,backendName:"webgl",kernelFunc:rne},one=class{constructor(e){this.variableNames=["A"];let t=Pn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},ine=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Pn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},lne={kernelName:md,backendName:"webgl",kernelFunc:une},Ul;function une(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,a];(i||o)&&(Ul==null&&(Ul=document.createElement("canvas").getContext("2d")),Ul.canvas.width=l,Ul.canvas.height=c,Ul.drawImage(r,0,0,l,c),r=Ul.canvas);let h=n.makeTensorInfo(u,"int32");n.texData.get(h.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),r);let p=Y().getBool("WEBGL_PACK")?new ine(d):new one(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}function cne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(u),g=T.computeConv2DInfo(r.shape,a.shape,l,d,c,h,!1,m),A,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))A=vC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)A=wC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,v=i!=null,C=p==="leakyrelu",S=p?i0(p,!1):null,E=new bC(g,b,S,v,C),R=[r,a];if(o&&R.push(o),i&&R.push(i),C){let P=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(P),x.push(P)}A=n.runWebGLProgram(E,R,"float32")}let y=be({inputs:{x:A},backend:n,attrs:{shape:g.outShape}});return x.push(A),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var dne={kernelName:_a,backendName:"webgl",kernelFunc:cne};function hne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[],m=u;m==null&&(m=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,a.shape,l,m,c,d,!0),A=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?i0(h,A):null,y=[r,a],b=o!=null,v=i!=null,C=h==="leakyrelu";if(b&&y.push(o),v&&y.push(i),C){let P=n.makeTensorInfo([],"float32",w.createScalarValue(p,"float32"));y.push(P),f.push(P)}let S;A?S=new SC(g,b,x,v,C):S=new kC(g,b,x,v,C);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(S,y,"float32",E);return f.forEach(P=>n.disposeIntermediateTensorInfo(P)),R}var pne={kernelName:$a,backendName:"webgl",kernelFunc:hne},fne=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=At(t.length),r=At(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function mne(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=w.sizeFromShape(s.shape),[l,c,u,d]=T.prepareAndValidate(s,r),h=be({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),p=be({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let A=n.readSync(r.dataId),x=n.bufferSync(s),y=TY(A,x,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,y.values)}let f=new fne(o,d,[c,u]),m=n.runWebGLProgram(f,[p,h],p.dtype),g=be({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}var gne={kernelName:Vi,backendName:"webgl",kernelFunc:mne},Ane=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=At(this.rank),s=yne(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function yne(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function NC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0];if(Y().get("DEBUG")){let x=n.readSync(a.dataId),y=r.shape[l];for(let b=0;b<x.length;++b){let v=x[b];w.assert(v<=y-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${y-1}]`)}}let c=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=w.sizeFromShape(a.shape),d=[],h=be({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=be({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(h),d.push(p);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let x=n.bufferSync(p),y=n.bufferSync(h),b=EY(y,x,f);return d.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}let m=new Ane(h.shape,f),g=n.runWebGLProgram(m,[h,p],h.dtype);d.push(g);let A=be({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeIntermediateTensorInfo(x)),A}var xne={kernelName:Wi,backendName:"webgl",kernelFunc:NC},bne="return float(a > b);",vne=`
  return vec4(greaterThan(a, b));
`,wne=mn({opSnippet:bne,packedOpSnippet:vne,cpuKernelImpl:RY,dtype:"bool"}),kne={kernelName:Ui,backendName:"webgl",kernelFunc:wne},Sne="return float(a >= b);",Ine=`
  return vec4(greaterThanEqual(a, b));
`,Cne=mn({opSnippet:Sne,packedOpSnippet:Ine,dtype:"bool",cpuKernelImpl:_Y}),Nne={kernelName:lo,backendName:"webgl",kernelFunc:Cne};function Tne(e){let{inputs:t,backend:n}=e,{input:s}=t;return CC(s,!0,n)}var Ene={kernelName:jf,backendName:"webgl",kernelFunc:Tne},Rne="return float(!isnan(x) && !isinf(x));",_ne=nt({opSnippet:Rne,dtype:"bool"}),$ne={kernelName:Uu,backendName:"webgl",kernelFunc:_ne},Dne="return float(isinf(x));",Fne=nt({opSnippet:Dne,dtype:"bool"}),Pne={kernelName:Gu,backendName:"webgl",kernelFunc:Fne},One="return float(isnan(x));",Mne=nt({opSnippet:One,dtype:"bool"}),zne={kernelName:Hu,backendName:"webgl",kernelFunc:Mne},Lne="return float(a < b);",Bne=`
  return vec4(lessThan(a, b));
`,Wne=mn({opSnippet:Lne,packedOpSnippet:Bne,cpuKernelImpl:$Y,dtype:"bool"}),Vne={kernelName:Gi,backendName:"webgl",kernelFunc:Wne},Une="return float(a <= b);",Gne=`
  return vec4(lessThanEqual(a, b));
`,Hne=mn({opSnippet:Une,packedOpSnippet:Gne,cpuKernelImpl:DY,dtype:"bool"}),jne={kernelName:Hi,backendName:"webgl",kernelFunc:Hne};function qne(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=FY(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var Xne={kernelName:qf,backendName:"webgl",kernelFunc:qne},Kne=bc+`
  return x < 0.0 ? 0./0. : log(x);
`,Zne=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Yne=nt({opSnippet:Kne,packedOpSnippet:Zne,cpuKernelImpl:PY}),Jne={kernelName:ho,backendName:"webgl",kernelFunc:Yne},Qne=bc+`
  return log(1.0 + x);
`,ese=nt({opSnippet:Qne}),tse={kernelName:ju,backendName:"webgl",kernelFunc:ese},nse="return float(a >= 1.0 && b >= 1.0);",sse=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,rse=mn({opSnippet:nse,packedOpSnippet:sse,dtype:"bool"}),ase={kernelName:ji,backendName:"webgl",kernelFunc:rse},ose="return float(!(x >= 1.0));",ise=nt({opSnippet:ose}),lse={kernelName:qu,backendName:"webgl",kernelFunc:ise},use="return float(a >= 1.0 || b >= 1.0);",cse=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dse=mn({opSnippet:use,packedOpSnippet:cse,dtype:"bool"}),hse={kernelName:Od,backendName:"webgl",kernelFunc:dse},pse=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},fse=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},mse=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,c=Y().getBool("WEBGL_PACK_NORMALIZATION")?new fse(r.shape,a,o,i,l):new pse(r.shape,a,o,i,l);return n.runWebGLProgram(c,[r],r.dtype)},gse={kernelName:Md,backendName:"webgl",kernelFunc:mse},Ase=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},yse=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new Ase(r.shape,i,l,c,u);return n.runWebGLProgram(d,[r,a,o],r.dtype)},xse={kernelName:Xf,backendName:"webgl",kernelFunc:yse};function bse(e,t,n,s){let r=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/r,i=be({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=Il(i,e.dtype,"max",s),c=be({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}function TC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=T.getAxesPermutation(c,i),d=u!=null,h=n.shouldExecuteOnCPU([r]),p=r;if(d){if(h){let y=n.texData.get(p.dataId).values,b=new Array(i);for(let S=0;S<b.length;S++)b[S]=r.shape[u[S]];let v=Vx(y,r.shape,r.dtype,u,b);p=n.makeTensorInfo(b,r.dtype);let C=n.texData.get(p.dataId);C.values=v}else p=l0(r,u,n);c=T.getInnerMostAxes(c.length,i)}T.assertAxesAreInnerMostDims("max",c,i);let[f,m]=T.computeOutAndReduceShapes(p.shape,c),g=f;o&&(g=T.expandShapeToKeepDim(f,l));let A;if(h){let y=n.texData.get(p.dataId).values,b=OY(y,w.sizeFromShape(m),g,r.dtype);A=n.makeTensorInfo(g,r.dtype);let v=n.texData.get(A.dataId);v.values=b}else A=bse(p,m,g,n);return d&&n.disposeIntermediateTensorInfo(p),A}var vse={kernelName:po,backendName:"webgl",kernelFunc:TC},wse=lC+`
  return max(a, b);
`,kse=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+o0+`
  return result;
`,Sse=mn({opSnippet:wse,packedOpSnippet:kse,cpuKernelImpl:MY}),Ise={kernelName:fo,backendName:"webgl",kernelFunc:Sse};function Cse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;mc(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=T.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return ds({inputs:{x:r},backend:n});let d=new Nd(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Nse={kernelName:mo,backendName:"webgl",kernelFunc:Cse};function Tse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=T.computePool3DInfo(r.shape,a,o,u,i,c,l),h=new Gx(d,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}var Ese={kernelName:zd,backendName:"webgl",kernelFunc:Tse},Rse=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},_se=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,h=c-1-e.padInfo.left,p=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function $se(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],h=T.computePool3DInfo(o.shape,i,l,d,c,u),p=new Gx(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new _se(h),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var Dse={kernelName:Zf,backendName:"webgl",kernelFunc:$se};function Fse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;mc([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,h=T.computePool2DInfo(i.shape,l,c,1,u,d),p=!0,f=new Nd(h,"max",p),m=n.runWebGLProgram(f,[i],i.dtype),g=new Rse(h),A=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),A}var Pse={kernelName:Kf,backendName:"webgl",kernelFunc:Fse};function Ose(e,t,n,s){let r=new Nd(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Nd(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var Mse={kernelName:Yf,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=T.computePool2DInfo(s.shape,r,a,c,o),[d,h]=Ose(s,i,u,l);return[d,h]}};function zse(e,t,n,s){let r=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/r,i=be({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=Il(i,"float32","mean",s),c=be({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}var Lse={kernelName:go,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=l,u=T.getAxesPermutation(c,i),d=u!=null,h=o.shouldExecuteOnCPU([s]),p=[],f=s;if(d){if(h){let b=o.texData.get(f.dataId).values,v=new Array(i);for(let E=0;E<v.length;E++)v[E]=s.shape[u[E]];let C=Vx(b,s.shape,s.dtype,u,v);f=o.makeTensorInfo(v,s.dtype);let S=o.texData.get(f.dataId);S.values=C}else f=l0(s,u,o);p.push(f),c=T.getInnerMostAxes(c.length,i)}T.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=T.computeOutAndReduceShapes(f.shape,c),A=m;r&&(A=T.expandShapeToKeepDim(m,l));let x=zse(f,g,A,o);for(let y of p)o.disposeIntermediateTensorInfo(y);return x}};function Bse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=T.getAxesPermutation(c,i),d=r;u!=null&&(d=$n({inputs:{x:r},backend:n,attrs:{perm:u}}),c=T.getInnerMostAxes(c.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",c,i);let[h,p]=T.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(p),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Il(m,m.dtype,"min",n),A;if(o){let x=T.expandShapeToKeepDim(h,l);A=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=be({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var Wse={kernelName:Ao,backendName:"webgl",kernelFunc:Bse},Vse=lC+`
  return min(a, b);
`,Use=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+o0+`
  return result;
`,Gse=mn({opSnippet:Vse,packedOpSnippet:Use,cpuKernelImpl:zY}),Hse={kernelName:yo,backendName:"webgl",kernelFunc:Gse},jse=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let s=e.length,r=At(s),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},qse=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,f)=>p[0]+e[f]+p[1]);let s=e.length,r=At(s),a=t.map(p=>p[0]).join(","),o=t.map((p,f)=>p[0]+e[f]).join(","),i=Nn("rc",s),l=Nn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,h="";if(s===1){let p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;h=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;h=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${p}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[s-1]} += 1;
          if(${c}) {
            ${p}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},Xse=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qse(s.shape,r,a):new jse(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},Kse={kernelName:xo,backendName:"webgl",kernelFunc:Xse},Zse=`if (b == 0.0) return NAN;
  return mod(a, b);`,Yse=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+o0+`
  return result;
`,Jse=mn({opSnippet:Zse,packedOpSnippet:Yse}),Qse={kernelName:Xu,backendName:"webgl",kernelFunc:Jse},ere=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},tre=`
if (a == b) {
  return 1.0;
};
return a / b;`,nre=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,EC=mn({opSnippet:tre,packedOpSnippet:nre,checkOutOfBounds:!0}),sre={kernelName:no,backendName:"webgl",kernelFunc:EC},U5="return a - b;",RC=mn({opSnippet:U5,packedOpSnippet:U5,supportsComplex:!0,cpuKernelImpl:eJ}),rre={kernelName:Fo,backendName:"webgl",kernelFunc:RC};function _C(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=w.parseAxisParam([a],r.shape),i=TC({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),c=be({inputs:{x:i},backend:n,attrs:{shape:l}}),u=RC({inputs:{a:r,b:c},backend:n}),d=IC({inputs:{x:u},backend:n}),h=u0({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),p=be({inputs:{x:h},backend:n,attrs:{shape:l}}),f=EC({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}var are={kernelName:$o,backendName:"webgl",kernelFunc:_C};function ore(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:_C({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new ere(c,u,a),h=[[o]],p=n.runWebGLProgram(d,[l],"int32",h);return i||n.disposeIntermediateTensorInfo(l),p}var ire={kernelName:Jf,backendName:"webgl",kernelFunc:ore},lre=Us+`
  return -x;
`,ure=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function cre(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=BY(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ui(s.shape,ure):r=new Vr(s.shape,lre),n.runWebGLProgram(r,[s],s.dtype)}var dre={kernelName:qi,backendName:"webgl",kernelFunc:cre},hre=Ws.nonMaxSuppressionV3Impl;function pre(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=hre(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var fre={kernelName:Ki,backendName:"webgl",kernelFunc:pre},mre=Ws.nonMaxSuppressionV4Impl;function gre(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:h,validOutputs:p}=mre(u,d,o,i,l,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var Are={kernelName:Ku,backendName:"webgl",kernelFunc:gre},yre=Ws.nonMaxSuppressionV5Impl;function xre(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),h=o,p=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=yre(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var bre={kernelName:Zi,backendName:"webgl",kernelFunc:xre},vre=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},wre=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=w.sizeFromShape(r.shape),c=new vre(l,a,o,i),u=be({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let h=[...r.shape,a],p=be({inputs:{x:d},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(d),p},kre={kernelName:Ji,backendName:"webgl",kernelFunc:wre};function vf(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=xh({inputs:{input:s},backend:n}),a=vf({inputs:{x:r},backend:n}),o=c0({inputs:{input:s},backend:n}),i=vf({inputs:{x:o},backend:n}),l=Wo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return bh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Sre={kernelName:ml,backendName:"webgl",kernelFunc:vf};function $C(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=xh({inputs:{input:s},backend:n}),a=$C({inputs:{x:r},backend:n}),o=c0({inputs:{input:s},backend:n}),i=vf({inputs:{x:o},backend:n}),l=Wo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return bh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Ire={kernelName:Yi,backendName:"webgl",kernelFunc:$C};function Cre(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return CA({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=CA({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=xC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var Nre={kernelName:Qi,backendName:"webgl",kernelFunc:Cre},Tre=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=At(s),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Ere=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=At(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Nn("rc",s),l=Nn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],h=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="";for(let f=0,m=s===1?2:4;f<m;f++)p+=`
        ${d[f]}
        if (${h}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;p+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},DC=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(w.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return bh({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ere(r.shape,a,o):new Tre(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},Rre={kernelName:vo,backendName:"webgl",kernelFunc:DC},_re=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,$re=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+o0+`
  return result;
`,Dre=mn({opSnippet:_re,packedOpSnippet:$re}),Fre={kernelName:wo,backendName:"webgl",kernelFunc:Dre};function Pre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],c=w.parseAxisParam(a,r.shape),u=c,d=T.getAxesPermutation(u,i),h=r;d!=null&&(h=$n({inputs:{x:r},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,i),l.push(h)),T.assertAxesAreInnerMostDims("prod",u,i);let p;if(n.shouldExecuteOnCPU([h])){let f=n.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:A}=VY(h.shape,h.dtype,f,u);p=n.makeTensorInfo(g,A,m)}else{let[f,m]=T.computeOutAndReduceShapes(h.shape,u),g=w.sizeFromShape(m),A=be({inputs:{x:h},backend:n,attrs:{shape:[-1,g]}}),x=Xd(r.dtype),y=Il(A,x,"prod",n);p=be({inputs:{x:y},backend:n,attrs:{shape:f}}),l.push(A),l.push(y)}if(o){l.push(p);let f=T.expandShapeToKeepDim(p.shape,c);p=be({inputs:{x:p},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var Ore={kernelName:el,backendName:"webgl",kernelFunc:Pre},FC=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=UY(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Mre={kernelName:Zu,backendName:"webgl",kernelFunc:FC},zre="return 1.0 / x;",Lre=nt({opSnippet:zre}),Bre={kernelName:Yu,backendName:"webgl",kernelFunc:Lre},Wre=Us+`
  return (x < 0.0) ? 0.0 : x;
`,Vre=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ure=nt({opSnippet:Wre,packedOpSnippet:Vre}),Gre={kernelName:So,backendName:"webgl",kernelFunc:Ure},Hre=Us+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,jre=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qre=nt({opSnippet:Hre,packedOpSnippet:jre}),Xre={kernelName:Co,backendName:"webgl",kernelFunc:qre},Kre=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Zre=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Yre(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Zre(r.shape,l,c,a,o):new Kre(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],"float32")}var Jre={kernelName:Io,backendName:"webgl",kernelFunc:Yre},Qre=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,h=1/u,p=Math.ceil(d)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function eae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Qre(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var tae={kernelName:em,backendName:"webgl",kernelFunc:eae},nae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",h;r?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},sae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",h;r?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function rae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new sae(r.shape,l,c,a,o):new nae(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],r.dtype)}var aae={kernelName:Ju,backendName:"webgl",kernelFunc:rae},oae=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,h=1/u,p=Math.ceil(d)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function iae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new oae(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var lae={kernelName:Qf,backendName:"webgl",kernelFunc:iae},uae=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=At(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},cae=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Nn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=At(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${u(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(p){return d(p)}function l(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function c(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function u(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){let f=e.map((A,x)=>h(x,p)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function h(p,f){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${f[p]} - 1`:`${f[p]}`}}};function dae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=w.parseAxisParam(a,r.shape);if(o===0)return ds({inputs:{x:r},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cae(r.shape,i):new uae(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var hae={kernelName:nl,backendName:"webgl",kernelFunc:dae},pae=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},fae={kernelName:gl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new pae(s.shape,a),[c,u]=T.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}},mae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,gae=nt({opSnippet:mae}),Aae={kernelName:sl,backendName:"webgl",kernelFunc:gae},yae="return inversesqrt(x);",xae=nt({opSnippet:yae,cpuKernelImpl:GY}),bae={kernelName:No,backendName:"webgl",kernelFunc:xae},PC=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=At(r.length),l=At(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function vae(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=T.calculateShapes(a,r,o),h=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let p=be({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=be({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new PC(l,i,p.shape.length,f.shape.length,u,h),A=n.runWebGLProgram(g,[f,p,m],f.dtype),x=be({inputs:{x:A},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(m),x}var wae={kernelName:rl,backendName:"webgl",kernelFunc:vae},kae=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=l.join()}let a=At(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Sae(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new kae(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],En(r.dtype,a.dtype))}var Iae={kernelName:al,backendName:"webgl",kernelFunc:Sae},Cae=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Nae=nt({opSnippet:Cae}),Tae={kernelName:Qu,backendName:"webgl",kernelFunc:Nae},Eae=bc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Rae=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_ae=nt({opSnippet:Eae,packedOpSnippet:Rae,cpuKernelImpl:HY}),$ae={kernelName:Eo,backendName:"webgl",kernelFunc:_ae},Dae=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Fae=nt({opSnippet:Dae}),Pae={kernelName:ec,backendName:"webgl",kernelFunc:Fae},Oae=bc+`
  return sin(x);
`,Mae=nt({opSnippet:Oae}),zae={kernelName:To,backendName:"webgl",kernelFunc:Mae},Lae=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Bae=nt({opSnippet:Lae}),Wae={kernelName:il,backendName:"webgl",kernelFunc:Bae},Vae=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Uae=nt({opSnippet:Vae}),Gae={kernelName:tc,backendName:"webgl",kernelFunc:Uae},Hae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=[[0,0]];l.push(...o);for(let A=1+a.length;A<r.shape.length;++A)l.push([0,0]);let c=[],u=DC({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,a,i,!1),h=T.getPermuted(d.length,a.length,!1),p=T.getReshapedPermuted(u.shape,a,i,!1),f=be({inputs:{x:u},backend:n,attrs:{shape:d}}),m=$n({inputs:{x:f},backend:n,attrs:{perm:h}}),g=be({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(A=>n.disposeIntermediateTensorInfo(A)),g},jae={kernelName:ll,backendName:"webgl",kernelFunc:Hae};function qae(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,h,p,f,m]=qY(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Xae={kernelName:Bd,backendName:"webgl",kernelFunc:qae};function Kae(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=XY(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var Zae={kernelName:nc,backendName:"webgl",kernelFunc:Kae};function Yae(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=sC(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var Jae={kernelName:Wd,backendName:"webgl",kernelFunc:Yae};function Qae(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=sC(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var eoe={kernelName:Vd,backendName:"webgl",kernelFunc:Qae};function toe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=T.calculateShapes(a,r,i),h=!1,p=new PC(c,l,r.shape.length,a.shape.length,u,[d,1],h),f=n.runWebGLProgram(p,[a,r,o],a.dtype),m=be({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var noe={kernelName:Ud,backendName:"webgl",kernelFunc:toe};function soe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(h=>{let p=[...d];p[i]=h;let f=vc({inputs:{x:r},backend:n,attrs:{begin:u,size:p}});return u[i]+=h,f})}var roe={kernelName:ul,backendName:"webgl",kernelFunc:soe},G5="return sqrt(x);",aoe=nt({opSnippet:G5,packedOpSnippet:G5,cpuKernelImpl:KY}),ooe={kernelName:Ro,backendName:"webgl",kernelFunc:aoe},ioe="return x * x;",loe=nt({opSnippet:ioe}),uoe={kernelName:sc,backendName:"webgl",kernelFunc:loe},H5="return (a - b) * (a - b);",coe=mn({opSnippet:H5,packedOpSnippet:H5}),doe={kernelName:Do,backendName:"webgl",kernelFunc:coe};function hoe({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=Us+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Vr(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var poe={kernelName:Mo,backendName:"webgl",kernelFunc:hoe},foe=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=At(n.length),a=At(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function moe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=$t.sliceInfo(r.shape,a,o,i,l,c,u,d,h),v;if(m)v=be({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=$t.computeOutShape(x,y,b),E=vc({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});v=be({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),R=Le(r.shape,r.dtype,E),P=ZY(p,R,b,x);v=n.makeTensorInfo(f,r.dtype,P.values)}else{let E=new foe(x,b,p);v=n.runWebGLProgram(E,[r],r.dtype)}let C=be({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),C}var goe={kernelName:cl,backendName:"webgl",kernelFunc:moe};function Aoe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=YY(h,p,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var yoe={kernelName:Gd,backendName:"webgl",kernelFunc:Aoe};function xoe(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=JY(i,l,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var boe={kernelName:tm,backendName:"webgl",kernelFunc:xoe};function voe(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=QY(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var woe={kernelName:nm,backendName:"webgl",kernelFunc:voe},koe="return tan(x);",Soe=nt({opSnippet:koe}),Ioe={kernelName:dl,backendName:"webgl",kernelFunc:Soe},Coe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Noe=nt({opSnippet:Coe}),Toe={kernelName:Po,backendName:"webgl",kernelFunc:Noe},Eoe=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=At(this.rank),r=Roe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Roe(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function OC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(h=>w.decodeString(h)):l,u=Le(r.shape,r.dtype,c),d=tJ(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Eoe(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var _oe={kernelName:Yr,backendName:"webgl",kernelFunc:OC},$oe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Doe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Jo(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function j5(e){let t=1;for(;t<e;)t*=2;return t}function Foe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([r])||u<i||a>l){let P=n.readSync(r.dataId),[$,_]=nJ(P,c,r.dtype,a,o);return[n.makeTensorInfo($.shape,$.dtype,$.values),n.makeTensorInfo(_.shape,_.dtype,_.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[r,bh({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?n.unpackTensor(r):r,m=w.sizeFromShape(c)/u,g=be({inputs:{x:p},attrs:{shape:[m,u]},backend:n});h&&Jo(n,p);let A=j5(a),x=j5(u),y=null,b=()=>y===null?[g,g]:[g,y],v=(P,$,_)=>{let N=b(),O=new $oe(_),j=[[u],[y===null?1:0],[Number.NEGATIVE_INFINITY],[P],[$]],L=y;y=n.runWebGLProgram(O,N,"int32",j),Jo(n,L)};for(let P=1;P<A;P*=2){let $=P*2;for(let _=P;_>=1;_/=2)v($,_,[m,x])}for(let P=x;P>A;P/=2){let $=b(),_=new Doe([m,P/2]),O=[[u],[y===null?1:0],[A]],z=y;y=n.runWebGLProgram(_,$,"int32",O),Jo(n,z);let j=A/2,L=j*2;for(let B=j;B>=1;B/=2)v(L,B,y.shape)}let C=y;y=vc({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,a]}}),Jo(n,C);let S=NC({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Jo(n,g);let E=c.slice(0,-1);E.push(a),C=y,y=be({inputs:{x:y},attrs:{shape:E},backend:n}),Jo(n,C);let R=S;return S=be({inputs:{x:S},attrs:{shape:E},backend:n}),Jo(n,R),[S,y]}var Poe={kernelName:hl,backendName:"webgl",kernelFunc:Foe},Ooe=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Moe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],A=new Ooe(d,h,o,i,l,g);return n.runWebGLProgram(A,[r,a],"float32")}var zoe={kernelName:pl,backendName:"webgl",kernelFunc:Moe};function Loe(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;mc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=sJ(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var Boe={kernelName:sm,backendName:"webgl",kernelFunc:Loe};function Woe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],h=new Array(i).fill(0),p=o.shape.slice();p[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){h[a]=m;let g=vc({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),A=be({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=A,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Voe={kernelName:fl,backendName:"webgl",kernelFunc:Woe},Uoe=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function Goe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],c=0,u=T.getAxesPermutation([c],i),d=r;u!=null&&(d=$n({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(d),c=T.getInnerMostAxes(1,i)[0]);let h=T.segment_util.computeOutShape(d.shape,c,o),p=w.sizeFromShape([d.shape[c]]),f=be({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(f);let m=Xd(r.dtype),g=(b,v,C,S,E)=>{let R=b.shape[0],P=b.shape[1],$=T.segment_util.segOpComputeOptimalWindowSize(P,E),_={windowSize:$,inSize:P,batchSize:R,numSegments:E},N=new Uoe(_,v),O=n.compileAndRun(N,[b,C],S);if(l.push(O),O.shape[1]===E)return O;let z=FC({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=OC({inputs:{x:z},backend:n,attrs:{reps:[P/$]}});return l.push(z),l.push(j),g(O,v,j,S,E)},A=g(f,"unsortedSegmentSum",a,m,o),x=be({inputs:{x:A},backend:n,attrs:{shape:h}}),y=x;if(u!=null){l.push(x);let b=T.getUndoAxesPermutation(u);y=$n({inputs:{x:y},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Hoe={kernelName:Hd,backendName:"webgl",kernelFunc:Goe},joe=[JJ,eQ,sQ,oQ,lQ,dQ,pQ,mQ,xQ,vQ,SQ,NQ,RQ,FQ,MQ,LQ,WQ,HQ,qQ,KQ,QQ,oee,lee,cee,gee,yee,wee,DJ,Iee,Ree,Fee,Bee,Vee,Gee,jee,Xee,Yee,ete,ste,ate,ite,cte,hte,gte,yte,vte,Ste,Cte,Rte,Fte,zte,Wte,Gte,Hte,qte,Kte,Yte,Qte,tne,ane,lne,dne,pne,gne,xne,kne,Nne,$J,Ene,Tee,$ne,Pne,zne,PJ,Vne,jne,Xne,Jne,tse,ase,lse,hse,gse,xse,vse,Ise,Nse,Ese,Dse,Pse,Mse,Lse,Wse,Hse,Kse,Qse,ire,BJ,dre,fre,Are,bre,hee,kre,Ire,Nre,Rre,Fre,MJ,Ore,Mre,pee,sre,Bre,Gre,Xre,VJ,Jre,tae,aae,lae,hae,fae,Aae,bae,wae,Iae,Tae,$ae,Pae,zae,Wae,ree,are,Gae,jae,Xae,Zae,Jae,eoe,noe,roe,ooe,uoe,doe,poe,goe,yoe,boe,woe,rre,KJ,Ioe,Toe,_oe,Poe,zoe,ZJ,Boe,Voe,Hoe,Sre];for(let e of joe)br(e);var Nr=Y();Nr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Nr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Nr.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Nr.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Nr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Nr.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Nr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Nr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Nr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Nr.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function qoe(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function cn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function Vp(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function Hx(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Vo(){return`
  ${Hx()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function qe(){return`
    ${Vo()}
      let index = getGlobalIndex();
`}function Xoe(e,t,n,s=!1){let r=[];if(r.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),s===!0)return r.push(`
      struct Matrix0 {
        numbers: array<${Vp(t.dtype,n.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      @group(0) @binding(0) var<storage, write> result : Matrix0;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[q5,r.join(`
`),X5(t.shape),n.getUserCode()].join(`
`);let a="struct Uniforms { NAN : f32; ";n.variableNames.forEach((d,h)=>{a+=`${d.charAt(0).toLowerCase()+d.slice(1)}Shape : ${cn(e[h].shape.length)}; `}),a+=`outShape : ${cn(t.shape.length)} ; `;let o=t.shape.length-1;a+=`
       outShapeStrides: ${cn(o)}; `,n.size&&(a+="size : i32; "),n.uniforms&&(a+=n.uniforms),a+="};",r.push(a),n.atomic?r.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    @group(0) @binding(0) var<storage, read_write> result : Matrix0;
  `):r.push(`
    struct Matrix0 {
        numbers: array<${Vp(t.dtype,n.isVec4)}>;
    };

    @group(0) @binding(0) var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((d,h)=>{r.push(`
    struct Matrix${1+h} {
      numbers: array<${Vp(e[h].dtype,n.isVec4)}>;
    };
    @group(0) @binding(${1+h}) var<storage, read> ${d} : Matrix${1+h};
    `)}),a!==""&&r.push(`
    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms : Uniforms;
    `);let[i,l]=eie(t.shape,n.dispatchLayout),c=[q5,r.join(`
`),X5(t.shape),i,Koe(t.shape.length)];if(n.atomic||c.push(Zoe(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let d=e.map(h=>Yoe(h,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(d)}return c.push(n.getUserCode()),c.join(`
`)}var q5=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function Koe(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function Zoe(e,t,n){let s=e.length,r=Vp(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=cn(s);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function Yoe(e,t,n,s){let r=Joe(e,n);return e.shape.length<=t.length&&(r+=Qoe(e,t,n,s)),r}function Joe(e,t){let n=e.name,s=e.shape.length,r=cn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(u=>`${u} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getIndexFromCoords${c}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getIndexFromCoords${c}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function Qoe(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,c=cn(l);if(w.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}Coords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}Index(globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}Coords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let u=T.getBroadcastDims(e.shape,t),d=l-i,h="";if(i===0)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}Coords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}Coords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?h="coords = 0;":h=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let p="";if(l<2&&i>0)p="coords";else if(l>1){let g=cn(i),A=e.shape.map((x,y)=>`coords[${y+d}]`).join(", ");p=`${g}(${A})`}else p="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${h}
        return ${r}.numbers[getIndexFromCoords${m}(${p}, ${f}) / 4];
      }

      fn ${o}Coords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${h}
        return ${r}.numbers[getIndexFromCoords${m}(${p}, ${f}) / 4];
      }
    `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${h}
      return f32(${r}.numbers[getIndexFromCoords${m}(${p}, ${f})]);
    }

    fn ${o}Coords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${h}
      return f32(${r}.numbers[getIndexFromCoords${m}(${p}, ${f})]);
    }
  `}function eie(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${cn(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let o="",i=[n,s,r],l=0;for(let h=0;h<i.length;h++){let p=i[h];if(p.length!==0)if(l+=p.length,p.length===1)o+=`let d${p[0]} = i32(globalId[${h}]);`;else{let f=qoe(p,"uniforms.outShape");o+=`var index${h} = i32(globalId[${h}]);`;for(let m=0;m<f.length;m++)o+=`let d${p[m]} = index${h} / ${f[m]};`,m===f.length-1?o+=`let d${p[m+1]} = index${h} - d${p[m]} * ${f[m]};`:o+=`index${h} = index${h} - d${p[m]} * ${f[m]};`}}let c=[];for(let h=0;h<l;h++)c.push(`d${h}`);let u=cn(l),d=`fn getOutputCoords() -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function X5(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=cn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var MC={};Me(MC,{ArrayBufferToTypedArray:()=>LC,GPUBytesPerElement:()=>NA,computeDispatch:()=>Fe,computeWorkGroupSizeForConv2d:()=>jx,computeWorkGroupSizeForMatMul:()=>zC,computeWorkPerThreadForConv2d:()=>qx,flatDispatchLayout:()=>Ge,isWebGPUSupported:()=>Xx,tilesFitEvenlyIntoShape:()=>qr});var Gl=65535,mi=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function qr(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Fe(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(mi(e.x.map(l=>t[l]))/(n[0]*s[0])),e.y?Math.ceil(mi(e.y.map(l=>t[l]))/(n[1]*s[1])):1,e.z?Math.ceil(mi(e.z.map(l=>t[l]))/(n[2]*s[2])):1];if(r<=Gl&&a<=Gl&&o<=Gl)return[r,a,o];w.assert(r>Gl&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>Gl?(i=Math.ceil(Math.cbrt(r)),w.assert(i<=Gl,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function jx(e,t){let n=mi(e.x.map(r=>t[r])),s=mi(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function zC(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function qx(e,t){let n=mi(e.x.map(r=>t[r])),s=mi(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function Ge(e){return{x:e.map((t,n)=>n)}}function NA(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function LC(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Xx(){return!!navigator.gpu}var tie="return a + b;",nie="return areal * breal - aimag * bimag;",sie="return areal * bimag + aimag * breal;",rie="return a / b;",aie="return a * b;",oie="return (a - b) * (a - b);",iie="return a - b;",lie="return f32(a == b);",uie="return vec4<f32>(a == b);",cie="return f32(a > b);",die="return vec4<f32>(a > b);",hie="return f32(a >= b);",pie="return vec4<f32>(a >= b);",fie="return f32(a < b);",mie="return vec4<f32>(a < b);",gie="return f32(a <= b);",Aie="return vec4<f32>(a <= b);",yie="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",xie=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,bie=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,BC=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,vie=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,wie=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,kie="return f32(a != b);",Sie="return vec4<f32>(a != b);",Iie=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Cie=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${BC}
  return resultTemp;
  `,Nie="if (a < 0.0) { return b * a; }  return a;",Tie=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function K5(e,t){let n=t?BC:bie;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function vh(e,t){switch(e){case 0:return aie;case 1:return tie;case 2:return iie;case 3:return rie;case 4:return t?uie:lie;case 5:return t?die:cie;case 6:return t?pie:hie;case 7:return t?mie:fie;case 8:return t?Aie:gie;case 9:return t?xie:yie;case 10:return t?Sie:kie;case 11:return oie;case 12:return t?wie:vie;case 14:return t?Tie:Nie;case 15:return K5("max",t);case 16:return K5("min",t);case 13:return t?Cie:Iie;case 17:return nie;case 18:return sie;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Eie="return abs(a);",Rie="return ceil(a);",_ie="return cos(a);",$ie=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Die="return exp(a) - 1.0;",Fie="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Pie=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Oie="return exp(a);",Mie="return floor(a);",zie="return a;",Lie=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Bie="return f32(!(a >= 1.0));",Wie="return -a;",Vie="return (a < 0.0) ? b * a : a;",Uie="if (a < 0.0) { return uniforms.alpha * a; } return a;",Gie="if(a < 0.0) { return 0.0; } return a;",Hie="return clamp(a, 0.0, 6.0);",jie="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",qie=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Xie="return 1.0/sqrt(a);",Kie="return 1.0 / (1.0 + exp(-1.0 * a));",Zie="return sin(a);",Yie=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Jie="return sqrt(a);",Qie="return a * a;",ele=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,tle="return f32(i32((a)));";function tu(e,t){switch(e){case 0:return Eie;case 2:return _ie;case 3:return $ie;case 1:return Rie;case 4:return t?Pie:Fie;case 5:return Oie;case 6:return Die;case 7:return Mie;case 8:return zie;case 9:return Lie;case 10:return Bie;case 11:return Wie;case 12:return Vie;case 15:return Uie;case 13:return t?qie:Gie;case 14:return t?jie:Hie;case 16:return Xie;case 19:return Kie;case 17:return Zie;case 18:return Yie;case 20:return Jie;case 21:return Qie;case 22:return ele;case 23:return tle;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function sa(e,t=!1){if(e===null)return null;if(e==="linear")return tu(8);if(e==="relu")return tu(13,t);if(e==="elu")return tu(4,t);if(e==="relu6")return tu(14,t);if(e==="prelu")return vh(14,t);if(e==="sigmoid")return tu(19);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function WC(e,t,n,s){return w.assert(s%4===0&&e[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${s/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${s};

  ${Vo()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var nle=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=[this.tileAOuter,this.tileInner],r=[this.tileInner,this.tileBOuter];return[qr(s,this.aShape.slice(1)),qr(r,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=sa(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${WC(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function Kx(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Vo()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function sle(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Vo()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var VC=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?e[1]:e[2];this.workGroupSize=zC(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],h=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(h),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),w.assert(s%this.workGroupSize[0]===0&&s%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[qr(r,this.aShape.slice(1)),qr(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=sa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Kx([this.workPerThread,this.workPerThread,1],this.workGroupSize):sle(this.workGroupSize)}
    `}};function rle(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Vo()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var ale=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=sa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${rle()}
    `}};function ole(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Vo()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var ile=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=sa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${ole(this.workGroupSize)}
    `}};function Ve(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),o=w.inferFromImplicitShape(r,a),i=w.sizeFromShape(o);return w.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var lle={kernelName:tl,backendName:"webgpu",kernelFunc:Ve};function Zx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=s?t.shape[u-1]:t.shape[u-2],p=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=w.sizeFromShape(m),x=w.sizeFromShape(g),b=Al.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=n?[A,d,p]:[A,p,d],C=s?[x,f,h]:[x,h,f],S=Ve({inputs:{x:e},backend:r,attrs:{shape:v}}),E=Ve({inputs:{x:t},backend:r,attrs:{shape:C}}),R=[S,E],P=Math.max(A,x),$=d%4===0&&f%4===0&&!n&&!s&&f>=32,_;p*f<=32?_=new ale([P,p,f],n,s,a,l,o):!n&&!s&&(p<=16&&(f<=512||h>=2*f)||f<=16&&(p<=512||d>=2*p))?_=new ile(v,C,[P,p,f],a,l,o):$?_=new nle(v,[P,p,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):_=new VC(v,[P,p,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,l,o);let N=[S,E];a&&N.push(a),o&&N.push(o);let O=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[d]}],z=r.runWebGPUProgram(_,N,e.dtype,O),j=Ve({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let L of R)r.disposeData(L.dataId);return j}function ule(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Zx({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var cle={kernelName:Ra,backendName:"webgpu",kernelFunc:ule},Z5=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${vh(this.op,!1)}
      }

      ${qe()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},dle=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ge(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${vh(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${qe()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},hle=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${vh(this.op,this.isVec4)}
      }
      ${qe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},UC=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${vh(this.op,!1)}
      }
      ${qe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function Y5(e,t,n){if(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0)return new hle(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new dle(e,t,n,a):new UC(e,t,n)}function Ls(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var ple={kernelName:uo,backendName:"webgpu",kernelFunc:Ls};function wc(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=Ls({inputs:{x:s},backend:n}),l=Ls({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var fle={kernelName:Rd,backendName:"webgpu",kernelFunc:wc},wh=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${tu(this.op,!1)}
      }
      ${qe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function gn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new wh(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function On({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),h=l.tensorMap.get(i.dataId),p,f;if(e!==0)[p,f]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(g=>{let[A,x]=g,y={dataId:A.dataId,dtype:A.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},v=Y5(e,o.shape,i.shape);return l.runWebGPUProgram(v,[y,b],En(A.dtype,x.dtype))});else{let g=new Z5(17,o.shape,i.shape),A=new Z5(18,o.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape}];p=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(A,x,"float32")}let m=wc({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}let c=s||En(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,h=l.tensorMap.get(i.dataId).values,p=o.dtype==="string"?T.fromUint8ToStringArray(d):d,f=o.dtype==="string"?T.fromUint8ToStringArray(h):h,[m,g]=t(o.shape,i.shape,p,f,c);return l.makeTensorInfo(g,c,m)}let u=Y5(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var{addImpl:mle,ceilImpl:gle,concatImpl:Ale,equalImpl:yle,expImpl:xle,expm1Impl:ble,floorImpl:vle,gatherNdImpl:wle,gatherV2Impl:kle,greaterEqualImpl:Sle,greaterImpl:Ile,lessEqualImpl:Cle,lessImpl:Nle,logImpl:Tle,maxImpl:Ele,maximumImpl:Rle,minimumImpl:_le,multiplyImpl:$le,negImpl:Dle,notEqualImpl:Fle,prodImpl:Ple,rangeImpl:Ole,rsqrtImpl:Mle,simpleAbsImpl:zle,sliceImpl:Lle,stridedSliceImpl:Ble,stringNGramsImpl:Wle,subImpl:Vle,tileImpl:Ule,topKImpl:Gle,transposeImpl:Hle,uniqueImpl:ZAe}=n0,jle=gn({opType:0,cpuKernelImpl:zle}),qle={kernelName:_i,backendName:"webgpu",kernelFunc:jle},Xle=On({opSnippet:1,cpuKernelImpl:mle,supportsComplex:!0}),Kle={kernelName:Kr,backendName:"webgpu",kernelFunc:Xle},Zle=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${qe()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Yle(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Ls({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>En(i,l)),a=s.map(i=>i.shape),o=new Zle(a);return n.runWebGPUProgram(o,s,r)}var Jle={kernelName:Ha,backendName:"webgpu",kernelFunc:Yle},GC=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let s=[t];T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=T.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,a)=>this.outputShape.length===1?r:`${r}[${a}]`,n=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${qe()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},Qle=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Hx()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},eue=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=cn(this.outputShape.length),t=tue(this.newDim);return`
      ${qe()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function tue(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function Cl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,h=Hle(d,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,h)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let u=new Qle(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}let c=new eue(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var nue={kernelName:Oo,backendName:"webgpu",kernelFunc:Cl};function sue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Cl({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new GC(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(p=>n.disposeData(p.dataId)),h}var rue={kernelName:ja,backendName:"webgpu",kernelFunc:sue};function aue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Cl({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new GC(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(p=>n.disposeData(p.dataId)),h}var oue={kernelName:Pu,backendName:"webgpu",kernelFunc:aue},HC=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${qe()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},jC=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function iue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=T.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Ls({inputs:{x:r},backend:n});let d,h=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new jC(u):(d=new HC(u,"avg"),h.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,h)}var lue={kernelName:qa,backendName:"webgpu",kernelFunc:iue};function uue(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Zx({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var cue={kernelName:Xa,backendName:"webgpu",kernelFunc:uue},due=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${cn(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=cn(this.rank),t=hue(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${TA[a]} = uniforms.start[${a}] + coords.${TA[a]};`),`
      ${qe()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},TA=["x","y","z","w","u","v"];function hue(e){if(e===1)return"sourceLoc";if(e<=6)return TA.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function kc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=$t.parseSliceParams(r,a,o);if($t.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),h=Lle(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,h)}if(w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let c=new due(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,u)}var pue={kernelName:ol,backendName:"webgpu",kernelFunc:kc},fue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,y)=>x*y),l=T.getReshaped(r.shape,a,i),c=T.getPermuted(l.length,a.length),u=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(u,o,a.length),p=[],f=Ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Cl({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Ve({inputs:{x:m},backend:n,attrs:{shape:u}}),A=kc({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>n.disposeData(x.dataId)),A},mue={kernelName:$i,backendName:"webgpu",kernelFunc:fue},qC=On({opSnippet:10,dtype:"bool",cpuKernelImpl:Fle}),gue={kernelName:Xi,backendName:"webgpu",kernelFunc:qC};function kh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Ls({inputs:{x:r.complexTensorInfos.real},backend:n})}var Aue={kernelName:Ld,backendName:"webgpu",kernelFunc:kh};function yue(e,t){let n=new wh(e.shape,23),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function EA(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ls({inputs:{x:r},backend:n});let o=Vt(r.shape),i=EA({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=wc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=kh({inputs:{input:r},backend:n}),i=EA({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=Ls({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return yue(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=qC({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var xue={kernelName:Ka,backendName:"webgpu",kernelFunc:EA},bue=gn({opType:1,cpuKernelImpl:gle}),vue={kernelName:Za,backendName:"webgpu",kernelFunc:bue},wue=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${qe()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},kue=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${qe()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Sue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return w.sizeFromShape(r.shape)%4===0?i=new wue(r.shape):i=new kue(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var Iue={kernelName:Zr,backendName:"webgpu",kernelFunc:Sue},Cue=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${qe()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function d0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Ls({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Nue={kernelName:Pd,backendName:"webgpu",kernelFunc:d0};function RA(e,t,n){let s=e[0].dtype;if(s==="complex64"){let p=e.map(x=>kh({inputs:{input:x},backend:n})),f=e.map(x=>d0({inputs:{input:x},backend:n})),m=RA(p,t,n),g=RA(f,t,n),A=wc({inputs:{real:m,imag:g},backend:n});return p.forEach(x=>n.disposeData(x.dataId)),f.forEach(x=>n.disposeData(x.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),A}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let p=e.map(b=>{let v=w.sizeFromShape(b.shape.slice(t));return Ve({inputs:{x:b},backend:n,attrs:{shape:[-1,v]}})}),f=p.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=T.computeOutShape(p.map(b=>b.shape),1),g=p[0].shape[0]===1,A=Ale(f,m,s,g),x=T.computeOutShape(e.map(b=>b.shape),t),y=n.makeTensorInfo(x,s,A);return p.forEach(b=>n.disposeData(b.dataId)),y}let{tensors2D:a,outShape:o}=Tue(e,t,n),i=a.map(p=>p.shape),l=new Cue(i),c=[],u=new Array(i.length-1);if(u.length>0){u[0]=i[0][1],c.push({type:"int32",data:[u[0]]});for(let p=1;p<u.length;p++)u[p]=u[p-1]+i[p][1],c.push({type:"int32",data:[u[p]]})}let d=n.runWebGPUProgram(l,a,a[0].dtype,c);a.forEach(p=>n.disposeData(p.dataId));let h=Ve({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),h}function Tue(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Ve({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function XC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return Ls({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return T.assertParamsConsistent(l,a),RA(i,a,n)}var Eue={kernelName:Di,backendName:"webgpu",kernelFunc:XC},Rue=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${qe()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}},_ue=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],r=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[qr(e,[n,r]),qr(t,[r,s])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=WC(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,r=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,a=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,o="",i="";if(this.activation){let u=sa(this.activation,this.isVec4);if(this.hasPreluActivationWeights)o=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${u}
        }`;else{if(this.hasLeakyreluAlpha)throw o=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${u}
        }`,new Error("Leakyrelu is not supported.");o=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${u}
        }`}i="value = activation(value, outCoord);"}let l=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${o}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${r}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${a}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${l}
            ${i}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},$ue=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=jx(this.dispatchLayout,this.outputShape),this.elementsPerThread=qx(this.dispatchLayout,this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;w.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[qr(s,[a,i]),qr(r,[i,o])]}getUserCode(){let e=Kx(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let l=sa(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${l}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},Due=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=sa(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Vo()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Fue({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,h=n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",p,f;if(h){let A=n.inHeight*n.inWidth*n.inChannels;p=Ve({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,A]}}),f=Ve({inputs:{x:t},backend:s,attrs:{shape:[1,A,n.outChannels]}})}else{let A=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3];p=Ve({inputs:{x:e},backend:s,attrs:{shape:[1,A,n.inChannels]}}),f=Ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}})}let m=Zx({a:p,b:f,transposeA:u,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=Ve({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(p.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function Pue({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:h,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:A,dataFormat:x}=n,y=x==="channelsLast",b=l*c*u,v=m*f,C=[v,b],S=!1,E=!1,R=[],P=Ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),$=Ve({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(P),R.push($);let _=new Rue(C,y),N=[{type:"int32",data:[p.left,p.top]},{type:"int32",data:[d,h]},{type:"int32",data:[g,A]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],O=s.runWebGPUProgram(_,[P],P.dtype,N),z=Ve({inputs:{x:O},backend:s,attrs:{shape:[1,C[0],C[1]]}});R.push(O),R.push(z);let j=[1,C[0],C[1]],L=new VC(j,[1,v,n.outChannels],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),S,E,r,i,a),B=j[1],W=j[2],J=n.outChannels,ee=[{type:"int32",data:[B]},{type:"int32",data:[J]},{type:"int32",data:[W]}],re=[z,$];r&&re.push(r),a&&re.push(a);let Z=s.runWebGPUProgram(L,re,z.dtype,ee),se=y?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],ne=Ve({inputs:{x:Z},backend:s,attrs:{shape:se}});R.push(Z);for(let de of R)s.disposeData(de.dataId);return ne}function KC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=r!=null,c=a!=null,u;if(n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return Fue({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});if(Y().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&e.shape[0]===1)return Pue({x:e,filter:t,convInfo:n,backend:s,bias:r,preluActivationWeights:a,leakyreluAlpha:o,activation:i});let h=Y().getBool("WEBGPU_USE_NAIVE_CONV2D"),p=(n.inChannels%4===0||n.inChannels===3&&n.padInfo.type==="VALID")&&n.outChannels%4===0&&n.outChannels>=32,f=[n.padInfo.top,n.padInfo.left],m=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(h)u=new Due(n,l,i,c);else{p?u=new _ue(n,l,i,c):u=new $ue(n,l,i,c);let A=n.outShape[1]*n.outShape[2],x=n.outShape[3],y=n.filterHeight*n.filterWidth*n.inShape[3];m.push({type:"int32",data:[A]},{type:"int32",data:[x]},{type:"int32",data:[y]})}let g=[e,t];return l&&g.push(r),c&&g.push(a),s.runWebGPUProgram(u,g,e.dtype,m)}function Oue(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d);return KC({x:r,filter:a,convInfo:h,backend:s})}var Mue={kernelName:Ya,backendName:"webgpu",kernelFunc:Oue},zue=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=jx(this.dispatchLayout,this.outputShape),this.elementsPerThread=qx(this.dispatchLayout,this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${Kx(this.elementsPerThread,this.workGroupSize)}
  `}},Lue=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${qe()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Bue(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=T.convertConv2DDataFormat(c),h=T.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),p=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Lue(h);else{f=new zue(h);let m=h.inShape[1]*h.inShape[2],g=h.inShape[3],A=h.filterHeight*h.filterWidth*h.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[A]})}return n.runWebGPUProgram(f,[r,a],"float32",p)}var Wue={kernelName:Ja,backendName:"webgpu",kernelFunc:Bue},Vue=gn({opType:2}),Uue={kernelName:Qa,backendName:"webgpu",kernelFunc:Vue},Gue=gn({opType:3}),Hue={kernelName:eo,backendName:"webgpu",kernelFunc:Gue},jue=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${qe()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},que=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new jue(r.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r,a,o],"float32",d)},Xue={kernelName:Pi,backendName:"webgpu",kernelFunc:que},Kue=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Zue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,h=c*a,p=u/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=[{type:"int32",data:[a]}],g=new Kue(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var Yue={kernelName:Oi,backendName:"webgpu",kernelFunc:Zue},ZC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=sa(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${Hx()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},YC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=sa(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Vo()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Jue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]);let d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),h=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}],p;return d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4===0?p=new ZC(d):(p=new YC(d),h.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.outChannels/d.inChannels]})),n.runWebGPUProgram(p,[r,a],r.dtype,h)}var Que={kernelName:to,backendName:"webgpu",kernelFunc:Jue},JC=On({opSnippet:0,cpuKernelImpl:$le,supportsComplex:!0}),ece={kernelName:bo,backendName:"webgpu",kernelFunc:JC},tce=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${qe()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Sh(e,t,n,s,r){let a=e.shape.length,o=[],i=w.parseAxisParam(t,e.shape),l=i,c=T.getAxesPermutation(l,a),u=e;c!=null&&(u=Cl({inputs:{x:e},attrs:{perm:c},backend:r}),l=T.getInnerMostAxes(l.length,a),o.push(u)),T.assertAxesAreInnerMostDims(s,l,a);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),p=d;n&&(p=T.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){let m=r.tensorMap.get(u.dataId).values;switch(s){case"max":let g=Ele(m,w.sizeFromShape(h),p,e.dtype);f=r.makeTensorInfo(p,e.dtype,g);break;case"prod":let{outVals:A,outShape:x,outDtype:y}=Ple(u.shape,u.dtype,m,l);f=r.makeTensorInfo(x,y,A);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(h),A=w.sizeFromShape(u.shape)/m,x={windowSize:m,inSize:m,batchSize:A,outSize:1},y=s==="mean"?"float32":Xd(e.dtype),b=[{type:"int32",data:[m]}],v=new tce(x,s),C=r.runWebGPUProgram(v,[u],y,b);o.push(C),f=Ve({inputs:{x:C},attrs:{shape:p},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function Yx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Sh(r,a,o,"sum",n)}var nce={kernelName:_o,backendName:"webgpu",kernelFunc:Yx};function sce(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=T.getEinsumComputePath(i,l),d=u.length,h=null,p=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=T.getEinsumPermutation(p,l[g]),y;T.isIdentityPermutation(A)?y=a[g]:(y=Cl({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(y.shape,b)||(y=Ve({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),h===null?h=y:(h=JC({inputs:{a:y,b:h},backend:n}),f.push(h))}m<d-1&&(c[m]>=0&&(h=Yx({inputs:{x:h},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(let m of f)m!==h&&n.disposeData(m.dataId);return h}var rce={kernelName:Fd,backendName:"webgpu",kernelFunc:sce},ace=gn({opType:4}),oce={kernelName:so,backendName:"webgpu",kernelFunc:ace},ice=On({opSnippet:4,dtype:"bool",cpuKernelImpl:yle}),lce={kernelName:Mi,backendName:"webgpu",kernelFunc:ice},QC=gn({opType:5,cpuKernelImpl:xle,dtype:"float32"}),uce={kernelName:ro,backendName:"webgpu",kernelFunc:QC};function _A(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(w.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),Ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var cce={kernelName:zi,backendName:"webgpu",kernelFunc:_A},dce=gn({opType:6,cpuKernelImpl:ble}),hce={kernelName:Li,backendName:"webgpu",kernelFunc:dce},pce=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${qe()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Sc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new pce(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var fce={kernelName:Vu,backendName:"webgpu",kernelFunc:Sc},mce=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},gce={kernelName:Bi,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new mce(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},Ace=gn({opType:7,cpuKernelImpl:vle}),yce={kernelName:ao,backendName:"webgpu",kernelFunc:Ace},xce=On({opSnippet:12,dtype:"int32"}),bce={kernelName:oo,backendName:"webgpu",kernelFunc:xce},vce=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},e6=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=Xoe(s,o,t,a),l=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function t6(e,t,n,s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}function J5(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=w.sizeFromShape(r),l=w.computeStrides(r),c=n.makeTensorInfo(r,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(r);let d=[c.shape],h=[c.dtype,a?"import":"copyExternal"],p=t6(u,d,h),f=u.getLayout(n.device),m=n.getAndSavePipeline(p,()=>e6(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let A=[i,o,...l,...u.dispatch];u.setUniform(n.device,A);let x;if(a){let y={source:t};x=n.device.importExternalTexture(y)}else x=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,x,c.dataId),c}var wce={kernelName:md,backendName:"webgpu",kernelFunc:kce},Hl;function kce(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[u,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[d,u,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return J5({externalImage:r,backend:n,attrs:s,outShape:h,useImport:!0});if((o||i)&&(Hl==null&&(Hl=document.createElement("canvas").getContext("2d")),Hl.canvas.width=u,Hl.canvas.height=d,Hl.drawImage(r,0,0,u,d),r=Hl.canvas),c||l||o||i)return J5({externalImage:r,backend:n,attrs:s,outShape:h,useImport:!1});let p=r.data,f=p;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let A=p.length,x=0;for(let y=0;y<A;y++)y%4<a&&(f[x++]=p[y])}let m=n.makeTensorInfo(h,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Sce=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${qe()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Ice={kernelName:io,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[s,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let h=null;r!=null&&(h=r.shape,u.push(r));let p=new Sce(s.shape,o.shape,i.shape,d,h),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(p,u,s.dtype,f)}};function Cce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(u),g=T.computeConv2DInfo(r.shape,a.shape,l,d,c,h,!1,m);return KC({x:r,filter:a,convInfo:g,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:f,activation:p})}var Nce={kernelName:_a,backendName:"webgpu",kernelFunc:Cce};function Tce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:h}=s,p=u;p==null&&(p=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${p}'`);let f=T.computeConv2DInfo(r.shape,a.shape,l,p,c,d,!0),m=[r,a],g=o!=null,A=i!=null;g&&m.push(o),A&&m.push(i);let x=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],y;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4===0?y=new ZC(f,g,h,A):(y=new YC(f,g,h,A),x.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),n.runWebGPUProgram(y,m,"float32",x)}var Ece={kernelName:$a,backendName:"webgpu",kernelFunc:Tce},Rce=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${cn(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function _ce(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=w.sizeFromShape(s.shape),[l,c,u,d]=T.prepareAndValidate(s,r),h=Ve({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),p=Ve({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),y=n.bufferSync(s),b=wle(x,y,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Rce(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[p,h],p.dtype,m),A=Ve({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),A}var $ce={kernelName:Vi,backendName:"webgpu",kernelFunc:_ce},Dce=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Fce(this.aShape,"i32");return`
      ${qe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Fce(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function n6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0],c=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=w.sizeFromShape(a.shape),d=[],h=Ve({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Ve({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(h),d.push(p);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let y=n.tensorMap.get(p.dataId).values,b=Le(p.shape,p.dtype,y),C=n.tensorMap.get(h.dataId).values,S=Le(h.shape,h.dtype,C),E=kle(S,b,f);return d.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(c.outputShape,E.dtype,E.values)}let m=new Dce(h.shape,f),g=n.runWebGPUProgram(m,[h,p],h.dtype);d.push(g);let A=Ve({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),A}var Pce={kernelName:Wi,backendName:"webgpu",kernelFunc:n6},Oce=On({opSnippet:5,cpuKernelImpl:Ile,dtype:"bool"}),Mce={kernelName:Ui,backendName:"webgpu",kernelFunc:Oce},zce=On({opSnippet:6,dtype:"bool",cpuKernelImpl:Sle}),Lce={kernelName:lo,backendName:"webgpu",kernelFunc:zce};function Bce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new wh(r.shape,15);return i.uniforms="alpha : f32;",n.runWebGPUProgram(i,[r],"float32",o)}var Wce={kernelName:co,backendName:"webgpu",kernelFunc:Bce},Vce=On({opSnippet:7,dtype:"bool",cpuKernelImpl:Nle}),Uce={kernelName:Gi,backendName:"webgpu",kernelFunc:Vce},Gce=On({opSnippet:8,dtype:"bool",cpuKernelImpl:Cle}),Hce={kernelName:Hi,backendName:"webgpu",kernelFunc:Gce},jce=gn({opType:9,cpuKernelImpl:Tle}),qce={kernelName:ho,backendName:"webgpu",kernelFunc:jce},Xce=On({opSnippet:9,dtype:"bool"}),Kce={kernelName:ji,backendName:"webgpu",kernelFunc:Xce},Zce=gn({opType:10}),Yce={kernelName:qu,backendName:"webgpu",kernelFunc:Zce};function s6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return Sh(r,a,o,"max",n)}var Jce={kernelName:po,backendName:"webgpu",kernelFunc:s6},Qce=On({opSnippet:15,cpuKernelImpl:Rle}),ede={kernelName:fo,backendName:"webgpu",kernelFunc:Qce};function tde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=T.computePool2DInfo(r.shape,a,o,c,i,l),d,h=[];if(u.filterHeight===1&&u.filterWidth===1){if(w.arraysEqual(u.inShape,u.outShape))return Ls({inputs:{x:r},backend:n});d=new jC(u),h.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new HC(u,"max"),h.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,h)}var nde={kernelName:mo,backendName:"webgpu",kernelFunc:tde};function sde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return Sh(r,o,a,"mean",n)}var rde={kernelName:go,backendName:"webgpu",kernelFunc:sde};function ade(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Sh(r,a,o,"min",n)}var ode={kernelName:Ao,backendName:"webgpu",kernelFunc:ade},ide=On({opSnippet:16,cpuKernelImpl:_le}),lde={kernelName:yo,backendName:"webgpu",kernelFunc:ide},ude=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=cn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${qe()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},cde={kernelName:xo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new ude(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function dde(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=Dle(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new wh(s.shape,11);return n.runWebGPUProgram(r,[s],s.dtype)}var hde={kernelName:qi,backendName:"webgpu",kernelFunc:dde};function pde(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Ws.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var fde={kernelName:Ki,backendName:"webgpu",kernelFunc:pde};function mde(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),h=o,p=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=Ws.nonMaxSuppressionV5Impl(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var gde={kernelName:Zi,backendName:"webgpu",kernelFunc:mde};function wf(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=kh({inputs:{input:s},backend:n}),a=wf({inputs:{x:r},backend:n}),o=d0({inputs:{input:s},backend:n}),i=wf({inputs:{x:o},backend:n}),l=wc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Sc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Ade={kernelName:ml,backendName:"webgpu",kernelFunc:wf};function r6(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=kh({inputs:{input:s},backend:n}),a=r6({inputs:{x:r},backend:n}),o=d0({inputs:{input:s},backend:n}),i=wf({inputs:{x:o},backend:n}),l=wc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Sc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var yde={kernelName:Yi,backendName:"webgpu",kernelFunc:r6};function xde(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return _A({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=_A({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=XC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var bde={kernelName:Qi,backendName:"webgpu",kernelFunc:xde},vde=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=cn(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${qe()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},a6=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>w.arraysEqual(c,[0,0])))return Ls({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return Sc({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new vde(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},wde={kernelName:vo,backendName:"webgpu",kernelFunc:a6},kde=On({opSnippet:13}),Sde={kernelName:wo,backendName:"webgpu",kernelFunc:kde};function Ide(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new UC(14,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Cde={kernelName:ko,backendName:"webgpu",kernelFunc:Ide};function Nde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Sh(r,a,o,"prod",n)}var Tde={kernelName:el,backendName:"webgpu",kernelFunc:Nde},Ede=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Ole(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Rde={kernelName:Zu,backendName:"webgpu",kernelFunc:Ede},o6=On({opSnippet:3}),_de={kernelName:no,backendName:"webgpu",kernelFunc:o6},$de=gn({opType:13}),Dde={kernelName:So,backendName:"webgpu",kernelFunc:$de},Fde=gn({opType:14}),Pde={kernelName:Co,backendName:"webgpu",kernelFunc:Fde},Ode=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${qe()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Mde(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,c]=o,u=a&&l>1?1:0,d=a&&c>1?1:0,p=[{type:"float32",data:[u,d]},{type:"float32",data:[i?.5:0]}],f=new Ode(r.shape,l,c);return n.runWebGPUProgram(f,[r],"float32",p)}var zde={kernelName:Io,backendName:"webgpu",kernelFunc:Mde},Lde=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Bde(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=a&&l>1?1:0,d=a&&c>1?1:0,p=[{type:"float32",data:[u,d]},{type:"float32",data:[a?.5:0]}],f=new Lde(r.shape,l,c,o);return n.runWebGPUProgram(f,[r],r.dtype,p)}var Wde={kernelName:Ju,backendName:"webgpu",kernelFunc:Bde},Vde=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${qe()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Ude={kernelName:gl,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Vde(s.shape,a),[c,u]=T.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,d)}},Gde=gn({opType:16,cpuKernelImpl:Mle}),Hde={kernelName:No,backendName:"webgpu",kernelFunc:Gde},jde=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=Ge(e),this.dispatch=Fe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`;let i=cn(r.length);this.uniforms=`sliceDim : i32; strides: ${i}; size: i32;`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${qe()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputIndexFromCoords(${r});

         ${i}
        }
      }`}};function qde(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=T.calculateShapes(a,r,o),h=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let p=Ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=Ve({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=f.dtype,g=Sc({backend:n,attrs:{shape:h,value:0,dtype:m}}),A=w.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[A]}],y=new jde(f.shape,i,p.shape.length,f.shape.length,u,h,m),b=n.runWebGPUProgram(y,[f,p],m,x,g),v=Ve({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),v}var Xde={kernelName:rl,backendName:"webgpu",kernelFunc:qde},Kde=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${qe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Zde(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Kde(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],En(r.dtype,a.dtype))}var Yde={kernelName:al,backendName:"webgpu",kernelFunc:Zde},Jde=gn({opType:19}),Qde={kernelName:Eo,backendName:"webgpu",kernelFunc:Jde},ehe=gn({opType:17}),the={kernelName:To,backendName:"webgpu",kernelFunc:ehe},nhe=gn({opType:18}),she={kernelName:il,backendName:"webgpu",kernelFunc:nhe},i6=On({opSnippet:2,cpuKernelImpl:Vle,supportsComplex:!0}),rhe={kernelName:Fo,backendName:"webgpu",kernelFunc:i6};function ahe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=w.parseAxisParam([a],r.shape),i=s6({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),c=Ve({inputs:{x:i},backend:n,attrs:{shape:l}}),u=i6({inputs:{a:r,b:c},backend:n}),d=QC({inputs:{x:u},backend:n}),h=Yx({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),p=Ve({inputs:{x:h},backend:n,attrs:{shape:l}}),f=o6({inputs:{a:d,b:p},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(p.dataId),f}var ohe={kernelName:$o,backendName:"webgpu",kernelFunc:ahe},ihe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=[[0,0]];l.push(...o);for(let A=1+a.length;A<r.shape.length;++A)l.push([0,0]);let c=[],u=a6({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,a,i,!1),h=T.getPermuted(d.length,a.length,!1),p=T.getReshapedPermuted(u.shape,a,i,!1),f=Ve({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Cl({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Ve({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(A=>n.disposeData(A.dataId)),g},lhe={kernelName:ll,backendName:"webgpu",kernelFunc:ihe},uhe=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`;let l=cn(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";s===1?u="i":s===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${qe()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function che(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=T.calculateShapes(a,r,i),h=!1,p=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new uhe(c,l,r.shape.length,a.shape.length,u,[d,1],h),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,p),g=Ve({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var dhe={kernelName:Ud,backendName:"webgpu",kernelFunc:che};function hhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(h=>{let p=[...d];p[i]=h;let f=kc({inputs:{x:r},backend:n,attrs:{begin:u,size:p}});return u[i]+=h,f})}var phe={kernelName:ul,backendName:"webgpu",kernelFunc:hhe},fhe=gn({opType:20}),mhe={kernelName:Ro,backendName:"webgpu",kernelFunc:fhe},ghe={kernelName:sc,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new wh(n.shape,21);return s.runWebGPUProgram(r,[n],n.dtype)}},Ahe=On({opSnippet:11}),yhe={kernelName:Do,backendName:"webgpu",kernelFunc:Ahe},xhe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=cn(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${qe()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function bhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=$t.sliceInfo(r.shape,a,o,i,l,c,u,d,h),v;if(m)v=Ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=$t.computeOutShape(x,y,b),S=kc({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});v=Ve({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeData(S.dataId)}else if(n.shouldExecuteOnCPU([r])){let S=n.readSync(r.dataId),E=Le(r.shape,r.dtype,S),R=Ble(p,E,b,x);v=n.makeTensorInfo(f,r.dtype,R.values)}else{let S=new xhe(p),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(S,[r],r.dtype,E);v=Ve({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return v}var vhe={kernelName:cl,backendName:"webgpu",kernelFunc:bhe};function whe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=Wle(h,p,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var khe={kernelName:Gd,backendName:"webgpu",kernelFunc:whe},She=gn({opType:22}),Ihe={kernelName:Po,backendName:"webgpu",kernelFunc:She},Che=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Nhe(this.rank,"uniforms.");return`
      ${qe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Nhe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function The(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(h=>w.decodeString(h)):l,u=Le(r.shape,r.dtype,c),d=Ule(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Che(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var Ehe={kernelName:Yr,backendName:"webgpu",kernelFunc:The},Rhe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${qe()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},_he=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${qe()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function jl(e,t){t!==null&&e.disposeData(t.dataId)}function Q5(e){let t=1;for(;t<e;)t*=2;return t}function $he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let v=n.readSync(r.dataId),[C,S]=Gle(v,i,r.dtype,a,o);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo(S.shape,S.dtype,S.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,Sc({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let u=w.sizeFromShape(i)/l,d=Ve({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),h=Q5(a),p=Q5(l),f=null,m=()=>f===null?[d,d]:[d,f],g=(v,C,S)=>{let E=m(),R=new Rhe(S),$=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[C]}],_=f;f=n.runWebGPUProgram(R,E,"int32",$),jl(n,_)};for(let v=1;v<h;v*=2){let C=v*2;for(let S=v;S>=1;S/=2)g(C,S,[u,p])}for(let v=p;v>h;v/=2){let C=m(),S=new _he([u,v/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[h]}],P=f;f=n.runWebGPUProgram(S,C,"int32",R),jl(n,P);let $=h/2,_=$*2;for(let N=$;N>=1;N/=2)g(_,N,f.shape)}let A=f;f=kc({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,a]}}),jl(n,A);let x=n6({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});jl(n,d);let y=i.slice(0,-1);y.push(a),A=f,f=Ve({inputs:{x:f},attrs:{shape:y},backend:n}),jl(n,A);let b=x;return x=Ve({inputs:{x},attrs:{shape:y},backend:n}),jl(n,b),[x,f]}var Dhe={kernelName:hl,backendName:"webgpu",kernelFunc:$he},Fhe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${qe()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Phe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],A=new Fhe(g),x=o==="nearest"?1:2,y;switch(i){case"constant":y=1;break;case"reflect":y=2;break;case"wrap":y=3;break;case"nearest":y=4;break;default:y=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[y]},{type:"float32",data:[l]}];return n.runWebGPUProgram(A,[r,a],"float32",b)}var Ohe={kernelName:pl,backendName:"webgpu",kernelFunc:Phe};function Mhe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],h=new Array(i).fill(0),p=o.shape.slice();p[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){h[a]=m;let g=kc({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),A=Ve({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=A,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var zhe={kernelName:fl,backendName:"webgpu",kernelFunc:Mhe},Lhe=[cle,qle,Kle,Jle,rue,oue,lue,cue,mue,xue,vue,Iue,fle,Eue,Mue,Wue,Uue,Hue,Xue,Yue,Que,rce,oce,lce,uce,cce,hce,fce,gce,wce,yce,bce,Ice,Nce,Ece,$ce,Pce,Mce,Lce,ple,Nue,Wce,Uce,Hce,qce,Kce,Yce,Jce,ede,nde,rde,ode,lde,cde,ece,hde,fde,gde,gue,yde,bde,wde,Sde,Cde,Tde,Rde,Aue,_de,Dde,Pde,lle,zde,Wde,Ude,Hde,Xde,Yde,Qde,the,she,pue,vhe,khe,ohe,lhe,dhe,phe,mhe,ghe,yhe,rhe,nce,Ihe,Ehe,Dhe,Ohe,nue,zhe,Ade];for(let e of Lhe)br(e);var Bhe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=ev(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=ev(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function ev(e,t){return`${e}_${t}`}var l6=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Ge(this.outputShape),this.dispatch=Fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${qe()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Whe=class extends l6{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Vhe=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),u6=class extends Eu{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!Xx())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Bhe(this.device),this.tensorMap=new Td(this,rs()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return u6.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=w.sizeFromShape(t)*NA(n);return this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=w.sizeFromShape(n)*NA(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new l6),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Whe),this.fromPixelImportProgram;default:w.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=T.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=LC(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach(a=>{a.data.length===0&&(a.data=[1]);let o;switch(a.data.length){case 1:o=4;break;case 2:o=8;break;case 3:o=16;break;case 4:o=16;break;default:w.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}t=Math.ceil(t/o)*o,n.push(t),t+=a.data.length*4});let s=new ArrayBuffer(t);e.forEach((a,o)=>{let i=n[o];a.type==="int32"?new Int32Array(s,i,a.data.length).set(a.data):a.type==="uint32"?new Uint32Array(s,i,a.data.length).set(a.data):new Float32Array(s,i,a.data.length).set(a.data)});let r=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(r,0,s,0,t),{offset:0,size:t,buffer:r}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),w.sizeFromShape(r.shape)===0){let S=this.tensorMap.get(r.dataId);return S.values=w.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(S=>S.shape),i="int32";o.map(S=>{a.push({type:i,data:S})});let l=w.computeStrides(r.shape);if(a.push({type:i,data:l}),e.size){let S=w.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?S/4:S]})}s&&(a=[...a,...s]);let c=this.makeUniforms(a),u=t.map((S,E)=>{if(S.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(S.dataId),{dtype:this.tensorMap.get(S.dataId).dtype,shape:S.shape,name:e.variableNames[E]}}),d=u.map(S=>S.dtype).concat(r.dtype),h=u.map(S=>T.getBroadcastDims(S.shape,r.shape)),p=u.map(S=>w.arraysEqual(S.shape,r.shape)).join("_"),f=h.map(S=>S.join("_")).join(";"),m=t6(e,o,d,f,p),{bindGroupLayout:g,pipelineLayout:A}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(m,()=>e6(this.device,e,A,u,r)),y=this.activeTimers!=null,b=vce(this.device,g,t.map(S=>this.tensorToBinding(S)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let v=this.getComputePass();y&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(x),v.setBindGroup(0,b),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),y&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(S=>{this.commandQueueOwnedIds.add(S.dataId)}),this.commandQueueOwnedIds.add(r.dataId);let C={byteSize:c.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};return this.uniformDisposalQueue.push(C),Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),y&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Vhe){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Jx=u6;Jx.nextDataId=0;var c6={};Me(c6,{WebGPUBackend:()=>Jx,webgpu_util:()=>MC});rc.isBrowser()&&Xx()&&ac("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new Jx(r,s)},3);var Gt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Gt||{}),h0=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(h0||{}),d6;function Uhe(e){d6=e.wasm.cwrap(Ra,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Ghe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,h=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=h0[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let A=l?r.shape[2]:r.shape[1],x=c?a.shape[1]:a.shape[2],y=Al.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...y,A,x],r.dtype),v=n.dataIdMap.get(b.dataId).id,C=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(a.shape).buffer);return d6(h,C,r.shape.length,p,S,a.shape.length,l,c,g,f,m,d||0,v),b}var Hhe={kernelName:Ra,backendName:"wasm",setupFunc:Uhe,kernelFunc:Ghe};function An(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return w.sizeFromShape(c.shape)===0||n(l,Gt[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var jhe=An(_i);function Mn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,h=i.dataIdMap.get(u.dataId).id,p=n??c.dtype,f=T.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,p);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),A=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(d,g,c.shape.length,h,A,u.shape.length,Gt[c.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var qhe=!0,Xhe=Mn(Kr,qhe),h6;function Khe(e){h6=e.wasm.cwrap(Ha,null,["array","number","number","number"])}function Zhe(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return h6(a,r.length,Gt[s.dtype],o),s}var Yhe={kernelName:Ha,backendName:"wasm",setupFunc:Khe,kernelFunc:Zhe};function p0(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Jhe={kernelName:uo,backendName:"wasm",kernelFunc:p0},p6;function Qhe(e){p6=e.wasm.cwrap(Oo,null,["number","array","number","number","number","array","number"])}function Cu(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=tpe(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=epe(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=p0({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,h=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(l.shape).buffer);return p6(u,p,l.shape.length,Gt[l.dtype],d,h,a.length),c}function epe(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function tpe(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var npe={kernelName:Oo,backendName:"wasm",kernelFunc:Cu,setupFunc:Qhe};function Uo(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),o=a,i=T.getAxesPermutation(o,r),l=null,c=!1;if(i!=null){let u=new Array(r);for(let p=0;p<u.length;p++)u[p]=s[i[p]];o=T.getInnerMostAxes(o.length,r),l=Cu({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var f6;function spe(e){f6=e.wasm.cwrap(Du,null,["number, number, number"])}function rpe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;T.assertAxesAreInnerMostDims("all",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),A=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;f6(l,A,y)}if(p&&t.disposeData(u.dataId),a){let y=T.expandShapeToKeepDim(x.shape,h);x.shape=y}return x}var ape={kernelName:Du,backendName:"wasm",setupFunc:spe,kernelFunc:rpe},m6;function ope(e){m6=e.wasm.cwrap(Fu,null,["number, number, number"])}function ipe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;T.assertAxesAreInnerMostDims("any",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),A=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;m6(l,A,y)}if(p&&t.disposeData(u.dataId),a){let y=T.expandShapeToKeepDim(x.shape,h);x.shape=y}return x}var lpe={kernelName:Fu,backendName:"wasm",setupFunc:ope,kernelFunc:ipe},g6;function upe(e){g6=e.wasm.cwrap(ja,null,["number","number","number","number","number"])}function cpe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=Uo(a,r,t);if(d){let A=t.dataIdMap.get(c.dataId).id;A!==o&&(l=c,i=A)}let h=l.shape.slice(0,-1),p=t.makeOutput(h,"int32"),f=t.dataIdMap.get(p.dataId).id,m=w.sizeFromShape(p.shape),g=l.shape[u[0]];return g6(i,Gt[l.dtype],m,g,f),d&&t.disposeData(c.dataId),p}var dpe={kernelName:ja,backendName:"wasm",kernelFunc:cpe,setupFunc:upe},A6;function hpe(e){A6=e.wasm.cwrap(qa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ppe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=T.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,h=u.filterWidth,p=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,A=u.strideHeight,x=u.strideWidth,y=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=s.makeOutput(u.outShape,"float32"),v=s.dataIdMap.get(b.dataId).id;return A6(a,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,A,x,y,v),b}var fpe={kernelName:qa,backendName:"wasm",setupFunc:hpe,kernelFunc:ppe};function jn(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),o=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var mpe={kernelName:tl,backendName:"wasm",kernelFunc:jn},y6;function gpe(e){y6=e.wasm.cwrap(Xa,null,["number","array","number","number","array","number","number","number","number"])}function Ape(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],h=o?r.shape[l-1]:r.shape[l-2],p=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),A=w.sizeFromShape(m),y=Al.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,h]:[g,h,u],v=i?[A,p,d]:[A,d,p],C=jn({inputs:{x:r},backend:n,attrs:{shape:b}}),S=jn({inputs:{x:a},backend:n,attrs:{shape:v}}),E=n.dataIdMap.get(C.dataId).id,R=n.dataIdMap.get(S.dataId).id,P=o?C.shape[2]:C.shape[1],$=i?S.shape[1]:S.shape[2],_=Math.max(g,A),N=n.makeOutput([_,P,$],C.dtype),O=n.dataIdMap.get(N.dataId).id,z=new Uint8Array(new Int32Array(C.shape).buffer),j=new Uint8Array(new Int32Array(S.shape).buffer);return y6(E,z,C.shape.length,R,j,S.shape.length,o,i,O),n.disposeData(C.dataId),n.disposeData(S.dataId),N.shape=y,N}var ype={kernelName:Xa,backendName:"wasm",setupFunc:gpe,kernelFunc:Ape};function Ci(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=$t.parseSliceParams(t,n,s),i=$t.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),u=w.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=$t.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+w.sizeFromShape(o)):r.typedArrayFromHeap(c).set(l.subarray(f,f+w.sizeFromShape(o))),c}if(t.dtype==="string"){let f=Af(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let h=r.typedArrayFromHeap(c),p=t.shape.length;if(p===2)xpe(l,u[0],h,a,o);else if(p===3)bpe(l,u[0],u[1],h,a,o);else if(p===4)vpe(l,u[0],u[1],u[2],h,a,o);else{let f=Af(l,a,o,t.shape,t.dtype);h.set(f)}return c}function xpe(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+r[1]),a),a+=r[1]}}function bpe(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],c=r[2],u=i+a[0],d=l+a[1];for(let h=i;h<u;h++)for(let p=l;p<d;p++){let f=h*t+p*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function vpe(e,t,n,s,r,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],h=c+o[1],p=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<h;g++)for(let A=u;A<p;A++){let x=m*t+g*n+A*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var wpe={kernelName:ol,backendName:"wasm",kernelFunc:Ci};function kpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((A,x)=>A*x),l=T.getReshaped(r.shape,a,i),c=T.getPermuted(l.length,a.length),u=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(u,o,a.length),p=jn({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Cu({inputs:{x:p},backend:n,attrs:{perm:c}}),m=jn({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ci({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),g}var Spe={kernelName:$i,backendName:"wasm",kernelFunc:kpe};function Ih(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var Ipe={kernelName:Ka,backendName:"wasm",kernelFunc:Ih},Cpe=An(Za),x6;function Npe(e){x6=e.wasm.cwrap(Zr,null,["number","number","number","number"])}function Tpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return x6(i,a,o,c),l}var Epe={kernelName:Zr,backendName:"wasm",setupFunc:Npe,kernelFunc:Tpe};function b6(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=T.computeOutShape(t.map(p=>p.shape),s),a=t.filter(p=>w.sizeFromShape(p.shape)>0);if(a.length===1)return p0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return o;let i=a.map(p=>p.shape);if(T.assertParamsConsistent(i,s),a[0].dtype==="string"){let p=a.map(y=>{let b=w.sizeFromShape(y.shape.slice(s));return jn({inputs:{x:y},backend:n,attrs:{shape:[-1,b]}})}),f=p.map(y=>({vals:n.readSync(y.dataId),shape:y.shape}));r=T.computeOutShape(p.map(y=>y.shape),1);let m=p[0].shape[0]===1,g=wx(f,r,t[0].dtype,m),A=T.computeOutShape(a.map(y=>y.shape),s);o.shape=A;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=T.fromStringArrayToUint8(g),p.forEach(y=>n.disposeData(y.dataId)),o}let l=w.sizeFromShape(a[0].shape.slice(0,s)),c=0,u=a.map(p=>{let f=w.sizeFromShape(p.shape.slice(s));return c+=f,f}),d=a.map(p=>n.typedArrayFromHeap(p)),h=n.typedArrayFromHeap(o);for(let p=0;p<l;p++){let f=p*c;for(let m=0;m<d.length;m++){let g=u[m],A=p*g,x=d[m].subarray(A,A+g);h.set(x,f),f+=g}}return o}var Rpe={kernelName:Di,backendName:"wasm",kernelFunc:b6},v6;function _pe(e){v6=e.wasm.cwrap(Ya,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $pe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:h}=n,p=T.convertConv2DDataFormat(h),f=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!1,p),m=f.filterHeight,g=f.filterWidth,A=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,C=f.dilationWidth,S=f.strideHeight,E=f.strideWidth,R=f.inChannels,P=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let _=s.makeOutput(f.outShape,"float32"),N=s.dataIdMap.get(_.dataId).id;return v6(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,A,x,y,b,$,v,C,S,E,R,P,N),_}var Dpe={kernelName:Ya,backendName:"wasm",setupFunc:_pe,kernelFunc:$pe},w6;function Fpe(e){w6=e.wasm.cwrap(Ja,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ppe(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(u,a.shape,o,d,i,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:A,inHeight:x,inWidth:y,outChannels:b,outHeight:v,outWidth:C,strideHeight:S,strideWidth:E}=p,R=m-1-p.padInfo.top,P=g-1-p.padInfo.left,$=p.dataFormat==="channelsLast",_=w.computeStrides(p.inShape),N=w.computeStrides(r.shape),[O,z,j]=w.computeStrides(a.shape),L=_[0],B=$?_[1]:_[2],W=$?_[2]:1,J=$?1:_[1],ee=N[0],re=$?N[1]:N[2],Z=$?N[2]:1,se=$?1:N[1],ne=t.makeOutput(p.inShape,"float32"),de=t.dataIdMap.get(ne.dataId).id,xe=t.dataIdMap.get(r.dataId).id,Ie=t.dataIdMap.get(a.dataId).id;return w6(xe,Ie,f,m,g,x,y,A,v,C,b,S,E,R,P,O,z,j,L,B,W,J,ee,re,Z,se,de),ne}var Ope={kernelName:Ja,backendName:"wasm",setupFunc:Fpe,kernelFunc:Ppe},Mpe=An(Qa),zpe=An(eo),k6=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(k6||{}),S6;function Lpe(e){S6=e.wasm.cwrap(Pi,null,["number","number","number","number","array","number","number","number","number","number"])}function Bpe(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,h]=o,p=[u,d,h,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Ih({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,A=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,y=t.makeOutput(p,"float32"),b=t.dataIdMap.get(y.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return S6(g,A,x,u,v,d,h,k6[r],a,b),m!=null&&t.disposeData(m.dataId),y}var Wpe={kernelName:Pi,backendName:"wasm",setupFunc:Lpe,kernelFunc:Bpe},I6;function Vpe(e){I6=e.wasm.cwrap(Fi,null,["number","number","number","number","number","number"])}function Upe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=T.getAxesPermutation([a],l),u=r;c!==null&&(u=Cu({inputs:{x:r},attrs:{perm:c},backend:n}));let d=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[d],l);let h=n.makeOutput(u.shape,u.dtype),p=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(h.dataId).id;I6(f,o?1:0,i?1:0,p,m,Gt[r.dtype]);let g=h;if(c!==null){let A=T.getUndoAxesPermutation(c);g=Cu({inputs:{x:h},attrs:{perm:A},backend:n}),n.disposeData(u.dataId),n.disposeData(h.dataId)}return g}var Gpe={kernelName:Fi,backendName:"wasm",setupFunc:Vpe,kernelFunc:Upe},C6;function Hpe(e){C6=e.wasm.cwrap(Oi,null,["number","number","number","array","number","array","array","number","number"])}function jpe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,h=c*a,p=u/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=t.makeOutput(f,"float32"),A=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return C6(A,a,o==="NHWC"?1:0,x,r.shape.length-1,y,b,f.length,v),m}var qpe={kernelName:Oi,backendName:"wasm",setupFunc:Hpe,kernelFunc:jpe},N6;function Xpe(e){N6=e.wasm.cwrap(to,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kpe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,h=c??[1,1],p=T.computeConv2DInfo(r.shape,a.shape,l,h,u,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,A=p.padInfo.right,x=p.padInfo.bottom,y=p.padInfo.left,b=p.dilationHeight,v=p.dilationWidth,C=p.strideHeight,S=p.strideWidth,E=p.inChannels,R=p.outChannels,P=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let $=s.makeOutput(p.outShape,"float32"),_=s.dataIdMap.get($.dataId).id;return N6(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,A,x,y,P,b,v,C,S,E,R,_),$}var Zpe={kernelName:to,backendName:"wasm",setupFunc:Xpe,kernelFunc:Kpe},Ype=An(so),Jpe=!1,Qpe=Mn(Mi,Jpe,"bool"),efe=An(ro,"float32");function $A(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),jn({inputs:{x:r},backend:s,attrs:{shape:i}})}var tfe={kernelName:zi,backendName:"wasm",kernelFunc:$A};function T6(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var nfe={kernelName:Vu,backendName:"wasm",kernelFunc:T6},E6;function sfe(e){E6=e.wasm.cwrap(Bi,null,["number","number","number","number","number","number"])}function rfe(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return E6(a,i,l,c,u,o),r}var afe={kernelName:Bi,backendName:"wasm",kernelFunc:rfe,setupFunc:sfe},ofe=An(ao),ife=!1,lfe=Mn(oo,ife),R6;function ufe(e){R6=e.wasm.cwrap(io,null,["number","number","number","number","number","number","number"])}function cfe(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return R6(u,d,h,p,f,r,g),m}var dfe={kernelName:io,backendName:"wasm",setupFunc:ufe,kernelFunc:cfe},_6;function hfe(e){_6=e.wasm.cwrap(_a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function pfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,u,c,h),g=h0[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let A=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,y=m.outChannels,b=0;if(o!=null){let Z=s.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${Z.shape}) does not match the number of output channels (${y})`);b=Z.id}let v=m.filterHeight,C=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,$=m.dilationHeight,_=m.dilationWidth,N=m.strideHeight,O=m.strideWidth,z=m.inChannels,j=m.padInfo.type==="SAME"?1:0,L=m.batchSize,B=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),ee=s.dataIdMap.get(J.dataId).id,re=i==null?0:s.dataIdMap.get(i.dataId).id;return _6(A,L,B,W,x,v,C,b,S,E,R,P,j,$,_,N,O,z,y,g,re,f||0,ee),J}var ffe={kernelName:_a,backendName:"wasm",setupFunc:hfe,kernelFunc:pfe},$6;function mfe(e){$6=e.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,u,c,h,!0),g=h0[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let A=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,y=m.outChannels,b=0;if(o!=null){let Z=s.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${Z.shape}) does not match the number of output channels (${y})`);b=Z.id}let v=m.filterHeight,C=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,$=m.dilationHeight,_=m.dilationWidth,N=m.strideHeight,O=m.strideWidth,z=m.inChannels,j=m.padInfo.type==="SAME"?1:0,L=m.batchSize,B=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),ee=s.dataIdMap.get(J.dataId).id,re=i==null?0:s.dataIdMap.get(i.dataId).id;return $6(A,L,B,W,x,v,C,b,S,E,R,P,j,$,_,N,O,z,y,g,re,f||0,ee),J}var Afe={kernelName:$a,backendName:"wasm",setupFunc:mfe,kernelFunc:gfe},D6;function yfe(e){D6=e.wasm.cwrap(Vi,null,["number","number","number","number","number","number","array","number"])}function xfe(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=YA.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let u=r.shape,d=u[u.length-1],p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),A=t.dataIdMap.get(c.dataId).id;return D6(p,Gt[s.dtype],m,o,d,i,g,A),c}var bfe={kernelName:Vi,backendName:"wasm",setupFunc:yfe,kernelFunc:xfe},F6;function vfe(e){F6=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function wfe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),u=r.shape[l];for(let R=0;R<c.length;++R){let P=c[R];w.assert(P<=u-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${u-1}]`)}let d=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),h=jn({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),p=w.sizeFromShape(a.shape),f=jn({inputs:{x:a},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let A=h.shape.length-1,y=t.dataIdMap.get(h.dataId).id,v=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(w.computeStrides(h.shape)).buffer),E=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return F6(y,Gt[r.dtype],S,A,v,d.batchSize,E,C),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var kfe={kernelName:Wi,backendName:"wasm",setupFunc:vfe,kernelFunc:wfe},Sfe=!1,Ife=Mn(Ui,Sfe,"bool"),Cfe=!1,Nfe=Mn(lo,Cfe,"bool"),P6;function Tfe(e){P6=e.wasm.cwrap(co,null,["number","number","number","number"])}function Efe(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;P6(r,Gt[t.dtype],n,o)}return a}var Rfe={kernelName:co,backendName:"wasm",setupFunc:Tfe,kernelFunc:Efe},_fe=!1,$fe=Mn(Gi,_fe,"bool"),Dfe=!1,Ffe=Mn(Hi,Dfe,"bool"),Pfe=An(ho),Ofe=!1,Mfe=Mn(ji,Ofe,"bool"),O6;function zfe(e){O6=e.wasm.cwrap(po,null,["number","number","number","number"])}function Lfe(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;T.assertAxesAreInnerMostDims("max",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),A=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;O6(l,Gt[o.dtype],A,y)}if(p&&t.disposeData(u.dataId),a){let y=T.expandShapeToKeepDim(x.shape,h);x.shape=y}return x}var Bfe={kernelName:po,backendName:"wasm",setupFunc:zfe,kernelFunc:Lfe},Wfe=!1,Vfe=Mn(fo,Wfe),M6;function Ufe(e){M6=e.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gfe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=T.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,h=u.filterWidth,p=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,A=u.dilationHeight,x=u.dilationWidth,y=u.strideHeight,b=u.strideWidth,v=u.inChannels,C=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let S=s.makeOutput(u.outShape,"float32"),E=s.dataIdMap.get(S.dataId).id;return M6(a,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,A,x,y,b,v,C,E),S}var Hfe={kernelName:mo,backendName:"wasm",setupFunc:Ufe,kernelFunc:Gfe},z6;function jfe(e){z6=e.wasm.cwrap(go,null,["number, number, number"])}function qfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t),f=d;if(p){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=T.getInnerMostAxes(f.length,c.shape.length))}T.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=T.computeOutAndReduceShapes(c.shape,f),A=w.sizeFromShape(g),x=c;c.dtype!=="float32"&&(x=Ih({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let y=t.makeOutput(m,"float32");if(w.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;z6(l,A,b)}if(p&&t.disposeData(u.dataId),a){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return c.dtype!=="float32"&&t.disposeData(x.dataId),y}var Xfe={kernelName:go,backendName:"wasm",setupFunc:jfe,kernelFunc:qfe},L6;function Kfe(e){L6=e.wasm.cwrap(Ao,null,["number","number","number","number"])}function Zfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y)}let f=c.shape.length;T.assertAxesAreInnerMostDims("min",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),A=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;L6(l,Gt[o.dtype],A,y)}if(p&&t.disposeData(u.dataId),a){let y=T.expandShapeToKeepDim(x.shape,h);x.shape=y}return x}var Yfe={kernelName:Ao,backendName:"wasm",setupFunc:Kfe,kernelFunc:Zfe},Jfe=!1,Qfe=Mn(yo,Jfe),B6=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(B6||{}),W6;function eme(e){W6=e.wasm.cwrap(xo,null,["number","array","number","number","array","array","number","number"])}function tme(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(u).buffer),p=new Uint8Array(new Int32Array(d).buffer);return W6(o,c,t.shape.length,Gt[t.dtype],h,p,B6[r],l),i}var nme={kernelName:xo,backendName:"wasm",kernelFunc:tme,setupFunc:eme},sme=!0,rme=Mn(bo,sme),ame=An(qi);function Qx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var V6;function ome(e){V6=e.wasm.cwrap(Ki,"number",["number","number","number","number","number"])}function ime(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=V6(c,u,a,r,o),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=Qx(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}var lme={kernelName:Ki,backendName:"wasm",setupFunc:ome,kernelFunc:ime},U6;function ume(e){U6=e.wasm.cwrap(Ku,"number",["number","number","number","number","number","bool"])}function cme(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=U6(u,d,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Qx(t,h);t.wasm._free(m);let A=t.makeOutput([f],"int32",p),x=t.makeOutput([],"int32",g);return[A,x]}var dme={kernelName:Ku,backendName:"wasm",setupFunc:ume,kernelFunc:cme},G6;function hme(e){G6=e.wasm.cwrap(Zi,"number",["number","number","number","number","number","number"])}function pme(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=G6(u,d,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Qx(t,h);t.wasm._free(g);let A=t.makeOutput([f],"int32",p),x=t.makeOutput([f],"float32",m);return[A,x]}var fme={kernelName:Zi,backendName:"wasm",setupFunc:hme,kernelFunc:pme},mme=!1,gme=Mn(Xi,mme,"bool"),H6;function Ame(e){H6=e.wasm.cwrap(Ji,null,["number","number","number","number","number"])}function yme(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(r.dataId).id;return H6(d,a,o,i,c),l}var xme={kernelName:Ji,backendName:"wasm",setupFunc:Ame,kernelFunc:yme};function bme(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var vme={kernelName:Yi,backendName:"wasm",kernelFunc:bme};function wme(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return $A({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=$A({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=b6({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var kme={kernelName:Qi,backendName:"wasm",kernelFunc:wme},j6;function Sme(e){j6=e.wasm.cwrap(vo,null,["number","array","number","number","array","array","number","number"])}function Ime(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return T6({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return j6(o,u,t.shape.length,Gt[t.dtype],p,f,r,c),i}var q6={kernelName:vo,backendName:"wasm",kernelFunc:Ime,setupFunc:Sme},Cme=!1,Nme=Mn(wo,Cme),X6;function Tme(e){X6=e.wasm.cwrap(ko,null,["number","number","number"])}function Eme(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,c=l;l.dtype!=="float32"&&(c=Ih({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return X6(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var Rme={kernelName:ko,backendName:"wasm",setupFunc:Tme,kernelFunc:Eme},K6;function _me(e){K6=e.wasm.cwrap(el,null,["number","number","number","number"])}function $me(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t),f=d;if(p){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=T.getInnerMostAxes(f.length,c.shape.length))}T.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=T.computeOutAndReduceShapes(c.shape,f),A=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;K6(l,A,Gt[x.dtype],y)}if(p&&t.disposeData(u.dataId),a){let y=T.expandShapeToKeepDim(x.shape,h);x.shape=y}return x}var Dme={kernelName:el,backendName:"wasm",setupFunc:_me,kernelFunc:$me},Fme=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Ix(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},Pme={kernelName:Zu,backendName:"wasm",kernelFunc:Fme},Ome=!0,Mme=Mn(no,Ome),zme=An(So),Lme=An(Co),Z6;function Bme(e){Z6=e.wasm.cwrap(Io,null,["number","number","number","number","number","number","number","number","number","number"])}function Wme(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,[u,d,h,p]=r.shape,f=[u,l,c,p],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Ih({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let A=m.id,x=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return x;let y=t.dataIdMap.get(x.dataId).id;return Z6(A,u,d,h,p,l,c,a?1:0,o?1:0,y),g!=null&&t.disposeData(g.dataId),x}var Vme={kernelName:Io,backendName:"wasm",setupFunc:Bme,kernelFunc:Wme},Y6;function Ume(e){Y6=e.wasm.cwrap(nl,null,["number","array","number","array","number","number"])}function Gme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return p0({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);Y6(l,u,o.length,d,r.shape.length,c);let h=jn({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),h}var Hme={kernelName:nl,backendName:"wasm",kernelFunc:Gme,setupFunc:Ume},J6;function jme(e){J6=e.wasm.cwrap(gl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function qme(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,h,p,f]=r.shape,[m,g]=T.getImageCenter(i,h,p),A=o===0,x=255,y=typeof o=="number"?[o,o,o,A?0:x]:[...o,x],b=new Uint8Array(new Int32Array(y).buffer);return J6(c,d,h,p,f,a,m,g,b,y.length,u),l}var Xme={kernelName:gl,backendName:"wasm",kernelFunc:qme,setupFunc:jme},Kme=An(sl),Zme=An(No),Q6;function Yme(e){Q6=e.wasm.cwrap(rl,null,["number","number","number","number","number","number","array","number","number"])}function Jme(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(w.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=JA.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,A=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return Q6(f,g,Gt[a.dtype],l,c,u,A,h,x),i}var Qme={kernelName:rl,backendName:"wasm",setupFunc:Yme,kernelFunc:Jme},e8;function e0e(e){e8=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function t0e(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,d=s.shape.length,h=r.shape.length,p=d===0||d>1||h===1?1:w.sizeFromShape(r.shape.slice(1));return e8(o,i,l,p,u),c}var n0e={kernelName:al,backendName:"wasm",kernelFunc:t0e,setupFunc:e0e},t8;function s0e(e){t8=e.wasm.cwrap(Eo,null,["number","number"])}function r0e(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||t8(s,a),r}var a0e={kernelName:"Sigmoid",backendName:"wasm",setupFunc:s0e,kernelFunc:r0e},o0e=An(To),n8;function i0e(e){n8=e.wasm.cwrap($o,null,["number","number","number","number"])}function l0e(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=w.sizeFromShape(n.shape)/i;return w.sizeFromShape(a.shape)===0||n8(r,o,i,l),a}var u0e={kernelName:$o,backendName:"wasm",setupFunc:i0e,kernelFunc:l0e};function c0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);let c=q6.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(u.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),m=jn({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Cu({inputs:{x:m},backend:n,attrs:{perm:d}}),v=jn({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),v}var d0e={kernelName:ll,backendName:"wasm",kernelFunc:c0e},s8;function h0e(e){s8=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function p0e(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],c=t.readSync(a.dataId)[0],u=[i+c,l],d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(u,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),r.dtype),A=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([c],"bool"),y=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),v=t.dataIdMap.get(b.dataId).id,C=t.makeOutput([4],"int32"),S=t.dataIdMap.get(C.dataId).id,E=s8(d,h,Gt[r.dtype],i,c,l,p,m,A,y,v,S),R=t.readSync(C.dataId),P;switch(R[0]){case 1:{P=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{P=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:P=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:P=""}if(t.disposeData(C.dataId),P)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(P);let $=f,_=g;return E!==u[0]&&($=Ci({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),_=Ci({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,_,x,b]}var f0e={kernelName:Bd,backendName:"wasm",setupFunc:h0e,kernelFunc:p0e},r8;function m0e(e){r8=e.wasm.cwrap(nc,null,["number","number","number","number","number","number","number"])}function g0e(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,c=s.shape[0],u=w.sizeFromShape(a.shape),d=t.makeOutput([c,u],s.dtype),h=t.dataIdMap.get(d.dataId).id,p=t.makeOutput([u],a.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;r8(o,i,l,c,h,f,g);let A=t.readSync(m.dataId),x;switch(A[0]){case 0:{x=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break}case 1:{x=T.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break}case 2:x=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let y=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(p.dataId));x=T.getSparseReshapeInputOutputMultipleErrorMessage(y,b);break}case 4:{let y=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(p.dataId));x=T.getSparseReshapeInputOutputMismatchErrorMessage(y,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(d.dataId),t.disposeData(p.dataId),new Error(x);return[d,p]}var A0e={kernelName:nc,backendName:"wasm",setupFunc:m0e,kernelFunc:g0e},a8;function o8(e){a8=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function i8(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],u=i>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let h=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(d,r.dtype),g=n.dataIdMap.get(m.dataId).id,A=n.makeOutput([4],"int32"),x=n.dataIdMap.get(A.dataId).id;a8(h,Gt[r.dtype],r.shape[0],p,f,g,x,t,0);let y=n.readSync(A.dataId),b;switch(y[0]){case 0:{b=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y[1],y[2]);break;case 3:b=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(y[1],y[2],y[3]);break;default:b=""}if(n.disposeData(A.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function y0e(e){return i8(e,!0)}var x0e={kernelName:Wd,backendName:"wasm",setupFunc:o8,kernelFunc:y0e};function b0e(e){return i8(e,!1)}var v0e={kernelName:Vd,backendName:"wasm",setupFunc:o8,kernelFunc:b0e};function w0e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let h=[...u];h[i]=d;let p=Ci({inputs:{x:r},attrs:{begin:c,size:h},backend:s});return c[i]+=d,p})}var k0e={kernelName:ul,backendName:"wasm",kernelFunc:w0e},S0e=An(Ro),I0e=An(sc),C0e=!0,N0e=Mn(Do,C0e),l8;function T0e(e){l8=e.wasm.cwrap(Mo,null,["number","number","number","number"])}function E0e(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return l8(o,r,Gt[a.dtype],l),i}var R0e={kernelName:Mo,backendName:"wasm",setupFunc:T0e,kernelFunc:E0e},u8;function _0e(e){u8=e.wasm.cwrap(cl,null,["number","array","number","array","array","array","array","array","number","number"])}function $0e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=$t.sliceInfo(r.shape,a,o,i,l,c,u,d,h),v;if(m)v=jn({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||A){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=$t.computeOutShape(x,y,b),S=Ci({inputs:{x:r},backend:t,attrs:{begin:x,size:C}});v=jn({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}else{let C=t.makeOutput(p,"float32"),S=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),P=new Uint8Array(new Int32Array(y).buffer),$=new Uint8Array(new Int32Array(b).buffer),_=new Uint8Array(new Int32Array(p).buffer),N=new Uint8Array(new Int32Array(w.computeStrides(p)).buffer),O=t.dataIdMap.get(C.dataId).id;u8(S,E,r.shape.length,R,P,$,_,N,p.length,O),v=jn({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return v}var D0e={kernelName:cl,backendName:"wasm",setupFunc:_0e,kernelFunc:$0e},F0e=!0,P0e=Mn(Fo,F0e),c8;function O0e(e){c8=e.wasm.cwrap(_o,null,["number","number","number","number"])}function M0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Uo(o,r,t),f=d;if(p){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=T.getInnerMostAxes(f.length,c.shape.length))}T.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=T.computeOutAndReduceShapes(c.shape,f),A=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;c8(l,A,Gt[x.dtype],y)}if(p&&t.disposeData(u.dataId),a){let y=T.expandShapeToKeepDim(x.shape,h);x.shape=y}return x}var z0e={kernelName:_o,backendName:"wasm",setupFunc:O0e,kernelFunc:M0e},L0e=An(dl),B0e=An(Po),d8;function W0e(e){d8=e.wasm.cwrap(Yr,null,["number","array","number","array","number","number"])}function V0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[h]*o[h];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(u.dataId).id;return d8(a,l,r.shape.length,c,i.length,Gt[u.dtype],d),u}var U0e={kernelName:Yr,backendName:"wasm",setupFunc:W0e,kernelFunc:V0e},h8;function G0e(e){h8=e.wasm.cwrap(hl,null,["number","array","number","number","number","bool","number","number"])}var H0e=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),h=t.dataIdMap.get(d.dataId).id;return h8(o,i,s.shape.length,Gt[s.dtype],r,a,u,h),[c,d]},j0e={kernelName:hl,backendName:"wasm",setupFunc:G0e,kernelFunc:H0e},p8;function q0e(e){p8=e.wasm.cwrap(pl,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function X0e(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],A=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),y=t.dataIdMap.get(x.dataId).id,v=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return p8(v,S,a.shape[0]>1,u,f,m,p,h,d,A,r.shape.length-1,E,R,l,y),x}var K0e={kernelName:pl,backendName:"wasm",setupFunc:q0e,kernelFunc:X0e};function Z0e(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),c=0;for(let p=0;p<i;p++)p!==a&&(l[c++]=r.shape[p]);let u=new Array(o),d=new Array(i).fill(0),h=r.shape.slice();h[a]=1;for(let p=0;p<u.length;p++)d[a]=p,u[p]=Ci({inputs:{x:r},attrs:{begin:d,size:h},backend:n});return u.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:l}))}var Y0e={kernelName:fl,backendName:"wasm",kernelFunc:Z0e};function J0e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var Q0e={kernelName:ml,backendName:"wasm",kernelFunc:J0e},ege=[Hhe,jhe,Xhe,Yhe,ape,lpe,dpe,fpe,ype,Spe,Ipe,Cpe,Epe,Rpe,Dpe,Ope,Mpe,zpe,Wpe,Gpe,qpe,Zpe,Ype,Qpe,efe,tfe,nfe,afe,ofe,lfe,dfe,ffe,Afe,bfe,kfe,Ife,Nfe,Jhe,Rfe,$fe,Ffe,Pfe,Mfe,Bfe,Vfe,Hfe,Xfe,Yfe,Qfe,nme,rme,ame,lme,dme,fme,gme,xme,vme,kme,q6,Nme,Rme,Dme,Pme,Mme,zme,Lme,mpe,Vme,Hme,Xme,Kme,Zme,Qme,n0e,a0e,o0e,wpe,u0e,d0e,f0e,A0e,x0e,v0e,k0e,S0e,I0e,N0e,R0e,D0e,P0e,z0e,L0e,B0e,U0e,j0e,K0e,npe,Y0e,Q0e];for(let e of ege)br(e);var DA=Y();DA.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));DA.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(DA.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var tv=Ei(yT()),tge='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',nge=Ei(xT()),f8=class extends Eu{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(g8),FA=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Td(this,rs())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=w.sizeFromShape(n),i=o*w.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let i=w.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return age(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function sge(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function nv(e,t,n){if(kf!=null)return kf;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),cd!=null&&cd[s]!=null?cd[s]:n+s}async function rge(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=tge,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?nv(e,t,td??l):l+i},eb&&(r.instantiateWasm=sge(nv(e,t,td??"")));let a=!1;r.onAbort=()=>{if(a||dd)return;dd=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&kf==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+tv.default.toString()],{type:"text/javascript"}),o=(0,tv.default)(r)):o=(0,nge.default)(r),o.then(i=>{a=!0,dd=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function age(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var oge=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],kf=null,td=null,cd={},dd=!1,eb=!1;function ige(e,t=!1){if(sy("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),dd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");kf=e,eb=t}function m8(e,t=!1){if(dd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")td=e;else{cd=e;let n=oge.filter(s=>cd[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}eb=t}var g8=-1,FA=-1;function lge(e){g8=e}function uge(){if(FA===-1)throw new Error("WASM backend not initialized.");return FA}var cge="0.0.0",dge=2;ac("wasm",async()=>{let{wasm:e}=await rge();return new f8(e)},dge);var fa="3.13.0-20220207",tb={tfjs:fa,"tfjs-core":fa,"tfjs-data":fa,"tfjs-layers":fa,"tfjs-converter":fa,"tfjs-backend-cpu":fa,"tfjs-backend-webgl":fa,"tfjs-backend-wasm":fa},hge=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,pge=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,fge=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,mge=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,gge=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,Age=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,s1=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},yge=class{constructor(e,t,n){me(this,"uniform",{}),me(this,"attribute",{}),me(this,"gl"),me(this,"id"),me(this,"compile",(a,o)=>{let i=this.gl.createShader(o);return i?(this.gl.shaderSource(i,a),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS)?i:(ce(`filter: gl compile failed: ${this.gl.getShaderInfoLog(i)}`),null)):(ce("filter: could not create shader"),null)}),this.gl=e;let s=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!s||!r)){if(!this.id){ce("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,s),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){ce(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),s1(t,"attribute",this.attribute);for(let a in this.attribute)this.attribute[a]=this.gl.getAttribLocation(this.id,a);s1(t,"uniform",this.uniform),s1(n,"uniform",this.uniform);for(let a in this.uniform)this.uniform[a]=this.gl.getUniformLocation(this.id,a)}}};function xge(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=nr(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(this.gl=d,!d){ce("filter: cannot get webgl context");return}function h(x,y){if(!(x===l.width&&y===l.height)){if(l.width=x,l.height=y,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}function p(x,y){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let v=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,v);let C=d.createTexture();return d.bindTexture(d.TEXTURE_2D,C),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,x,y,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,C,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:C}}function f(x){return r[x]=r[x]||p(l.width,l.height),r[x]}function m(x=0){if(!i)return;let y=null,b=null,v=!1;e===0?y=t:y=f(s).texture||null,e++,n&&!(x&u.INTERMEDIATE)?(b=null,v=e%2===0):(s=(s+1)%2,b=f(s).fbo||null),d.bindTexture(d.TEXTURE_2D,y),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,v?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(x){if(c[x])return i=c[x],d.useProgram((i?i.id:null)||null),i;if(i=new yge(d,hge,x),!i)return ce("filter: could not get webgl program"),null;let y=Float32Array.BYTES_PER_ELEMENT,b=4*y;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*y),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*y),c[x]=i,i}let A={colorMatrix:x=>{let y=new Float32Array(x);y[4]/=255,y[9]/=255,y[14]/=255,y[19]/=255;let b=y[18]===1&&y[3]===0&&y[8]===0&&y[13]===0&&y[15]===0&&y[16]===0&&y[17]===0&&y[19]===0?fge:pge,v=g(b);!v||(d.uniform1fv(v.uniform.m,y),m())},brightness:x=>{let y=(x||0)+1;A.colorMatrix([y,0,0,0,0,0,y,0,0,0,0,0,y,0,0,0,0,0,1,0])},saturation:x=>{let y=(x||0)*2/3+1,b=(y-1)*-.5;A.colorMatrix([y,b,b,0,0,b,y,b,0,0,b,b,y,0,0,0,0,0,1,0])},desaturate:()=>{A.saturation(-1)},contrast:x=>{let y=(x||0)+1,b=-128*(y-1);A.colorMatrix([y,0,0,0,b,0,y,0,0,b,0,0,y,0,b,0,0,0,1,0])},negative:()=>{A.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let y=Math.cos(x),b=Math.sin(x),v=.213,C=.715,S=.072;A.colorMatrix([v+y*(1-v)+b*-v,C+y*-C+b*-C,S+y*-S+b*(1-S),0,0,v+y*-v+b*.143,C+y*(1-C)+b*.14,S+y*-S+b*-.283,0,0,v+y*-v+b*-(1-v),C+y*-C+b*C,S+y*(1-S)+b*S,0,0,0,0,0,1,0])},desaturateLuminance:()=>{A.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{A.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{A.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{A.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{A.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{A.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{A.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{A.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let y=new Float32Array(x),b=1/l.width,v=1/l.height,C=g(Age);!C||(d.uniform1fv(C.uniform.m,y),d.uniform2f(C.uniform.px,b,v),m())},detectEdges:()=>{A.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{A.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{A.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let y=x||1;A.convolution.call(this,[0,-1*y,0,-1*y,1+4*y,-1*y,0,-1*y,0])},emboss:x=>{let y=x||1;A.convolution.call(this,[-2*y,-1*y,0,-1*y,1,1*y,0,1*y,2*y])},blur:x=>{let y=x/7/l.width,b=x/7/l.height,v=g(gge);!v||(d.uniform2f(v.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(v.uniform.px,y,0),m())},pixelate:x=>{let y=x/l.width,b=x/l.height,v=g(mge);!v||(d.uniform2f(v.uniform.size,y,b),m())}};this.add=function(x){let y=Array.prototype.slice.call(arguments,1),b=A[x];a.push({func:b,args:y})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){h(x.width,x.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,x);for(let y=0;y<a.length;y++){n=y===a.length-1;let b=a[y];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function A8(e){let t=e.shape.length===4?ft(e):e,n=bn(t,3,2),s=[hi(n[0]),hi(n[1]),hi(n[2])],r=[Tn(n[0]),Tn(n[1]),Tn(n[2])],a=await Promise.all(r.map(p=>p.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[ge(n[0],s[0]),ge(n[1],s[1]),ge(n[2],s[2])],l=[ge(r[0],s[0]),ge(r[1],s[1]),ge(r[2],s[2])],c=[ye(o,l[0]),ye(o,l[1]),ye(o,l[2])],u=[U(i[0],c[0]),U(i[1],c[1]),U(i[2],c[2])],d=_n([u[0],u[1],u[2]],2),h=q(d,[1,t.shape[0],t.shape[1],3]);return ae([...n,...s,...r,...i,...l,...c,...u,d,t]),h}var yp=2048,bt=null,rn=null,ql=null,vt,$r={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function nr(e,t){let n;if(Re.browser)if(Re.worker){if(typeof OffscreenCanvas>"u")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document>"u")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof Re.Canvas<"u"?n=new Re.Canvas(e,t):typeof globalThis.Canvas<"u"&&(n=new globalThis.Canvas(e,t));return n}function r1(e,t){let n=t||nr(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Sf(e,t,n=!0){if(!e)return t.debug&&ce("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof tt)&&!(typeof Image<"u"&&e instanceof Image)&&!(typeof Re.Canvas<"u"&&e instanceof Re.Canvas)&&!(typeof globalThis.Canvas<"u"&&e instanceof globalThis.Canvas)&&!(typeof ImageData<"u"&&e instanceof ImageData)&&!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement<"u"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof tt){let s=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)s=on(e,0);else if(e.shape[2]===4){let r=yu(e,[0,0,0],[-1,-1,3]);s=on(r,0),ae(r)}}else e.shape.length===4&&(e.shape[3]===3?s=Hn(e):e.shape[3]===4&&(s=xu(e,[0,0,0,0],[-1,-1,-1,3])));if(s==null||s.shape.length!==4||s.shape[0]!==1||s.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(s.dtype==="int32"){let r=he(s,"float32");ae(s),s=r}return{tensor:s,canvas:t.filter.return?rn:null}}else{if(typeof e.readyState<"u"&&e.readyState<=2)return t.debug&&ce("input stream is not ready"),{tensor:null,canvas:bt};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&ce("cannot determine input dimensions"),{tensor:null,canvas:bt};let a=s,o=r;if(a>yp&&(a=yp,o=Math.trunc(a*r/s)),o>yp&&(o=yp,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!bt||(bt==null?void 0:bt.width)!==a||(bt==null?void 0:bt.height)!==o)&&(bt=nr(a,o));let i=bt.getContext("2d");if(typeof ImageData<"u"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate<"u"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,bt==null?void 0:bt.width,bt==null?void 0:bt.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,bt==null?void 0:bt.width,bt==null?void 0:bt.height),(!rn||bt.width!==rn.width||(bt==null?void 0:bt.height)!==(rn==null?void 0:rn.height))&&(rn=nr(bt.width,bt.height)),t.filter.enabled&&Re.webgl.supported){if(vt||(vt=Re.browser?new xge:null),Re.filter=!!vt,!vt||!vt.add)return t.debug&&ce("input process error: cannot initialize filters"),{tensor:null,canvas:bt};vt.reset(),t.filter.brightness!==0&&vt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&vt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&vt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&vt.add("blur",t.filter.blur),t.filter.saturation!==0&&vt.add("saturation",t.filter.saturation),t.filter.hue!==0&&vt.add("hue",t.filter.hue),t.filter.negative&&vt.add("negative"),t.filter.sepia&&vt.add("sepia"),t.filter.vintage&&vt.add("brownie"),t.filter.sepia&&vt.add("sepia"),t.filter.kodachrome&&vt.add("kodachrome"),t.filter.technicolor&&vt.add("technicolor"),t.filter.polaroid&&vt.add("polaroid"),t.filter.pixelate!==0&&vt.add("pixelate",t.filter.pixelate),vt.get()>0?rn=vt.apply(bt):rn=vt.draw(bt)}else r1(bt,rn),vt&&(vt=null),Re.filter=!!vt;if(!n)return{tensor:null,canvas:rn};if(!rn)throw new Error("canvas error: cannot create output");let l,c=3;if(typeof ImageData<"u"&&e instanceof ImageData||e.data&&e.width&&e.height)if(Re.browser&&js)l=js?js.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let h=new Uint8Array(e.data.buffer);l=lt(h,[e.height,e.width,c],"int32")}else if((!ql||rn.width!==ql.width||rn.height!==ql.height)&&(ql=nr(rn.width,rn.height)),js&&Re.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=js.fromPixels(rn):(ql=r1(rn),l=js.fromPixels(ql));else{let f=r1(rn).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=lt(m,[a,o,c])}if(c===4){let h=yu(l,[0,0,0],[-1,-1,3]);ae(l),l=h}if(!l)throw new Error("input error: cannot create tensor");let u=he(l,"float32"),d=t.filter.equalization?await A8(u):on(u,0);return ae([l,u]),{tensor:d,canvas:t.filter.return?rn:null}}}async function bge(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!$r.inputTensor)$r.inputTensor=Hn(t);else if($r.inputTensor.shape[1]!==t.shape[1]||$r.inputTensor.shape[2]!==t.shape[2])ae($r.inputTensor),$r.inputTensor=Hn(t);else{let s={};s.diff=ge(t,$r.inputTensor),s.squared=U(s.diff,s.diff),s.sum=Se(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ae([$r.inputTensor,s.diff,s.squared,s.sum]),$r.inputTensor=Hn(t),n=a<=(e.cacheSensitivity||0)}return n}async function vge(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||ce("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||ce("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Hn(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Oe.resizeBilinear(n,[t.shape[1],t.shape[2]]):Hn(n),s.diff=ge(s.input1,s.input2),s.squared=U(s.diff,s.diff),s.sum=Se(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ae([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var wge=class{constructor(){if(me(this,"browser"),me(this,"node"),me(this,"worker"),me(this,"platform",""),me(this,"agent",""),me(this,"backends",[]),me(this,"initial"),me(this,"filter"),me(this,"tfjs"),me(this,"offscreen"),me(this,"perfadd",!1),me(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),me(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),me(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),me(this,"cpu",{model:void 0,flags:[]}),me(this,"kernels",[]),me(this,"Canvas"),me(this,"Image"),me(this,"ImageData"),this.browser=typeof navigator<"u",this.node=typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u",this.tfjs={version:tb["tfjs-core"]},this.offscreen=typeof OffscreenCanvas<"u",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope<"u":void 0,typeof navigator<"u"){let e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){let t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process<"u"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(rs().registryFactory),this.wasm.supported=typeof WebAssembly<"u",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&Ms()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let e=nr(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=typeof t<"u",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(Ms()==="webgl"||Ms()==="humangl")){let n=Fa().gpgpu!=="undefined"?await Fa().getGPGPUContext().gl:null;n&&(this.webgl.version=n.getParameter(n.VERSION),this.webgl.renderer=n.getParameter(n.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu<"u",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch{this.webgpu.supported=!1}try{this.kernels=Ai(Ms()).map(n=>n.kernelName.toLowerCase())}catch{}}async updateCPU(){let e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},Re=new wge,Wr={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function kge(e,t){return Wr.debug&&ce("load model fetch:",e,t),fetch(e,t)}function Sge(e){Wr.cacheModels=e.cacheModels,Wr.verbose=e.debug,Wr.modelBasePath=e.modelBasePath}async function Lt(e){let t=YN(Wr.modelBasePath,e||""),n=t.split("/"),s="indexeddb://"+n[n.length-1].replace(".json",""),r=await In.listModels(),a=Wr.cacheModels&&Object.keys(r).includes(s),o=typeof fetch>"u"?{}:{fetchFunc:(l,c)=>kge(l,c)},i=new gx(a?s:t,o);try{i.findIOHandler(),Wr.debug&&ce("model load handler:",i.handler);let l=await i.handler.load();i.loadSync(l),Wr.verbose&&ce("load model:",i.modelUrl)}catch(l){ce("error loading model:",t,l)}if(Wr.cacheModels&&!a)try{let l=await i.save(s);ce("model saved:",s,l)}catch(l){ce("error saving model:",t,l)}return i}var sv="2.6.2",Xs,a1=[],Ige=["white","black","asian","indian","other"],Cge=[15,23,28,35.5,45.5,55.5,65],rv=0,av=0,o1=Number.MAX_SAFE_INTEGER;async function Nge(e){return Re.initial&&(Xs=null),Xs?e.debug&&ce("cached model:",Xs.modelUrl):Xs=await Lt(e.face.gear),Xs}async function ov(e,t,n,s){var r,a;if(!Xs)return{age:0,gender:"unknown",genderScore:0,race:[]};let o=o1<(((r=t.face.gear)==null?void 0:r.skipFrames)||0),i=(((a=t.face.gear)==null?void 0:a.skipTime)||0)>ue()-av;return t.skipAllowed&&i&&o&&rv===s&&a1[n]?(o1++,a1[n]):(o1=0,new Promise(async l=>{var c,u;if(!(Xs==null?void 0:Xs.inputs[0].shape))return;let d={},h=[[0,.1,.9,.9]];d.resize=Oe.cropAndResize(e,h,[0],[Xs.inputs[0].shape[2],Xs.inputs[0].shape[1]]);let p={age:0,gender:"unknown",genderScore:0,race:[]};((c=t.face.gear)==null?void 0:c.enabled)&&([d.age,d.gender,d.race]=Xs.execute(d.resize,["age_output","gender_output","race_output"]));let f=await d.gender.data();p.gender=f[0]>f[1]?"male":"female",p.genderScore=Math.round(100*(f[0]>f[1]?f[0]:f[1]))/100;let m=await d.race.data();for(let y=0;y<m.length;y++)m[y]>(((u=t.face.gear)==null?void 0:u.minConfidence)||.2)&&p.race.push({score:Math.round(100*m[y])/100,race:Ige[y]});p.race.sort((y,b)=>b.score-y.score);let A=Array.from(await d.age.data()).map((y,b)=>[Cge[b],y]).sort((y,b)=>b[1]-y[1]),x=A[0][0];for(let y=1;y<A.length;y++)x+=A[y][1]*(A[y][0]-x);p.age=Math.round(10*x)/10,Object.keys(d).forEach(y=>ae(d[y])),a1[n]=p,rv=s,av=ue(),l(p)}))}var xt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function Tge(){xt.tf255=Ce(255,"float32"),xt.tf1=Ce(1,"float32"),xt.tf2=Ce(2,"float32"),xt.tf05=Ce(.5,"float32"),xt.tf127=Ce(127.5,"float32"),xt.rgb=zt([.2989,.587,.114],"float32")}var As,xp=[],iv=0,lv=0,i1=Number.MAX_SAFE_INTEGER;async function Ege(e){return Re.initial&&(As=null),As?e.debug&&ce("cached model:",As.modelUrl):As=await Lt(e.face.ssrnet.modelPathAge),As}async function uv(e,t,n,s){var r,a,o,i;if(!As)return{age:0};let l=i1<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),c=(((a=t.face.ssrnet)==null?void 0:a.skipTime)||0)>ue()-lv;return t.skipAllowed&&l&&c&&iv===s&&((o=xp[n])==null?void 0:o.age)&&((i=xp[n])==null?void 0:i.age)>0?(i1++,xp[n]):(i1=0,new Promise(async u=>{if(!(As==null?void 0:As.inputs)||!As.inputs[0]||!As.inputs[0].shape)return;let d={};d.resize=Oe.resizeBilinear(e,[As.inputs[0].shape[2],As.inputs[0].shape[1]],!1),d.enhance=U(d.resize,xt.tf255);let h={age:0};if(t.face.ssrnet.enabled&&(d.age=As.execute(d.enhance)),d.age){let p=await d.age.data();h.age=Math.trunc(10*p[0])/10}Object.keys(d).forEach(p=>ae(d[p])),xp[n]=h,iv=s,lv=ue(),u(h)}))}var Ks,bp=[],cv=0,dv=0,l1=Number.MAX_SAFE_INTEGER,u1=[.2989,.587,.114];async function Rge(e){return Re.initial&&(Ks=null),Ks?e.debug&&ce("cached model:",Ks.modelUrl):Ks=await Lt(e.face.ssrnet.modelPathGender),Ks}async function hv(e,t,n,s){var r,a,o,i;if(!Ks)return{gender:"unknown",genderScore:0};let l=l1<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),c=(((a=t.face.ssrnet)==null?void 0:a.skipTime)||0)>ue()-dv;return t.skipAllowed&&l&&c&&cv===s&&((o=bp[n])==null?void 0:o.gender)&&((i=bp[n])==null?void 0:i.genderScore)>0?(l1++,bp[n]):(l1=0,new Promise(async u=>{if(!(Ks==null?void 0:Ks.inputs[0].shape))return;let d={};d.resize=Oe.resizeBilinear(e,[Ks.inputs[0].shape[2],Ks.inputs[0].shape[1]],!1),d.enhance=K(()=>{let[f,m,g]=bn(d.resize,3,3),A=U(f,u1[0]),x=U(m,u1[1]),y=U(g,u1[2]),b=ry([A,x,y]);return U(ge(b,xt.tf05),2)});let h={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(d.gender=Ks.execute(d.enhance));let p=await d.gender.data();h.gender=p[0]>p[1]?"female":"male",h.genderScore=p[0]>p[1]?Math.trunc(100*p[0])/100:Math.trunc(100*p[1])/100,Object.keys(d).forEach(f=>ae(d[f])),bp[n]=h,cv=s,dv=ue(),u(h)}))}var ts,vp=[],c1=Number.MAX_SAFE_INTEGER,pv=0,fv=0;async function _ge(e){var t;return Re.initial&&(ts=null),ts?e.debug&&ce("cached model:",ts.modelUrl):ts=await Lt((t=e.face.antispoof)==null?void 0:t.modelPath),ts}async function mv(e,t,n,s){var r,a;if(!ts)return 0;let o=(((r=t.face.antispoof)==null?void 0:r.skipTime)||0)>ue()-fv,i=c1<(((a=t.face.antispoof)==null?void 0:a.skipFrames)||0);return t.skipAllowed&&o&&i&&pv===s&&vp[n]?(c1++,vp[n]):(c1=0,new Promise(async l=>{let c=Oe.resizeBilinear(e,[(ts==null?void 0:ts.inputs[0].shape)?ts.inputs[0].shape[2]:0,(ts==null?void 0:ts.inputs[0].shape)?ts.inputs[0].shape[1]:0],!1),u=ts==null?void 0:ts.execute(c),d=(await u.data())[0];vp[n]=Math.round(100*d)/100,pv=s,fv=ue(),ae([c,u]),l(vp[n])}))}var Xr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},gv={count:468,mouth:13,symmetryLine:[13,Xr.midwayBetweenEyes[0]]},PA={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Av=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],f0=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],nd=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],$ge=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],Dge=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Fge=[33,133,362,263,1,78,308],YAe=$ge.map(e=>f0[e]),JAe=Dge.map(e=>f0[e]),QAe=Fge.map(e=>f0[e]),Ch=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],m0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],yv=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],xv=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],Pge=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},d1=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=Oe.cropAndResize(t,[a],[0],n),i=ye(o,xt.tf255);return ae(o),i},y8=(e,t)=>{let n=m0(e),s=Ch(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},x8=e=>{let t=m0(e),n=Ch(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},Oge=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},OA=[[1,0,0],[0,1,0],[0,0,1]],Mge=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),zge=(e,t)=>Mge(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),bv=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Ni=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},Lge=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},vv=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Ni(e[r],Lge(t,a)))}return n},b8=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=bv(t[0],t[1]),o=vv(a,r),i=bv(-t[0],-t[1]);return vv(o,i)},Bge=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Ni(t[0],n),-Ni(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},Wge=(e,t)=>[Ni(e,t[0]),Ni(e,t[1])];function Vge(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let c=r*(l+.5);for(let u=0;u<o;u++){let d=r*(u+.5);for(let h=0;h<i;h++)n.push([d,c])}}}return n}function Uge(e,t,n,s,r){let a=Ch(t),o=e.map(p=>[a[0]/r*(p[0]-r/2),a[1]/r*(p[1]-r/2),p[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?b8(n,[0,0]):OA,c=i?o.map(p=>[...Wge(p,l),p[2]]):o,u=i?Bge(s):OA,d=m0(t),h=[Ni(d,u[0]),Ni(d,u[1])];return c.map(p=>[Math.trunc(p[0]+h[0]),Math.trunc(p[1]+h[1]),Math.trunc(p[2]||0)])}function Gge(e,t,n,s){let r=t.landmarks.length>=gv.count?gv.symmetryLine:PA.symmetryLine,a=0,o=OA,i;if(e&&Re.kernels.includes("rotatewithoffset"))if(a=zge(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let c=m0(t),u=[c[0]/n.shape[2],c[1]/n.shape[1]],d=Oe.rotateWithOffset(n,a,0,u);o=b8(-a,c),i=d1(t,d,[s,s]),ae(d)}else i=d1(t,n,[s,s]);else i=d1(t,n,[s,s]);return[a,o,i]}var Hge=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},jge=(e,t)=>{let n=Hge(e),s=Ch(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}},wv=6,qge=1.2,Dr,v8=null,wa=0,sd=null,h1=()=>wa;async function Xge(e){var t;return Re.initial&&(Dr=null),Dr?e.debug&&ce("cached model:",Dr.modelUrl):Dr=await Lt((t=e.face.detector)==null?void 0:t.modelPath),wa=Dr.inputs[0].shape?Dr.inputs[0].shape[2]:0,sd=Ce(wa,"int32"),v8=Gr(Vge(wa)),Dr}function Kge(e){let t={};t.boxStarts=Pe(e,[0,1],[-1,2]),t.centers=ie(t.boxStarts,v8),t.boxSizes=Pe(e,[0,3],[-1,2]),t.boxSizesNormalized=ye(t.boxSizes,sd),t.centersNormalized=ye(t.centers,sd),t.halfBoxSize=ye(t.boxSizesNormalized,xt.tf2),t.starts=ge(t.centersNormalized,t.halfBoxSize),t.ends=ie(t.centersNormalized,t.halfBoxSize),t.startNormalized=U(t.starts,sd),t.endNormalized=U(t.ends,sd);let n=lm([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>ae(t[s])),n}async function Zge(e,t){var n,s,r,a;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let o={};o.resized=Oe.resizeBilinear(e,[wa,wa]),o.div=ye(o.resized,xt.tf127),o.normalized=ge(o.div,xt.tf05);let i=Dr==null?void 0:Dr.execute(o.normalized);if(Array.isArray(i)){let d=i.sort((h,p)=>h.size-p.size);o.concat384=Tt([d[0],d[2]],2),o.concat512=Tt([d[1],d[3]],2),o.concat=Tt([o.concat512,o.concat384],1),o.batch=ft(o.concat,0)}else o.batch=ft(i);ae(i),o.boxes=Kge(o.batch),o.logits=Pe(o.batch,[0,0],[-1,1]),o.sigmoid=bs(o.logits),o.scores=ft(o.sigmoid),o.nms=await Oe.nonMaxSuppressionAsync(o.boxes,o.scores,((n=t.face.detector)==null?void 0:n.maxDetected)||0,((s=t.face.detector)==null?void 0:s.iouThreshold)||0,((r=t.face.detector)==null?void 0:r.minConfidence)||0);let l=await o.nms.array(),c=[],u=await o.scores.data();for(let d=0;d<l.length;d++){let h=u[l[d]];if(h>(((a=t.face.detector)==null?void 0:a.minConfidence)||0)){let p={};p.bbox=Pe(o.boxes,[l[d],0],[1,-1]),p.slice=Pe(o.batch,[l[d],wv-1],[1,-1]),p.squeeze=ft(p.slice),p.landmarks=q(p.squeeze,[wv,-1]);let f=await p.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await p.landmarks.array(),confidence:h},g=Pge(m,[(e.shape[2]||0)/wa,(e.shape[1]||0)/wa]),A=y8(g,t.face.scale||qge),x=x8(A);c.push(x),Object.keys(p).forEach(y=>ae(p[y]))}}return Object.keys(o).forEach(d=>ae(o[d])),c}var w8={};Tf(w8,{connected:()=>S8,kpt:()=>k8});var k8=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],S8={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},kv=224,Yge,Jge=5,wp=[8,16,32,32,32];async function Qge(){let e=[],t=0;for(;t<Jge;){let n=0,s=t;for(;s<wp.length&&wp[s]===wp[t];)n+=2,s++;let r=wp[t],a=Math.ceil(kv/r),o=Math.ceil(kv/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let c=0;c<n;++c)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}Yge={x:zt(e.map(n=>n.x)),y:zt(e.map(n=>n.y))}}function Nh(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function e1e(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function MA(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var I8={initial:!0},ss={detector:null,landmarks:null},Nu={detector:[224,224],landmarks:[256,256]},p1=Number.MAX_SAFE_INTEGER,t1e={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},kp=null,hd,Aa=[[0,0],[0,0],[0,0],[0,0]],Sv=0,Iv=e=>1-1/(1+Math.exp(e));async function n1e(e){if(I8.initial&&(ss.detector=null),!ss.detector&&e.body.detector&&e.body.detector.modelPath){ss.detector=await Lt(e.body.detector.modelPath);let t=Object.values(ss.detector.modelSignature.inputs);Nu.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Nu.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&ss.detector&&ce("cached model:",ss.detector.modelUrl);return await Qge(),ss.detector}async function s1e(e){if(I8.initial&&(ss.landmarks=null),ss.landmarks)e.debug&&ce("cached model:",ss.landmarks.modelUrl);else{ss.landmarks=await Lt(e.body.modelPath);let t=Object.values(ss.landmarks.modelSignature.inputs);Nu.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Nu.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ss.landmarks}async function r1e(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let s;if(hd&&(n.cropped=Oe.cropAndResize(e,[hd],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];Aa=[[0,0],r,a,[0,0]],n.pad=Ir(n.cropped||e,Aa),n.resize=Oe.resizeBilinear(n.pad,[t,t]),s=ye(n.resize,xt.tf255)}else e.shape[1]!==t?(n.resize=Oe.resizeBilinear(n.cropped||e,[t,t]),s=ye(n.resize,xt.tf255)):s=ye(n.cropped||e,xt.tf255);return Object.keys(n).forEach(r=>ae(n[r])),s}function a1e(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+Aa[2][0]+Aa[2][1])/t[0]-Aa[2][0]),Math.trunc(n.position[1]*(t[1]+Aa[1][0]+Aa[1][1])/t[1]-Aa[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(hd)for(let n of e)n.positionRaw=[n.positionRaw[0]+hd[1],n.positionRaw[1]+hd[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}async function o1e(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),s=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(s.position[2]||0))/2;let r=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");r.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function i1e(e,t,n){var s;let r={};[r.ld,r.segmentation,r.heatmap,r.world,r.poseflag]=(s=ss.landmarks)==null?void 0:s.execute(e,t1e.landmarks);let a=(await r.poseflag.data())[0],o=await r.ld.data(),i=await r.world.data();Object.keys(r).forEach(m=>ae(r[m]));let l=[],c=5;for(let m=0;m<o.length/c;m++){let g=Iv(o[c*m+3]),A=Iv(o[c*m+4]),x=Math.trunc(100*g*A*a)/100,y=[o[c*m+0]/Nu.landmarks[0],o[c*m+1]/Nu.landmarks[1],o[c*m+2]+0],b=[Math.trunc(n[0]*y[0]),Math.trunc(n[1]*y[1]),y[2]],v=[i[c*m+0],i[c*m+1],i[c*m+2]+0];l.push({part:k8[m],positionRaw:y,position:b,distance:v,score:x})}if(a<(t.body.minConfidence||0))return null;o1e(l);let u=a1e(l,n),d=u.map(m=>m.position),h=Nh(d,[n[0],n[1]]),p={};for(let[m,g]of Object.entries(S8)){let A=[];for(let x=0;x<g.length-1;x++){let y=u.find(v=>v.part===g[x]),b=u.find(v=>v.part===g[x+1]);y&&b&&A.push([y.position,b.position])}p[m]=A}return{id:0,score:Math.trunc(100*a)/100,box:h.box,boxRaw:h.boxRaw,keypoints:u,annotations:p}}async function Cv(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ue()-Sv,r=p1<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&kp!==null)p1++;else{let a={};a.landmarks=await r1e(e,256),kp=await i1e(a.landmarks,t,n),Object.keys(a).forEach(o=>ae(a[o])),Sv=ue(),p1=0}return kp?[kp]:[]}var Up=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],ya,ci=0,f1=[],Nv=0,m1=Number.MAX_SAFE_INTEGER;async function l1e(e){if(Re.initial&&(ya=null),ya)e.debug&&ce("cached model:",ya.modelUrl);else{ya=await Lt(e.object.modelPath);let t=Object.values(ya.modelSignature.inputs);ci=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ya}async function u1e(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=ft(e);let o=bn(s.squeeze,6,1);s.stack=_n([o[1],o[0],o[3],o[2]],1),s.boxes=ft(s.stack),s.scores=ft(o[4]),s.classes=ft(o[5]),ae([e,...o]),s.nms=await Oe.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let c of Array.from(i)){let u=Math.trunc(100*a[0][c][4])/100,d=a[0][c][5],h=Up[d].label,[p,f]=[a[0][c][0]/ci,a[0][c][1]/ci],m=[p,f,a[0][c][2]/ci-p,a[0][c][3]/ci-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:u,class:d,label:h,box:g,boxRaw:m})}return Object.keys(s).forEach(c=>ae(s[c])),r}async function Tv(e,t){let n=(t.object.skipTime||0)>ue()-Nv,s=m1<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&f1.length>0?(m1++,f1):(m1=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Oe.resizeBilinear(e,[ci,ci]),i=t.object.enabled?ya==null?void 0:ya.execute(o,["tower_0/detections"]):null;Nv=ue(),ae(o);let l=await u1e(i,a,t);f1=l,r(l)}))}var C8={};Tf(C8,{connected:()=>T8,kpt:()=>N8});var N8=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],T8={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Un,Ev=0,kn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},g1=Number.MAX_SAFE_INTEGER;async function c1e(e){return Re.initial&&(Un=null),Un?e.debug&&ce("cached model:",Un.modelUrl):Un=await Lt(e.body.modelPath),Un}async function d1e(e,t){let[n,s]=e.shape,r=q(e,[s*n]),a=Tn(r,0),o=(await a.data())[0];if(ae([r,a]),o>t){let i=jr(r,0),l=gm(i,n),c=(await l.data())[0],u=ye(i,Ce(n,"int32")),d=(await u.data())[0];return ae([l,u]),[c,d,o]}return[0,0,o]}async function Rv(e,t){let n=(t.body.skipTime||0)>ue()-Ev,s=g1<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(kn.keypoints).length>0?(g1++,[kn]):(g1=0,new Promise(async r=>{var a;let o=K(()=>{if(!(Un==null?void 0:Un.inputs[0].shape))return null;let h=Oe.resizeBilinear(e,[Un.inputs[0].shape[2],Un.inputs[0].shape[1]],!1),p=U(h,xt.tf2);return ge(p,xt.tf1)}),i;if(t.body.enabled&&(i=Un==null?void 0:Un.execute(o)),Ev=ue(),ae(o),i){kn.keypoints.length=0;let h=i.squeeze();ae(i);let p=h.unstack(2);ae(h);for(let f=0;f<p.length;f++){let[m,g,A]=await d1e(p[f],t.body.minConfidence);A>(((a=t.body)==null?void 0:a.minConfidence)||0)&&kn.keypoints.push({score:Math.round(100*A)/100,part:N8[f],positionRaw:[m/Un.inputs[0].shape[2],g/Un.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/Un.inputs[0].shape[2]),Math.round(e.shape[1]*g/Un.inputs[0].shape[1])]})}p.forEach(f=>ae(f))}kn.score=kn.keypoints.reduce((h,p)=>p.score>h?p.score:h,0);let l=kn.keypoints.map(h=>h.position[0]),c=kn.keypoints.map(h=>h.position[1]);kn.box=[Math.min(...l),Math.min(...c),Math.max(...l)-Math.min(...l),Math.max(...c)-Math.min(...c)];let u=kn.keypoints.map(h=>h.positionRaw[0]),d=kn.keypoints.map(h=>h.positionRaw[1]);kn.boxRaw=[Math.min(...u),Math.min(...d),Math.max(...u)-Math.min(...u),Math.max(...d)-Math.min(...d)];for(let[h,p]of Object.entries(T8)){let f=[];for(let m=0;m<p.length-1;m++){let g=kn.keypoints.find(x=>x.part===p[m]),A=kn.keypoints.find(x=>x.part===p[m+1]);g&&A&&g.score>(t.body.minConfidence||0)&&A.score>(t.body.minConfidence||0)&&f.push([g.position,A.position])}kn.annotations[h]=f}r([kn])}))}var h1e=["angry","disgust","fear","happy","sad","surprise","neutral"],Zs,Sp=[],_v=0,$v=0,A1=Number.MAX_SAFE_INTEGER;async function p1e(e){var t;return Re.initial&&(Zs=null),Zs?e.debug&&ce("cached model:",Zs.modelUrl):Zs=await Lt((t=e.face.emotion)==null?void 0:t.modelPath),Zs}async function Dv(e,t,n,s){var r,a;if(!Zs)return[];let o=A1<(((r=t.face.emotion)==null?void 0:r.skipFrames)||0),i=(((a=t.face.emotion)==null?void 0:a.skipTime)||0)>ue()-$v;return t.skipAllowed&&i&&o&&_v===s&&Sp[n]&&Sp[n].length>0?(A1++,Sp[n]):(A1=0,new Promise(async l=>{var c,u;let d=[];if((c=t.face.emotion)==null?void 0:c.enabled){let h={},p=(Zs==null?void 0:Zs.inputs[0].shape)?Zs.inputs[0].shape[2]:0;h.resize=Oe.resizeBilinear(e,[p,p],!1),h.channels=U(h.resize,xt.rgb),h.grayscale=Se(h.channels,3,!0),h.grayscaleSub=ge(h.grayscale,xt.tf05),h.grayscaleMul=U(h.grayscaleSub,xt.tf2),h.emotion=Zs==null?void 0:Zs.execute(h.grayscaleMul),$v=ue();let f=await h.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((u=t.face.emotion)==null?void 0:u.minConfidence)||0)&&d.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:h1e[m]});d.sort((m,g)=>g.score-m.score),Object.keys(h).forEach(m=>ae(h[m]))}Sp[n]=d,_v=s,l(d)}))}var Fs,y1=[],Fv=0,Pv=0,Ov=Number.MAX_SAFE_INTEGER;async function f1e(e){return Re.initial&&(Fs=null),Fs?e.debug&&ce("cached model:",Fs.modelUrl):Fs=await Lt(e.face.mobilefacenet.modelPath),Fs}async function Mv(e,t,n,s){var r,a;if(!Fs)return[];let o=Ov<(((r=t.face.embedding)==null?void 0:r.skipFrames)||0),i=(((a=t.face.embedding)==null?void 0:a.skipTime)||0)>ue()-Pv;return t.skipAllowed&&i&&o&&Fv===s&&y1[n]?(Ov++,y1[n]):new Promise(async l=>{var c;let u=[];if(((c=t.face.embedding)==null?void 0:c.enabled)&&(Fs==null?void 0:Fs.inputs[0].shape)){let d={};d.crop=Oe.resizeBilinear(e,[Fs.inputs[0].shape[2],Fs.inputs[0].shape[1]],!1),d.data=Fs==null?void 0:Fs.execute(d.crop);let h=await d.data.data();u=Array.from(h)}y1[n]=u,Fv=s,Pv=ue(),l(u)})}var Fr,Na=0,m1e=2.3,x1=Xr.leftEyeLower0,b1=Xr.rightEyeLower0,ru={leftBounds:[x1[0],x1[x1.length-1]],rightBounds:[b1[0],b1[b1.length-1]]},Tu={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function g1e(e){var t;return Re.initial&&(Fr=null),Fr?e.debug&&ce("cached model:",Fr.modelUrl):Fr=await Lt((t=e.face.iris)==null?void 0:t.modelPath),Na=Fr.inputs[0].shape?Fr.inputs[0].shape[2]:0,Na===-1&&(Na=64),Fr}function Ip(e,t,n,s){for(let r=0;r<Av.length;r++){let{key:a,indices:o}=Av[r],i=Xr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var A1e=e=>{let t=e[ru.leftBounds[0]][2],n=e[ru.rightBounds[0]][2];return t-n},zv=(e,t,n,s,r,a=!1)=>{let o=x8(y8(Oge([e[n],e[s]]),m1e)),i=Ch(o),l=Oe.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[Na,Na]);if(a&&Re.kernels.includes("flipleftright")){let c=Oe.flipLeftRight(l);ae(l),l=c}return{box:o,boxSize:i,crop:l}},Lv=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<Tu.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/Na:o/Na)*n[0]+t.startPoint[0],i/Na*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(Tu.index)}},Bv=(e,t,n)=>{let s=e[Xr[`${n}EyeUpper0`][Tu.upperCenter]][2],r=e[Xr[`${n}EyeLower0`][Tu.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function y1e(e,t,n,s){if(!Fr)return n.debug&&ce("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=zv(e,t,ru.leftBounds[0],ru.leftBounds[1],s,!0),{box:i,boxSize:l,crop:c}=zv(e,t,ru.rightBounds[0],ru.rightBounds[1],s,!0),u=Tt([o,c]);ae(o),ae(c);let d=Fr.execute(u);ae(u);let h=await d.data();ae(d);let p=h.slice(0,Tu.numCoordinates*3),{rawCoords:f,iris:m}=Lv(p,r,a,!0),g=h.slice(Tu.numCoordinates*3),{rawCoords:A,iris:x}=Lv(g,i,l),y=A1e(e);Math.abs(y)<30?(Ip(e,f,"left",null),Ip(e,A,"right",null)):y<1?Ip(e,f,"left",["EyeUpper0","EyeLower0"]):Ip(e,A,"right",["EyeUpper0","EyeLower0"]);let b=Bv(e,m,"left"),v=Bv(e,x,"right");return e.concat(b).concat(v)}var hr={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},Pr=null,nu=0;async function x1e(e,t){var n,s,r,a,o,i,l,c,u;let d=(((n=t.face.detector)==null?void 0:n.skipTime)||0)>ue()-hr.timestamp,h=hr.skipped<(((s=t.face.detector)==null?void 0:s.skipFrames)||0);!t.skipAllowed||!d||!h||hr.boxes.length===0?(hr.boxes=await Zge(e,t),hr.timestamp=ue(),hr.skipped=0):hr.skipped++;let p=[],f=[],m=0;for(let g=0;g<hr.boxes.length;g++){let A=hr.boxes[g],x=0,y,b={id:m++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([x,y,b.tensor]=Gge((r=t.face.detector)==null?void 0:r.rotation,A,e,((a=t.face.mesh)==null?void 0:a.enabled)?nu:h1()),(o=t==null?void 0:t.filter)==null?void 0:o.equalization){let v=await A8(b.tensor);ae(b.tensor),b.tensor=v}if(b.boxScore=Math.round(100*A.confidence)/100,(i=t.face.mesh)==null?void 0:i.enabled)if(!Pr)t.debug&&ce("face mesh detection requested, but model is not loaded");else{let[v,C,S]=Pr.execute(b.tensor),E=await C.data();b.faceScore=Math.round(100*E[0])/100;let R=q(S,[-1,3]),P=await R.array();if(ae([S,R,C,v]),b.faceScore<(((l=t.face.detector)==null?void 0:l.minConfidence)||1))A.confidence=b.faceScore;else{((c=t.face.iris)==null?void 0:c.enabled)&&(P=await y1e(P,b.tensor,t,nu)),b.mesh=Uge(P,A,x,y,nu),b.meshRaw=b.mesh.map(_=>[_[0]/(e.shape[2]||0),_[1]/(e.shape[1]||0),(_[2]||0)/nu]);for(let _ of Object.keys(Xr))b.annotations[_]=Xr[_].map(N=>b.mesh[N]);b.score=b.faceScore;let $={...jge(b.mesh,A),confidence:A.confidence,landmarks:A.landmarks};b.box=yv($,e),b.boxRaw=xv($,e),f.push($)}}else{b.box=yv(A,e),b.boxRaw=xv(A,e),b.score=b.boxScore,b.mesh=A.landmarks.map(v=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*v[0]/h1(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*v[1]/h1()]),b.meshRaw=b.mesh.map(v=>[v[0]/(e.shape[2]||0),v[1]/(e.shape[1]||0),(v[2]||0)/nu]);for(let v of Object.keys(PA))b.annotations[v]=[b.mesh[PA[v]]]}b.score>(((u=t.face.detector)==null?void 0:u.minConfidence)||1)?p.push(b):ae(b.tensor)}return hr.boxes=f,p}async function b1e(e){var t;return Re.initial&&(Pr=null),Pr?e.debug&&ce("cached model:",Pr.modelUrl):Pr=await Lt((t=e.face.mesh)==null?void 0:t.modelPath),nu=Pr.inputs[0].shape?Pr.inputs[0].shape[2]:0,Pr}var v1e=nd,w1e=f0,Os,Cp=[],Wv=0,Vv=0,v1=Number.MAX_SAFE_INTEGER;async function k1e(e){var t;return Re.initial&&(Os=null),Os?e.debug&&ce("cached model:",Os.modelUrl):Os=await Lt((t=e.face.description)==null?void 0:t.modelPath),Os}function E8(e){let t=e.image||e.tensor||e;if(!(Os==null?void 0:Os.inputs[0].shape))return t;let n=Oe.resizeBilinear(t,[Os.inputs[0].shape[2],Os.inputs[0].shape[1]],!1),s=U(n,xt.tf255);return ae(n),s}async function Uv(e,t,n,s){var r,a,o,i;if(!Os)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let l=v1<(((r=t.face.description)==null?void 0:r.skipFrames)||0),c=(((a=t.face.description)==null?void 0:a.skipTime)||0)>ue()-Wv;return t.skipAllowed&&l&&c&&Vv===s&&((o=Cp[n])==null?void 0:o.age)&&((i=Cp[n])==null?void 0:i.age)>0?(v1++,Cp[n]):(v1=0,new Promise(async u=>{var d,h;let p={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((d=t.face.description)==null?void 0:d.enabled){let f=E8(e),m=Os==null?void 0:Os.execute(f);Wv=ue(),ae(f);let A=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(A[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(p.gender=A[0]<=.5?"female":"male",p.genderScore=Math.min(.99,x));let y=jr(m.find(R=>R.shape[1]===100),1),b=(await y.data())[0];ae(y);let C=await m.find(R=>R.shape[1]===100).data();p.age=Math.round(C[b-1]>C[b+1]?10*b-100*C[b-1]:10*b+100*C[b+1])/10;let S=m.find(R=>R.shape[1]===1024),E=S?await S.data():[];p.descriptor=Array.from(E),m.forEach(R=>ae(R))}Cp[n]=p,Vv=s,u(p)}))}function nb(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function If(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function S1e(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Oe.cropAndResize(t,a,[0],n)}function I1e(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function w1(e,t=1.5){let n=If(e),s=nb(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function k1(e){let t=If(e),n=nb(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function C1e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function N1e(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return C1e(n)}var Gv=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function Ti(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function T1e(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function Hv(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Ti(e[r],T1e(t,a)))}return n}function jv(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=Gv(t[0],t[1]),o=Hv(a,r),i=Gv(-t[0],-t[1]);return Hv(o,i)}function E1e(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Ti(t[0],n),-Ti(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function qv(e,t){return[Ti(e,t[0]),Ti(e,t[1])]}var R1e=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],_1e=class{constructor(e){me(this,"model"),me(this,"anchors"),me(this,"anchorsTensor"),me(this,"inputSize"),me(this,"inputSizeTensor"),me(this,"doubleInputSizeTensor"),this.model=e,this.anchors=R1e.map(t=>[t.x,t.y]),this.anchorsTensor=Gr(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=zt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=zt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(e){let t={};t.boxOffsets=Pe(e,[0,0],[-1,2]),t.boxSizes=Pe(e,[0,2],[-1,2]),t.div=ye(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=ie(t.div,this.anchorsTensor),t.halfBoxSizes=ye(t.boxSizes,this.doubleInputSizeTensor),t.sub=ge(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=U(t.sub,this.inputSizeTensor),t.add=ie(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=U(t.add,this.inputSizeTensor);let n=lm([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(s=>ae(t[s])),n}normalizeLandmarks(e,t){let n={};n.reshape=q(e,[-1,7,2]),n.div=ye(n.reshape,this.inputSizeTensor),n.landmarks=ie(n.div,this.anchors[t]);let s=U(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach(r=>ae(n[r])),s}async predict(e,t){let n={};n.resize=Oe.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=ye(n.resize,xt.tf127),n.image=ge(n.div,xt.tf1),n.batched=this.model.execute(n.image),n.predictions=ft(n.batched),n.slice=Pe(n.predictions,[0,0],[-1,1]),n.sigmoid=bs(n.slice),n.scores=ft(n.sigmoid);let s=await n.scores.data();n.boxes=Pe(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await Oe.nonMaxSuppressionAsync(n.norm,n.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);let r=await n.nms.array(),a=[];for(let o of r){let i={};i.box=Pe(n.norm,[o,0],[1,-1]),i.slice=Pe(n.predictions,[o,5],[1,14]),i.norm=this.normalizeLandmarks(i.slice,o),i.palmLandmarks=q(i.norm,[-1,2]);let l=await i.box.data(),c=l.slice(0,2),u=l.slice(2,4),d=await i.palmLandmarks.array(),h={startPoint:c,endPoint:u,palmLandmarks:d,confidence:s[o]},p=I1e(h,[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);a.push(p),Object.keys(i).forEach(f=>ae(i[f]))}return Object.keys(n).forEach(o=>ae(n[o])),a}},$1e=5,Xv=1.65,Kv=[0,5,9,13,17,1,2],D1e=0,F1e=2,Zv=0,P1e=class{constructor(e,t){me(this,"handDetector"),me(this,"handPoseModel"),me(this,"inputSize"),me(this,"storedBoxes"),me(this,"skipped"),me(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){let t=e.map(a=>a[0]),n=e.map(a=>a[1]),s=[Math.min(...t),Math.min(...n)],r=[Math.max(...t),Math.max(...n)];return{startPoint:s,endPoint:r}}getBoxForPalmLandmarks(e,t){let n=e.map(r=>qv([...r,1],t)),s=this.calculateLandmarksBoundingBox(n);return w1(k1(s),$1e)}getBoxForHandLandmarks(e){let t=this.calculateLandmarksBoundingBox(e),n=w1(k1(t),Xv);n.palmLandmarks=[];for(let s=0;s<Kv.length;s++)n.palmLandmarks.push(e[Kv[s]].slice(0,2));return n}transformRawCoords(e,t,n,s){let r=nb(t),a=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],o=e.map(h=>[a[0]*(h[0]-this.inputSize/2),a[1]*(h[1]-this.inputSize/2),a[2]*h[2]]),i=jv(n,[0,0]),l=o.map(h=>[...qv(h,i),h[2]]),c=E1e(s),u=[...If(t),1],d=[Ti(u,c[0]),Ti(u,c[1])];return l.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2])])}async estimateHands(e,t){let n=!1,s,r=(t.hand.skipTime||0)>ue()-Zv,a=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&a&&(s=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,s&&s.length>0&&(s.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...s],this.storedBoxes.length>0&&(n=!0));let o=[];for(let i=0;i<this.storedBoxes.length;i++){let l=this.storedBoxes[i];if(!!l)if(t.hand.landmarks){let c=t.hand.rotation?N1e(l.palmLandmarks[D1e],l.palmLandmarks[F1e]):0,u=If(l),d=[u[0]/e.shape[2],u[1]/e.shape[1]],h=t.hand.rotation&&Re.kernels.includes("rotatewithoffset")?Oe.rotateWithOffset(e,c,0,d):e.clone(),p=jv(-c,u),f=n?this.getBoxForPalmLandmarks(l.palmLandmarks,p):l,m=S1e(f,h,[this.inputSize,this.inputSize]),g=ye(m,xt.tf255);ae(m),ae(h);let[A,x]=this.handPoseModel.execute(g);Zv=ue(),ae(g);let y=(await A.data())[0];if(ae(A),y>=t.hand.minConfidence/4){let b=q(x,[-1,3]),v=await b.array();ae(x),ae(b);let C=this.transformRawCoords(v,f,c,p),S=this.getBoxForHandLandmarks(C);this.storedBoxes[i]={...S,confidence:y};let E={landmarks:C,confidence:y,boxConfidence:l.confidence,fingerConfidence:y,box:{topLeft:S.startPoint,bottomRight:S.endPoint}};o.push(E)}else this.storedBoxes[i]=null;ae(x)}else{let c=w1(k1(l),Xv),u={confidence:l.confidence,boxConfidence:l.confidence,fingerConfidence:0,box:{topLeft:c.startPoint,bottomRight:c.endPoint},landmarks:[]};o.push(u)}}return this.storedBoxes=this.storedBoxes.filter(i=>i!==null),this.detectedHands=o.length,o.length>t.hand.maxDetected&&(o.length=t.hand.maxDetected),o}},ls={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>ls.nameMapping[e],getPoints:e=>ls.pointsMapping[e]},cu={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>cu.nameMapping[e]},Wt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Wt.nameMapping[e]},Th=class{constructor(e){me(this,"name"),me(this,"curls"),me(this,"directions"),me(this,"weights"),me(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){typeof this.curls[e]>"u"&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;let n=this.weights.reduce((s,r)=>s+r,0);this.weightsRelative=this.weights.map(s=>s*5/n)}matchAgainst(e,t){let n=0;for(let s in e){let r=e[s],a=this.curls[s];if(typeof a>"u"){n+=this.weightsRelative[s];continue}for(let[o,i]of a)if(r===o){n+=i*this.weightsRelative[s];break}}for(let s in t){let r=t[s],a=this.directions[s];if(typeof a>"u"){n+=this.weightsRelative[s];continue}for(let[o,i]of a)if(r===o){n+=i*this.weightsRelative[s];break}}return n/10}},{thumb:ur,index:ra,middle:aa,ring:Nl,pinky:Tl}=ls,{none:cr,half:O1e,full:dr}=cu,{verticalUp:Ic,verticalDown:eye,horizontalLeft:sb,horizontalRight:M1e,diagonalUpRight:z1e,diagonalUpLeft:Cc,diagonalDownRight:tye,diagonalDownLeft:nye}=Wt,Ta=new Th("thumbs up");Ta.curl(ur,cr,1);Ta.direction(ur,Ic,1);Ta.direction(ur,Cc,.25);Ta.direction(ur,z1e,.25);for(let e of[ls.index,ls.middle,ls.ring,ls.pinky])Ta.curl(e,dr,1),Ta.direction(e,sb,1),Ta.direction(e,M1e,1);var Xt=new Th("victory");Xt.curl(ur,O1e,.5);Xt.curl(ur,cr,.5);Xt.direction(ur,Ic,1);Xt.direction(ur,Cc,1);Xt.curl(ra,cr,1);Xt.direction(ra,Ic,.75);Xt.direction(ra,Cc,1);Xt.curl(aa,cr,1);Xt.direction(aa,Ic,1);Xt.direction(aa,Cc,.75);Xt.curl(Nl,dr,1);Xt.direction(Nl,Ic,.2);Xt.direction(Nl,Cc,1);Xt.direction(Nl,sb,.2);Xt.curl(Tl,dr,1);Xt.direction(Tl,Ic,.2);Xt.direction(Tl,Cc,1);Xt.direction(Tl,sb,.2);Xt.weight(ra,2);Xt.weight(aa,2);var Go=new Th("point");Go.curl(ur,dr,1);Go.curl(ra,cr,.5);Go.curl(aa,dr,.5);Go.curl(Nl,dr,.5);Go.curl(Tl,dr,.5);Go.weight(ra,2);Go.weight(aa,2);var Ho=new Th("middle finger");Ho.curl(ur,cr,1);Ho.curl(ra,dr,.5);Ho.curl(aa,dr,.5);Ho.curl(Nl,dr,.5);Ho.curl(Tl,dr,.5);Ho.weight(ra,2);Ho.weight(aa,2);var Nc=new Th("open palm");Nc.curl(ur,cr,.75);Nc.curl(ra,cr,.75);Nc.curl(aa,cr,.75);Nc.curl(Nl,cr,.75);Nc.curl(Tl,cr,.75);var L1e=[Ta,Xt,Go,Ho,Nc],B1e=.7,oi={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function Yv(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function R8(e,t){if(!e||!t)return[0,0];let n=Yv(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=Yv(e[1],e[2],t[1],t[2]);return[n,s]}function Jv(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function W1e(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],h=Math.sqrt(s*s+o*o+c*c),p=Math.sqrt(r*r+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+h*h-p*p)/(2*f*h);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let A;return g>oi.NO_CURL_START_LIMIT?A=cu.none:g>oi.HALF_CURL_START_LIMIT?A=cu.half:A=cu.full,A}function _8(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Wt.horizontalLeft:r=Wt.horizontalRight:s===Math.abs(t)?t>0?r=Wt.horizontalLeft:r=Wt.horizontalRight:n>0?r=Wt.horizontalLeft:r=Wt.horizontalRight,r}function $8(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Wt.verticalDown:r=Wt.verticalUp:s===Math.abs(t)?t<0?r=Wt.verticalDown:r=Wt.verticalUp:n<0?r=Wt.verticalDown:r=Wt.verticalUp,r}function V1e(e,t,n,s,r,a,o,i){let l,c=$8(e,t,n,s),u=_8(r,a,o,i);return c===Wt.verticalUp?u===Wt.horizontalLeft?l=Wt.diagonalUpLeft:l=Wt.diagonalUpRight:u===Wt.horizontalLeft?l=Wt.diagonalDownLeft:l=Wt.diagonalDownRight,l}function U1e(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),h=0,p=0,f=0,m=d/(u+1e-5);m>1.5?h+=oi.DISTANCE_VOTE_POWER:m>.66?p+=oi.DISTANCE_VOTE_POWER:f+=oi.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),A=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+c*c),y=Math.max(g,A,x),b=e[0],v=e[1],C=n[0],S=n[1];y===g?(C=n[0],S=n[1]):y===x&&(b=t[0],v=t[1]);let P=R8([b,v],[C,S]),$=Jv(P,oi.TOTAL_ANGLE_VOTE_POWER);h+=$[0],p+=$[1],f+=$[2];for(let N of s){let O=Jv(N,oi.SINGLE_ANGLE_VOTE_POWER);h+=O[0],p+=O[1],f+=O[2]}let _;return h===Math.max(h,p,f)?_=$8(l,i,c,d):f===Math.max(p,f)?_=_8(a,r,o,u):_=V1e(l,i,c,d,a,r,o,u),_}function D8(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of ls.all){let o=ls.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],h=R8(u,d),p=h[0],f=h[1];i.push(p),l.push(f)}t.push(i),n.push(l)}for(let a of ls.all){let o=a===ls.thumb?1:0,i=ls.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=W1e(l,c,u),h=U1e(l,c,u,t[a].slice(o));s[a]=d,r[a]=h}return{curls:s,directions:r}}function F8(e){if(!e||e.length===0)return null;let t=D8(e),n={};for(let s of ls.all)n[ls.getName(s)]={curl:cu.getName(t.curls[s]),direction:Wt.getName(t.directions[s])};return n}function G1e(e){let t=[];if(!e||e.length===0)return t;let n=D8(e);for(let s of L1e){let r=s.matchAgainst(n.curls,n.directions);r>=B1e&&t.push({name:s.name,confidence:r})}return t}var Qv={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Xl,Kl,P8;async function e3(e,t){let n=await P8.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let u of Object.keys(Qv))a[u]=Qv[u].map(d=>n[r].landmarks[d]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let c=F8(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return s}async function t3(e){var t,n;Re.initial&&(Xl=null,Kl=null),!Xl||!Kl?[Xl,Kl]=await Promise.all([e.hand.enabled?Lt((t=e.hand.detector)==null?void 0:t.modelPath):null,e.hand.landmarks?Lt((n=e.hand.skeleton)==null?void 0:n.modelPath):null]):(e.debug&&ce("cached model:",Xl.modelUrl),e.debug&&ce("cached model:",Kl.modelUrl));let s=new _1e(Xl);return P8=new P1e(s,Kl),[Xl,Kl]}var Yt=[null,null],H1e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ka=[[0,0],[0,0]],j1e=["hand","fist","pinch","point","face","tip","pinchtip"],n3=4,s3=1.6,q1e=512,X1e=1.4,Np=Number.MAX_SAFE_INTEGER,S1=0,Ur=[0,0],Bt={boxes:[],hands:[]},r3={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function K1e(e){var t;if(Re.initial&&(Yt[0]=null),Yt[0])e.debug&&ce("cached model:",Yt[0].modelUrl);else{j8(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Yt[0]=await Lt((t=e.hand.detector)==null?void 0:t.modelPath);let n=Object.values(Yt[0].modelSignature.inputs);ka[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ka[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return Yt[0]}async function Z1e(e){var t;if(Re.initial&&(Yt[1]=null),Yt[1])e.debug&&ce("cached model:",Yt[1].modelUrl);else{Yt[1]=await Lt((t=e.hand.skeleton)==null?void 0:t.modelPath);let n=Object.values(Yt[1].modelSignature.inputs);ka[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ka[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return Yt[1]}async function Y1e(e,t){let n=[];if(!e||!Yt[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,q1e),o=Math.round(a*r/8)*8;s.resize=Oe.resizeBilinear(e,[a,o]),s.cast=he(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await Yt[0].executeAsync(s.cast,H1e),s.boxes=ft(s.rawBoxes,[0,2]),s.scores=ft(s.rawScores,[0]);let i=Cs(s.scores,1);ae(i[n3]),i.splice(n3,1),s.filtered=_n(i,1),ae(i),s.max=Tn(s.filtered,1),s.argmax=jr(s.filtered,1);let l=0;s.nms=await Oe.nonMaxSuppressionAsync(s.boxes,s.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let c=await s.nms.data(),u=await s.max.data(),d=await s.argmax.data();for(let h of Array.from(c)){let p=Pe(s.boxes,h,1),f=await p.data();ae(p);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=MA(m,X1e),A=[Math.trunc(m[0]*Ur[0]),Math.trunc(m[1]*Ur[1]),Math.trunc(m[2]*Ur[0]),Math.trunc(m[3]*Ur[1])],x=u[h],y=j1e[d[h]],b={id:l++,score:x,box:A,boxRaw:g,label:y};n.push(b)}return Object.keys(s).forEach(h=>ae(s[h])),n.sort((h,p)=>p.score-h.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function I1(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Yt[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Oe.cropAndResize(e,[a],[0],[ka[1][0],ka[1][1]],"bilinear"),r.div=ye(r.crop,xt.tf255),[r.score,r.keypoints]=Yt[1].execute(r.div,["Identity_1","Identity"]);let o=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){s.fingerScore=i,r.reshaped=q(r.keypoints,[-1,3]);let u=(await r.reshaped.array()).map(d=>[d[0]/ka[1][1],d[1]/ka[1][0],d[2]||0]).map(d=>[d[0]*t.boxRaw[2],d[1]*t.boxRaw[3],d[2]||0]);s.keypoints=u.map(d=>[Ur[0]*(d[0]+t.boxRaw[0]),Ur[1]*(d[1]+t.boxRaw[1]),d[2]||0]),s.landmarks=F8(s.keypoints);for(let d of Object.keys(r3))s.annotations[d]=r3[d].map(h=>s.landmarks&&s.keypoints[h]?s.keypoints[h]:null)}Object.keys(r).forEach(l=>ae(r[l]))}return s}async function a3(e,t){var n,s;if(!Yt[0]||!Yt[1]||!((n=Yt[0])==null?void 0:n.inputs[0].shape)||!((s=Yt[1])==null?void 0:s.inputs[0].shape))return[];Ur=[e.shape[2]||0,e.shape[1]||0],Np++;let r=(t.hand.skipTime||0)>ue()-S1,a=Np<(t.hand.skipFrames||0);return t.skipAllowed&&r&&a?Bt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ue()-S1,l=Np<3*(t.hand.skipFrames||0);t.skipAllowed&&Bt.hands.length===t.hand.maxDetected?Bt.hands=await Promise.all(Bt.boxes.map(u=>I1(e,u,t))):t.skipAllowed&&i&&l&&Bt.hands.length>0?Bt.hands=await Promise.all(Bt.boxes.map(u=>I1(e,u,t))):(Bt.boxes=await Y1e(e,t),S1=ue(),Bt.hands=await Promise.all(Bt.boxes.map(u=>I1(e,u,t))),Np=0);let c=[...Bt.boxes];if(Bt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<Bt.hands.length;u++){let d=e1e(Bt.hands[u].keypoints,Ur);if(d.box[2]/(e.shape[2]||1)>.05&&d.box[3]/(e.shape[1]||1)>.05&&Bt.hands[u].fingerScore&&Bt.hands[u].fingerScore>(t.hand.minConfidence||0)){let h=MA(d.box,s3),p=MA(d.boxRaw,s3);Bt.boxes.push({...c[u],box:h,boxRaw:p})}}for(let u=0;u<Bt.hands.length;u++){let d=Nh(Bt.hands[u].keypoints,Ur);Bt.hands[u].box=d.box,Bt.hands[u].boxRaw=d.boxRaw}o(Bt.hands)})}var ns,Tp=[],C1=Number.MAX_SAFE_INTEGER,o3=0,i3=0;async function J1e(e){var t;return Re.initial&&(ns=null),ns?e.debug&&ce("cached model:",ns.modelUrl):ns=await Lt((t=e.face.liveness)==null?void 0:t.modelPath),ns}async function l3(e,t,n,s){var r,a;if(!ns)return 0;let o=(((r=t.face.liveness)==null?void 0:r.skipTime)||0)>ue()-i3,i=C1<(((a=t.face.liveness)==null?void 0:a.skipFrames)||0);return t.skipAllowed&&o&&i&&o3===s&&Tp[n]?(C1++,Tp[n]):(C1=0,new Promise(async l=>{let c=Oe.resizeBilinear(e,[(ns==null?void 0:ns.inputs[0].shape)?ns.inputs[0].shape[2]:0,(ns==null?void 0:ns.inputs[0].shape)?ns.inputs[0].shape[1]:0],!1),u=ns==null?void 0:ns.execute(c),d=(await u.data())[0];Tp[n]=Math.round(100*d)/100,o3=s,i3=ue(),ae([c,u]),l(Tp[n])}))}var O8={};Tf(O8,{connected:()=>ab,horizontal:()=>M8,kpt:()=>rb,relative:()=>L8,vertical:()=>z8});var rb=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],M8=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],z8=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],L8=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],ab={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},u3=.005,as={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function B8(e){for(let t of M8){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of z8){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of L8){let s=e.keypoints.findIndex(c=>c&&c.part===t[0]),r=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=c}}}function Q1e(e){for(let t=0;t<e.length;t++)if(e[t]&&as.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-as.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-as.keypoints[t].positionRaw[1])];n[0]<u3&&n[1]<u3?e[t]=as.keypoints[t]:as.keypoints[t]=e[t]}else as.keypoints[t]=e[t];return e}function eAe(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;as.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Ir(e,as.padding),n.resize=Oe.resizeBilinear(n.pad,[t,t]);let s=he(n.resize,"int32");return Object.keys(n).forEach(r=>ae(n[r])),s}function tAe(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+as.padding[2][0]+as.padding[2][1])/t[0]-as.padding[2][0],s.position[1]*(t[1]+as.padding[1][0]+as.padding[1][1])/t[1]-as.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=Nh(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Ps,Gp=0,N1=Number.MAX_SAFE_INTEGER,Qo={boxes:[],bodies:[],last:0};async function nAe(e){return Re.initial&&(Ps=null),Ps?e.debug&&ce("cached model:",Ps.modelUrl):(j8(["size"],e),Ps=await Lt(e.body.modelPath)),Gp=Ps.inputs[0].shape?Ps.inputs[0].shape[2]:0,Gp<64&&(Gp=256),Ps}async function sAe(e,t,n){let s=e[0][0],r=[],a=0;for(let u=0;u<s.length;u++)if(a=s[u][2],a>t.body.minConfidence){let d=[s[u][1],s[u][0]];r.push({score:Math.round(100*a)/100,part:rb[u],positionRaw:d,position:[Math.round((n.shape[2]||0)*d[0]),Math.round((n.shape[1]||0)*d[1])]})}a=r.reduce((u,d)=>d.score>u?d.score:u,0);let o=[],i=Nh(r.map(u=>u.position),[n.shape[2],n.shape[1]]),l={};for(let[u,d]of Object.entries(ab)){let h=[];for(let p=0;p<d.length-1;p++){let f=r.find(g=>g.part===d[p]),m=r.find(g=>g.part===d[p+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&h.push([f.position,m.position])}l[u]=h}let c={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return B8(c),o.push(c),o}async function rAe(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let d=0;d<17;d++){let h=a[3*d+2];if(h>t.body.minConfidence){let p=[a[3*d+1],a[3*d+0]];i.push({part:rb[d],score:Math.round(100*h)/100,positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}}let l=Nh(i.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,h]of Object.entries(ab)){let p=[];for(let f=0;f<h.length-1;f++){let m=i.find(A=>A.part===h[f]),g=i.find(A=>A.part===h[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&p.push([m.position,g.position])}c[d]=p}let u={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:c};B8(u),s.push(u)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function c3(e,t){if(!Ps||!(Ps==null?void 0:Ps.inputs[0].shape))return[];t.skipAllowed||(Qo.boxes.length=0),N1++;let n=(t.body.skipTime||0)>ue()-Qo.last,s=N1<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?Qo.bodies:new Promise(async r=>{let a={};N1=0,a.input=eAe(e,Gp),a.res=Ps==null?void 0:Ps.execute(a.input),Qo.last=ue();let o=await a.res.array();Qo.bodies=a.res.shape[2]===17?await sAe(o,t,e):await rAe(o,t,e);for(let i of Qo.bodies)tAe(i,[e.shape[2]||1,e.shape[1]||1]),Q1e(i.keypoints);Object.keys(a).forEach(i=>ae(a[i])),r(Qo.bodies)})}var su,Ep=[],d3=0,T1=Number.MAX_SAFE_INTEGER,Cf=0,Rp=2.5;async function aAe(e){if(!su||Re.initial){su=await Lt(e.object.modelPath);let t=Object.values(su.modelSignature.inputs);Cf=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&ce("cached model:",su.modelUrl);return su}async function oAe(e,t,n){let s=0,r=[];for(let l of[1,2,4])K(async()=>{let c=l*13,u=ft(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)===Up.length)),d=ft(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)<Up.length)),p=await d.reshape([-1,4,d.shape[1]/4]).argMax(2).array(),f=await u.array();for(let m=0;m<u.shape[0];m++)for(let g=0;g<u.shape[1];g++){let A=f[m][g];if(A>(n.object.minConfidence||0)&&g!==61){let x=(.5+Math.trunc(m%c))/c,y=(.5+Math.trunc(m/c))/c,b=p[m].map(_=>_*(c/l/Cf)),[v,C]=[x-Rp/l*b[0],y-Rp/l*b[1]],[S,E]=[x+Rp/l*b[2]-v,y+Rp/l*b[3]-C],R=[v,C,S,E];R=R.map(_=>Math.max(0,Math.min(_,1)));let P=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],$={id:s++,score:Math.round(100*A)/100,class:g+1,label:Up[g].label,box:P.map(_=>Math.trunc(_)),boxRaw:R};r.push($)}}});e.forEach(l=>ae(l));let a=r.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),o=r.map(l=>l.score),i=[];if(a&&a.length>0){let l=await Oe.nonMaxSuppressionAsync(a,o,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);i=await l.data(),ae(l)}return r=r.filter((l,c)=>i.includes(c)).sort((l,c)=>c.score-l.score),r}async function h3(e,t){let n=(t.object.skipTime||0)>ue()-d3,s=T1<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Ep.length>0?(T1++,Ep):(T1=0,!Re.kernels.includes("mod")||!Re.kernels.includes("sparsetodense")?Ep:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Oe.resizeBilinear(e,[Cf,Cf],!1),i=ye(o,xt.tf255),l=i.transpose([0,3,1,2]);ae(i),ae(o);let c;t.object.enabled&&(c=su.execute(l)),d3=ue(),ae(l);let u=await oAe(c,a,t);Ep=u,r(u)}))}var g0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],iAe=g0.length,Nf=g0.reduce((e,t,n)=>(e[t]=n,e),{}),lAe=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],sye=lAe.map(([e,t])=>[Nf[e],Nf[t]]),uAe=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function cAe(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function dAe(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/r,c.box[1]/s,c.box[2]/r,c.box[3]/s],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:h,position:p})=>({score:d,part:h,position:[Math.trunc(p.x*o),Math.trunc(p.y*a)],positionRaw:[p.x/s,p.y/s]})),annotations:{}});return e.map((c,u)=>i(c,u))}var hAe=class{constructor(e,t){me(this,"priorityQueue"),me(this,"numberOfElements"),me(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){let e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){let n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}};function W8(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+iAe)}}function V8(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=W8(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function p3(e,t,n){return e<t?t:e>n?n:e}function pAe(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function f3(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Gs,fAe=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],_p=1,au=16,mAe=50**2;function m3(e,t,n,s,r,a,o=2){let i=A=>({y:a.get(A.y,A.x,e),x:a.get(A.y,A.x,a.shape[2]/2+e)}),l=(A,x,y)=>({y:p3(Math.round(A.y/au),0,x-1),x:p3(Math.round(A.x/au),0,y-1)}),[c,u]=s.shape,d=l(t.position,c,u),h=i(d),f=f3(t.position,h);for(let A=0;A<o;A++){let x=l(f,c,u),y=W8(x.y,x.x,n,r);f=f3({x:x.x*au,y:x.y*au},{x:y.x,y:y.y})}let m=l(f,c,u),g=s.get(m.y,m.x,n);return{position:f,part:g0[n],score:g}}function gAe(e,t,n,s,r){let a=uAe.map(([h,p])=>[Nf[h],Nf[p]]),o=a.map(([,h])=>h),i=a.map(([h])=>h),l=t.shape[2],c=o.length,u=new Array(l),d=V8(e.part,au,n);u[e.part.id]={score:e.score,part:g0[e.part.id],position:d};for(let h=c-1;h>=0;--h){let p=o[h],f=i[h];u[p]&&!u[f]&&(u[f]=m3(h,u[p],f,t,n,r))}for(let h=0;h<c;++h){let p=i[h],f=o[h];u[p]&&!u[f]&&(u[f]=m3(h,u[p],f,t,n,s))}return u}function AAe(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-_p,0),c=Math.min(n+_p+1,a);for(let u=l;u<c;++u){let d=Math.max(s-_p,0),h=Math.min(s+_p+1,o);for(let p=d;p<h;++p)if(r.get(u,p,e)>t){i=!1;break}if(!i)break}return i}function yAe(e,t){let[n,s,r]=t.shape,a=new hAe(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let c=t.get(o,i,l);c<e||AAe(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function U8(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var a;let o=(a=r[s])==null?void 0:a.position;return o?pAe(n,t,o.y,o.x)<=mAe:!1})}function xAe(e,t){return t.reduce((s,{position:r,score:a},o)=>(U8(e,r,o)||(s+=a),s),0)/t.length}function bAe(e,t,n,s,r,a){let o=[],i=yAe(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),c=V8(l.part,au,e);if(U8(o,c,l.part.id))continue;let u=gAe(l,t,e,n,s);u=u.filter(p=>p.score>a);let d=xAe(o,u),h=cAe(u);d>a&&o.push({keypoints:u,box:h,score:Math.round(100*d)/100})}return o}async function g3(e,t){let n=K(()=>{if(!Gs.inputs[0].shape)return[];let o=Oe.resizeBilinear(e,[Gs.inputs[0].shape[2],Gs.inputs[0].shape[1]]),i=ge(ye(he(o,"float32"),127.5),1),c=Gs.execute(i,fAe).map(u=>ft(u,[0]));return c[1]=bs(c[1]),c}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)ae(o);let r=await bAe(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Gs.inputs[0].shape?dAe(r,[e.shape[1],e.shape[2]],[Gs.inputs[0].shape[2],Gs.inputs[0].shape[1]]):[]}async function vAe(e){return!Gs||Re.initial?Gs=await Lt(e.body.modelPath):e.debug&&ce("cached model:",Gs.modelUrl),Gs}var yr,E1=!1;async function G8(e){return!yr||Re.initial?yr=await Lt(e.segmentation.modelPath):e.debug&&ce("cached model:",yr.modelUrl),yr}async function wAe(e,t,n){var s,r;if(E1)return{data:[],canvas:null,alpha:null};E1=!0,yr||await G8(n);let a=await Sf(e,n),o=((s=a.tensor)==null?void 0:s.shape[2])||0,i=((r=a.tensor)==null?void 0:r.shape[1])||0;if(!a.tensor)return{data:[],canvas:null,alpha:null};let l={};l.resize=Oe.resizeBilinear(a.tensor,[yr.inputs[0].shape?yr.inputs[0].shape[1]:0,yr.inputs[0].shape?yr.inputs[0].shape[2]:0],!1),ae(a.tensor),l.norm=ye(l.resize,xt.tf255),l.res=yr.execute(l.norm),l.squeeze=ft(l.res,0),l.squeeze.shape[2]===2?(l.softmax=th(l.squeeze),[l.bg,l.fg]=Cs(l.softmax,2),l.expand=on(l.fg,2),l.pad=on(l.expand,0),l.crop=Oe.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[o,i]),l.data=ft(l.crop,0)):l.data=Oe.resizeBilinear(l.squeeze,[i,o]);let c=Array.from(await l.data.data());if(Re.node&&!Re.Canvas&&typeof ImageData>"u")return n.debug&&ce("canvas support missing"),Object.keys(l).forEach(A=>ae(l[A])),{data:c,canvas:null,alpha:null};let u=nr(o,i);js&&await js.toPixels(l.data,u);let d=u.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(d.filter=`blur(${n.segmentation.blur}px)`);let h=d.getImageData(0,0,o,i),p=nr(o,i),f=p.getContext("2d");a.canvas&&f.drawImage(a.canvas,0,0),f.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(f.filter=`blur(${n.segmentation.blur}px)`),f.drawImage(u,0,0),f.globalCompositeOperation="source-over",f.filter="none";let m=f.getImageData(0,0,o,i);for(let A=0;A<o*i;A++)m.data[4*A+3]=h.data[4*A+0];f.putImageData(m,0,0);let g=null;if(t&&p){g=nr(o,i);let A=await Sf(t,n);ae(A.tensor);let x=g.getContext("2d");x.drawImage(A.canvas,0,0,g.width,g.height),x.drawImage(p,0,0)}return Object.keys(l).forEach(A=>ae(l[A])),E1=!1,{data:c,canvas:p,alpha:u}}var kAe=class{constructor(){me(this,"ssrnetage",null),me(this,"gear",null),me(this,"blazeposedetect",null),me(this,"blazepose",null),me(this,"centernet",null),me(this,"efficientpose",null),me(this,"mobilefacenet",null),me(this,"emotion",null),me(this,"facedetect",null),me(this,"faceiris",null),me(this,"facemesh",null),me(this,"faceres",null),me(this,"ssrnetgender",null),me(this,"handpose",null),me(this,"handskeleton",null),me(this,"handtrack",null),me(this,"liveness",null),me(this,"movenet",null),me(this,"nanodet",null),me(this,"posenet",null),me(this,"segmentation",null),me(this,"antispoof",null)}};function H8(e){for(let t of Object.keys(e.models))e.models[t]=null}async function SAe(e){var t,n,s,r,a,o,i,l,c,u,d,h,p,f,m,g,A,x,y,b,v,C,S,E,R,P,$,_,N,O;Re.initial&&H8(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await t3(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await t3(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=s1e(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=n1e(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=c1e(e.config)),e.config.body.enabled&&!e.models.movenet&&((u=(c=e.config.body)==null?void 0:c.modelPath)==null?void 0:u.includes("movenet"))&&(e.models.movenet=nAe(e.config)),e.config.body.enabled&&!e.models.posenet&&((h=(d=e.config.body)==null?void 0:d.modelPath)==null?void 0:h.includes("posenet"))&&(e.models.posenet=vAe(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=Xge(e.config)),e.config.face.enabled&&((p=e.config.face.antispoof)==null?void 0:p.enabled)&&!e.models.antispoof&&(e.models.antispoof=_ge(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=J1e(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=k1e(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=p1e(e.config)),e.config.face.enabled&&((A=e.config.face.iris)==null?void 0:A.enabled)&&!e.models.faceiris&&(e.models.faceiris=g1e(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=b1e(e.config)),e.config.face.enabled&&((y=e.config.face.gear)==null?void 0:y.enabled)&&!e.models.gear&&(e.models.gear=Nge(e.config)),e.config.face.enabled&&((b=e.config.face.ssrnet)==null?void 0:b.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=Ege(e.config)),e.config.face.enabled&&((v=e.config.face.ssrnet)==null?void 0:v.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=Rge(e.config)),e.config.face.enabled&&((C=e.config.face.mobilefacenet)==null?void 0:C.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=f1e(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((E=(S=e.config.hand.detector)==null?void 0:S.modelPath)==null?void 0:E.includes("handtrack"))&&(e.models.handtrack=K1e(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((P=(R=e.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:P.includes("handtrack"))&&(e.models.handskeleton=Z1e(e.config)),e.config.object.enabled&&!e.models.centernet&&((_=($=e.config.object)==null?void 0:$.modelPath)==null?void 0:_.includes("centernet"))&&(e.models.centernet=l1e(e.config)),e.config.object.enabled&&!e.models.nanodet&&((O=(N=e.config.object)==null?void 0:N.modelPath)==null?void 0:O.includes("nanodet"))&&(e.models.nanodet=aAe(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=G8(e.config));for await(let z of Object.keys(e.models))e.models[z]&&typeof e.models[z]<"u"&&(e.models[z]=await e.models[z])}async function IAe(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models)){let s=e.models[n];if(!s)continue;let r=[],a=s==null?void 0:s.executor;if(a&&a.graph.nodes)for(let i of Object.values(a.graph.nodes)){let l=i.op.toLowerCase();r.includes(l)||r.push(l)}else!a&&e.config.debug&&ce("model signature not determined:",n);let o=[];for(let i of r)!t.includes(i)&&!e.env.kernels.includes(i)&&!e.env.kernels.includes(i.replace("_",""))&&!e.env.kernels.includes(i.replace("native",""))&&!e.env.kernels.includes(i.replace("v2",""))&&o.push(i);e.config.debug&&o.length>0&&ce("model validation failed:",n,o)}}var Ct={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function CAe(){let e=Ct.gl;!e||(Ct.extensions=e.getSupportedExtensions())}async function NAe(e){var t;if(e.config.backend==="humangl"&&(Ct.name in rs().registry&&(!Ct.gl||!Ct.gl.getParameter(Ct.gl.VERSION))&&(ce("error: humangl backend invalid context"),H8(e)),!Fw(Ct.name))){try{Ct.canvas=await nr(100,100)}catch(s){ce("error: cannot create canvas:",s);return}try{if(Ct.gl=(t=Ct.canvas)==null?void 0:t.getContext("webgl2",Ct.webGLattr),!Ct.gl.getParameter(Ct.gl.VERSION).includes("2.0")){ce("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Ct.canvas&&(Ct.canvas.addEventListener("webglcontextlost",async r=>{throw ce("error: humangl:",r.type),ce("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Ct.canvas.addEventListener("webglcontextrestored",r=>{ce("error: humangl context restored:",r)}),Ct.canvas.addEventListener("webglcontextcreationerror",r=>{ce("error: humangl context create:",r)}))}catch(s){ce("error: cannot get WebGL context:",s);return}try{$x(2,Ct.gl)}catch(s){ce("error: cannot set WebGL context:",s);return}try{let s=new ud(Ct.gl);ac(Ct.name,()=>new a0(s),Ct.priority)}catch(s){ce("error: cannot register WebGL backend:",s);return}try{Ai("webgl").forEach(r=>{let a={...r,backendName:Ct.name};br(a)})}catch(s){ce("error: cannot update WebGL backend registration:",s);return}let n=Fa().getGPGPUContext?Fa().getGPGPUContext().gl:null;if(n)ce(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{ce("error: no current gl context:",n,Ct.gl);return}try{Lr.set("WEBGL_VERSION",2)}catch(s){ce("error: cannot set WebGL backend flags:",s);return}CAe(),ce("backend registered:",Ct.name)}}function TAe(){if(!Re.kernels.includes("mod")){let e={kernelName:"Mod",backendName:Ms(),kernelFunc:t=>K(()=>ge(t.inputs.a,U(ye(t.inputs.a,t.inputs.b),t.inputs.b)))};br(e),Re.kernels.push("mod")}if(!Re.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:Ms(),kernelFunc:t=>K(()=>am(t.inputs.a/t.inputs.b)*t.inputs.b+gm(t.inputs.a,t.inputs.b))};br(e),Re.kernels.push("floormod")}}async function R1(e,t=!1){if(e.state="backend",t||Re.initial||e.config.backend&&e.config.backend.length>0&&Ms()!==e.config.backend){let n=ue();if(e.config.backend&&e.config.backend.length>0){if(typeof window>"u"&&typeof WorkerGlobalScope<"u"&&e.config.debug&&e.config.debug&&ce("running inside web worker"),Re.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&ce("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),Re.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&ce(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),Re.browser&&e.config.backend==="webgpu")if(typeof navigator>"u"||typeof navigator.gpu>"u")ce("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&ce("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await NAe(e);let s=Object.keys(rs().registryFactory);if(e.config.debug&&ce("available backends:",s),s.includes(e.config.backend)||(ce(`error: backend ${e.config.backend} not found in registry`),e.config.backend=Re.node?"tensorflow":"webgl",e.config.debug&&ce(`override: setting backend ${e.config.backend}`)),e.config.debug&&ce("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&ce("wasm path:",e.config.wasmPath),typeof(pd==null?void 0:pd.setWasmPaths)<"u")await m8(e.config.wasmPath);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&ce(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&ce("warning: wasm simd support is not enabled")}try{await Dw(e.config.backend),await sf(),Tge()}catch(r){return ce("error: cannot set backend:",e.config.backend,r),!1}}if(Ms()==="humangl"&&(Lr.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Lr.set("WEBGL_CPU_FORWARD",!0),Lr.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Lr.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate<"u"&&e.config.deallocate&&(ce("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Lr.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Fa().getGPGPUContext)){let s=await Fa().getGPGPUContext().gl;e.config.debug&&ce(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}Ms()==="webgpu",$w(),await sf(),e.performance.initBackend=Math.trunc(ue()-n),e.config.backend=Ms(),await Re.updateBackend(),TAe()}return!0}function j8(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&ce("kernelFunc",n,t.backend)}};br(s)}Re.kernels=Ai(Ms()).map(n=>n.kernelName.toLowerCase())}var jo={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},_1=0,El=e=>{if(!e)ce("draw error: invalid canvas");else if(!e.getContext)ce("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)ce("draw error: cannot get canvas context");else return t}return null},Zl=e=>Math.round(e*180/Math.PI);function ob(e,t,n,s,r){s=s||0,e.fillStyle=r.useDepth&&s?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Eh(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function q8(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t){let r=s[2]||0;e.strokeStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.lineTo(s[0],Math.round(s[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function EAe(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){q8(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function A3(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function X8(e,t,n){let s=os(jo,n);if(!(!t||!e)&&s.drawGestures){let r=El(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(u,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(u,6,0+a*s.lineHeight),a+=1}}}}async function K8(e,t,n){var s,r,a,o,i;let l=os(jo,n);if(!t||!e)return;let c=El(e);if(!!c)for(let u of t){if(c.font=l.font,c.strokeStyle=l.color,c.fillStyle=l.color,l.drawBoxes&&Eh(c,u.box[0],u.box[1],u.box[2],u.box[3],l),l.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.live&&d.push(`live: ${Math.trunc(100*u.live)}%`),u.emotion&&u.emotion.length>0){let h=u.emotion.map(p=>`${Math.trunc(100*p.score)}% ${p.emotion}`);h.length>3&&(h.length=3),d.push(h.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${Zl(u.rotation.angle.roll)}\xB0 yaw:${Zl(u.rotation.angle.yaw)}\xB0 pitch:${Zl(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${Zl(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),c.fillStyle=l.color;for(let h=d.length-1;h>=0;h--){let p=Math.max(u.box[0],0),f=h*l.lineHeight+u.box[1];l.shadowColor&&l.shadowColor!==""&&(c.fillStyle=l.shadowColor,c.fillText(d[h],p+5,f+16)),c.fillStyle=l.labelColor,c.fillText(d[h],p+4,f+15)}}if(c.lineWidth=2,u.mesh&&u.mesh.length>0){if(l.drawPoints)for(let d of u.mesh)ob(c,d[0],d[1],d[2],l);if(l.drawPolygons){if(u.mesh.length>450)for(let d=0;d<nd.length/3;d++){let h=[nd[d*3+0],nd[d*3+1],nd[d*3+2]].map(p=>u.mesh[p]);q8(c,h,l)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){c.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,c.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,h=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;c.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,h,0,0,2*Math.PI),c.stroke(),l.fillPolygons&&(c.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,c.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){c.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,c.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,h=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;c.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,h,0,0,2*Math.PI),c.stroke(),l.fillPolygons&&(c.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,c.fill())}if(l.drawGaze&&((s=u.rotation)==null?void 0:s.angle)&&typeof Path2D<"u"){c.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*Zl(u.rotation.angle.yaw)/90,h=u.box[1]+u.box[3]/2+u.box[2]*Zl(u.rotation.angle.pitch)/90,p=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${h},
              ${u.box[0]+u.box[2]} ${h},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);c.stroke(f),c.stroke(p)}if(l.drawGaze&&((a=(r=u.rotation)==null?void 0:r.gaze)==null?void 0:a.strength)&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){c.strokeStyle="pink",c.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];A3(c,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let h=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];A3(c,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[h[0],h[1]],4)}}}}}async function Z8(e,t,n){var s;let r=os(jo,n);if(!t||!e)return;let a=El(e);if(!!a){a.lineJoin="round";for(let o=0;o<t.length;o++){if(a.strokeStyle=r.color,a.fillStyle=r.color,a.lineWidth=r.lineWidth,a.font=r.font,r.drawBoxes&&t[o].box&&((s=t[o].box)==null?void 0:s.length)===4&&(Eh(a,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],r),r.drawLabels&&(r.shadowColor&&r.shadowColor!==""&&(a.fillStyle=r.shadowColor,a.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+r.lineHeight,t[o].box[2])),a.fillStyle=r.labelColor,a.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+r.lineHeight,t[o].box[2]))),r.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(a.fillStyle=r.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:r.color,ob(a,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,r));if(r.drawLabels&&t[o].keypoints){a.font=r.font;for(let i of t[o].keypoints)!i.score||i.score===0||(a.fillStyle=r.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:r.color,a.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(r.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)EAe(a,l,r)}}}async function Y8(e,t,n){let s=os(jo,n);if(!t||!e)return;let r=El(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Eh(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=s.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:s.color,ob(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let c=i[i.length-1][2]||0;r.fillStyle=s.useDepth?`rgba(${127.5+2*c}, ${127.5-2*c}, 255, 0.5)`:s.color,r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let c=i[l][2]||0;r.strokeStyle=s.useDepth?`rgba(${127.5+l*c}, ${127.5-l*c}, 255, 0.5)`:s.color,r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function J8(e,t,n){let s=os(jo,n);if(!t||!e)return;let r=El(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Eh(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}async function RAe(e,t,n){let s=os(jo,n);if(!t||!e)return;let r=El(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Eh(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}async function _Ae(e,t){if(!e||!t)return;let n=El(t);!n||n.drawImage(e,0,0)}async function $Ae(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ue(),r=os(jo,n),a=Promise.all([K8(e,t.face,r),Z8(e,t.body,r),Y8(e,t.hand,r),J8(e,t.object,r),X8(e,t.gesture,r)]);return _1=Re.perfadd?_1+Math.round(ue()-s):Math.round(ue()-s),t.performance.draw=_1,a}var Yl=.1,$1=.5;function DAe(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function FAe(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of Xr.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Yl&&Yl>0&&(r=r.map(o=>({x:o.x>.5?o.x+Yl:o.x-Yl,y:o.y>.5?o.y+Yl:o.y-Yl})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)DAe(o/t,i/t,r)||(s.set($1*s.get(0,i,o,0),0,i,o,0),s.set($1*s.get(0,i,o,1),0,i,o,1),s.set($1*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return ae(s),a}var PAe=e=>{let t=(d,h)=>Math.atan2(d[1]-h[1],d[0]-h[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},OAe=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let A=m[0]-g[0],x=m[1]-g[1],y=m[2]-g[2];return[A,x,y]},r=(m,g)=>{let A=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],y=m[0]*g[1]-m[1]*g[0];return[A,x,y]},a=m=>{let[g,A,x,y,b,v,C,S,E]=m,R,P,$;return y<1?y>-1?($=Math.asin(y),P=Math.atan2(-C,g),R=Math.atan2(-v,b)):($=-Math.PI/2,P=-Math.atan2(S,E),R=0):($=Math.PI/2,P=Math.atan2(S,E),R=0),isNaN(R)&&(R=0),isNaN(P)&&(P=0),isNaN($)&&($=0),{pitch:2*-R,yaw:2*-P,roll:2*-$}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),c=n(s(l[1],l[0])),u=n(s(l[3],l[2])),d=n(r(u,c));u=r(c,d);let h=[u[0],u[1],u[2],c[0],c[1],c[2],d[0],d[1],d[2]],p=a(h),f=o.length===478?PAe(e):{bearing:0,strength:0};return{angle:p,matrix:h,gaze:f}},y3=async(e,t)=>{var n,s,r,a,o,i,l,c,u,d,h,p,f,m,g,A,x,y,b,v,C,S;let E=ue(),R,P,$,_,N,O,z,j,L=[];e.state="run:face";let B=await x1e(t,e.config);if(e.performance.face=Re.perfadd?(e.performance.face||0)+Math.trunc(ue()-E):Math.trunc(ue()-E),!t.shape||t.shape.length!==4)return[];if(!B)return[];for(let W=0;W<B.length;W++){if(e.analyze("Get Face"),!B[W].tensor||B[W].tensor.isDisposedInternal){ce("Face object is disposed:",B[W].tensor);continue}if((n=e.config.face.detector)==null?void 0:n.mask){let se=await FAe(B[W]);ae(B[W].tensor),B[W].tensor=se}let J=B[W].mesh&&B[W].mesh.length>200?OAe(B[W],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?_=((s=e.config.face.emotion)==null?void 0:s.enabled)?Dv(B[W].tensor||lt([]),e.config,W,B.length):[]:(e.state="run:emotion",E=ue(),_=((r=e.config.face.emotion)==null?void 0:r.enabled)?await Dv(B[W].tensor||lt([]),e.config,W,B.length):[],e.performance.emotion=Re.perfadd?(e.performance.emotion||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?O=((a=e.config.face.antispoof)==null?void 0:a.enabled)?mv(B[W].tensor||lt([]),e.config,W,B.length):0:(e.state="run:antispoof",E=ue(),O=((o=e.config.face.antispoof)==null?void 0:o.enabled)?await mv(B[W].tensor||lt([]),e.config,W,B.length):0,e.performance.antispoof=Re.perfadd?(e.performance.antispoof||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?z=((i=e.config.face.liveness)==null?void 0:i.enabled)?l3(B[W].tensor||lt([]),e.config,W,B.length):0:(e.state="run:liveness",E=ue(),z=((l=e.config.face.liveness)==null?void 0:l.enabled)?await l3(B[W].tensor||lt([]),e.config,W,B.length):0,e.performance.liveness=Re.perfadd?(e.performance.antispoof||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?P=((c=e.config.face.gear)==null?void 0:c.enabled)?ov(B[W].tensor||lt([]),e.config,W,B.length):null:(e.state="run:gear",E=ue(),P=((u=e.config.face.gear)==null?void 0:u.enabled)?await ov(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.gear=Math.trunc(ue()-E)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(R=((d=e.config.face.ssrnet)==null?void 0:d.enabled)?uv(B[W].tensor||lt([]),e.config,W,B.length):null,$=((h=e.config.face.ssrnet)==null?void 0:h.enabled)?hv(B[W].tensor||lt([]),e.config,W,B.length):null):(e.state="run:ssrnet",E=ue(),R=((p=e.config.face.ssrnet)==null?void 0:p.enabled)?await uv(B[W].tensor||lt([]),e.config,W,B.length):null,$=((f=e.config.face.ssrnet)==null?void 0:f.enabled)?await hv(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.ssrnet=Math.trunc(ue()-E)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?N=((m=e.config.face.mobilefacenet)==null?void 0:m.enabled)?Mv(B[W].tensor||lt([]),e.config,W,B.length):null:(e.state="run:mobilefacenet",E=ue(),N=((g=e.config.face.mobilefacenet)==null?void 0:g.enabled)?await Mv(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.mobilefacenet=Math.trunc(ue()-E)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?j=((A=e.config.face.description)==null?void 0:A.enabled)?Uv(B[W].tensor||lt([]),e.config,W,B.length):null:(e.state="run:description",E=ue(),j=((x=e.config.face.description)==null?void 0:x.enabled)?await Uv(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.description=Re.perfadd?(e.performance.description||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End Description:"),e.config.async&&([R,$,_,N,j,P,O,z]=await Promise.all([R,$,_,N,j,P,O,z])),e.analyze("Finish Face:"),((y=e.config.face.ssrnet)==null?void 0:y.enabled)&&R&&$&&(j={...j,age:R.age,gender:$.gender,genderScore:$.genderScore}),((b=e.config.face.gear)==null?void 0:b.enabled)&&P&&(j={...j,age:P.age,gender:P.gender,genderScore:P.genderScore,race:P.race}),((v=e.config.face.mobilefacenet)==null?void 0:v.enabled)&&N&&(j.descriptor=N),!((C=e.config.face.iris)==null?void 0:C.enabled);let ee=B[W].annotations&&B[W].annotations.leftEyeIris&&B[W].annotations.leftEyeIris[0]&&B[W].annotations.rightEyeIris&&B[W].annotations.rightEyeIris[0]&&B[W].annotations.leftEyeIris.length>0&&B[W].annotations.rightEyeIris.length>0&&B[W].annotations.leftEyeIris[0]!==null&&B[W].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(B[W].annotations.leftEyeIris[3][0]-B[W].annotations.leftEyeIris[1][0]),Math.abs(B[W].annotations.rightEyeIris[4][1]-B[W].annotations.rightEyeIris[2][1]))/t.shape[2]:0,re=((S=e.config.face.detector)==null?void 0:S.return)?ft(B[W].tensor):null;ae(B[W].tensor),B[W].tensor&&delete B[W].tensor;let Z={...B[W],id:W};(j==null?void 0:j.age)&&(Z.age=j.age),(j==null?void 0:j.gender)&&(Z.gender=j.gender),(j==null?void 0:j.genderScore)&&(Z.genderScore=j==null?void 0:j.genderScore),(j==null?void 0:j.descriptor)&&(Z.embedding=j==null?void 0:j.descriptor),(j==null?void 0:j.race)&&(Z.race=j==null?void 0:j.race),_&&(Z.emotion=_),O&&(Z.real=O),z&&(Z.live=z),ee&&ee!==0&&(Z.iris=Math.trunc(500/ee/11.7)/100),J&&(Z.rotation=J),re&&(Z.tensor=re),L.push(Z),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),L},MAe=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},zAe=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},LAe=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],h=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||h>.06)&&(c=!1),d>h?d>.05&&t.push({iris:n,gesture:"looking right"}):h>.05&&t.push({iris:n,gesture:"looking left"});let p=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||p<.01||f>.022||p>.022)&&(c=!1),(f<.01||p<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||p>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},BAe=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=G1e(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t},Te={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},D1=0;function WAe(e,t){var n,s,r,a,o,i,l,c,u,d,h,p,f,m,g,A,x,y,b,v,C,S,E,R,P,$,_;let N=ue();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let O=Date.now()-e.timestamp,z=O<1e3?8-Math.log(O+1):1;if(e.canvas&&(Te.canvas=e.canvas),e.error&&(Te.error=e.error),!Te.body||e.body.length!==Te.body.length)Te.body=JSON.parse(JSON.stringify(e.body));else for(let L=0;L<e.body.length;L++){let B=e.body[L].box.map((Z,se)=>((z-1)*Te.body[L].box[se]+Z)/z),W=e.body[L].boxRaw.map((Z,se)=>((z-1)*Te.body[L].boxRaw[se]+Z)/z),J=e.body[L].keypoints.map((Z,se)=>{var ne,de,xe,Ie,we,$e,ze,Xe,je;return{score:Z.score,part:Z.part,position:[Te.body[L].keypoints[se]?((z-1)*(Te.body[L].keypoints[se].position[0]||0)+(Z.position[0]||0))/z:Z.position[0],Te.body[L].keypoints[se]?((z-1)*(Te.body[L].keypoints[se].position[1]||0)+(Z.position[1]||0))/z:Z.position[1],Te.body[L].keypoints[se]?((z-1)*(Te.body[L].keypoints[se].position[2]||0)+(Z.position[2]||0))/z:Z.position[2]],positionRaw:[Te.body[L].keypoints[se]?((z-1)*(Te.body[L].keypoints[se].positionRaw[0]||0)+(Z.positionRaw[0]||0))/z:Z.positionRaw[0],Te.body[L].keypoints[se]?((z-1)*(Te.body[L].keypoints[se].positionRaw[1]||0)+(Z.positionRaw[1]||0))/z:Z.positionRaw[1],Te.body[L].keypoints[se]?((z-1)*(Te.body[L].keypoints[se].positionRaw[2]||0)+(Z.positionRaw[2]||0))/z:Z.positionRaw[2]],distance:[Te.body[L].keypoints[se]?((z-1)*(((ne=Te.body[L].keypoints[se].distance)==null?void 0:ne[0])||0)+(((de=Z.distance)==null?void 0:de[0])||0))/z:(xe=Z.distance)==null?void 0:xe[0],Te.body[L].keypoints[se]?((z-1)*(((Ie=Te.body[L].keypoints[se].distance)==null?void 0:Ie[1])||0)+(((we=Z.distance)==null?void 0:we[1])||0))/z:($e=Z.distance)==null?void 0:$e[1],Te.body[L].keypoints[se]?((z-1)*(((ze=Te.body[L].keypoints[se].distance)==null?void 0:ze[2])||0)+(((Xe=Z.distance)==null?void 0:Xe[2])||0))/z:(je=Z.distance)==null?void 0:je[2]]}}),ee={},re={connected:{}};((s=(n=t.body)==null?void 0:n.modelPath)==null?void 0:s.includes("efficientpose"))?re=C8:((a=(r=t.body)==null?void 0:r.modelPath)==null?void 0:a.includes("blazepose"))?re=w8:((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("movenet"))&&(re=O8);for(let[Z,se]of Object.entries(re.connected)){let ne=[];for(let de=0;de<se.length-1;de++){let xe=J.find(we=>we.part===se[de]),Ie=J.find(we=>we.part===se[de+1]);xe&&Ie&&ne.push([xe.position,Ie.position])}ee[Z]=ne}Te.body[L]={...e.body[L],box:B,boxRaw:W,keypoints:J,annotations:ee}}if(!Te.hand||e.hand.length!==Te.hand.length)Te.hand=JSON.parse(JSON.stringify(e.hand));else for(let L=0;L<e.hand.length;L++){let B=e.hand[L].box.map((re,Z)=>((z-1)*Te.hand[L].box[Z]+re)/z),W=e.hand[L].boxRaw.map((re,Z)=>((z-1)*Te.hand[L].boxRaw[Z]+re)/z);Te.hand[L].keypoints.length!==e.hand[L].keypoints.length&&(Te.hand[L].keypoints=e.hand[L].keypoints);let J=e.hand[L].keypoints&&e.hand[L].keypoints.length>0?e.hand[L].keypoints.map((re,Z)=>re.map((se,ne)=>((z-1)*(Te.hand[L].keypoints[Z][ne]||1)+(se||0))/z)):[],ee={};if(Object.keys(Te.hand[L].annotations).length!==Object.keys(e.hand[L].annotations).length)Te.hand[L].annotations=e.hand[L].annotations,ee=Te.hand[L].annotations;else if(e.hand[L].annotations)for(let re of Object.keys(e.hand[L].annotations))ee[re]=e.hand[L].annotations[re]&&e.hand[L].annotations[re][0]?e.hand[L].annotations[re].map((Z,se)=>Z.map((ne,de)=>((z-1)*Te.hand[L].annotations[re][se][de]+ne)/z)):null;Te.hand[L]={...e.hand[L],box:B,boxRaw:W,keypoints:J,annotations:ee}}if(!Te.face||e.face.length!==Te.face.length)Te.face=JSON.parse(JSON.stringify(e.face));else for(let L=0;L<e.face.length;L++){let B=e.face[L].box.map((J,ee)=>((z-1)*Te.face[L].box[ee]+J)/z),W=e.face[L].boxRaw.map((J,ee)=>((z-1)*Te.face[L].boxRaw[ee]+J)/z);if(e.face[L].rotation){let J={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};J.matrix=(l=e.face[L].rotation)==null?void 0:l.matrix,J.angle={roll:((z-1)*(((u=(c=Te.face[L].rotation)==null?void 0:c.angle)==null?void 0:u.roll)||0)+(((h=(d=e.face[L].rotation)==null?void 0:d.angle)==null?void 0:h.roll)||0))/z,yaw:((z-1)*(((f=(p=Te.face[L].rotation)==null?void 0:p.angle)==null?void 0:f.yaw)||0)+(((g=(m=e.face[L].rotation)==null?void 0:m.angle)==null?void 0:g.yaw)||0))/z,pitch:((z-1)*(((x=(A=Te.face[L].rotation)==null?void 0:A.angle)==null?void 0:x.pitch)||0)+(((b=(y=e.face[L].rotation)==null?void 0:y.angle)==null?void 0:b.pitch)||0))/z},J.gaze={bearing:((z-1)*(((C=(v=Te.face[L].rotation)==null?void 0:v.gaze)==null?void 0:C.bearing)||0)+(((E=(S=e.face[L].rotation)==null?void 0:S.gaze)==null?void 0:E.bearing)||0))/z,strength:((z-1)*(((P=(R=Te.face[L].rotation)==null?void 0:R.gaze)==null?void 0:P.strength)||0)+(((_=($=e.face[L].rotation)==null?void 0:$.gaze)==null?void 0:_.strength)||0))/z},Te.face[L]={...e.face[L],rotation:J,box:B,boxRaw:W}}Te.face[L]={...e.face[L],box:B,boxRaw:W}}if(!Te.object||e.object.length!==Te.object.length)Te.object=JSON.parse(JSON.stringify(e.object));else for(let L=0;L<e.object.length;L++){let B=e.object[L].box.map((J,ee)=>((z-1)*Te.object[L].box[ee]+J)/z),W=e.object[L].boxRaw.map((J,ee)=>((z-1)*Te.object[L].boxRaw[ee]+J)/z);Te.object[L]={...e.object[L],box:B,boxRaw:W}}if(e.persons){let L=e.persons;if(!Te.persons||L.length!==Te.persons.length)Te.persons=JSON.parse(JSON.stringify(L));else for(let B=0;B<L.length;B++)Te.persons[B].box=L[B].box.map((W,J)=>((z-1)*Te.persons[B].box[J]+W)/z)}e.gesture&&(Te.gesture=e.gesture);let j=ue();return D1=Re.perfadd?D1+Math.round(j-N):Math.round(j-N),e.performance&&(Te.performance={...e.performance,interpolate:D1}),Te}function ib(e,t,n={order:2,multiplier:25}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var Q8=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function VAe(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=ib(e,t,n);return Q8(s,n.order||2,n.min||0,n.max||1)}function UAe(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=ib(e,t[o],n);if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=Q8(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function GAe(e,t,n,s,r){var a,o,i,l,c,u,d,h,p,f,m,g,A,x,y,b;let v=0,C=[];for(let S of e){let E={id:v++,face:S,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let O of t)S.box[0]>O.box[0]&&S.box[0]<O.box[0]+O.box[2]&&S.box[1]+S.box[3]>O.box[1]&&S.box[1]+S.box[3]<O.box[1]+O.box[3]&&(E.body=O);if(E.body)for(let O of n)O.box[0]+O.box[2]>E.body.box[0]&&O.box[0]+O.box[2]<E.body.box[0]+E.body.box[2]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=O),O.box[0]<E.body.box[0]+E.body.box[2]&&O.box[0]>E.body.box[0]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=O);for(let O of s)O.face!==void 0&&O.face===S.id?(a=E.gestures)==null||a.push(O):O.iris!==void 0&&O.iris===S.id?(o=E.gestures)==null||o.push(O):O.body!==void 0&&O.body===((i=E.body)==null?void 0:i.id)?(l=E.gestures)==null||l.push(O):O.hand!==void 0&&O.hand===((u=(c=E.hands)==null?void 0:c.left)==null?void 0:u.id)?(d=E.gestures)==null||d.push(O):O.hand!==void 0&&O.hand===((p=(h=E.hands)==null?void 0:h.right)==null?void 0:p.id)&&((f=E.gestures)==null||f.push(O));let R=[],P=[],$=O=>{O&&O.length===4&&(R.push(O[0],O[0]+O[2]),P.push(O[1],O[1]+O[3]))};$((m=E.face)==null?void 0:m.box),$((g=E.body)==null?void 0:g.box),$((x=(A=E.hands)==null?void 0:A.left)==null?void 0:x.box),$((b=(y=E.hands)==null?void 0:y.right)==null?void 0:b.box);let _=Math.min(...R),N=Math.min(...P);E.box=[_,N,Math.max(...R)-_,Math.max(...P)-N],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),C.push(E)}return C}var lb=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,ub=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function HAe(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(lb);break;case"body":case"full":n=await t(ub);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function jAe(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+lb;break;case"full":case"body":n="data:image/jpeg;base64,"+ub;break;default:n=null}let s;if(typeof Image<"u")s=new Image;else if(Re.Image)s=new Re.Image;else return;s.onload=async()=>{let r=nr(s.naturalWidth,s.naturalHeight);if(!r)ce("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(void 0)})}async function qAe(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(lb):n=t(ub);let s;if("node"in pd){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&ce("Warmup tfjs-node not loaded");return s}async function XAe(e,t){let n=ue();if(e.state="warmup",t&&(e.config=os(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none")return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ue(),persons:[],error:null};let s;return new Promise(async r=>{typeof createImageBitmap=="function"?s=await HAe(e):typeof Image<"u"||Re.Canvas!==void 0?s=await jAe(e):s=await qAe(e);let a=ue();e.config.debug&&ce("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),r(s)})}var rd,Hp,jp,zA,eN=class{constructor(e){me(this,"version"),me(this,"config"),me(this,"result"),me(this,"state"),me(this,"process"),me(this,"tf"),me(this,"env"),me(this,"draw"),me(this,"models"),me(this,"events"),me(this,"faceTriangulation"),me(this,"faceUVMap"),me(this,"performance"),rp(this,rd,void 0),rp(this,Hp,void 0),rp(this,jp,void 0),me(this,"gl"),me(this,"analyze",(...t)=>{if(!sp(this,Hp))return;let n=this.tf.engine().state.numTensors,s=sp(this,rd);ap(this,rd,n);let r=n-s;r!==0&&ce(...t,r)}),rp(this,zA,t=>{if(!sp(this,jp))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof tt))return"input must be a tensor";try{this.tf.getBackend()}catch{return"backend not loaded"}return null}),me(this,"similarity",VAe),me(this,"distance",ib),me(this,"match",UAe),me(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))}),this.env=Re,Bl.wasmPath=tb["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${_w}/dist/`,Bl.modelBasePath=Re.browser?"../models/":"file://models/",Bl.backend=Re.browser?"humangl":"tensorflow",this.version=sv,Object.defineProperty(this,"version",{value:sv}),this.config=JSON.parse(JSON.stringify(Bl)),Object.seal(this.config),e&&(this.config=os(this.config,e)),this.config.cacheModels=typeof indexedDB<"u",Sge(this.config),this.tf=pd,this.state="idle",ap(this,rd,0),ap(this,Hp,!1),ap(this,jp,!1),this.performance={},this.events=typeof EventTarget<"u"?new EventTarget:void 0,this.models=new kAe,this.draw={options:jo,canvas:(t,n)=>_Ae(t,n),face:(t,n,s)=>K8(t,n,s),body:(t,n,s)=>Z8(t,n,s),hand:(t,n,s)=>Y8(t,n,s),gesture:(t,n,s)=>X8(t,n,s),object:(t,n,s)=>J8(t,n,s),person:(t,n,s)=>RAe(t,n,s),all:(t,n,s)=>$Ae(t,n,s)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=v1e,this.faceUVMap=w1e,this.gl=Ct,this.emit("create")}reset(){let e=this.config.backend;this.config=JSON.parse(JSON.stringify(Bl)),this.config.backend=e}validate(e){return v3(Bl,e||this.config)}now(){return ue()}image(e,t=!0){return Sf(e,this.config,t)}async segmentation(e,t){return wAe(e,t,this.config)}enhance(e){return E8(e)}compare(e,t){return vge(this.config,e,t)}async init(){await R1(this,!0),await this.tf.ready()}async load(e){this.state="load";let t=ue(),n=Object.values(this.models).filter(a=>a).length;e&&(this.config=os(this.config,e)),this.env.initial&&(this.config.debug&&ce(`version: ${this.version}`),this.config.debug&&ce(`tfjs version: ${this.tf.version["tfjs-core"]}`),await R1(this)||ce("error: backend check failed"),await sf(),this.env.browser&&(this.config.debug&&ce("configuration:",this.config),this.config.debug&&ce("environment:",this.env),this.config.debug&&ce("tf flags:",this.tf.ENV.flags))),await SAe(this),this.env.initial&&this.config.debug&&ce("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(a=>a).length!==n&&(await IAe(this),this.emit("load"));let r=Math.trunc(ue()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(e=this.result){return WAe(e,this.config)}async warmup(e){let t=ue(),n=await XAe(this,e),s=ue();return this.performance.warmup=Math.trunc(s-t),n}async profile(e,t){let n=await this.tf.profile(()=>this.detect(e,t)),s={};for(let o of n.kernels)s[o.name]?s[o.name]+=o.kernelTimeMs:s[o.name]=o.kernelTimeMs;let r=[];Object.entries(s).forEach(o=>r.push({name:o[0],ms:o[1]})),r.sort((o,i)=>i.ms-o.ms),r.length=20;let a={};for(let o of r)a[o.name]=o.ms;return a}async detect(e,t){return this.state="detect",new Promise(async n=>{var s,r,a,o,i,l,c,u,d,h,p,f,m,g,A,x,y,b,v,C,S,E;this.state="config";let R;this.config=os(this.config,t),this.state="check";let P=sp(this,zA).call(this,e);P&&(ce(P,e),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ue(),persons:[],error:P}));let $=ue();await R1(this),await this.load(),R=ue(),this.state="image";let _=await Sf(e,this.config);if(this.process=_,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ue()-R):Math.trunc(ue()-R),this.analyze("Get Image:"),!_.tensor){this.config.debug&&ce("could not convert input to tensor"),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ue(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),R=ue(),this.config.skipAllowed=await bge(this.config,_.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ue()-R):Math.trunc(ue()-R),this.analyze("Check Changed:");let N=[],O=[],z=[],j=[];this.state="detect:face",this.config.async?(N=this.config.face.enabled?y3(this,_.tensor):[],this.performance.face&&delete this.performance.face):(R=ue(),N=this.config.face.enabled?await y3(this,_.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(N=await N),this.analyze("Start Body:"),this.state="detect:body";let L=this.config.body.maxDetected===-1?os(this.config,{body:{maxDetected:this.config.face.enabled?1*N.length:1}}):this.config;this.config.async?(((s=this.config.body.modelPath)==null?void 0:s.includes("posenet"))?O=this.config.body.enabled?g3(_.tensor,L):[]:((r=this.config.body.modelPath)==null?void 0:r.includes("blazepose"))?O=this.config.body.enabled?Cv(_.tensor,L):[]:((a=this.config.body.modelPath)==null?void 0:a.includes("efficientpose"))?O=this.config.body.enabled?Rv(_.tensor,L):[]:((o=this.config.body.modelPath)==null?void 0:o.includes("movenet"))&&(O=this.config.body.enabled?c3(_.tensor,L):[]),this.performance.body&&delete this.performance.body):(R=ue(),((i=this.config.body.modelPath)==null?void 0:i.includes("posenet"))?O=this.config.body.enabled?await g3(_.tensor,L):[]:((l=this.config.body.modelPath)==null?void 0:l.includes("blazepose"))?O=this.config.body.enabled?await Cv(_.tensor,L):[]:((c=this.config.body.modelPath)==null?void 0:c.includes("efficientpose"))?O=this.config.body.enabled?await Rv(_.tensor,L):[]:((u=this.config.body.modelPath)==null?void 0:u.includes("movenet"))&&(O=this.config.body.enabled?await c3(_.tensor,L):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let B=this.config.hand.maxDetected===-1?os(this.config,{hand:{maxDetected:this.config.face.enabled?2*N.length:1}}):this.config;this.config.async?(((h=(d=this.config.hand.detector)==null?void 0:d.modelPath)==null?void 0:h.includes("handdetect"))?z=this.config.hand.enabled?e3(_.tensor,B):[]:((f=(p=this.config.hand.detector)==null?void 0:p.modelPath)==null?void 0:f.includes("handtrack"))&&(z=this.config.hand.enabled?a3(_.tensor,B):[]),this.performance.hand&&delete this.performance.hand):(R=ue(),((g=(m=this.config.hand.detector)==null?void 0:m.modelPath)==null?void 0:g.includes("handdetect"))?z=this.config.hand.enabled?await e3(_.tensor,B):[]:((x=(A=this.config.hand.detector)==null?void 0:A.modelPath)==null?void 0:x.includes("handtrack"))&&(z=this.config.hand.enabled?await a3(_.tensor,B):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((y=this.config.object.modelPath)==null?void 0:y.includes("nanodet"))?j=this.config.object.enabled?h3(_.tensor,this.config):[]:((b=this.config.object.modelPath)==null?void 0:b.includes("centernet"))&&(j=this.config.object.enabled?Tv(_.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(R=ue(),((v=this.config.object.modelPath)==null?void 0:v.includes("nanodet"))?j=this.config.object.enabled?await h3(_.tensor,this.config):[]:((C=this.config.object.modelPath)==null?void 0:C.includes("centernet"))&&(j=this.config.object.enabled?await Tv(_.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([N,O,z,j]=await Promise.all([N,O,z,j])),this.state="detect:gesture";let W=[];this.config.gesture.enabled&&(R=ue(),W=[...zAe(N),...MAe(O),...BAe(z),...LAe(N)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ue()-$):Math.trunc(ue()-$);let J=((E=(S=this.process)==null?void 0:S.tensor)==null?void 0:E.shape)||[];this.result={face:N,body:O,hand:z,gesture:W,object:j,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return GAe(N,O,z,W,J)}},ae(_.tensor),this.emit("detect"),this.state="idle",n(this.result)})}};rd=new WeakMap;Hp=new WeakMap;jp=new WeakMap;zA=new WeakMap;var Tc;onmessage=async e=>{if(Tc||(Tc=new eN(e.data.config)),e.data.image){let t=Tc.tf.tensor(e.data.image,[1,e.data.height,e.data.width,3],"float32"),n=await Tc.detect(t,e.data.config);Tc.tf.dispose(t),postMessage({result:n,state:JSON.stringify(Tc.tf.engine().state)})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=worker.js.map
