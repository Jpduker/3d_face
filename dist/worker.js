/*
  Human: Motion Analytics Demo
  author: <https://github.com/vladmandic>'
*/

var iw=Object.defineProperty,W9=(e,t,a)=>t in e?iw(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,zo=(e,t)=>{for(var a in t)iw(e,a,{get:t[a],enumerable:!0})},pe=(e,t,a)=>(W9(e,typeof t!="symbol"?t+"":t,a),a),ow=(e,t,a)=>{if(!t.has(e))throw TypeError("Cannot "+a)},mc=(e,t,a)=>(ow(e,t,"read from private field"),a?a.call(e):t.get(e)),gc=(e,t,a)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,a)},yc=(e,t,a,r)=>(ow(e,t,"write to private field"),r?r.call(e,a):t.set(e,a),a);function ue(...e){let t=new Date,a=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(a,"Human:",...e)}function B9(e,t){let a=e.endsWith("/")?"":"/",n=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${a}${t}`;if(!n.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${n}`);return n}var de=()=>typeof performance<"u"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function lw(e,t,a="config",r=[]){for(let n of Object.keys(t))if(typeof t[n]=="object")lw(e[n],t[n],n,r);else{let s=e&&typeof e[n]<"u";s||r.push({reason:"unknown property",where:`${a}.${n} = ${t[n]}`});let i=e&&typeof e[n]==typeof t[n];s&&!i&&r.push({reason:"property type mismatch",where:`${a}.${n} = ${t[n]}`,expected:typeof e[n]})}return t.debug&&a==="config"&&r.length>0&&ue("invalid configuration",r),r}function nr(...e){let t=a=>a&&typeof a=="object";return e.reduce((a,r)=>(Object.keys(r||{}).forEach(n=>{let s=a[n],i=r[n];Array.isArray(s)&&Array.isArray(i)?a[n]=s.concat(...i):t(s)&&t(i)?a[n]=nr(s,i):a[n]=i}),a),{})}var Xl={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},gh={};zo(gh,{Abs:()=>Do,Acos:()=>Pu,Acosh:()=>Du,AdadeltaOptimizer:()=>U0,AdagradOptimizer:()=>G0,AdamOptimizer:()=>j0,AdamaxOptimizer:()=>H0,Add:()=>Yn,AddN:()=>Hs,All:()=>Lu,Any:()=>Wu,ArgMax:()=>qs,ArgMin:()=>Bu,Asin:()=>Vu,Asinh:()=>Uu,Atan:()=>Gu,Atan2:()=>Hu,Atanh:()=>ju,AvgPool:()=>Xs,AvgPool3D:()=>Fh,AvgPool3DGrad:()=>Kf,AvgPoolGrad:()=>Xf,BackendWasm:()=>nT,BatchMatMul:()=>Ks,BatchToSpaceND:()=>Lo,Bincount:()=>Zf,BroadcastArgs:()=>Yf,BroadcastTo:()=>kw,Callback:()=>t4,CallbackList:()=>t6,Cast:()=>Zs,Ceil:()=>Ys,ClipByValue:()=>Jn,Complex:()=>Mh,ComplexAbs:()=>_h,Concat:()=>Wo,Conv2D:()=>Js,Conv2DBackpropFilter:()=>Jf,Conv2DBackpropInput:()=>Qs,Conv3D:()=>zh,Conv3DBackpropFilterV2:()=>Qf,Conv3DBackpropInputV2:()=>e0,Cos:()=>ei,Cosh:()=>ti,CropAndResize:()=>Vo,Cumprod:()=>Bo,Cumsum:()=>ai,CustomCallback:()=>r6,DataStorage:()=>$h,DenseBincount:()=>t0,DepthToSpace:()=>Uo,DepthwiseConv2dNative:()=>ri,DepthwiseConv2dNativeBackpropFilter:()=>a0,DepthwiseConv2dNativeBackpropInput:()=>r0,Diag:()=>n0,Dilation2D:()=>Oh,Dilation2DBackpropFilter:()=>df,Dilation2DBackpropInput:()=>uf,ENV:()=>Ln,EarlyStopping:()=>a4,Einsum:()=>Ph,Elu:()=>si,EluGrad:()=>s0,Environment:()=>vw,Equal:()=>Go,Erf:()=>qu,Exp:()=>ii,ExpandDims:()=>jo,Expm1:()=>Ho,FFT:()=>i0,Fill:()=>Xu,FlipLeftRight:()=>qo,Floor:()=>oi,FloorDiv:()=>li,FromPixels:()=>Ah,FusedBatchNorm:()=>ui,FusedConv2D:()=>Fs,FusedDepthwiseConv2D:()=>Ms,GPGPUContext:()=>ph,GatherNd:()=>Ko,GatherV2:()=>Xo,GraphModel:()=>Dx,Greater:()=>Zo,GreaterEqual:()=>di,History:()=>a6,IFFT:()=>o0,Identity:()=>hi,Imag:()=>Dh,InputSpec:()=>jt,IsFinite:()=>Ku,IsInf:()=>Zu,IsNan:()=>Yu,KernelBackend:()=>zu,LRN:()=>Wh,LRNGrad:()=>u0,LayerVariable:()=>H7,LayersModel:()=>jn,LeakyRelu:()=>pi,Less:()=>Yo,LessEqual:()=>Jo,LinSpace:()=>l0,Log:()=>ci,Log1p:()=>Ju,LogSoftmax:()=>Iw,LogicalAnd:()=>Qo,LogicalNot:()=>Qu,LogicalOr:()=>Lh,MathBackendCPU:()=>Bx,MathBackendWebGL:()=>bm,Max:()=>fi,MaxPool:()=>gi,MaxPool3D:()=>Bh,MaxPool3DGrad:()=>h0,MaxPoolGrad:()=>d0,MaxPoolWithArgmax:()=>p0,Maximum:()=>mi,Mean:()=>yi,Min:()=>Ai,Minimum:()=>xi,MirrorPad:()=>bi,Mod:()=>ed,MomentumOptimizer:()=>q0,Multinomial:()=>c0,Multiply:()=>vi,Neg:()=>el,NonMaxSuppressionV3:()=>al,NonMaxSuppressionV4:()=>td,NonMaxSuppressionV5:()=>rl,NotEqual:()=>tl,OP_SCOPE_SUFFIX:()=>Lw,OneHot:()=>sl,OnesLike:()=>nl,Optimizer:()=>as,OptimizerConstructors:()=>ms,Pack:()=>il,PadV2:()=>wi,Pool:()=>FC,Pow:()=>ki,Prelu:()=>Ii,Prod:()=>Si,RMSPropOptimizer:()=>X0,RNN:()=>rs,Range:()=>ad,Rank:()=>Ew,Real:()=>Vh,RealDiv:()=>ni,Reciprocal:()=>rd,Reduction:()=>R7,Relu:()=>Ni,Relu6:()=>Ci,Reshape:()=>ol,ResizeBilinear:()=>Ti,ResizeBilinearGrad:()=>m0,ResizeNearestNeighbor:()=>nd,ResizeNearestNeighborGrad:()=>f0,Reverse:()=>ll,RotateWithOffset:()=>wl,Round:()=>ul,Rsqrt:()=>Ei,SGDOptimizer:()=>op,ScatterNd:()=>dl,Select:()=>hl,Selu:()=>sd,Sequential:()=>lm,Sigmoid:()=>$i,Sign:()=>id,Sin:()=>Ri,Sinh:()=>cl,Slice:()=>pl,Softmax:()=>_i,Softplus:()=>od,SpaceToBatchND:()=>fl,SparseFillEmptyRows:()=>Uh,SparseReshape:()=>ld,SparseSegmentMean:()=>Gh,SparseSegmentSum:()=>jh,SparseToDense:()=>Hh,SplitV:()=>ml,Sqrt:()=>Fi,Square:()=>ud,SquaredDifference:()=>zi,Step:()=>Li,StridedSlice:()=>gl,StringNGrams:()=>qh,StringSplit:()=>g0,StringToHashBucketFast:()=>y0,Sub:()=>Oi,Sum:()=>Mi,SymbolicTensor:()=>en,Tan:()=>yl,Tanh:()=>Pi,Tensor:()=>tt,TensorBuffer:()=>ta,Tile:()=>Qn,TopK:()=>Al,Transform:()=>xl,Transpose:()=>Di,Unique:()=>A0,Unpack:()=>bl,UnsortedSegmentSum:()=>Xh,Variable:()=>vh,ZerosLike:()=>vl,_FusedMatMul:()=>$s,abs:()=>Jt,acos:()=>wk,acosh:()=>kk,add:()=>ie,addN:()=>Sy,all:()=>Ny,any:()=>yf,argMax:()=>qn,argMin:()=>Ik,asin:()=>Sk,asinh:()=>Nk,atan:()=>Tk,atan2:()=>Ck,atanh:()=>Ek,avgPool:()=>v0,avgPool3d:()=>Cy,backend:()=>Hn,backend_util:()=>T,basicLSTMCell:()=>x$,batchNorm:()=>bu,batchNorm2d:()=>Mk,batchNorm3d:()=>_k,batchNorm4d:()=>zk,batchToSpaceND:()=>w0,bincount:()=>Ey,booleanMaskAsync:()=>F_,broadcastArgs:()=>Ok,broadcastTo:()=>dh,broadcast_util:()=>kl,browser:()=>Xr,buffer:()=>Be,callbacks:()=>dU,cast:()=>he,ceil:()=>Pk,clipByValue:()=>lr,clone:()=>ja,complex:()=>_s,concat:()=>Nt,concat1d:()=>Dk,concat2d:()=>k0,concat3d:()=>Lk,concat4d:()=>Wk,constraints:()=>Y7,conv1d:()=>Ry,conv2d:()=>Os,conv2dTranspose:()=>Fy,conv3d:()=>My,conv3dTranspose:()=>Vk,copyRegisteredKernels:()=>OC,cos:()=>I0,cosh:()=>_y,cosineWindow:()=>nA,cumprod:()=>xf,cumsum:()=>zy,customGrad:()=>Sn,data:()=>T4,denseBincount:()=>Uk,deprecationWarn:()=>Iy,depthToSpace:()=>Gk,depthwiseConv2d:()=>tp,deregisterOp:()=>cU,device_util:()=>Jh,diag:()=>Z$,dilation2d:()=>jk,disableDeprecationWarnings:()=>zR,dispose:()=>se,disposeVariables:()=>OR,div:()=>me,divNoNan:()=>Hk,dot:()=>rF,dropout:()=>v7,einsum:()=>qk,elu:()=>ap,enableDebugMode:()=>_R,enableProdMode:()=>xk,enclosingPowerOfTwo:()=>w7,engine:()=>Ca,env:()=>J,equal:()=>br,erf:()=>Xk,exp:()=>vr,expandDims:()=>la,expm1:()=>Kk,eye:()=>Oy,fft:()=>O0,fill:()=>hd,findBackend:()=>vk,findBackendFactory:()=>WR,floor:()=>rp,floorDiv:()=>b0,forceHalfFloat:()=>KS,fused:()=>Ds,gather:()=>vu,gatherND:()=>b7,gather_util:()=>Ay,getBackend:()=>yr,getGradient:()=>t1,getKernel:()=>hf,getKernelsForBackend:()=>ko,getThreadsCount:()=>m2e,gpgpu_util:()=>NS,grad:()=>CF,grads:()=>EF,greater:()=>ur,greaterEqual:()=>Il,ifft:()=>Sh,imag:()=>S0,image:()=>De,inTopKAsync:()=>U_,initializers:()=>J7,input:()=>y6,io:()=>Ea,irfft:()=>Qy,isFinite:()=>AF,isInf:()=>bF,isNaN:()=>Zk,keep:()=>ua,kernel_impls:()=>Or,layers:()=>Q7,leakyRelu:()=>N0,less:()=>Py,lessEqual:()=>Sl,linalg:()=>$7,linspace:()=>Yk,loadGraphModel:()=>gG,loadLayersModel:()=>vB,localResponseNormalization:()=>Jk,log:()=>wr,log1p:()=>T0,logSigmoid:()=>zF,logSoftmax:()=>Dy,logSumExp:()=>r7,logicalAnd:()=>sn,logicalNot:()=>E0,logicalOr:()=>By,logicalXor:()=>qF,losses:()=>TO,matMul:()=>Ze,math:()=>Qw,max:()=>Fa,maxPool:()=>R0,maxPool3d:()=>Vy,maxPoolWithArgmax:()=>n7,maximum:()=>es,mean:()=>Pt,memory:()=>mf,meshgrid:()=>QF,metrics:()=>J6,min:()=>Ao,minimum:()=>np,mirrorPad:()=>s7,mod:()=>$0,model:()=>xB,models:()=>Q6,moments:()=>F0,movingAverage:()=>z_,mul:()=>W,multiRNNCell:()=>oM,multinomial:()=>i7,neg:()=>Mt,nextFrame:()=>oA,norm:()=>aA,notEqual:()=>wu,oneHot:()=>kh,ones:()=>or,onesLike:()=>kr,op:()=>U,outerProduct:()=>pM,pad:()=>Cn,pad1d:()=>mM,pad2d:()=>yM,pad3d:()=>xM,pad4d:()=>vM,pool:()=>NM,pow:()=>Ps,prelu:()=>_0,print:()=>Kw,prod:()=>Uy,profile:()=>PR,rand:()=>$M,randomGamma:()=>zM,randomNormal:()=>o7,randomUniform:()=>cd,range:()=>ku,ready:()=>gf,real:()=>Ih,reciprocal:()=>l7,registerBackend:()=>dd,registerCallbackConstructor:()=>wB,registerGradient:()=>Sw,registerKernel:()=>kn,registerOp:()=>pU,regularizers:()=>e4,relu:()=>En,relu6:()=>Hy,removeBackend:()=>LR,reshape:()=>q,reverse:()=>Ir,reverse1d:()=>GM,reverse2d:()=>HM,reverse3d:()=>XM,reverse4d:()=>ZM,rfft:()=>P0,round:()=>qy,rsqrt:()=>Xy,scalar:()=>ke,scatterND:()=>x7,scatter_util:()=>xy,selu:()=>Ky,separableConv2d:()=>u7,sequential:()=>bB,serialization:()=>oe,setBackend:()=>bk,setPlatform:()=>BR,setThreadsCount:()=>f2e,setWasmPath:()=>c2e,setWasmPaths:()=>sT,setWebGLContext:()=>eb,setdiff1dAsync:()=>d7,shared:()=>ym,sigmoid:()=>xr,sign:()=>h7,signal:()=>NO,sin:()=>Zy,sinh:()=>Yy,slice:()=>Pe,slice1d:()=>z0,slice2d:()=>Jy,slice3d:()=>Iu,slice4d:()=>Su,slice_util:()=>Ft,softmax:()=>sp,softplus:()=>pd,spaceToBatchND:()=>M0,sparse:()=>Jd,sparseToDense:()=>rA,spectral:()=>SO,split:()=>xa,sqrt:()=>va,square:()=>ct,squaredDifference:()=>eA,squeeze:()=>ft,stack:()=>_a,step:()=>ip,stridedSlice:()=>p7,string:()=>Hc,sub:()=>ce,sum:()=>we,sumOutType:()=>Yh,tan:()=>c7,tanh:()=>xu,tensor:()=>lt,tensor1d:()=>Lt,tensor2d:()=>Gn,tensor3d:()=>tk,tensor4d:()=>w_,tensor5d:()=>k_,tensor6d:()=>I_,tensor_util:()=>tn,test_util:()=>mk,tidy:()=>Z,tile:()=>Mr,time:()=>DR,topk:()=>f7,train:()=>so,transpose:()=>Je,truncatedNormal:()=>D0,unique:()=>f1,unregisterGradient:()=>zC,unregisterKernel:()=>_C,unsortedSegmentSum:()=>m7,unstack:()=>Sr,upcastType:()=>ba,util:()=>w,valueAndGrad:()=>RF,valueAndGrads:()=>$F,variable:()=>g7,variableGrads:()=>Qk,version:()=>Ib,version_converter:()=>yG,version_core:()=>Ak,version_cpu:()=>rH,version_layers:()=>RA,version_wasm:()=>g2e,version_webgl:()=>TQ,webgl:()=>CQ,webgl_util:()=>ZI,webgpu:()=>Q8,where:()=>Ma,whereAsync:()=>tA,zeros:()=>Dt,zerosLike:()=>Qe});var V9=Object.create,Gf=Object.defineProperty,U9=Object.getOwnPropertyDescriptor,uw=Object.getOwnPropertyNames,G9=Object.getPrototypeOf,j9=Object.prototype.hasOwnProperty,H9=e=>Gf(e,"__esModule",{value:!0}),na=(e,t)=>function(){return t||(0,e[uw(e)[0]])((t={exports:{}}).exports,t),t.exports},Le=(e,t)=>{for(var a in t)Gf(e,a,{get:t[a],enumerable:!0})},q9=(e,t,a,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of uw(t))!j9.call(e,n)&&(a||n!=="default")&&Gf(e,n,{get:()=>t[n],enumerable:!(r=U9(t,n))||r.enumerable});return e},Oo=(e,t)=>q9(H9(Gf(e!=null?V9(G9(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),X9=na({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var a=null;try{a=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(k,_,z){this.low=k|0,this.high=_|0,this.unsigned=!!z}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function n(k){return(k&&k.__isLong__)===!0}r.isLong=n;var s={},i={};function o(k,_){var z,L,j;return _?(k>>>=0,(j=0<=k&&k<256)&&(L=i[k],L)?L:(z=u(k,(k|0)<0?-1:0,!0),j&&(i[k]=z),z)):(k|=0,(j=-128<=k&&k<128)&&(L=s[k],L)?L:(z=u(k,k<0?-1:0,!1),j&&(s[k]=z),z))}r.fromInt=o;function l(k,_){if(isNaN(k))return _?b:x;if(_){if(k<0)return b;if(k>=g)return R}else{if(k<=-y)return P;if(k+1>=y)return E}return k<0?l(-k,_).neg():u(k%m|0,k/m|0,_)}r.fromNumber=l;function u(k,_,z){return new r(k,_,z)}r.fromBits=u;var d=Math.pow;function p(k,_,z){if(k.length===0)throw Error("empty string");if(k==="NaN"||k==="Infinity"||k==="+Infinity"||k==="-Infinity")return x;if(typeof _=="number"?(z=_,_=!1):_=!!_,z=z||10,z<2||36<z)throw RangeError("radix");var L;if((L=k.indexOf("-"))>0)throw Error("interior hyphen");if(L===0)return p(k.substring(1),_,z).neg();for(var j=l(d(z,8)),D=x,B=0;B<k.length;B+=8){var G=Math.min(8,k.length-B),ee=parseInt(k.substring(B,B+G),z);if(G<8){var Q=l(d(z,G));D=D.mul(Q).add(l(ee))}else D=D.mul(j),D=D.add(l(ee))}return D.unsigned=_,D}r.fromString=p;function h(k,_){return typeof k=="number"?l(k,_):typeof k=="string"?p(k,_):u(k.low,k.high,typeof _=="boolean"?_:k.unsigned)}r.fromValue=h;var c=1<<16,f=1<<24,m=c*c,g=m*m,y=g/2,A=o(f),x=o(0);r.ZERO=x;var b=o(0,!0);r.UZERO=b;var v=o(1);r.ONE=v;var S=o(1,!0);r.UONE=S;var N=o(-1);r.NEG_ONE=N;var E=u(-1,2147483647,!1);r.MAX_VALUE=E;var R=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=R;var P=u(0,-2147483648,!1);r.MIN_VALUE=P;var $=r.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},$.toString=function(k){if(k=k||10,k<2||36<k)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var _=l(k),z=this.div(_),L=z.mul(_).sub(this);return z.toString(k)+L.toInt().toString(k)}else return"-"+this.neg().toString(k);for(var j=l(d(k,6),this.unsigned),D=this,B="";;){var G=D.div(j),ee=D.sub(G.mul(j)).toInt()>>>0,Q=ee.toString(k);if(D=G,D.isZero())return Q+B;for(;Q.length<6;)Q="0"+Q;B=""+Q+B}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var k=this.high!=0?this.high:this.low,_=31;_>0&&(k&1<<_)==0;_--);return this.high!=0?_+33:_+1},$.isZero=function(){return this.high===0&&this.low===0},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return(this.low&1)===1},$.isEven=function(){return(this.low&1)===0},$.equals=function(k){return n(k)||(k=h(k)),this.unsigned!==k.unsigned&&this.high>>>31===1&&k.high>>>31===1?!1:this.high===k.high&&this.low===k.low},$.eq=$.equals,$.notEquals=function(k){return!this.eq(k)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(k){return this.comp(k)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(k){return this.comp(k)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(k){return this.comp(k)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(k){return this.comp(k)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(k){if(n(k)||(k=h(k)),this.eq(k))return 0;var _=this.isNegative(),z=k.isNegative();return _&&!z?-1:!_&&z?1:this.unsigned?k.high>>>0>this.high>>>0||k.high===this.high&&k.low>>>0>this.low>>>0?-1:1:this.sub(k).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(v)},$.neg=$.negate,$.add=function(k){n(k)||(k=h(k));var _=this.high>>>16,z=this.high&65535,L=this.low>>>16,j=this.low&65535,D=k.high>>>16,B=k.high&65535,G=k.low>>>16,ee=k.low&65535,Q=0,ne=0,Y=0,re=0;return re+=j+ee,Y+=re>>>16,re&=65535,Y+=L+G,ne+=Y>>>16,Y&=65535,ne+=z+B,Q+=ne>>>16,ne&=65535,Q+=_+D,Q&=65535,u(Y<<16|re,Q<<16|ne,this.unsigned)},$.subtract=function(k){return n(k)||(k=h(k)),this.add(k.neg())},$.sub=$.subtract,$.multiply=function(k){if(this.isZero())return x;if(n(k)||(k=h(k)),a){var _=a.mul(this.low,this.high,k.low,k.high);return u(_,a.get_high(),this.unsigned)}if(k.isZero())return x;if(this.eq(P))return k.isOdd()?P:x;if(k.eq(P))return this.isOdd()?P:x;if(this.isNegative())return k.isNegative()?this.neg().mul(k.neg()):this.neg().mul(k).neg();if(k.isNegative())return this.mul(k.neg()).neg();if(this.lt(A)&&k.lt(A))return l(this.toNumber()*k.toNumber(),this.unsigned);var z=this.high>>>16,L=this.high&65535,j=this.low>>>16,D=this.low&65535,B=k.high>>>16,G=k.high&65535,ee=k.low>>>16,Q=k.low&65535,ne=0,Y=0,re=0,le=0;return le+=D*Q,re+=le>>>16,le&=65535,re+=j*Q,Y+=re>>>16,re&=65535,re+=D*ee,Y+=re>>>16,re&=65535,Y+=L*Q,ne+=Y>>>16,Y&=65535,Y+=j*ee,ne+=Y>>>16,Y&=65535,Y+=D*G,ne+=Y>>>16,Y&=65535,ne+=z*Q+L*ee+j*G+D*B,ne&=65535,u(re<<16|le,ne<<16|Y,this.unsigned)},$.mul=$.multiply,$.divide=function(k){if(n(k)||(k=h(k)),k.isZero())throw Error("division by zero");if(a){if(!this.unsigned&&this.high===-2147483648&&k.low===-1&&k.high===-1)return this;var _=(this.unsigned?a.div_u:a.div_s)(this.low,this.high,k.low,k.high);return u(_,a.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:x;var z,L,j;if(this.unsigned){if(k.unsigned||(k=k.toUnsigned()),k.gt(this))return b;if(k.gt(this.shru(1)))return S;j=b}else{if(this.eq(P)){if(k.eq(v)||k.eq(N))return P;if(k.eq(P))return v;var D=this.shr(1);return z=D.div(k).shl(1),z.eq(x)?k.isNegative()?v:N:(L=this.sub(k.mul(z)),j=z.add(L.div(k)),j)}else if(k.eq(P))return this.unsigned?b:x;if(this.isNegative())return k.isNegative()?this.neg().div(k.neg()):this.neg().div(k).neg();if(k.isNegative())return this.div(k.neg()).neg();j=x}for(L=this;L.gte(k);){z=Math.max(1,Math.floor(L.toNumber()/k.toNumber()));for(var B=Math.ceil(Math.log(z)/Math.LN2),G=B<=48?1:d(2,B-48),ee=l(z),Q=ee.mul(k);Q.isNegative()||Q.gt(L);)z-=G,ee=l(z,this.unsigned),Q=ee.mul(k);ee.isZero()&&(ee=v),j=j.add(ee),L=L.sub(Q)}return j},$.div=$.divide,$.modulo=function(k){if(n(k)||(k=h(k)),a){var _=(this.unsigned?a.rem_u:a.rem_s)(this.low,this.high,k.low,k.high);return u(_,a.get_high(),this.unsigned)}return this.sub(this.div(k).mul(k))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return u(~this.low,~this.high,this.unsigned)},$.and=function(k){return n(k)||(k=h(k)),u(this.low&k.low,this.high&k.high,this.unsigned)},$.or=function(k){return n(k)||(k=h(k)),u(this.low|k.low,this.high|k.high,this.unsigned)},$.xor=function(k){return n(k)||(k=h(k)),u(this.low^k.low,this.high^k.high,this.unsigned)},$.shiftLeft=function(k){return n(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?u(this.low<<k,this.high<<k|this.low>>>32-k,this.unsigned):u(0,this.low<<k-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(k){return n(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?u(this.low>>>k|this.high<<32-k,this.high>>k,this.unsigned):u(this.high>>k-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(k){if(n(k)&&(k=k.toInt()),k&=63,k===0)return this;var _=this.high;if(k<32){var z=this.low;return u(z>>>k|_<<32-k,_>>>k,this.unsigned)}else return k===32?u(_,0,this.unsigned):u(_>>>k-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},$.toBytes=function(k){return k?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var k=this.high,_=this.low;return[_&255,_>>>8&255,_>>>16&255,_>>>24,k&255,k>>>8&255,k>>>16&255,k>>>24]},$.toBytesBE=function(){var k=this.high,_=this.low;return[k>>>24,k>>>16&255,k>>>8&255,k&255,_>>>24,_>>>16&255,_>>>8&255,_&255]},r.fromBytes=function(k,_,z){return z?r.fromBytesLE(k,_):r.fromBytesBE(k,_)},r.fromBytesLE=function(k,_){return new r(k[0]|k[1]<<8|k[2]<<16|k[3]<<24,k[4]|k[5]<<8|k[6]<<16|k[7]<<24,_)},r.fromBytesBE=function(k,_){return new r(k[4]<<24|k[5]<<16|k[6]<<8|k[7],k[0]<<24|k[1]<<16|k[2]<<8|k[3],_)}}}),K9=na({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),Z9=na({"(disabled):util"(){}}),Y9=na({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(a,r,n){function s(u){var d=this,p=l();d.next=function(){var h=2091639*d.s0+d.c*23283064365386963e-26;return d.s0=d.s1,d.s1=d.s2,d.s2=h-(d.c=h|0)},d.c=1,d.s0=p(" "),d.s1=p(" "),d.s2=p(" "),d.s0-=p(u),d.s0<0&&(d.s0+=1),d.s1-=p(u),d.s1<0&&(d.s1+=1),d.s2-=p(u),d.s2<0&&(d.s2+=1),p=null}function i(u,d){return d.c=u.c,d.s0=u.s0,d.s1=u.s1,d.s2=u.s2,d}function o(u,d){var p=new s(u),h=d&&d.state,c=p.next;return c.int32=function(){return p.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,h&&(typeof h=="object"&&i(h,p),c.state=function(){return i(p,{})}),c}function l(){var u=4022871197,d=function(p){p=String(p);for(var h=0;h<p.length;h++){u+=p.charCodeAt(h);var c=.02519603282416938*u;u=c>>>0,c-=u,c*=u,u=c>>>0,c-=u,u+=c*4294967296}return(u>>>0)*23283064365386963e-26};return d}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),J9=na({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(a,r,n){function s(l){var u=this,d="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},l===(l|0)?u.x=l:d+=l;for(var p=0;p<d.length+64;p++)u.x^=d.charCodeAt(p)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var d=new s(l),p=u&&u.state,h=function(){return(d.next()>>>0)/4294967296};return h.double=function(){do var c=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=d.next,h.quick=h,p&&(typeof p=="object"&&i(p,d),h.state=function(){return i(d,{})}),h}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),Q9=na({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(a,r,n){function s(l){var u=this,d="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:d+=l;for(var p=0;p<d.length+64;p++)u.x^=d.charCodeAt(p)|0,p==d.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var d=new s(l),p=u&&u.state,h=function(){return(d.next()>>>0)/4294967296};return h.double=function(){do var c=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=d.next,h.quick=h,p&&(typeof p=="object"&&i(p,d),h.state=function(){return i(d,{})}),h}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),eC=na({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(a,r,n){function s(l){var u=this;u.next=function(){var p=u.x,h=u.i,c,f,m;return c=p[h],c^=c>>>7,f=c^c<<24,c=p[h+1&7],f^=c^c>>>10,c=p[h+3&7],f^=c^c>>>3,c=p[h+4&7],f^=c^c<<7,c=p[h+7&7],c=c^c<<13,f^=c^c<<9,p[h]=f,u.i=h+1&7,f};function d(p,h){var c,f,m=[];if(h===(h|0))f=m[0]=h;else for(h=""+h,c=0;c<h.length;++c)m[c&7]=m[c&7]<<15^h.charCodeAt(c)+m[c+1&7]<<13;for(;m.length<8;)m.push(0);for(c=0;c<8&&m[c]===0;++c);for(c==8?f=m[7]=-1:f=m[c],p.x=m,p.i=0,c=256;c>0;--c)p.next()}d(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),p=u&&u.state,h=function(){return(d.next()>>>0)/4294967296};return h.double=function(){do var c=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=d.next,h.quick=h,p&&(p.x&&i(p,d),h.state=function(){return i(d,{})}),h}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),tC=na({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(a,r,n){function s(l){var u=this;u.next=function(){var p=u.w,h=u.X,c=u.i,f,m;return u.w=p=p+1640531527|0,m=h[c+34&127],f=h[c=c+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[c]=m^f,u.i=c,m+(p^p>>>16)|0};function d(p,h){var c,f,m,g,y,A=[],x=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,x=Math.max(x,h.length)),m=0,g=-32;g<x;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,c=A[g&127]^=f+y,m=c==0?m+1:0);for(m>=128&&(A[(h&&h.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=A[m+34&127],c=A[m=m+1&127],f^=f<<13,c^=c<<17,f^=f>>>15,c^=c>>>12,A[m]=f^c;p.w=y,p.X=A,p.i=m}d(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),p=u&&u.state,h=function(){return(d.next()>>>0)/4294967296};return h.double=function(){do var c=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=d.next,h.quick=h,p&&(p.X&&i(p,d),h.state=function(){return i(d,{})}),h}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),aC=na({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(a,r,n){function s(l){var u=this,d="";u.next=function(){var h=u.b,c=u.c,f=u.d,m=u.a;return h=h<<25^h>>>7^c,c=c-f|0,f=f<<24^f>>>8^m,m=m-h|0,u.b=h=h<<20^h>>>12^c,u.c=c=c-f|0,u.d=f<<16^c>>>16^m,u.a=m-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):d+=l;for(var p=0;p<d.length+20;p++)u.b^=d.charCodeAt(p)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var d=new s(l),p=u&&u.state,h=function(){return(d.next()>>>0)/4294967296};return h.double=function(){do var c=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=d.next,h.quick=h,p&&(typeof p=="object"&&i(p,d),h.state=function(){return i(d,{})}),h}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),rC=na({"(disabled):crypto"(){}}),nC=na({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(a,r,n){var s=256,i=6,o=52,l="random",u=n.pow(s,i),d=n.pow(2,o),p=d*2,h=s-1,c;function f(v,S,N){var E=[];S=S==!0?{entropy:!0}:S||{};var R=A(y(S.entropy?[v,b(r)]:v??x(),3),E),P=new m(E),$=function(){for(var k=P.g(i),_=u,z=0;k<d;)k=(k+z)*s,_*=s,z=P.g(1);for(;k>=p;)k/=2,_/=2,z>>>=1;return(k+z)/_};return $.int32=function(){return P.g(4)|0},$.quick=function(){return P.g(4)/4294967296},$.double=$,A(b(P.S),r),(S.pass||N||function(k,_,z,L){return L&&(L.S&&g(L,P),k.state=function(){return g(P,{})}),z?(n[l]=k,_):k})($,R,"global"in S?S.global:this==n,S.state)}function m(v){var S,N=v.length,E=this,R=0,P=E.i=E.j=0,$=E.S=[];for(N||(v=[N++]);R<s;)$[R]=R++;for(R=0;R<s;R++)$[R]=$[P=h&P+v[R%N]+(S=$[R])],$[P]=S;(E.g=function(k){for(var _,z=0,L=E.i,j=E.j,D=E.S;k--;)_=D[L=h&L+1],z=z*s+D[h&(D[L]=D[j=h&j+_])+(D[j]=_)];return E.i=L,E.j=j,z})(s)}function g(v,S){return S.i=v.i,S.j=v.j,S.S=v.S.slice(),S}function y(v,S){var N=[],E=typeof v,R;if(S&&E=="object")for(R in v)try{N.push(y(v[R],S-1))}catch{}return N.length?N:E=="string"?v:v+"\0"}function A(v,S){for(var N=v+"",E,R=0;R<N.length;)S[h&R]=h&(E^=S[h&R]*19)+N.charCodeAt(R++);return b(S)}function x(){try{var v;return c&&(v=c.randomBytes)?v=v(s):(v=new Uint8Array(s),(a.crypto||a.msCrypto).getRandomValues(v)),b(v)}catch{var S=a.navigator,N=S&&S.plugins;return[+new Date,a,N,a.screen,b(r)]}}function b(v){return String.fromCharCode.apply(0,v)}if(A(n.random(),r),typeof t=="object"&&t.exports){t.exports=f;try{c=rC()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):n["seed"+l]=f})(typeof self<"u"?self:e,[],Math)}}),jf=na({"src/node_modules/seedrandom/index.js"(e,t){var a=Y9(),r=J9(),n=Q9(),s=eC(),i=tC(),o=aC(),l=nC();l.alea=a,l.xor128=r,l.xorwow=n,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),dw=na({"(disabled):src/node_modules/string_decoder/index.js"(){}}),sy=na({"(disabled):fs"(){}}),sf=na({"(disabled):path"(){}}),sC=na({"(disabled):worker_threads"(){}}),iC=na({"(disabled):perf_hooks"(){}}),oC=na({"(disabled):os"(){}}),lC=na({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var a=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(n){n=n||{};function s(){return Fe.buffer!=ka&&Wr(Fe.buffer),_p}function i(){return Fe.buffer!=ka&&Wr(Fe.buffer),zp}function o(){return Fe.buffer!=ka&&Wr(Fe.buffer),zd}function l(){return Fe.buffer!=ka&&Wr(Fe.buffer),Op}function u(){return Fe.buffer!=ka&&Wr(Fe.buffer),Pp}function d(){return Fe.buffer!=ka&&Wr(Fe.buffer),Dp}function p(){return Fe.buffer!=ka&&Wr(Fe.buffer),Lp}var h=typeof n<"u"?n:{},c,f;h.ready=new Promise(function(C,M){c=C,f=M});var m;typeof process<"u"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},h),y=[],A="./this.program",x=(C,M)=>{throw M},b=typeof window=="object",v=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",N=h.ENVIRONMENT_IS_PTHREAD||!1,E="";function R(C){return h.locateFile?h.locateFile(C,E):E+C}var P,$,k,_;function z(C){C instanceof Gd||Q("exiting due to exception: "+C)}var L,j,D;if(S){v?E=sf().dirname(E)+"/":E=__dirname+"/",D=()=>{j||(L=sy(),j=sf())},P=function(M,H){return D(),M=j.normalize(M),L.readFileSync(M,H?void 0:"utf8")},k=M=>{var H=P(M,!0);return H.buffer||(H=new Uint8Array(H)),H},$=(M,H,te)=>{D(),M=j.normalize(M),L.readFile(M,function(fe,Ae){fe?te(fe):H(Ae.buffer)})},process.argv.length>1&&(A=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(M){if(!(M instanceof Gd))throw M}),process.on("unhandledRejection",function(M){throw M}),x=(M,H)=>{if(Zi())throw process.exitCode=M,H;z(H),process.exit(M)},h.inspect=function(){return"[Emscripten Module object]"};let C;try{C=sC()}catch(M){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),M}global.Worker=C.Worker}else(b||v)&&(v?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof r<"u"&&r&&(E=r),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",S||(P=C=>{var M=new XMLHttpRequest;return M.open("GET",C,!1),M.send(null),M.responseText},v&&(k=C=>{var M=new XMLHttpRequest;return M.open("GET",C,!1),M.responseType="arraybuffer",M.send(null),new Uint8Array(M.response)}),$=(C,M,H)=>{var te=new XMLHttpRequest;te.open("GET",C,!0),te.responseType="arraybuffer",te.onload=()=>{if(te.status==200||te.status==0&&te.response){M(te.response);return}H()},te.onerror=H,te.send(null)}),_=C=>document.title=C);S&&typeof performance>"u"&&(global.performance=iC().performance);var B=console.log.bind(console),G=console.warn.bind(console);S&&(D(),B=C=>L.writeSync(1,C+`
`),G=C=>L.writeSync(2,C+`
`));var ee=h.print||B,Q=h.printErr||G;Object.assign(h,g),g=null,h.arguments&&(y=h.arguments),h.thisProgram&&(A=h.thisProgram),h.quit&&(x=h.quit);var ne=4;function Y(C){Y.shown||(Y.shown={}),Y.shown[C]||(Y.shown[C]=1,Q(C))}function re(C,M){if(typeof WebAssembly.Function=="function"){for(var H={i:"i32",j:"i64",f:"f32",d:"f64"},te={parameters:[],results:M[0]=="v"?[]:[H[M[0]]]},fe=1;fe<M.length;++fe)te.parameters.push(H[M[fe]]);return new WebAssembly.Function(te,C)}var Ae=[1,0,1,96],Se=M.slice(0,1),Me=M.slice(1),Rt={i:127,j:126,f:125,d:124};Ae.push(Me.length);for(var fe=0;fe<Me.length;++fe)Ae.push(Rt[Me[fe]]);Se=="v"?Ae.push(0):Ae=Ae.concat([1,Rt[Se]]),Ae[1]=Ae.length-2;var Gr=new Uint8Array([0,97,115,109,1,0,0,0].concat(Ae,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),jr=new WebAssembly.Module(Gr),fc=new WebAssembly.Instance(jr,{e:{f:C}}),jd=fc.exports.f;return jd}var le=[],ye;function xe(){if(le.length)return le.pop();try{pr.grow(1)}catch(C){throw C instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":C}return pr.length-1}function Ce(C,M){for(var H=C;H<C+M;H++){var te=Wl(H);te&&ye.set(te,H)}}var Re=0,Oe=C=>{Re=C},We=Atomics.load,Xe=Atomics.store,rt=Atomics.compareExchange,st;h.wasmBinary&&(st=h.wasmBinary);var it=h.noExitRuntime||!0;typeof WebAssembly!="object"&&Pl("no native wasm support detected");var Fe,yt,pt=!1,wa;function sa(C,M){C||Pl(M)}function Wa(C){var M=h["_"+C];return M}function Kt(C,M,H,te,fe){var Ae={string:function(cr){var ql=0;if(cr!=null&&cr!==0){var r5=(cr.length<<2)+1;ql=Hl(r5),Xi(cr,ql,r5)}return ql},array:function(cr){var ql=Hl(cr.length);return Fn(cr,ql),ql}};function Se(cr){return M==="string"?hr(cr):M==="boolean"?Boolean(cr):cr}var Me=Wa(C),Rt=[],Gr=0;if(te)for(var jr=0;jr<te.length;jr++){var fc=Ae[H[jr]];fc?(Gr===0&&(Gr=l2()),Rt[jr]=fc(te[jr])):Rt[jr]=te[jr]}var jd=Me.apply(null,Rt);function L9(cr){return Gr!==0&&dc(Gr),Se(cr)}return jd=L9(jd),jd}function ia(C,M,H,te){H=H||[];var fe=H.every(function(Se){return Se==="number"}),Ae=M!=="string";return Ae&&fe&&!te?Wa(C):function(){return Kt(C,M,H,arguments,te)}}var Lr=1;function Ba(C){var M=new TextDecoder(C);this.decode=H=>(H.buffer instanceof SharedArrayBuffer&&(H=new Uint8Array(H)),M.decode.call(M,H))}var Zt=typeof TextDecoder<"u"?new Ba("utf8"):void 0;function dr(C,M,H){for(var te=M+H,fe=M;C[fe]&&!(fe>=te);)++fe;if(fe-M>16&&C.subarray&&Zt)return Zt.decode(C.subarray(M,fe));for(var Ae="";M<fe;){var Se=C[M++];if(!(Se&128)){Ae+=String.fromCharCode(Se);continue}var Me=C[M++]&63;if((Se&224)==192){Ae+=String.fromCharCode((Se&31)<<6|Me);continue}var Rt=C[M++]&63;if((Se&240)==224?Se=(Se&15)<<12|Me<<6|Rt:Se=(Se&7)<<18|Me<<12|Rt<<6|C[M++]&63,Se<65536)Ae+=String.fromCharCode(Se);else{var Gr=Se-65536;Ae+=String.fromCharCode(55296|Gr>>10,56320|Gr&1023)}}return Ae}function hr(C,M){return C?dr(i(),C,M):""}function ls(C,M,H,te){if(!(te>0))return 0;for(var fe=H,Ae=H+te-1,Se=0;Se<C.length;++Se){var Me=C.charCodeAt(Se);if(Me>=55296&&Me<=57343){var Rt=C.charCodeAt(++Se);Me=65536+((Me&1023)<<10)|Rt&1023}if(Me<=127){if(H>=Ae)break;M[H++]=Me}else if(Me<=2047){if(H+1>=Ae)break;M[H++]=192|Me>>6,M[H++]=128|Me&63}else if(Me<=65535){if(H+2>=Ae)break;M[H++]=224|Me>>12,M[H++]=128|Me>>6&63,M[H++]=128|Me&63}else{if(H+3>=Ae)break;M[H++]=240|Me>>18,M[H++]=128|Me>>12&63,M[H++]=128|Me>>6&63,M[H++]=128|Me&63}}return M[H]=0,H-fe}function Xi(C,M,H){return ls(C,i(),M,H)}function Mp(C){for(var M=0,H=0;H<C.length;++H){var te=C.charCodeAt(H);te>=55296&&te<=57343&&(te=65536+((te&1023)<<10)|C.charCodeAt(++H)&1023),te<=127?++M:te<=2047?M+=2:te<=65535?M+=3:M+=4}return M}var us=typeof TextDecoder<"u"?new Ba("utf-16le"):void 0;function Fn(C,M){s().set(C,M)}function _d(C,M,H){for(var te=0;te<C.length;++te)s()[M++>>0]=C.charCodeAt(te);H||(s()[M>>0]=0)}function zl(C,M){return C%M>0&&(C+=M-C%M),C}var ka,_p,zp,zd,Op,Pp,Pb,Dp,Lp;N&&(ka=h.buffer);function Wr(C){ka=C,h.HEAP8=_p=new Int8Array(C),h.HEAP16=zd=new Int16Array(C),h.HEAP32=Pp=new Int32Array(C),h.HEAPU8=zp=new Uint8Array(C),h.HEAPU16=Op=new Uint16Array(C),h.HEAPU32=Pb=new Uint32Array(C),h.HEAPF32=Dp=new Float32Array(C),h.HEAPF64=Lp=new Float64Array(C)}var Wp=h.INITIAL_MEMORY||16777216;if(N)Fe=h.wasmMemory,ka=h.buffer;else if(h.wasmMemory)Fe=h.wasmMemory;else if(Fe=new WebAssembly.Memory({initial:Wp/65536,maximum:32768,shared:!0}),!(Fe.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Fe&&(ka=Fe.buffer),Wp=ka.byteLength,Wr(ka);var pr,Ol=[],ds=[],Mm=[],Bp=[],Ki=!1,_m=!1,Vp=0;function Zi(){return it||Vp>0}function Ia(){if(h.preRun)for(typeof h.preRun=="function"&&(h.preRun=[h.preRun]);h.preRun.length;)Db(h.preRun.shift());qp(Ol)}function Od(){Ki=!0,!N&&qp(ds)}function zm(){N||(ze.terminateAllThreads(),_m=!0)}function Om(){if(!N){if(h.postRun)for(typeof h.postRun=="function"&&(h.postRun=[h.postRun]);h.postRun.length;)Pd(h.postRun.shift());qp(Bp)}}function Db(C){Ol.unshift(C)}function Lb(C){ds.unshift(C)}function Pd(C){Bp.unshift(C)}var hs=0,Up=null,Br=null;function Dd(C){hs++,h.monitorRunDependencies&&h.monitorRunDependencies(hs)}function Wb(C){if(hs--,h.monitorRunDependencies&&h.monitorRunDependencies(hs),hs==0&&(Up!==null&&(clearInterval(Up),Up=null),Br)){var M=Br;Br=null,M()}}h.preloadedImages={},h.preloadedAudios={};function Pl(C){N?postMessage({cmd:"onAbort",arg:C}):h.onAbort&&h.onAbort(C),C="Aborted("+C+")",Q(C),pt=!0,wa=1,C+=". Build with -s ASSERTIONS=1 for more info.";var M=new WebAssembly.RuntimeError(C);throw f(M),M}var Pm="data:application/octet-stream;base64,";function Gp(C){return C.startsWith(Pm)}function jp(C){return C.startsWith("file://")}var Sa;Sa="tfjs-backend-wasm-threaded-simd.wasm",Gp(Sa)||(Sa=R(Sa));function Hp(C){try{if(C==Sa&&st)return new Uint8Array(st);if(k)return k(C);throw"both async and sync fetching of the wasm failed"}catch(M){Pl(M)}}function Dl(){if(!st&&(b||v)){if(typeof fetch=="function"&&!jp(Sa))return fetch(Sa,{credentials:"same-origin"}).then(function(C){if(!C.ok)throw"failed to load wasm binary file at '"+Sa+"'";return C.arrayBuffer()}).catch(function(){return Hp(Sa)});if($)return new Promise(function(C,M){$(Sa,function(H){C(new Uint8Array(H))},M)})}return Promise.resolve().then(function(){return Hp(Sa)})}function Dm(){var C={env:sc,wasi_snapshot_preview1:sc};function M(Se,Me){var Rt=Se.exports;if(h.asm=Rt,jm(h.asm.emscripten_tls_init),pr=h.asm.__indirect_function_table,Lb(h.asm.__wasm_call_ctors),yt=Me,!N){var Gr=ze.unusedWorkers.length;ze.unusedWorkers.forEach(function(jr){ze.loadWasmModuleToWorker(jr,function(){--Gr||Wb("wasm-instantiate")})})}}N||Dd("wasm-instantiate");function H(Se){M(Se.instance,Se.module)}function te(Se){return Dl().then(function(Me){return WebAssembly.instantiate(Me,C)}).then(function(Me){return Me}).then(Se,function(Me){Q("failed to asynchronously prepare wasm: "+Me),Pl(Me)})}function fe(){return!st&&typeof WebAssembly.instantiateStreaming=="function"&&!Gp(Sa)&&!jp(Sa)&&typeof fetch=="function"?fetch(Sa,{credentials:"same-origin"}).then(function(Se){var Me=WebAssembly.instantiateStreaming(Se,C);return Me.then(H,function(Rt){return Q("wasm streaming compile failed: "+Rt),Q("falling back to ArrayBuffer instantiation"),te(H)})}):te(H)}if(h.instantiateWasm)try{var Ae=h.instantiateWasm(C,M);return Ae}catch(Se){return Q("Module.instantiateWasm callback failed with error: "+Se),!1}return fe().catch(f),{}}var Bb,Vb,Lm={};function qp(C){for(;C.length>0;){var M=C.shift();if(typeof M=="function"){M(h);continue}var H=M.func;typeof H=="number"?M.arg===void 0?Wl(H)():Wl(H)(M.arg):H(M.arg===void 0?null:M.arg)}}function Ll(C){var M=l2(),H=C();return dc(M),H}function qT(C){return C}function Ub(C){var M=/\b_Z[\w\d_]+/g;return C.replace(M,function(H){var te=H;return H===te?H:te+" ["+H+"]"})}function Wm(C){u()[C>>2]=0;var M=ze.pthreads[C];delete ze.pthreads[C],M.worker.terminate(),o2(C),ze.runningWorkers.splice(ze.runningWorkers.indexOf(M.worker),1),M.worker.pthread=void 0}function Bm(C){var M=ze.pthreads[C];M.worker.postMessage({cmd:"cancel"})}function Xp(C){var M=ze.pthreads[C];if(M){u()[C>>2]=0;var H=M.worker;ze.returnWorkerToPool(H)}}function Kp(C){O9(C)}function Vm(C){if(C instanceof Gd||C=="unwind")return wa;x(1,C)}var ze={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){N?ze.initWorker():ze.initMainThread()},initMainThread:function(){for(var C=8,M=0;M<C;++M)ze.allocateUnusedWorker()},initWorker:function(){it=!1},pthreads:{},setExitStatus:function(C){wa=C},terminateAllThreads:function(){for(var C in ze.pthreads){var M=ze.pthreads[C];M&&M.worker&&ze.returnWorkerToPool(M.worker)}for(var H=0;H<ze.unusedWorkers.length;++H){var te=ze.unusedWorkers[H];te.terminate()}ze.unusedWorkers=[]},returnWorkerToPool:function(C){ze.runWithoutMainThreadQueuedCalls(function(){delete ze.pthreads[C.pthread.threadInfoStruct],ze.unusedWorkers.push(C),ze.runningWorkers.splice(ze.runningWorkers.indexOf(C),1),o2(C.pthread.threadInfoStruct),C.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(C){u()[a5>>2]=0;try{C()}finally{u()[a5>>2]=1}},receiveObjectTransfer:function(C){},threadInit:function(){for(var C in ze.tlsInitFunctions)ze.tlsInitFunctions[C]()},loadWasmModuleToWorker:function(C,M){C.onmessage=H=>{var te=H.data,fe=te.cmd;if(C.pthread&&(ze.currentProxiedOperationCallerThread=C.pthread.threadInfoStruct),te.targetThread&&te.targetThread!=uc()){var Ae=ze.pthreads[te.targetThread];Ae?Ae.worker.postMessage(te,te.transferList):Q('Internal error! Worker sent a message "'+fe+'" to target pthread '+te.targetThread+", but that thread no longer exists!"),ze.currentProxiedOperationCallerThread=void 0;return}fe==="processQueuedMainThreadWork"?Yb():fe==="spawnThread"?Yp(te):fe==="cleanupThread"?Xp(te.thread):fe==="killThread"?Wm(te.thread):fe==="cancelThread"?Bm(te.thread):fe==="loaded"?(C.loaded=!0,M&&M(C),C.runPthread&&(C.runPthread(),delete C.runPthread)):fe==="print"?ee("Thread "+te.threadId+": "+te.text):fe==="printErr"?Q("Thread "+te.threadId+": "+te.text):fe==="alert"?alert("Thread "+te.threadId+": "+te.text):te.target==="setimmediate"?C.postMessage(te):fe==="onAbort"?h.onAbort&&h.onAbort(te.arg):Q("worker sent an unknown command "+fe),ze.currentProxiedOperationCallerThread=void 0},C.onerror=H=>{var te="worker sent an error!";throw Q(te+" "+H.filename+":"+H.lineno+": "+H.message),H},S&&(C.on("message",function(H){C.onmessage({data:H})}),C.on("error",function(H){C.onerror(H)}),C.on("detachedExit",function(){})),C.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||r,wasmMemory:Fe,wasmModule:yt})},allocateUnusedWorker:function(){var C=R("tfjs-backend-wasm-threaded-simd.worker.js");ze.unusedWorkers.push(new Worker(C))},getNewWorker:function(){return ze.unusedWorkers.length==0&&(ze.allocateUnusedWorker(),ze.loadWasmModuleToWorker(ze.unusedWorkers[0])),ze.unusedWorkers.pop()}};function Um(){var C=uc(),M=u()[C+44>>2],H=u()[C+48>>2],te=M-H;t5(M,te),dc(M)}h.establishStackSpace=Um;function Zp(C){if(N)return Qi(1,0,C);try{Kp(C)}catch(M){Vm(M)}}var Yi=[];function Wl(C){var M=Yi[C];return M||(C>=Yi.length&&(Yi.length=C+1),Yi[C]=M=pr.get(C)),M}function Gm(C,M){return Wl(C)(M)}h.invokeEntryPoint=Gm;function Gb(){var C=new Error;if(!C.stack){try{throw new Error}catch(M){C=M}if(!C.stack)return"(no stack trace available)"}return C.stack.toString()}function jm(C,M,H){ze.tlsInitFunctions.push(C)}function jb(C,M){pr.set(C,M),Yi[C]=M}var Ji;S?Ji=()=>{var C=process.hrtime();return C[0]*1e3+C[1]/1e6}:N?Ji=()=>performance.now()-h.__performance_now_clock_drift:Ji=()=>performance.now();var Hm=!0;function qm(C){return u()[Zb()>>2]=C,C}function Xm(C,M){var H;if(C===0)H=Date.now();else if((C===1||C===4)&&Hm)H=Ji();else return qm(28),-1;return u()[M>>2]=H/1e3|0,u()[M+4>>2]=H%1e3*1e3*1e3|0,0}function Km(C,M){return Xm(C,M)}function Zm(C){Jb(C,!v,1,!b),ze.threadInit()}function Ym(C){N?postMessage({cmd:"cleanupThread",thread:C}):Xp(C)}function Yp(C){var M=ze.getNewWorker();if(!M)return 6;ze.runningWorkers.push(M);var H=ze.pthreads[C.pthread_ptr]={worker:M,threadInfoStruct:C.pthread_ptr};M.pthread=H;var te={cmd:"run",start_routine:C.startRoutine,arg:C.arg,threadInfoStruct:C.pthread_ptr};return M.runPthread=()=>{te.time=performance.now(),M.postMessage(te,C.transferList)},M.loaded&&(M.runPthread(),delete M.runPthread),0}function Jm(C,M,H,te){if(typeof SharedArrayBuffer>"u")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var fe=[],Ae=0;if(N&&(fe.length===0||Ae))return Qb(687865856,C,M,H,te);if(Ae)return Ae;var Se={startRoutine:H,pthread_ptr:C,arg:te,transferList:fe};return N?(Se.cmd="spawnThread",postMessage(Se,fe),0):Yp(Se)}function Qm(){return 2097152}function eg(C,M){if(C==M)postMessage({cmd:"processQueuedMainThreadWork"});else if(N)postMessage({targetThread:C,cmd:"processThreadQueue"});else{var H=ze.pthreads[C],te=H&&H.worker;if(!te)return;te.postMessage({cmd:"processThreadQueue"})}return 1}function tg(){Pl("")}function ag(){S||v||Y("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Jp(){return 2147483648}function rg(C,M,H){i().copyWithin(C,M,M+H)}function ng(){return S?oC().cpus().length:navigator.hardwareConcurrency}function Qi(C,M){var H=arguments.length-2,te=arguments;return Ll(function(){for(var fe=H,Ae=Hl(fe*8),Se=Ae>>3,Me=0;Me<H;Me++){var Rt=te[2+Me];p()[Se+Me]=Rt}return e5(C,fe,Ae,M)})}var Ld=[];function sg(C,M,H){Ld.length=M;for(var te=H>>3,fe=0;fe<M;fe++)Ld[fe]=p()[te+fe];var Ae=C<0,Se=Ae?Lm[-C-1]:Ig[C];return Se.apply(null,Ld)}function ig(C){try{return Fe.grow(C-ka.byteLength+65535>>>16),Wr(Fe.buffer),1}catch{}}function og(C){var M=i().length;if(C=C>>>0,C<=M)return!1;var H=Jp();if(C>H)return!1;for(var te=1;te<=4;te*=2){var fe=M*(1+.2/te);fe=Math.min(fe,C+100663296);var Ae=Math.min(H,zl(Math.max(C,fe),65536)),Se=ig(Ae);if(Se)return!0}return!1}var qe={inEventHandler:0,removeAllEventListeners:function(){for(var C=qe.eventHandlers.length-1;C>=0;--C)qe._removeHandler(C);qe.eventHandlers=[],qe.deferredCalls=[]},registerRemoveEventListeners:function(){qe.removeEventListenersRegistered||(Mm.push(qe.removeAllEventListeners),qe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(C,M,H){function te(Se,Me){if(Se.length!=Me.length)return!1;for(var Rt in Se)if(Se[Rt]!=Me[Rt])return!1;return!0}for(var fe in qe.deferredCalls){var Ae=qe.deferredCalls[fe];if(Ae.targetFunction==C&&te(Ae.argsList,H))return}qe.deferredCalls.push({targetFunction:C,precedence:M,argsList:H}),qe.deferredCalls.sort(function(Se,Me){return Se.precedence<Me.precedence})},removeDeferredCalls:function(C){for(var M=0;M<qe.deferredCalls.length;++M)qe.deferredCalls[M].targetFunction==C&&(qe.deferredCalls.splice(M,1),--M)},canPerformEventHandlerRequests:function(){return qe.inEventHandler&&qe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(qe.canPerformEventHandlerRequests())for(var C=0;C<qe.deferredCalls.length;++C){var M=qe.deferredCalls[C];qe.deferredCalls.splice(C,1),--C,M.targetFunction.apply(null,M.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(C,M){for(var H=0;H<qe.eventHandlers.length;++H)qe.eventHandlers[H].target==C&&(!M||M==qe.eventHandlers[H].eventTypeString)&&qe._removeHandler(H--)},_removeHandler:function(C){var M=qe.eventHandlers[C];M.target.removeEventListener(M.eventTypeString,M.eventListenerFunc,M.useCapture),qe.eventHandlers.splice(C,1)},registerOrRemoveHandler:function(C){var M=function(te){++qe.inEventHandler,qe.currentEventHandler=C,qe.runDeferredCalls(),C.handlerFunc(te),qe.runDeferredCalls(),--qe.inEventHandler};if(C.callbackfunc)C.eventListenerFunc=M,C.target.addEventListener(C.eventTypeString,M,C.useCapture),qe.eventHandlers.push(C),qe.registerRemoveEventListeners();else for(var H=0;H<qe.eventHandlers.length;++H)qe.eventHandlers[H].target==C.target&&qe.eventHandlers[H].eventTypeString==C.eventTypeString&&qe._removeHandler(H--)},queueEventHandlerOnThread_iiii:function(C,M,H,te,fe){Ll(function(){var Ae=Hl(12);u()[Ae>>2]=H,u()[Ae+4>>2]=te,u()[Ae+8>>2]=fe,i2(C,637534208,M,te,Ae)})},getTargetThreadForEventCallback:function(C){switch(C){case 1:return 0;case 2:return ze.currentProxiedOperationCallerThread;default:return C}},getNodeNameForTarget:function(C){return C?C==window?"#window":C==screen?"#screen":C&&C.nodeName?C.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function lg(C){var M=Mp(C)+1,H=s2(M);return Xi(C,H,M),H}function ug(C,M,H,te){Ll(function(){var fe=Hl(12),Ae=0;M&&(Ae=lg(M)),u()[fe>>2]=Ae,u()[fe+4>>2]=H,u()[fe+8>>2]=te,i2(C,657457152,0,Ae,fe)})}function dg(C,M,H,te){M=M?hr(M):"",ug(C,M,H,te)}function hg(C){return C>2?hr(C):C}var pg=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function cg(C){C=hg(C);var M=pg[C]||(typeof document<"u"?document.querySelector(C):void 0);return M}function Wd(C){return cg(C)}function Qp(C,M,H){var te=Wd(C);if(!te)return-4;if(te.canvasSharedPtr&&(u()[te.canvasSharedPtr>>2]=M,u()[te.canvasSharedPtr+4>>2]=H),te.offscreenCanvas||!te.controlTransferredOffscreen){te.offscreenCanvas&&(te=te.offscreenCanvas);var fe=!1;if(te.GLctxObject&&te.GLctxObject.GLctx){var Ae=te.GLctxObject.GLctx.getParameter(2978);fe=Ae[0]===0&&Ae[1]===0&&Ae[2]===te.width&&Ae[3]===te.height}te.width=M,te.height=H,fe&&te.GLctxObject.GLctx.viewport(0,0,M,H)}else if(te.canvasSharedPtr){var Se=u()[te.canvasSharedPtr+8>>2];return dg(Se,C,M,H),1}else return-4;return 0}function ec(C,M,H){return N?Qi(2,1,C,M,H):Qp(C,M,H)}function fg(C,M,H){var te=Wd(C);return te?Qp(C,M,H):ec(C,M,H)}function mg(){throw"unwind"}function gg(C){var M=C.getExtension("ANGLE_instanced_arrays");if(M)return C.vertexAttribDivisor=function(H,te){M.vertexAttribDivisorANGLE(H,te)},C.drawArraysInstanced=function(H,te,fe,Ae){M.drawArraysInstancedANGLE(H,te,fe,Ae)},C.drawElementsInstanced=function(H,te,fe,Ae,Se){M.drawElementsInstancedANGLE(H,te,fe,Ae,Se)},1}function yg(C){var M=C.getExtension("OES_vertex_array_object");if(M)return C.createVertexArray=function(){return M.createVertexArrayOES()},C.deleteVertexArray=function(H){M.deleteVertexArrayOES(H)},C.bindVertexArray=function(H){M.bindVertexArrayOES(H)},C.isVertexArray=function(H){return M.isVertexArrayOES(H)},1}function Ag(C){var M=C.getExtension("WEBGL_draw_buffers");if(M)return C.drawBuffers=function(H,te){M.drawBuffersWEBGL(H,te)},1}function xg(C){return!!(C.multiDrawWebgl=C.getExtension("WEBGL_multi_draw"))}var Et={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(C){Et.lastError||(Et.lastError=C)},getNewId:function(C){for(var M=Et.counter++,H=C.length;H<M;H++)C[H]=null;return M},getSource:function(C,M,H,te){for(var fe="",Ae=0;Ae<M;++Ae){var Se=te?u()[te+Ae*4>>2]:-1;fe+=hr(u()[H+Ae*4>>2],Se<0?void 0:Se)}return fe},createContext:function(C,M){C.getContextSafariWebGL2Fixed||(C.getContextSafariWebGL2Fixed=C.getContext,C.getContext=function(fe,Ae){var Se=C.getContextSafariWebGL2Fixed(fe,Ae);return fe=="webgl"==Se instanceof WebGLRenderingContext?Se:null});var H=C.getContext("webgl",M);if(!H)return 0;var te=Et.registerContext(H,M);return te},registerContext:function(C,M){var H=s2(8);u()[H+4>>2]=uc();var te={handle:H,attributes:M,version:M.majorVersion,GLctx:C};return C.canvas&&(C.canvas.GLctxObject=te),Et.contexts[H]=te,(typeof M.enableExtensionsByDefault>"u"||M.enableExtensionsByDefault)&&Et.initExtensions(te),H},makeContextCurrent:function(C){return Et.currentContext=Et.contexts[C],h.ctx=nc=Et.currentContext&&Et.currentContext.GLctx,!(C&&!nc)},getContext:function(C){return Et.contexts[C]},deleteContext:function(C){Et.currentContext===Et.contexts[C]&&(Et.currentContext=null),typeof qe=="object"&&qe.removeAllHandlersOnTarget(Et.contexts[C].GLctx.canvas),Et.contexts[C]&&Et.contexts[C].GLctx.canvas&&(Et.contexts[C].GLctx.canvas.GLctxObject=void 0),Kb(Et.contexts[C].handle),Et.contexts[C]=null},initExtensions:function(C){if(C||(C=Et.currentContext),!C.initExtensionsDone){C.initExtensionsDone=!0;var M=C.GLctx;gg(M),yg(M),Ag(M),M.disjointTimerQueryExt=M.getExtension("EXT_disjoint_timer_query"),xg(M);var H=M.getSupportedExtensions()||[];H.forEach(function(te){!te.includes("lose_context")&&!te.includes("debug")&&M.getExtension(te)})}}},bg=["default","low-power","high-performance"];function vg(C,M){var H=M>>2,te=u()[H+6],fe={alpha:!!u()[H+0],depth:!!u()[H+1],stencil:!!u()[H+2],antialias:!!u()[H+3],premultipliedAlpha:!!u()[H+4],preserveDrawingBuffer:!!u()[H+5],powerPreference:bg[te],failIfMajorPerformanceCaveat:!!u()[H+7],majorVersion:u()[H+8],minorVersion:u()[H+9],enableExtensionsByDefault:u()[H+10],explicitSwapControl:u()[H+11],proxyContextToMainThread:u()[H+12],renderViaOffscreenBackBuffer:u()[H+13]},Ae=Wd(C);if(!Ae||fe.explicitSwapControl)return 0;var Se=Et.createContext(Ae,fe);return Se}function wg(C,M){return vg(C,M)}var Bl={mappings:{},buffers:[null,[],[]],printChar:function(C,M){var H=Bl.buffers[C];M===0||M===10?((C===1?ee:Q)(dr(H,0)),H.length=0):H.push(M)},varargs:void 0,get:function(){Bl.varargs+=4;var C=u()[Bl.varargs-4>>2];return C},getStr:function(C){var M=hr(C);return M},get64:function(C,M){return C}};function tc(C){return N?Qi(3,1,C):0}function ac(C,M,H,te,fe){if(N)return Qi(4,1,C,M,H,te,fe)}function rc(C,M,H,te){if(N)return Qi(5,1,C,M,H,te);for(var fe=0,Ae=0;Ae<H;Ae++){var Se=u()[M>>2],Me=u()[M+4>>2];M+=8;for(var Rt=0;Rt<Me;Rt++)Bl.printChar(C,i()[Se+Rt]);fe+=Me}return u()[te>>2]=fe,0}function kg(C){Oe(C)}ze.init();var nc,Ig=[null,Zp,ec,tc,ac,rc],Hb=!1,sc={__clock_gettime:Km,__emscripten_init_main_thread_js:Zm,__emscripten_thread_cleanup:Ym,__pthread_create_js:Jm,_emscripten_default_pthread_stack_size:Qm,_emscripten_notify_thread_queue:eg,abort:tg,emscripten_check_blocking_allowed:ag,emscripten_get_heap_max:Jp,emscripten_get_now:Ji,emscripten_memcpy_big:rg,emscripten_num_logical_cores:ng,emscripten_receive_on_main_thread_js:sg,emscripten_resize_heap:og,emscripten_set_canvas_element_size:fg,emscripten_unwind_to_js_event_loop:mg,emscripten_webgl_create_context:wg,exit:Kp,fd_close:tc,fd_seek:ac,fd_write:rc,memory:Fe||h.wasmMemory,setTempRet0:kg},qb=Dm(),Sg=h.___wasm_call_ctors=function(){return(Sg=h.___wasm_call_ctors=h.asm.__wasm_call_ctors).apply(null,arguments)},Ng=h._init=function(){return(Ng=h._init=h.asm.init).apply(null,arguments)},Tg=h._init_with_threads_count=function(){return(Tg=h._init_with_threads_count=h.asm.init_with_threads_count).apply(null,arguments)},Cg=h._get_threads_count=function(){return(Cg=h._get_threads_count=h.asm.get_threads_count).apply(null,arguments)},Eg=h._register_tensor=function(){return(Eg=h._register_tensor=h.asm.register_tensor).apply(null,arguments)},Rg=h._dispose_data=function(){return(Rg=h._dispose_data=h.asm.dispose_data).apply(null,arguments)},$g=h._dispose=function(){return($g=h._dispose=h.asm.dispose).apply(null,arguments)},Fg=h._Abs=function(){return(Fg=h._Abs=h.asm.Abs).apply(null,arguments)},Mg=h._Add=function(){return(Mg=h._Add=h.asm.Add).apply(null,arguments)},_g=h._AddN=function(){return(_g=h._AddN=h.asm.AddN).apply(null,arguments)},zg=h._All=function(){return(zg=h._All=h.asm.All).apply(null,arguments)},Og=h._Any=function(){return(Og=h._Any=h.asm.Any).apply(null,arguments)},Pg=h._ArgMax=function(){return(Pg=h._ArgMax=h.asm.ArgMax).apply(null,arguments)},Dg=h._AvgPool=function(){return(Dg=h._AvgPool=h.asm.AvgPool).apply(null,arguments)},Lg=h._BatchMatMul=function(){return(Lg=h._BatchMatMul=h.asm.BatchMatMul).apply(null,arguments)},Wg=h._Ceil=function(){return(Wg=h._Ceil=h.asm.Ceil).apply(null,arguments)},Bg=h._ClipByValue=function(){return(Bg=h._ClipByValue=h.asm.ClipByValue).apply(null,arguments)},Vg=h._Conv2D=function(){return(Vg=h._Conv2D=h.asm.Conv2D).apply(null,arguments)},Ug=h._Conv2DBackpropInput=function(){return(Ug=h._Conv2DBackpropInput=h.asm.Conv2DBackpropInput).apply(null,arguments)},Gg=h._Cos=function(){return(Gg=h._Cos=h.asm.Cos).apply(null,arguments)},jg=h._Cosh=function(){return(jg=h._Cosh=h.asm.Cosh).apply(null,arguments)},Hg=h._CropAndResize=function(){return(Hg=h._CropAndResize=h.asm.CropAndResize).apply(null,arguments)},qg=h._Cumprod=function(){return(qg=h._Cumprod=h.asm.Cumprod).apply(null,arguments)},Xg=h._Cumsum=function(){return(Xg=h._Cumsum=h.asm.Cumsum).apply(null,arguments)},Kg=h._DepthToSpace=function(){return(Kg=h._DepthToSpace=h.asm.DepthToSpace).apply(null,arguments)},Zg=h._DepthwiseConv2dNative=function(){return(Zg=h._DepthwiseConv2dNative=h.asm.DepthwiseConv2dNative).apply(null,arguments)},Yg=h._Elu=function(){return(Yg=h._Elu=h.asm.Elu).apply(null,arguments)},Jg=h._Equal=function(){return(Jg=h._Equal=h.asm.Equal).apply(null,arguments)},Qg=h._Exp=function(){return(Qg=h._Exp=h.asm.Exp).apply(null,arguments)},e2=h._FlipLeftRight=function(){return(e2=h._FlipLeftRight=h.asm.FlipLeftRight).apply(null,arguments)},ic=h._Floor=function(){return(ic=h._Floor=h.asm.Floor).apply(null,arguments)},oc=h._FloorDiv=function(){return(oc=h._FloorDiv=h.asm.FloorDiv).apply(null,arguments)},Bd=h._FusedBatchNorm=function(){return(Bd=h._FusedBatchNorm=h.asm.FusedBatchNorm).apply(null,arguments)},t2=h._FusedConv2D=function(){return(t2=h._FusedConv2D=h.asm.FusedConv2D).apply(null,arguments)},a2=h._FusedDepthwiseConv2D=function(){return(a2=h._FusedDepthwiseConv2D=h.asm.FusedDepthwiseConv2D).apply(null,arguments)},Vl=h._Gather=function(){return(Vl=h._Gather=h.asm.Gather).apply(null,arguments)},Vd=h._GatherNd=function(){return(Vd=h._GatherNd=h.asm.GatherNd).apply(null,arguments)},Ud=h._Greater=function(){return(Ud=h._Greater=h.asm.Greater).apply(null,arguments)},Xb=h._GreaterEqual=function(){return(Xb=h._GreaterEqual=h.asm.GreaterEqual).apply(null,arguments)},Ul=h._LeakyRelu=function(){return(Ul=h._LeakyRelu=h.asm.LeakyRelu).apply(null,arguments)},Gl=h._Less=function(){return(Gl=h._Less=h.asm.Less).apply(null,arguments)},r2=h._LessEqual=function(){return(r2=h._LessEqual=h.asm.LessEqual).apply(null,arguments)},X=h._Log=function(){return(X=h._Log=h.asm.Log).apply(null,arguments)},ae=h._LogicalAnd=function(){return(ae=h._LogicalAnd=h.asm.LogicalAnd).apply(null,arguments)},ge=h._Max=function(){return(ge=h._Max=h.asm.Max).apply(null,arguments)},Ee=h._MaxPool=function(){return(Ee=h._MaxPool=h.asm.MaxPool).apply(null,arguments)},nt=h._Maximum=function(){return(nt=h._Maximum=h.asm.Maximum).apply(null,arguments)},ot=h._Mean=function(){return(ot=h._Mean=h.asm.Mean).apply(null,arguments)},Ke=h._Min=function(){return(Ke=h._Min=h.asm.Min).apply(null,arguments)},Ge=h._Minimum=function(){return(Ge=h._Minimum=h.asm.Minimum).apply(null,arguments)},Gt=h._MirrorPad=function(){return(Gt=h._MirrorPad=h.asm.MirrorPad).apply(null,arguments)},Vr=h._Multiply=function(){return(Vr=h._Multiply=h.asm.Multiply).apply(null,arguments)},Ur=h._Neg=function(){return(Ur=h._Neg=h.asm.Neg).apply(null,arguments)},jl=h._NonMaxSuppressionV3=function(){return(jl=h._NonMaxSuppressionV3=h.asm.NonMaxSuppressionV3).apply(null,arguments)},eo=h._NonMaxSuppressionV4=function(){return(eo=h._NonMaxSuppressionV4=h.asm.NonMaxSuppressionV4).apply(null,arguments)},n2=h._NonMaxSuppressionV5=function(){return(n2=h._NonMaxSuppressionV5=h.asm.NonMaxSuppressionV5).apply(null,arguments)},Va=h._NotEqual=function(){return(Va=h._NotEqual=h.asm.NotEqual).apply(null,arguments)},ps=h._OneHot=function(){return(ps=h._OneHot=h.asm.OneHot).apply(null,arguments)},lc=h._PadV2=function(){return(lc=h._PadV2=h.asm.PadV2).apply(null,arguments)},XT=h._Pow=function(){return(XT=h._Pow=h.asm.Pow).apply(null,arguments)},KT=h._Prelu=function(){return(KT=h._Prelu=h.asm.Prelu).apply(null,arguments)},ZT=h._Prod=function(){return(ZT=h._Prod=h.asm.Prod).apply(null,arguments)},YT=h._RealDiv=function(){return(YT=h._RealDiv=h.asm.RealDiv).apply(null,arguments)},JT=h._Relu=function(){return(JT=h._Relu=h.asm.Relu).apply(null,arguments)},QT=h._Relu6=function(){return(QT=h._Relu6=h.asm.Relu6).apply(null,arguments)},e9=h._ResizeBilinear=function(){return(e9=h._ResizeBilinear=h.asm.ResizeBilinear).apply(null,arguments)},t9=h._Reverse=function(){return(t9=h._Reverse=h.asm.Reverse).apply(null,arguments)},a9=h._RotateWithOffset=function(){return(a9=h._RotateWithOffset=h.asm.RotateWithOffset).apply(null,arguments)},r9=h._Round=function(){return(r9=h._Round=h.asm.Round).apply(null,arguments)},n9=h._Rsqrt=function(){return(n9=h._Rsqrt=h.asm.Rsqrt).apply(null,arguments)},s9=h._ScatterNd=function(){return(s9=h._ScatterNd=h.asm.ScatterNd).apply(null,arguments)},i9=h._SelectV2=function(){return(i9=h._SelectV2=h.asm.SelectV2).apply(null,arguments)},o9=h._Sigmoid=function(){return(o9=h._Sigmoid=h.asm.Sigmoid).apply(null,arguments)},l9=h._Sin=function(){return(l9=h._Sin=h.asm.Sin).apply(null,arguments)},u9=h._Softmax=function(){return(u9=h._Softmax=h.asm.Softmax).apply(null,arguments)},d9=h._SparseFillEmptyRows=function(){return(d9=h._SparseFillEmptyRows=h.asm.SparseFillEmptyRows).apply(null,arguments)},h9=h._SparseReshape=function(){return(h9=h._SparseReshape=h.asm.SparseReshape).apply(null,arguments)},p9=h._SparseSegmentReduction=function(){return(p9=h._SparseSegmentReduction=h.asm.SparseSegmentReduction).apply(null,arguments)},c9=h._Sqrt=function(){return(c9=h._Sqrt=h.asm.Sqrt).apply(null,arguments)},f9=h._Square=function(){return(f9=h._Square=h.asm.Square).apply(null,arguments)},m9=h._SquaredDifference=function(){return(m9=h._SquaredDifference=h.asm.SquaredDifference).apply(null,arguments)},g9=h._Step=function(){return(g9=h._Step=h.asm.Step).apply(null,arguments)},y9=h._StridedSlice=function(){return(y9=h._StridedSlice=h.asm.StridedSlice).apply(null,arguments)},A9=h._Sub=function(){return(A9=h._Sub=h.asm.Sub).apply(null,arguments)},x9=h._Sum=function(){return(x9=h._Sum=h.asm.Sum).apply(null,arguments)},b9=h._Tan=function(){return(b9=h._Tan=h.asm.Tan).apply(null,arguments)},v9=h._Tanh=function(){return(v9=h._Tanh=h.asm.Tanh).apply(null,arguments)},w9=h._Tile=function(){return(w9=h._Tile=h.asm.Tile).apply(null,arguments)},k9=h._TopK=function(){return(k9=h._TopK=h.asm.TopK).apply(null,arguments)},I9=h._Transform=function(){return(I9=h._Transform=h.asm.Transform).apply(null,arguments)},S9=h._Transpose=function(){return(S9=h._Transpose=h.asm.Transpose).apply(null,arguments)},N9=h.__FusedMatMul=function(){return(N9=h.__FusedMatMul=h.asm._FusedMatMul).apply(null,arguments)},s2=h._malloc=function(){return(s2=h._malloc=h.asm.malloc).apply(null,arguments)},Kb=h._free=function(){return(Kb=h._free=h.asm.free).apply(null,arguments)},T9=h._emscripten_tls_init=function(){return(T9=h._emscripten_tls_init=h.asm.emscripten_tls_init).apply(null,arguments)},Zb=h.___errno_location=function(){return(Zb=h.___errno_location=h.asm.__errno_location).apply(null,arguments)},uc=h._pthread_self=function(){return(uc=h._pthread_self=h.asm.pthread_self).apply(null,arguments)},Yb=h._emscripten_main_thread_process_queued_calls=function(){return(Yb=h._emscripten_main_thread_process_queued_calls=h.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},C9=h.__emscripten_thread_crashed=function(){return(C9=h.__emscripten_thread_crashed=h.asm._emscripten_thread_crashed).apply(null,arguments)},Jb=h.__emscripten_thread_init=function(){return(Jb=h.__emscripten_thread_init=h.asm._emscripten_thread_init).apply(null,arguments)},E9=h._emscripten_current_thread_process_queued_calls=function(){return(E9=h._emscripten_current_thread_process_queued_calls=h.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},R9=h._emscripten_main_browser_thread_id=function(){return(R9=h._emscripten_main_browser_thread_id=h.asm.emscripten_main_browser_thread_id).apply(null,arguments)},$9=h._emscripten_sync_run_in_main_thread_2=function(){return($9=h._emscripten_sync_run_in_main_thread_2=h.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},Qb=h._emscripten_sync_run_in_main_thread_4=function(){return(Qb=h._emscripten_sync_run_in_main_thread_4=h.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},e5=h._emscripten_run_in_main_runtime_thread_js=function(){return(e5=h._emscripten_run_in_main_runtime_thread_js=h.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},i2=h._emscripten_dispatch_to_thread_=function(){return(i2=h._emscripten_dispatch_to_thread_=h.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},o2=h.__emscripten_thread_free_data=function(){return(o2=h.__emscripten_thread_free_data=h.asm._emscripten_thread_free_data).apply(null,arguments)},F9=h.__emscripten_thread_exit=function(){return(F9=h.__emscripten_thread_exit=h.asm._emscripten_thread_exit).apply(null,arguments)},M9=h._memalign=function(){return(M9=h._memalign=h.asm.memalign).apply(null,arguments)},t5=h._emscripten_stack_set_limits=function(){return(t5=h._emscripten_stack_set_limits=h.asm.emscripten_stack_set_limits).apply(null,arguments)},l2=h.stackSave=function(){return(l2=h.stackSave=h.asm.stackSave).apply(null,arguments)},dc=h.stackRestore=function(){return(dc=h.stackRestore=h.asm.stackRestore).apply(null,arguments)},Hl=h.stackAlloc=function(){return(Hl=h.stackAlloc=h.asm.stackAlloc).apply(null,arguments)},_9=h.dynCall_iijjiiii=function(){return(_9=h.dynCall_iijjiiii=h.asm.dynCall_iijjiiii).apply(null,arguments)},z9=h.dynCall_jiji=function(){return(z9=h.dynCall_jiji=h.asm.dynCall_jiji).apply(null,arguments)},a5=h.__emscripten_allow_main_runtime_queued_calls=21456;h.cwrap=ia,h.keepRuntimeAlive=Zi,h.PThread=ze,h.PThread=ze,h.wasmMemory=Fe,h.ExitStatus=Gd;var hc;function Gd(C){this.name="ExitStatus",this.message="Program terminated with exit("+C+")",this.status=C}Br=function C(){hc||u2(),hc||(Br=C)};function u2(C){if(C=C||y,hs>0)return;if(N){c(h),Od(),postMessage({cmd:"loaded"});return}if(Ia(),hs>0)return;function M(){hc||(hc=!0,h.calledRun=!0,!pt&&(Od(),c(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),Om()))}h.setStatus?(h.setStatus("Running..."),setTimeout(function(){setTimeout(function(){h.setStatus("")},1),M()},1)):M()}h.run=u2;function O9(C,M){if(wa=C,!M&&N)throw Zp(C),"unwind";Zi()||zm(),P9(C)}function P9(C){wa=C,Zi()||(ze.terminateAllThreads(),h.onExit&&h.onExit(C),pt=!0),x(C,new Gd(C))}if(h.preInit)for(typeof h.preInit=="function"&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();u2();var pc;m&&(pc={uncaughtException:process.listeners("uncaughtException").filter(function(C){return!m.uncaughtException.indexOf(C)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(C){return!m.unhandledRejection.indexOf(C)>-1})});var cc;if(typeof WasmBackendModule<"u")cc=WasmBackendModule;else if(typeof n<"u")cc=n;else throw new Error("Could not find wasm module in post.js");if(pc){var D9=cc._dispose;cc._dispose=function(){D9(),pc.uncaughtException.forEach(function(C){process.removeListener("uncaughtException",C)}),pc.unhandledRejection.forEach(function(C){process.removeListener("unhandledRejection",C)})}}return n.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=a)}}),uC=na({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var a=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(n){n=n||{};var s=typeof n<"u"?n:{},i,o;s.ready=new Promise(function(X,ae){i=X,o=ae});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},s),d=[],p="./this.program",h=(X,ae)=>{throw ae},c=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(X){return s.locateFile?s.locateFile(X,g):g+X}var A,x,b,v;function S(X){X instanceof Vd||$("exiting due to exception: "+X)}var N,E,R;m?(f?g=sf().dirname(g)+"/":g=__dirname+"/",R=()=>{E||(N=sy(),E=sf())},A=function(X,ae){return R(),X=E.normalize(X),N.readFileSync(X,ae?void 0:"utf8")},b=X=>{var ae=A(X,!0);return ae.buffer||(ae=new Uint8Array(ae)),ae},x=(X,ae,ge)=>{R(),X=E.normalize(X),N.readFile(X,function(Ee,nt){Ee?ge(Ee):ae(nt.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof Vd))throw X}),process.on("unhandledRejection",function(X){throw X}),h=(X,ae)=>{if(zd())throw process.exitCode=X,ae;S(ae),process.exit(X)},s.inspect=function(){return"[Emscripten Module object]"}):(c||f)&&(f?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",A=X=>{var ae=new XMLHttpRequest;return ae.open("GET",X,!1),ae.send(null),ae.responseText},f&&(b=X=>{var ae=new XMLHttpRequest;return ae.open("GET",X,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),x=(X,ae,ge)=>{var Ee=new XMLHttpRequest;Ee.open("GET",X,!0),Ee.responseType="arraybuffer",Ee.onload=()=>{if(Ee.status==200||Ee.status==0&&Ee.response){ae(Ee.response);return}ge()},Ee.onerror=ge,Ee.send(null)},v=X=>document.title=X);var P=s.print||console.log.bind(console),$=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(d=s.arguments),s.thisProgram&&(p=s.thisProgram),s.quit&&(h=s.quit);var k=4;function _(X){_.shown||(_.shown={}),_.shown[X]||(_.shown[X]=1,$(X))}function z(X,ae){if(typeof WebAssembly.Function=="function"){for(var ge={i:"i32",j:"i64",f:"f32",d:"f64"},Ee={parameters:[],results:ae[0]=="v"?[]:[ge[ae[0]]]},nt=1;nt<ae.length;++nt)Ee.parameters.push(ge[ae[nt]]);return new WebAssembly.Function(Ee,X)}var ot=[1,0,1,96],Ke=ae.slice(0,1),Ge=ae.slice(1),Gt={i:127,j:126,f:125,d:124};ot.push(Ge.length);for(var nt=0;nt<Ge.length;++nt)ot.push(Gt[Ge[nt]]);Ke=="v"?ot.push(0):ot=ot.concat([1,Gt[Ke]]),ot[1]=ot.length-2;var Vr=new Uint8Array([0,97,115,109,1,0,0,0].concat(ot,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),Ur=new WebAssembly.Module(Vr),jl=new WebAssembly.Instance(Ur,{e:{f:X}}),eo=jl.exports.f;return eo}var L=[],j;function D(){if(L.length)return L.pop();try{us.grow(1)}catch(X){throw X instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":X}return us.length-1}function B(X,ae){for(var ge=X;ge<X+ae;ge++){var Ee=Dd(ge);Ee&&j.set(Ee,ge)}}var G=0,ee=X=>{G=X},Q;s.wasmBinary&&(Q=s.wasmBinary);var ne=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Ki("no native wasm support detected");var Y,re=!1,le;function ye(X,ae){X||Ki(ae)}function xe(X){var ae=s["_"+X];return ae}function Ce(X,ae,ge,Ee,nt){var ot={string:function(Va){var ps=0;if(Va!=null&&Va!==0){var lc=(Va.length<<2)+1;ps=Bd(lc),it(Va,ps,lc)}return ps},array:function(Va){var ps=Bd(Va.length);return pt(Va,ps),ps}};function Ke(Va){return ae==="string"?rt(Va):ae==="boolean"?Boolean(Va):Va}var Ge=xe(X),Gt=[],Vr=0;if(Ee)for(var Ur=0;Ur<Ee.length;Ur++){var jl=ot[ge[Ur]];jl?(Vr===0&&(Vr=ic()),Gt[Ur]=jl(Ee[Ur])):Gt[Ur]=Ee[Ur]}var eo=Ge.apply(null,Gt);function n2(Va){return Vr!==0&&oc(Vr),Ke(Va)}return eo=n2(eo),eo}function Re(X,ae,ge,Ee){ge=ge||[];var nt=ge.every(function(Ke){return Ke==="number"}),ot=ae!=="string";return ot&&nt&&!Ee?xe(X):function(){return Ce(X,ae,ge,arguments,Ee)}}var Oe=1,We=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Xe(X,ae,ge){for(var Ee=ae+ge,nt=ae;X[nt]&&!(nt>=Ee);)++nt;if(nt-ae>16&&X.subarray&&We)return We.decode(X.subarray(ae,nt));for(var ot="";ae<nt;){var Ke=X[ae++];if(!(Ke&128)){ot+=String.fromCharCode(Ke);continue}var Ge=X[ae++]&63;if((Ke&224)==192){ot+=String.fromCharCode((Ke&31)<<6|Ge);continue}var Gt=X[ae++]&63;if((Ke&240)==224?Ke=(Ke&15)<<12|Ge<<6|Gt:Ke=(Ke&7)<<18|Ge<<12|Gt<<6|X[ae++]&63,Ke<65536)ot+=String.fromCharCode(Ke);else{var Vr=Ke-65536;ot+=String.fromCharCode(55296|Vr>>10,56320|Vr&1023)}}return ot}function rt(X,ae){return X?Xe(ia,X,ae):""}function st(X,ae,ge,Ee){if(!(Ee>0))return 0;for(var nt=ge,ot=ge+Ee-1,Ke=0;Ke<X.length;++Ke){var Ge=X.charCodeAt(Ke);if(Ge>=55296&&Ge<=57343){var Gt=X.charCodeAt(++Ke);Ge=65536+((Ge&1023)<<10)|Gt&1023}if(Ge<=127){if(ge>=ot)break;ae[ge++]=Ge}else if(Ge<=2047){if(ge+1>=ot)break;ae[ge++]=192|Ge>>6,ae[ge++]=128|Ge&63}else if(Ge<=65535){if(ge+2>=ot)break;ae[ge++]=224|Ge>>12,ae[ge++]=128|Ge>>6&63,ae[ge++]=128|Ge&63}else{if(ge+3>=ot)break;ae[ge++]=240|Ge>>18,ae[ge++]=128|Ge>>12&63,ae[ge++]=128|Ge>>6&63,ae[ge++]=128|Ge&63}}return ae[ge]=0,ge-nt}function it(X,ae,ge){return st(X,ia,ae,ge)}function Fe(X){for(var ae=0,ge=0;ge<X.length;++ge){var Ee=X.charCodeAt(ge);Ee>=55296&&Ee<=57343&&(Ee=65536+((Ee&1023)<<10)|X.charCodeAt(++ge)&1023),Ee<=127?++ae:Ee<=2047?ae+=2:Ee<=65535?ae+=3:ae+=4}return ae}var yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function pt(X,ae){Kt.set(X,ae)}function wa(X,ae,ge){for(var Ee=0;Ee<X.length;++Ee)Kt[ae++>>0]=X.charCodeAt(Ee);ge||(Kt[ae>>0]=0)}function sa(X,ae){return X%ae>0&&(X+=ae-X%ae),X}var Wa,Kt,ia,Lr,Ba,Zt,dr,hr,ls;function Xi(X){Wa=X,s.HEAP8=Kt=new Int8Array(X),s.HEAP16=Lr=new Int16Array(X),s.HEAP32=Zt=new Int32Array(X),s.HEAPU8=ia=new Uint8Array(X),s.HEAPU16=Ba=new Uint16Array(X),s.HEAPU32=dr=new Uint32Array(X),s.HEAPF32=hr=new Float32Array(X),s.HEAPF64=ls=new Float64Array(X)}var Mp=s.INITIAL_MEMORY||16777216,us,Fn=[],_d=[],zl=[],ka=!1,_p=!1,zp=0;function zd(){return ne||zp>0}function Op(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Lp(s.preRun.shift());Pd(Fn)}function Pp(){ka=!0,Pd(_d)}function Pb(){_p=!0}function Dp(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)Wp(s.postRun.shift());Pd(zl)}function Lp(X){Fn.unshift(X)}function Wr(X){_d.unshift(X)}function Wp(X){zl.unshift(X)}var pr=0,Ol=null,ds=null;function Mm(X){pr++,s.monitorRunDependencies&&s.monitorRunDependencies(pr)}function Bp(X){if(pr--,s.monitorRunDependencies&&s.monitorRunDependencies(pr),pr==0&&(Ol!==null&&(clearInterval(Ol),Ol=null),ds)){var ae=ds;ds=null,ae()}}s.preloadedImages={},s.preloadedAudios={};function Ki(X){s.onAbort&&s.onAbort(X),X="Aborted("+X+")",$(X),re=!0,le=1,X+=". Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(X);throw o(ae),ae}var _m="data:application/octet-stream;base64,";function Vp(X){return X.startsWith(_m)}function Zi(X){return X.startsWith("file://")}var Ia;Ia="tfjs-backend-wasm.wasm",Vp(Ia)||(Ia=y(Ia));function Od(X){try{if(X==Ia&&Q)return new Uint8Array(Q);if(b)return b(X);throw"both async and sync fetching of the wasm failed"}catch(ae){Ki(ae)}}function zm(){if(!Q&&(c||f)){if(typeof fetch=="function"&&!Zi(Ia))return fetch(Ia,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+Ia+"'";return X.arrayBuffer()}).catch(function(){return Od(Ia)});if(x)return new Promise(function(X,ae){x(Ia,function(ge){X(new Uint8Array(ge))},ae)})}return Promise.resolve().then(function(){return Od(Ia)})}function Om(){var X={env:Ll,wasi_snapshot_preview1:Ll};function ae(Ke,Ge){var Gt=Ke.exports;s.asm=Gt,Y=s.asm.memory,Xi(Y.buffer),us=s.asm.__indirect_function_table,Wr(s.asm.__wasm_call_ctors),Bp("wasm-instantiate")}Mm("wasm-instantiate");function ge(Ke){ae(Ke.instance)}function Ee(Ke){return zm().then(function(Ge){return WebAssembly.instantiate(Ge,X)}).then(function(Ge){return Ge}).then(Ke,function(Ge){$("failed to asynchronously prepare wasm: "+Ge),Ki(Ge)})}function nt(){return!Q&&typeof WebAssembly.instantiateStreaming=="function"&&!Vp(Ia)&&!Zi(Ia)&&typeof fetch=="function"?fetch(Ia,{credentials:"same-origin"}).then(function(Ke){var Ge=WebAssembly.instantiateStreaming(Ke,X);return Ge.then(ge,function(Gt){return $("wasm streaming compile failed: "+Gt),$("falling back to ArrayBuffer instantiation"),Ee(ge)})}):Ee(ge)}if(s.instantiateWasm)try{var ot=s.instantiateWasm(X,ae);return ot}catch(Ke){return $("Module.instantiateWasm callback failed with error: "+Ke),!1}return nt().catch(o),{}}var Db,Lb;function Pd(X){for(;X.length>0;){var ae=X.shift();if(typeof ae=="function"){ae(s);continue}var ge=ae.func;typeof ge=="number"?ae.arg===void 0?Dd(ge)():Dd(ge)(ae.arg):ge(ae.arg===void 0?null:ae.arg)}}function hs(X){return X}function Up(X){var ae=/\b_Z[\w\d_]+/g;return X.replace(ae,function(ge){var Ee=ge;return ge===Ee?ge:Ee+" ["+ge+"]"})}var Br=[];function Dd(X){var ae=Br[X];return ae||(X>=Br.length&&(Br.length=X+1),Br[X]=ae=us.get(X)),ae}function Wb(){var X=new Error;if(!X.stack){try{throw new Error}catch(ae){X=ae}if(!X.stack)return"(no stack trace available)"}return X.stack.toString()}function Pl(X,ae){us.set(X,ae),Br[X]=ae}function Pm(){Ki("")}function Gp(X,ae,ge){ia.copyWithin(X,ae,ae+ge)}function jp(){return 2147483648}function Sa(X){try{return Y.grow(X-Wa.byteLength+65535>>>16),Xi(Y.buffer),1}catch{}}function Hp(X){var ae=ia.length;X=X>>>0;var ge=jp();if(X>ge)return!1;for(var Ee=1;Ee<=4;Ee*=2){var nt=ae*(1+.2/Ee);nt=Math.min(nt,X+100663296);var ot=Math.min(ge,sa(Math.max(X,nt),65536)),Ke=Sa(ot);if(Ke)return!0}return!1}var Dl={mappings:{},buffers:[null,[],[]],printChar:function(X,ae){var ge=Dl.buffers[X];ae===0||ae===10?((X===1?P:$)(Xe(ge,0)),ge.length=0):ge.push(ae)},varargs:void 0,get:function(){Dl.varargs+=4;var X=Zt[Dl.varargs-4>>2];return X},getStr:function(X){var ae=rt(X);return ae},get64:function(X,ae){return X}};function Dm(X){return 0}function Bb(X,ae,ge,Ee,nt){}function Vb(X,ae,ge,Ee){for(var nt=0,ot=0;ot<ge;ot++){var Ke=Zt[ae>>2],Ge=Zt[ae+4>>2];ae+=8;for(var Gt=0;Gt<Ge;Gt++)Dl.printChar(X,ia[Ke+Gt]);nt+=Ge}return Zt[Ee>>2]=nt,0}function Lm(X){ee(X)}var qp=!1,Ll={abort:Pm,emscripten_memcpy_big:Gp,emscripten_resize_heap:Hp,fd_close:Dm,fd_seek:Bb,fd_write:Vb,setTempRet0:Lm},qT=Om(),Ub=s.___wasm_call_ctors=function(){return(Ub=s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},Wm=s._init=function(){return(Wm=s._init=s.asm.init).apply(null,arguments)},Bm=s._init_with_threads_count=function(){return(Bm=s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},Xp=s._get_threads_count=function(){return(Xp=s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},Kp=s._register_tensor=function(){return(Kp=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},Vm=s._dispose_data=function(){return(Vm=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},ze=s._dispose=function(){return(ze=s._dispose=s.asm.dispose).apply(null,arguments)},Um=s._Abs=function(){return(Um=s._Abs=s.asm.Abs).apply(null,arguments)},Zp=s._Add=function(){return(Zp=s._Add=s.asm.Add).apply(null,arguments)},Yi=s._AddN=function(){return(Yi=s._AddN=s.asm.AddN).apply(null,arguments)},Wl=s._All=function(){return(Wl=s._All=s.asm.All).apply(null,arguments)},Gm=s._Any=function(){return(Gm=s._Any=s.asm.Any).apply(null,arguments)},Gb=s._ArgMax=function(){return(Gb=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},jm=s._AvgPool=function(){return(jm=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},jb=s._BatchMatMul=function(){return(jb=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},Ji=s._Ceil=function(){return(Ji=s._Ceil=s.asm.Ceil).apply(null,arguments)},Hm=s._ClipByValue=function(){return(Hm=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},qm=s._Conv2D=function(){return(qm=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},Xm=s._Conv2DBackpropInput=function(){return(Xm=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},Km=s._Cos=function(){return(Km=s._Cos=s.asm.Cos).apply(null,arguments)},Zm=s._Cosh=function(){return(Zm=s._Cosh=s.asm.Cosh).apply(null,arguments)},Ym=s._CropAndResize=function(){return(Ym=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},Yp=s._Cumprod=function(){return(Yp=s._Cumprod=s.asm.Cumprod).apply(null,arguments)},Jm=s._Cumsum=function(){return(Jm=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},Qm=s._DepthToSpace=function(){return(Qm=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},eg=s._DepthwiseConv2dNative=function(){return(eg=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},tg=s._Elu=function(){return(tg=s._Elu=s.asm.Elu).apply(null,arguments)},ag=s._Equal=function(){return(ag=s._Equal=s.asm.Equal).apply(null,arguments)},Jp=s._Exp=function(){return(Jp=s._Exp=s.asm.Exp).apply(null,arguments)},rg=s._FlipLeftRight=function(){return(rg=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},ng=s._Floor=function(){return(ng=s._Floor=s.asm.Floor).apply(null,arguments)},Qi=s._FloorDiv=function(){return(Qi=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},Ld=s._FusedBatchNorm=function(){return(Ld=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},sg=s._FusedConv2D=function(){return(sg=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},ig=s._FusedDepthwiseConv2D=function(){return(ig=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},og=s._Gather=function(){return(og=s._Gather=s.asm.Gather).apply(null,arguments)},qe=s._GatherNd=function(){return(qe=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},lg=s._Greater=function(){return(lg=s._Greater=s.asm.Greater).apply(null,arguments)},ug=s._GreaterEqual=function(){return(ug=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},dg=s._LeakyRelu=function(){return(dg=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},hg=s._Less=function(){return(hg=s._Less=s.asm.Less).apply(null,arguments)},pg=s._LessEqual=function(){return(pg=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},cg=s._Log=function(){return(cg=s._Log=s.asm.Log).apply(null,arguments)},Wd=s._LogicalAnd=function(){return(Wd=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},Qp=s._Max=function(){return(Qp=s._Max=s.asm.Max).apply(null,arguments)},ec=s._MaxPool=function(){return(ec=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},fg=s._Maximum=function(){return(fg=s._Maximum=s.asm.Maximum).apply(null,arguments)},mg=s._Mean=function(){return(mg=s._Mean=s.asm.Mean).apply(null,arguments)},gg=s._Min=function(){return(gg=s._Min=s.asm.Min).apply(null,arguments)},yg=s._Minimum=function(){return(yg=s._Minimum=s.asm.Minimum).apply(null,arguments)},Ag=s._MirrorPad=function(){return(Ag=s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},xg=s._Multiply=function(){return(xg=s._Multiply=s.asm.Multiply).apply(null,arguments)},Et=s._Neg=function(){return(Et=s._Neg=s.asm.Neg).apply(null,arguments)},bg=s._NonMaxSuppressionV3=function(){return(bg=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},vg=s._NonMaxSuppressionV4=function(){return(vg=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},wg=s._NonMaxSuppressionV5=function(){return(wg=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},Bl=s._NotEqual=function(){return(Bl=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},tc=s._OneHot=function(){return(tc=s._OneHot=s.asm.OneHot).apply(null,arguments)},ac=s._PadV2=function(){return(ac=s._PadV2=s.asm.PadV2).apply(null,arguments)},rc=s._Pow=function(){return(rc=s._Pow=s.asm.Pow).apply(null,arguments)},kg=s._Prelu=function(){return(kg=s._Prelu=s.asm.Prelu).apply(null,arguments)},nc=s._Prod=function(){return(nc=s._Prod=s.asm.Prod).apply(null,arguments)},Ig=s._RealDiv=function(){return(Ig=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},Hb=s._Relu=function(){return(Hb=s._Relu=s.asm.Relu).apply(null,arguments)},sc=s._Relu6=function(){return(sc=s._Relu6=s.asm.Relu6).apply(null,arguments)},qb=s._ResizeBilinear=function(){return(qb=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},Sg=s._Reverse=function(){return(Sg=s._Reverse=s.asm.Reverse).apply(null,arguments)},Ng=s._RotateWithOffset=function(){return(Ng=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},Tg=s._Round=function(){return(Tg=s._Round=s.asm.Round).apply(null,arguments)},Cg=s._Rsqrt=function(){return(Cg=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},Eg=s._ScatterNd=function(){return(Eg=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},Rg=s._SelectV2=function(){return(Rg=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},$g=s._Sigmoid=function(){return($g=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},Fg=s._Sin=function(){return(Fg=s._Sin=s.asm.Sin).apply(null,arguments)},Mg=s._Softmax=function(){return(Mg=s._Softmax=s.asm.Softmax).apply(null,arguments)},_g=s._SparseFillEmptyRows=function(){return(_g=s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},zg=s._SparseReshape=function(){return(zg=s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},Og=s._SparseSegmentReduction=function(){return(Og=s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},Pg=s._Sqrt=function(){return(Pg=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},Dg=s._Square=function(){return(Dg=s._Square=s.asm.Square).apply(null,arguments)},Lg=s._SquaredDifference=function(){return(Lg=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},Wg=s._Step=function(){return(Wg=s._Step=s.asm.Step).apply(null,arguments)},Bg=s._StridedSlice=function(){return(Bg=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},Vg=s._Sub=function(){return(Vg=s._Sub=s.asm.Sub).apply(null,arguments)},Ug=s._Sum=function(){return(Ug=s._Sum=s.asm.Sum).apply(null,arguments)},Gg=s._Tan=function(){return(Gg=s._Tan=s.asm.Tan).apply(null,arguments)},jg=s._Tanh=function(){return(jg=s._Tanh=s.asm.Tanh).apply(null,arguments)},Hg=s._Tile=function(){return(Hg=s._Tile=s.asm.Tile).apply(null,arguments)},qg=s._TopK=function(){return(qg=s._TopK=s.asm.TopK).apply(null,arguments)},Xg=s._Transform=function(){return(Xg=s._Transform=s.asm.Transform).apply(null,arguments)},Kg=s._Transpose=function(){return(Kg=s._Transpose=s.asm.Transpose).apply(null,arguments)},Zg=s.__FusedMatMul=function(){return(Zg=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},Yg=s._malloc=function(){return(Yg=s._malloc=s.asm.malloc).apply(null,arguments)},Jg=s._free=function(){return(Jg=s._free=s.asm.free).apply(null,arguments)},Qg=s.___errno_location=function(){return(Qg=s.___errno_location=s.asm.__errno_location).apply(null,arguments)},e2=s._emscripten_main_thread_process_queued_calls=function(){return(e2=s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},ic=s.stackSave=function(){return(ic=s.stackSave=s.asm.stackSave).apply(null,arguments)},oc=s.stackRestore=function(){return(oc=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},Bd=s.stackAlloc=function(){return(Bd=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},t2=s.dynCall_iijjiiii=function(){return(t2=s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},a2=s.dynCall_jiji=function(){return(a2=s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};s.cwrap=Re;var Vl;function Vd(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}ds=function X(){Vl||Ud(),Vl||(ds=X)};function Ud(X){if(X=X||d,pr>0||(Op(),pr>0))return;function ae(){Vl||(Vl=!0,s.calledRun=!0,!re&&(Pp(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Dp()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ae()},1)):ae()}s.run=Ud;function Xb(X){le=X,zd()||(s.onExit&&s.onExit(X),re=!0),h(X,new Vd(X))}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();Ud();var Ul;l&&(Ul={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})});var Gl;if(typeof n<"u")Gl=n;else if(typeof WasmBackendModuleThreadedSimd<"u")Gl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Ul){var r2=Gl._dispose;Gl._dispose=function(){r2(),Ul.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),Ul.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return n.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModule=a)}}),dC=1e-7,hC=1e-4,$h=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},zu=class{refCount(e){return fr("refCount")}incRef(e){return fr("incRef")}timerAvailable(){return!0}time(e){return fr("time")}read(e){return fr("read")}readSync(e){return fr("readSync")}readToGPU(e,t){return fr("readToGPU")}numDataIds(){return fr("numDataIds")}disposeData(e,t){return fr("disposeData")}write(e,t,a){return fr("write")}move(e,t,a,r,n){return fr("move")}memory(){return fr("memory")}floatPrecision(){return fr("floatPrecision")}epsilon(){return this.floatPrecision()===32?dC:hC}dispose(){return fr("dispose")}};function fr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function hw(e){let t=e.length,a=0;for(;t>0;)a=Math.random()*t|0,t--,of(e,t,a)}function pC(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let a=e.length,r=0;for(;a>0;)r=Math.random()*a|0,a--,of(e,a,r),of(t,a,r)}function yh(e,t,a){return Math.max(e,Math.min(t,a))}function cC(e){return e%2===0?e:e+1}function of(e,t,a){let r=e[t];e[t]=e[a],e[a]=r}function fC(e){let t=0;for(let a=0;a<e.length;a++)t+=e[a];return t}function mC(e,t){let a=Math.random();return t*a+(1-a)*e}function gC(e,t){let a=0;for(let r=0;r<e.length;r++){let n=Number(e[r])-Number(t[r]);a+=n*n}return a}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function za(e,t,a=""){O(js(e,t),()=>a+` Shapes ${e} and ${t} must match`)}function Po(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function wo(e,t=[],a=!1){if(t==null&&(t=[]),Array.isArray(e)||Aa(e)&&!a)for(let r=0;r<e.length;++r)wo(e[r],t,a);else t.push(e);return t}function kt(e){if(e.length===0)return 1;let t=e[0];for(let a=1;a<e.length;a++)t*=e[a];return t}function yC(e){return e.length===0}function js(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}function yu(e){return e%1===0}function AC(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function xC(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function bC(e){let t=new Uint32Array(e);for(let a=0;a<e;++a)t[a]=a;return hw(t),t}function uh(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function vC(e,t=r=>0,a){return new Promise((r,n)=>{let s=0,i=()=>{if(e()){r();return}s++;let o=t(s);if(a!=null&&s>=a){n();return}setTimeout(i,o)};i()})}function wC(e,t){let a=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)a*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==a)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(a===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%a!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${a}`);let n=e.slice();return n[r]=t/a,n}function zr(e,t){let a=t.length;return e=e==null?t.map((r,n)=>n):[].concat(e),O(e.every(r=>r>=-a&&r<a),()=>`All values in axis param must be in range [-${a}, ${a}) but got axis ${e}`),O(e.every(r=>yu(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?a+r:r)}function pw(e,t){let a=[],r=[],n=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||n?null:zr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(a.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(a.push(e[o]),r.push(o))}return{newShape:a,keptDims:r}}function cw(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return a}function fw(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else if(e==="string")a=new Array(t);else throw new Error(`Unknown data type ${e}`);return a}function mw(e,t){for(let a=0;a<e.length;a++){let r=e[a];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function gw(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function kC(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Aa(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function e1(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function yw(e){if(e==null)return 0;let t=0;return e.forEach(a=>t+=a.length),t}function bs(e){return typeof e=="string"||e instanceof String}function Aw(e){return typeof e=="boolean"}function xw(e){return typeof e=="number"}function Hf(e){return Array.isArray(e)?Hf(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":xw(e)?"float32":bs(e)?"string":Aw(e)?"bool":"float32"}function Rs(e){return!!(e&&e.constructor&&e.call&&e.apply)}function lf(e,t){for(let a=t;a<e;++a)if(e%a===0)return a;return e}function Ou(e){let t=e.length;if(t<2)return[];let a=new Array(t-1);a[t-2]=e[t-1];for(let r=t-3;r>=0;--r)a[r]=a[r+1]*e[r+1];return a}function bw(e,t,a,r=!1){let n=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)n[i]=a[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<s;l++)n[l]=bw(e+l*o,i,a,r)}return n}function pu(e,t,a=!1){if(e.length===0)return t[0];let r=e.reduce((n,s)=>n*s)*(a?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${a?" for a complex tensor":""}.`);return bw(0,e,t,a)}function iy(e,t){let a=qf(e,t);for(let r=0;r<a.length;r++)a[r]=1;return a}function qf(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function IC(e,t){let a=e.reduce((r,n)=>r*n,1);if(t==null||t==="float32")return pu(e,new Float32Array(a));if(t==="int32")return pu(e,new Int32Array(a));if(t==="bool")return pu(e,new Uint8Array(a));throw new Error(`Unknown data type ${t}`)}function oy(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function SC(e,t,a){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let n=0;n<e.length-1;++n)r+=a[n]*e[n];return r}function NC(e,t,a){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let n=0;n<r.length-1;++n)r[n]=Math.floor(e/a[n]),e-=r[n]*a[n];return r[r.length-1]=e,r}function ly(e){return e&&e.then&&typeof e.then=="function"}var n5="tfjsflags",vw=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=TC,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,a){if(this.flagRegistry[e]={evaluationFn:t,setHook:a},this.urlFlags[e]!=null){let r=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ly(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);n5 in e&&e[n5].split(",").forEach(t=>{let[a,r]=t.split(":");this.urlFlags[a]=EC(a,r)})}};function TC(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(a,...r)=>(CC(t,r[0],r[1]),r.join("="))),t}function CC(e,t,a){e[decodeURIComponent(t)]=decodeURIComponent(a||"")}function EC(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function J(){return Ln}var Ln=null;function RC(e){Ln=e}var d2;function ww(){if(d2==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");d2=e}return d2}function $C(){let e=ww();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function uy(e,t){let a=$C();if(a.has(e))return a.get(e);{let r=t();return a.set(e,r),a.get(e)}}var Do="Abs",Pu="Acos",Du="Acosh",Yn="Add",Hs="AddN",Lu="All",Wu="Any",qs="ArgMax",Bu="ArgMin",Vu="Asin",Uu="Asinh",Gu="Atan",ju="Atanh",Hu="Atan2",Xs="AvgPool",Xf="AvgPoolGrad",Fh="AvgPool3D",Kf="AvgPool3DGrad",Ks="BatchMatMul",Lo="BatchToSpaceND",Zf="Bincount",kw="BroadcastTo",Yf="BroadcastArgs",Zs="Cast",Ys="Ceil",Jn="ClipByValue",Mh="Complex",_h="ComplexAbs",Wo="Concat",Js="Conv2D",Jf="Conv2DBackpropFilter",Qs="Conv2DBackpropInput",zh="Conv3D",Qf="Conv3DBackpropFilterV2",e0="Conv3DBackpropInputV2",ei="Cos",ti="Cosh",Bo="Cumprod",ai="Cumsum",Vo="CropAndResize",t0="DenseBincount",Uo="DepthToSpace",ri="DepthwiseConv2dNative",a0="DepthwiseConv2dNativeBackpropFilter",r0="DepthwiseConv2dNativeBackpropInput",n0="Diag",Oh="Dilation2D",uf="Dilation2DBackpropInput",df="Dilation2DBackpropFilter",ni="RealDiv",Ph="Einsum",si="Elu",s0="EluGrad",qu="Erf",Go="Equal",ii="Exp",jo="ExpandDims",Ho="Expm1",i0="FFT",Xu="Fill",qo="FlipLeftRight",oi="Floor",li="FloorDiv",ui="FusedBatchNorm",Xo="GatherV2",Ko="GatherNd",Zo="Greater",di="GreaterEqual",hi="Identity",o0="IFFT",Dh="Imag",Ku="IsFinite",Zu="IsInf",Yu="IsNan",pi="LeakyRelu",Yo="Less",Jo="LessEqual",l0="LinSpace",ci="Log",Ju="Log1p",Qo="LogicalAnd",Qu="LogicalNot",Lh="LogicalOr",Iw="LogSoftmax",Wh="LRN",u0="LRNGrad",fi="Max",mi="Maximum",gi="MaxPool",d0="MaxPoolGrad",Bh="MaxPool3D",h0="MaxPool3DGrad",p0="MaxPoolWithArgmax",yi="Mean",Ai="Min",xi="Minimum",bi="MirrorPad",ed="Mod",c0="Multinomial",vi="Multiply",el="Neg",tl="NotEqual",al="NonMaxSuppressionV3",td="NonMaxSuppressionV4",rl="NonMaxSuppressionV5",nl="OnesLike",sl="OneHot",il="Pack",wi="PadV2",FC="Pool",ki="Pow",Ii="Prelu",Si="Prod",ad="Range",Vh="Real",rd="Reciprocal",Ni="Relu",ol="Reshape",nd="ResizeNearestNeighbor",f0="ResizeNearestNeighborGrad",Ti="ResizeBilinear",m0="ResizeBilinearGrad",Ci="Relu6",ll="Reverse",ul="Round",Ei="Rsqrt",dl="ScatterNd",hl="Select",sd="Selu",pl="Slice",Ri="Sin",cl="Sinh",id="Sign",$i="Sigmoid",od="Softplus",Fi="Sqrt",Mi="Sum",fl="SpaceToBatchND",ml="SplitV",_i="Softmax",Uh="SparseFillEmptyRows",ld="SparseReshape",Gh="SparseSegmentMean",jh="SparseSegmentSum",Hh="SparseToDense",zi="SquaredDifference",ud="Square",gl="StridedSlice",qh="StringNGrams",g0="StringSplit",y0="StringToHashBucketFast",Oi="Sub",yl="Tan",Pi="Tanh",Qn="Tile",Al="TopK",xl="Transform",Di="Transpose",A0="Unique",bl="Unpack",Xh="UnsortedSegmentSum",vl="ZerosLike",Li="Step",Ah="FromPixels",wl="RotateWithOffset",$s="_FusedMatMul",Fs="FusedConv2D",Ms="FusedDepthwiseConv2D";function xs(...e){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...e)}function MC(...e){J().getBool("IS_TEST")||J().getBool("PROD")||console.log(...e)}var Au=uy("kernelRegistry",()=>new Map),xh=uy("gradRegistry",()=>new Map);function hf(e,t){let a=dy(e,t);return Au.get(a)}function t1(e){return xh.get(e)}function ko(e){let t=Au.entries(),a=[];for(;;){let{done:r,value:n}=t.next();if(r)break;let[s,i]=n,[o]=s.split("_");o===e&&a.push(i)}return a}function kn(e){let{kernelName:t,backendName:a}=e,r=dy(t,a);Au.has(r)&&xs(`The kernel '${t}' for backend '${a}' is already registered`),Au.set(r,e)}function Sw(e){let{kernelName:t}=e;xh.has(t)&&J().getBool("DEBUG")&&xs(`Overriding the gradient for '${t}'`),xh.set(t,e)}function _C(e,t){let a=dy(e,t);if(!Au.has(a))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Au.delete(a)}function zC(e){if(!xh.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);xh.delete(e)}function OC(e,t){ko(e).forEach(a=>{let r=Object.assign({},a,{backendName:t});kn(r)})}function dy(e,t){return`${t}_${e}`}var w={};Le(w,{arraysEqual:()=>js,assert:()=>O,assertNonNegativeIntegerDimensions:()=>oy,assertNonNull:()=>Po,assertShapesMatch:()=>za,bytesFromStringArray:()=>yw,bytesPerElement:()=>e1,checkConversionForErrors:()=>mw,clamp:()=>yh,computeStrides:()=>Ou,createScalarValue:()=>VC,createShuffledIndices:()=>bC,decodeString:()=>pf,distSquared:()=>gC,encodeString:()=>Zh,fetch:()=>GC,fingerPrint64:()=>BC,flatten:()=>wo,getArrayFromDType:()=>fw,getTypedArrayFromDType:()=>cw,hasEncodingLoss:()=>kC,hexToLong:()=>Kh,indexToLoc:()=>NC,inferDtype:()=>Hf,inferFromImplicitShape:()=>wC,isBoolean:()=>Aw,isFunction:()=>Rs,isInt:()=>yu,isNumber:()=>xw,isPromise:()=>ly,isScalarShape:()=>yC,isString:()=>bs,isTypedArray:()=>Aa,isValidDtype:()=>gw,locToIndex:()=>SC,makeOnesTypedArray:()=>iy,makeZerosNestedTypedArray:()=>IC,makeZerosTypedArray:()=>qf,nearestDivisor:()=>lf,nearestLargerEven:()=>cC,now:()=>bh,parseAxisParam:()=>zr,randUniform:()=>mC,repeatedTry:()=>vC,rightPad:()=>uh,shuffle:()=>hw,shuffleCombo:()=>pC,sizeFromShape:()=>kt,sizeToSquarishShape:()=>xC,squeezeShape:()=>pw,sum:()=>fC,swap:()=>of,tanh:()=>AC,toNestedArray:()=>pu,toTypedArray:()=>x0});var s5=Oo(X9()),oo=s5.default||s5;function Kh(e){return oo.fromString(e,!0,16)}var Nw=Kh("c3a5c85c97cb3127"),no=Kh("b492b66fbe98f273"),Ta=Kh("9ae16a3b2f90404f");function a1(e){return e.xor(e.shru(47))}function Tw(e,t,a){let r=e.slice(t,t+a);return oo.fromBytes(Array.from(r),!0,!0)}function At(e,t){return Tw(e,t,8)}function i5(e,t){return Tw(e,t,4)}function oa(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Is(e,t,a=Kh("9ddfea08eb382d69")){let r=e.xor(t).mul(a);r=r.xor(r.shru(47));let n=t.xor(r).mul(a);return n=n.xor(n.shru(47)),n=n.mul(a),n}function PC(e,t,a,r,n,s){n=n.add(e),s=oa(s.add(n).add(r),21);let i=n;return n=n.add(t),n=n.add(a),s=s.add(oa(n,44)),[n.add(r),s.add(i)]}function Ac(e,t,a,r){return PC(At(e,t),At(e,t+8),At(e,t+16),At(e,t+24),a,r)}function DC(e,t=e.length){if(t>=8){let a=Ta.add(t*2),r=At(e,0).add(Ta),n=At(e,t-8),s=oa(n,37).mul(a).add(r),i=oa(r,25).add(n).mul(a);return Is(s,i,a)}if(t>=4){let a=Ta.add(t*2),r=i5(e,0);return Is(r.shl(3).add(t),i5(e,t-4),a)}if(t>0){let a=e[0],r=e[t>>1],n=e[t-1],s=a+(r<<8),i=t+(n<<2);return a1(Ta.mul(s).xor(Nw.mul(i))).mul(Ta)}return Ta}function LC(e,t=e.length){let a=Ta.add(t*2),r=At(e,0).mul(no),n=At(e,8),s=At(e,t-8).mul(a),i=At(e,t-16).mul(Ta);return Is(oa(r.add(n),43).add(oa(s,30)).add(i),r.add(oa(n.add(Ta),18)).add(s),a)}function WC(e,t=e.length){let a=Ta.add(t*2),r=At(e,0).mul(Ta),n=At(e,8),s=At(e,t-8).mul(a),i=At(e,t-16).mul(Ta),o=oa(r.add(n),43).add(oa(s,30)).add(i),l=Is(o,r.add(oa(n.add(Ta),18)).add(s),a),u=At(e,16).mul(a),d=At(e,24),p=o.add(At(e,t-32)).mul(a),h=l.add(At(e,t-24)).mul(a);return Is(oa(u.add(d),43).add(oa(p,30)).add(h),u.add(oa(d.add(r),18)).add(p),a)}function BC(e,t=e.length){let a=oo.fromNumber(81,!0);if(t<=32)return t<=16?DC(e,t):LC(e,t);if(t<=64)return WC(e,t);let r=a,n=a.mul(no).add(113),s=a1(n.mul(Ta).add(113)).mul(Ta),i=[oo.UZERO,oo.UZERO],o=[oo.UZERO,oo.UZERO];r=r.mul(Ta).add(At(e,0));let l=0,u=(t-1>>6)*64,d=u+(t-1&63)-63;do r=oa(r.add(n).add(i[0]).add(At(e,l+8)),37).mul(no),n=oa(n.add(i[1]).add(At(e,l+48)),42).mul(no),r=r.xor(o[1]),n=n.add(i[0]).add(At(e,l+40)),s=oa(s.add(o[0]),33).mul(no),i=Ac(e,l,i[1].mul(no),r.add(o[0])),o=Ac(e,l+32,s.add(o[1]),n.add(At(e,l+16))),[s,r]=[r,s],l+=64;while(l!==u);let p=no.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=oa(r.add(n).add(i[0]).add(At(e,l+8)),37).mul(p),n=oa(n.add(i[1]).add(At(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),n=n.add(i[0].mul(9).add(At(e,l+40))),s=oa(s.add(o[0]),33).mul(p),i=Ac(e,l,i[1].mul(p),r.add(o[0])),o=Ac(e,l+32,s.add(o[1]),n.add(At(e,l+16))),[s,r]=[r,s],Is(Is(i[0],o[0],p).add(a1(n).mul(Nw)).add(s),Is(i[1],o[1],p).add(r),p)}function VC(e,t){return t==="string"?Zh(e):x0([e],t)}function UC(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function x0(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=wo(e)),J().getBool("DEBUG")&&mw(e,t),UC(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let a=new Uint8Array(e.length);for(let r=0;r<a.length;++r)Math.round(e[r])!==0&&(a[r]=1);return a}else throw new Error(`Unknown data type ${t}`)}function bh(){return J().platform.now()}function GC(e,t){return J().platform.fetch(e,t)}function Zh(e,t="utf-8"){return t=t||"utf-8",J().platform.encode(e,t)}function pf(e,t="utf-8"){return t=t||"utf-8",J().platform.decode(e,t)}var jC=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new qC)}profileKernel(e,t,a){let r,n=()=>{r=a()},s,i=bh();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(n);else{n();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:bh()-i})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(u=>{HC(u,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:a,timeMs:r,inputs:n,extraInfo:s}=e;a.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],n,o[2])})})}};function HC(e,t,a){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${a}'`),!0}return!1}var qC=class{logKernelProfile(e,t,a,r,n,s){let i=typeof r=="number"?uh(`${r}ms`,9):r.error,o=uh(e,25),l=t.rank,u=t.size,d=uh(t.shape.toString(),14),p="";for(let h in n){let c=n[h];if(c!=null){let f=c.shape||t.shape,m=f.length;p+=`${h}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${d}	%c${u}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function XC(e,t,a){let r={},n={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],d=u.inputs;for(let p in d){let h=d[p],c=!1;for(let f=0;f<t.length;f++)if(r[h.id]){u.outputs.forEach(m=>r[m.id]=!0),c=!0,n[u.id]=!0;break}if(c)break}}let s={};s[a.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],d=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let h in d)s[d[h].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(n[u.id]&&i[u.id]){let d={};for(let h in u.inputs){let c=u.inputs[h];r[c.id]&&(d[h]=c)}let p=Object.assign({},u);p.inputs=d,p.outputs=u.outputs,o.push(p)}}return o}function KC(e,t,a,r){for(let n=t.length-1;n>=0;n--){let s=t[n],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=a(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let d=s.inputs[l];if(!js(u.shape,d.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${d.shape}'`);if(e[d.id]==null)e[d.id]=u;else{let p=e[d.id];e[d.id]=r(p,u),p.dispose()}}}}var o5=20,Hd=3,h2=7;function ZC(e,t,a,r){let n=Ou(t),s=YC(e,t,a,n),i=t.length,o=Gc(e,t,a,n,s),l=["Tensor"];return r&&(l.push(`  dtype: ${a}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function YC(e,t,a,r){let n=kt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=a==="complex64"?Yd(e):e;if(o>1)for(let u=0;u<n/s;u++){let d=u*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],Zd(l[d+p],0,a).length)}return i}function Zd(e,t,a){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(h2))} + ${parseFloat(e[1].toFixed(h2))}j`:bs(e)?r=`'${e}'`:a==="bool"?r=Cw(e):r=parseFloat(e.toFixed(h2)).toString(),uh(r,t)}function Cw(e){return e===0?"false":"true"}function Gc(e,t,a,r,n,s=!0){let i=a==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(a==="complex64"){let m=Yd(e);return[Zd(m[0],0,a)]}return a==="bool"?[Cw(e[0])]:[e[0].toString()]}if(l===1){if(o>o5){let g=Hd*i,y=Array.from(e.slice(0,g)),A=Array.from(e.slice((o-Hd)*i,o*i));return a==="complex64"&&(y=Yd(y),A=Yd(A)),["["+y.map((x,b)=>Zd(x,n[b],a)).join(", ")+", ..., "+A.map((x,b)=>Zd(x,n[o-Hd+b],a)).join(", ")+"]"]}let m=a==="complex64"?Yd(e):Array.from(e);return["["+m.map((g,y)=>Zd(g,n[y],a)).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),p=r[0]*i,h=[];if(o>o5){for(let m=0;m<Hd;m++){let g=m*p,y=g+p;h.push(...Gc(e.slice(g,y),u,a,d,n,!1))}h.push("...");for(let m=o-Hd;m<o;m++){let g=m*p,y=g+p;h.push(...Gc(e.slice(g,y),u,a,d,n,m===o-1))}}else for(let m=0;m<o;m++){let g=m*p,y=g+p;h.push(...Gc(e.slice(g,y),u,a,d,n,m===o-1))}let c=l===2?",":"";h[0]="["+h[0]+c;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+c;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function Yd(e){let t=[];for(let a=0;a<e.length;a+=2)t.push([e[a],e[a+1]]);return t}var ta=class{constructor(e,t,a){if(this.dtype=t,this.shape=e.slice(),this.size=kt(e),a!=null){let r=a.length;O(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||fw(t,this.size),this.strides=Ou(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let a=this.locToIndex(t);this.values[a]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let n=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(n)}t++}let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=this.strides[r]*e[r];return this.values[a]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let a=0;a<e.length-1;++a)t+=this.strides[a]*e[a];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let a=0;a<t.length-1;++a)t[a]=Math.floor(e/this.strides[a]),e-=t[a]*this.strides[a];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return qr().makeTensor(this.values,this.shape,this.dtype)}},qr=null,su=null,JC=null;function QC(e){qr=e}function eE(e){su=e}function tE(e){JC=e}var tt=class{constructor(e,t,a,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=kt(e),this.strides=Ou(e),this.dataId=a,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return su.buffer(this.shape,this.dtype,e)}bufferSync(){return su.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return pu(this.shape,e,this.dtype==="complex64")}arraySync(){return pu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=qr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(a=>pf(a))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),qr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=qr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>pf(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await qr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(qr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return su.print(this,e)}clone(){return this.throwIfDisposed(),su.clone(this)}toString(e=!1){let t=this.dataSync();return ZC(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),su.cast(this,e)}variable(e=!0,t,a){return this.throwIfDisposed(),qr().makeVariable(this,e,t,a)}};Object.defineProperty(tt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function aE(){return uy("Tensor",()=>tt)}aE();var vh=class extends tt{constructor(e,t,a,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=a}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!js(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);qr().disposeTensor(this),this.dataId=e.dataId,qr().incRef(this,null)}dispose(){qr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(vh,Symbol.hasInstance,{value:e=>e instanceof tt&&e.assign!=null&&e.assign instanceof Function});var tn={};Le(tn,{assertTypesMatch:()=>_w,getTensorsInContainer:()=>hy,isTensorInList:()=>nE,makeTypesMatch:()=>_t});var Ew=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(Ew||{}),Rw=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(Rw||{}),$w=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))($w||{}),Fw=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Fw||{}),Mw=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Mw||{}),rE={float32:Fw,int32:Rw,bool:$w,complex64:Mw};function ba(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return rE[e][t]}function Yh(e){return ba(e,"int32")}function _t(e,t){if(e.dtype===t.dtype)return[e,t];let a=ba(e.dtype,t.dtype);return[e.cast(a),t.cast(a)]}function _w(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function nE(e,t){return t.some(a=>a.id===e.id)}function hy(e){let t=[];return zw(e,t,new Set),t}function zw(e,t,a){if(e==null)return;if(e instanceof tt){t.push(e);return}if(!sE(e))return;let r=e;for(let n in r){let s=r[n];a.has(s)||(a.add(s),zw(s,t,a))}}function sE(e){return Array.isArray(e)||typeof e=="object"}function p2(e){return e.kernelName!=null}var l5=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},r1=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new l5}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t];if(await this.initializeBackend(a).success){await this.setBackend(a);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,a=1){return e in this.registryFactory?(xs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:a},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:a}=this.initializeBackend(e);if(!(a?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new jC(this.backendInstance),!0}setupRegisteredKernels(){ko(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ko(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let a=t.factory();if(a&&!(a instanceof zu)&&typeof a.then=="function"){let r=++this.pendingBackendInitId,n=a.then(s=>r<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,xs(`Initialization of backend ${e} failed`),xs(s.stack||s.message)),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}else return this.registry[e]=a,{success:!0,asyncInit:!1}}catch(a){return xs(`Initialization of backend ${e} failed`),xs(a.stack||a.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t],{success:r,asyncInit:n}=this.initializeBackend(a);if(n||r)return{name:a,asyncInit:n}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let a=this.state.tensorInfo.get(t),r=a.backend,n=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),a.backend=e,e.move(t,n,a.shape,a.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let a=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}let r;return this.scopedRun(()=>this.startScope(a),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,a){e();try{let r=a();return t(),r}catch(r){throw t(),r}}nextTensorId(){return r1.nextTensorId++}nextVariableId(){return r1.nextVariableId++}clone(e){let t=V.runKernel(hi,{x:e}),a={x:e},r=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return V.runKernel(Zs,o,l)}}),n=[];return this.addTapeNode(this.state.activeScope.name,a,[t],r,n,{}),t}runKernel(e,t,a){if(this.backendName==null&&this.backend,hf(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:a})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,a){let r=this.backend.numDataIds(),n=0;a.forEach(o=>{n+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-n-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,a=[],r=this.isTapeOn(),n=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=p2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(p2(e)){let{kernelName:c,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=hf(c,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let A=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,A);let x=A.map(b=>{if(b.rank!=null)return b;let{dataId:v,shape:S,dtype:N}=b;return this.makeTensorFromDataId(v,S,N)});if(r){let b=this.getTensorsForGradient(c,f,x);a=this.saveTensorsForBackwardMode(b)}return x}}else{let{forwardFunc:c}=e,f=m=>{!r||(a=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:d}=e,p=p2(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(h=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs)}),r&&this.addTapeNode(l,u,t,p,a,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-n,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(c=>u[c]!=null?u[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,a){let r=t1(e);if(r!=null){let n=r.inputsToSave||[],s=r.outputsToSave||[],i;r.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=n.map(l=>t[l]);let o=a.filter((l,u)=>s[u]);return i.concat(o)}return[]}makeTensor(e,t,a,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");a=a||"float32",r=r||this.backend;let n=e;a==="string"&&bs(e[0])&&(n=e.map(o=>Zh(o)));let s=r.write(n,t,a),i=new tt(t,a,s,this.nextTensorId());if(this.trackTensor(i,r),a==="string"){let o=this.state.tensorInfo.get(s),l=yw(n);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,a,r){a=a||"float32";let n=new tt(t,a,e,this.nextTensorId());return this.trackTensor(n,r),n}makeVariable(e,t=!0,a,r){a=a||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let n=new vh(e,t,a,this.nextTensorId());if(this.state.registeredVariables[n.name]!=null)throw new Error(`Variable with name ${n.name} was already registered`);return this.state.registeredVariables[n.name]=n,this.incRef(n,this.backend),n}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let a=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(a=e.size*e1(e.dtype)),this.state.numBytes+=a,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:a})),e instanceof vh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let a=e.size*e1(e.dtype);this.state.numBytes-=a}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,a=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-a;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,a,r,n,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:a,saved:n},o=t1(e);o!=null&&(r=o.gradFunc),r!=null&&(i.gradient=l=>(l=l.map((u,d)=>{if(u==null){let p=a[d],h=qf(p.size,p.dtype);return this.makeTensor(h,p.shape,p.dtype)}return u}),r(l.length>1?l:l[0],n,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=hy(e),a=new Set(t.map(n=>n.id));for(let n=0;n<this.state.activeScope.track.length;n++){let s=this.state.activeScope.track[n];!s.kept&&!a.has(s.id)&&s.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(n=>{!n.kept&&n.scopeId===r.id&&this.track(n)})}gradients(e,t,a,r=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),a!=null&&a.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${a.dtype}'`);let n=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(n instanceof tt,()=>"The result y returned by f() must be a tensor.");let s=XC(this.state.activeTape,t,n);if(!r&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[n.id]=a??iE(n.shape),KC(i,s,l=>this.tidy(l),oE);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:n,grads:o}})}customGrad(e){return O(Rs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(i=>i instanceof tt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a,r={};t.forEach((i,o)=>{r[o]=i});let n=(i,o)=>(a=e(...t,o),O(a.value instanceof tt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(Rs(a.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),a.value),s=(i,o)=>{let l=a.gradFunc(i,o),u=Array.isArray(l)?l:[l];O(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(u.every(p=>p instanceof tt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return u.forEach((p,h)=>{d[h]=()=>p}),d};return this.runKernelFunc({forwardFunc:n,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=bh(),a=await this.backend.time(e);return a.wallMs=bh()-t,a}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new l5;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},py=r1;py.nextTensorId=0;py.nextVariableId=0;function iE(e){let t=iy(kt(e),"float32");return V.makeTensor(t,e,"float32")}function Ow(){let e=ww();if(e._tfengine==null){let t=new vw(e);e._tfengine=new py(t)}return RC(e._tfengine.ENV),QC(()=>e._tfengine),e._tfengine}var V=Ow();function oE(e,t){let a={a:e,b:t};return V.runKernel(Yn,a)}var Jh={};Le(Jh,{isBrowser:()=>Pw,isMobile:()=>dE,mockIsMobile:()=>uE});function lE(){return typeof navigator<"u"&&navigator!=null}var n1;function uE(e){n1=e}function dE(e){if(n1!==void 0)return n1;if(e||lE()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let a=e;return a.userAgentData&&a.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Pw(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var _r=J();_r.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});_r.registerFlag("IS_BROWSER",()=>Pw());_r.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");_r.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));_r.registerFlag("PROD",()=>!1);_r.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>_r.getBool("DEBUG"));_r.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);_r.registerFlag("IS_TEST",()=>!1);_r.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);_r.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);_r.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function In(e,t){let a=e;if(Aa(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(a)||Aa(a)&&t!=="string";)r.push(a.length),a=a[0];return Array.isArray(e)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Dw(e,r,[]),r}function Dw(e,t,a){if(a=a||[],!Array.isArray(e)&&!Aa(e)){O(t.length===0,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${a.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let n=0;n<e.length;++n)Dw(e[n],r,a.concat(n))}function u5(e,t,a,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${a}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function F(e,t,a,r="numeric"){if(e instanceof tt)return u5(r,e.dtype,t,a),e;let n=Hf(e);if(n!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(n=r),u5(r,n,t,a),e==null||!Aa(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${a}' must be a Tensor or TensorLike, but got '${o}'`)}let s=In(e,n);!Aa(e)&&!Array.isArray(e)&&(e=[e]);let i=n!=="string"?x0(e,n):wo(e,[],!0);return V.makeTensor(i,s,n)}function wh(e,t,a,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${a} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((n,s)=>F(n,`${t}[${s}]`,a,r))}var Lw="__op";function U(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let a=t[0],r=e[a];a.endsWith("_")&&(a=a.substring(0,a.length-1)),a=a+Lw;let n=(...s)=>{V.startScope(a);try{let i=r(...s);return ly(i)&&console.error("Cannot return a Promise inside of tidy."),V.endScope(i),i}catch(i){throw V.endScope(null),i}};return Object.defineProperty(n,"name",{value:a,configurable:!0}),n}function hE(e,t){let a=F(e,"real","complex"),r=F(t,"imag","complex");za(a.shape,r.shape,`real and imag shapes, ${a.shape} and ${r.shape}, must match in call to tf.complex().`);let n={real:a,imag:r};return V.runKernel(Mh,n)}var _s=U({complex_:hE});function Wi(e,t,a,r){if(r==null&&(r=Hf(e)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Aa(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){oy(t);let n=kt(t),s=kt(a);O(n===s,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<a.length;++i){let o=a[i],l=i===a.length-1?o!==kt(t.slice(i)):!0;O(a[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${a}) does not match the provided shape (${t}). `)}}return!Aa(e)&&!Array.isArray(e)&&(e=[e]),t=t||a,e=r!=="string"?x0(e,r):wo(e,[],!0),V.makeTensor(e,t,r)}function lt(e,t,a){let r=In(e,a);return Wi(e,t,r,a)}var s1={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},cf=4;async function pE(e,t){let a=[],r=[],n=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<n.length;++i){let o=n[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let d=new Promise(async p=>{let h=await l.bytes(),c=h.reduce((g,y)=>g+y.length,0)+cf*h.length,f=new Uint8Array(c),m=0;for(let g=0;g<h.length;g++){let y=h[g],A=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(A,m),m+=cf,f.set(y,m),m+=y.length}p(f)});r.push(d)}else r.push(l.data());t!=null&&(u.group=t),a.push(u)}let s=await Promise.all(r);return{data:cE(s),specs:a}}function Ww(e,t){let a={},r,n=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,u=kt(l),d;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let h=s1[p.dtype],c=e.slice(n,n+u*h),f=p.dtype==="uint8"?new Uint8Array(c):new Uint16Array(c);if(o==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){d=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];d[m]=g*p.scale+p.min}}else if(p.dtype==="float16")r===void 0&&(r=xE()),d=r(f);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(o==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);d=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];d[m]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);n+=u*h}else if(o==="string"){let p=kt(s.shape);d=[];for(let h=0;h<p;h++){let c=new Uint32Array(e.slice(n,n+cf))[0];n+=cf;let f=new Uint8Array(e.slice(n,n+c));d.push(f),n+=c}}else{let p=s1[o],h=e.slice(n,n+u*p);if(o==="float32")d=new Float32Array(h);else if(o==="int32")d=new Int32Array(h);else if(o==="bool")d=new Uint8Array(h);else if(o==="complex64"){d=new Float32Array(h);let c=new Float32Array(d.length/2),f=new Float32Array(d.length/2);for(let y=0;y<c.length;y++)c[y]=d[y*2],f[y]=d[y*2+1];let m=lt(c,l,"float32"),g=lt(f,l,"float32");a[i]=_s(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);n+=u*p}o!=="complex64"&&(a[i]=lt(d,l,o))}return a}function cE(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,a=[];e.forEach(s=>{if(t+=s.byteLength,a.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),n=0;return a.forEach(s=>{r.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),r.buffer}var cy=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function d5(e){return cy?Buffer.byteLength(e):new Blob([e]).size}function fE(e){if(cy)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),a="";for(let r=0,n=t.length;r<n;r++)a+=String.fromCharCode(t[r]);return btoa(a)}function mE(e){if(cy){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),a=new Uint8Array(t.length);for(let r=0;r<t.length;++r)a.set([t.charCodeAt(r)],r);return a.buffer}function fy(e){if(e.length===1)return e[0];let t=0;e.forEach(n=>{t+=n.byteLength});let a=new Uint8Array(t),r=0;return e.forEach(n=>{a.set(new Uint8Array(n),r),r+=n.byteLength}),a.buffer}function h5(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let a=e.split(t);return a[a.length-1]}function Bw(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(a.trainingConfig=e.trainingConfig),a}async function my(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(a.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[r,n]=await t(e.weightsManifest);a.weightSpecs=r,a.weightData=n}return e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),a}function Qh(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:d5(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:d5(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function gE(){let e=a=>{let r=a<<13,n=0;for(;(r&8388608)===0;)n-=8388608,r<<=1;return r&=-8388609,n+=947912704,r|n},t=new Uint32Array(2048);t[0]=0;for(let a=1;a<1024;a++)t[a]=e(a);for(let a=1024;a<2048;a++)t[a]=939524096+(a-1024<<13);return t}function yE(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function AE(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function xE(){let e=gE(),t=yE(),a=AE();return r=>{let n=new ArrayBuffer(4*r.length),s=new Uint32Array(n);for(let i=0;i<r.length;i++){let o=r[i],l=e[a[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(n)}}var Ot=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ot.instance==null&&(Ot.instance=new Ot),Ot.instance}static registerSaveRouter(e){Ot.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ot.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ot.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ot.getHandlers(e,"load",t)}static getHandlers(e,t,a){let r=[];return(t==="load"?Ot.getInstance().loadRouters:Ot.getInstance().saveRouters).forEach(n=>{let s=n(e,a);s!==null&&r.push(s)}),r}},bE=e=>Ot.registerSaveRouter(e),vE=e=>Ot.registerLoadRouter(e),wE=e=>Ot.getSaveHandlers(e),kE=(e,t)=>Ot.getLoadHandlers(e,t),i1="tensorflowjs",o1=1,co="models_store",vs="model_info_store";function Vw(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function l1(e){let t=e.result;t.createObjectStore(co,{keyPath:"modelPath"}),t.createObjectStore(vs,{keyPath:"modelPath"})}var Io=class{constructor(e){if(this.indexedDB=Vw(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((a,r)=>{let n=this.indexedDB.open(i1,o1);n.onupgradeneeded=()=>l1(n),n.onsuccess=()=>{let s=n.result;if(t==null){let i=s.transaction(co,"readonly"),o=i.objectStore(co).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));a(o.result.modelArtifacts)},o.onerror=l=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{let i=Qh(t),o=s.transaction(vs,"readwrite"),l=o.objectStore(vs),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),d;u.onsuccess=()=>{d=s.transaction(co,"readwrite");let p=d.objectStore(co).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>a({modelArtifactsInfo:i}),p.onerror=h=>{l=o.objectStore(vs);let c=l.delete(this.modelPath);c.onsuccess=()=>(s.close(),r(p.error)),c.onerror=f=>(s.close(),r(p.error))}},u.onerror=p=>(s.close(),r(u.error)),o.oncomplete=()=>{d==null?s.close():d.oncomplete=()=>s.close()}}},n.onerror=s=>r(n.error)})}};Io.URL_SCHEME="indexeddb://";var Uw=e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Io.URL_SCHEME)?IE(e.slice(Io.URL_SCHEME.length)):null;Ot.registerSaveRouter(Uw);Ot.registerLoadRouter(Uw);function IE(e){return new Io(e)}function SE(e){return e.startsWith(Io.URL_SCHEME)?e.slice(Io.URL_SCHEME.length):e}var NE=class{constructor(){this.indexedDB=Vw()}async listModels(){return new Promise((e,t)=>{let a=this.indexedDB.open(i1,o1);a.onupgradeneeded=()=>l1(a),a.onsuccess=()=>{let r=a.result,n=r.transaction(vs,"readonly"),s=n.objectStore(vs).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),n.oncomplete=()=>r.close()},a.onerror=r=>t(a.error)})}async removeModel(e){return e=SE(e),new Promise((t,a)=>{let r=this.indexedDB.open(i1,o1);r.onupgradeneeded=()=>l1(r),r.onsuccess=()=>{let n=r.result,s=n.transaction(vs,"readwrite"),i=s.objectStore(vs),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return n.close(),a(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),d=()=>{l=n.transaction(co,"readwrite");let p=l.objectStore(co).delete(e);p.onsuccess=()=>t(o.result.modelArtifactsInfo),p.onerror=h=>a(o.error)};u.onsuccess=d,u.onerror=p=>(d(),n.close(),a(o.error))}},o.onerror=u=>(n.close(),a(o.error)),s.oncomplete=()=>{l==null?n.close():l.oncomplete=()=>n.close()}},r.onerror=n=>a(r.error)})}},Wn="/",iu="tensorflowjs_models",Gw="info",TE="model_topology",CE="weight_specs",EE="weight_data",RE="model_metadata";function jw(e){return{info:[iu,e,Gw].join(Wn),topology:[iu,e,TE].join(Wn),weightSpecs:[iu,e,CE].join(Wn),weightData:[iu,e,EE].join(Wn),modelMetadata:[iu,e,RE].join(Wn)}}function Hw(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function $E(e){let t=e.split(Wn);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Wn)}function FE(e){return e.startsWith(So.URL_SCHEME)?e.slice(So.URL_SCHEME.length):e}var So=class{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=jw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Qh(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,fE(e.weightData));let n={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(n)),{modelArtifactsInfo:r}}catch{throw Hw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(a==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=a;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let n=this.LS.getItem(this.keys.modelMetadata);if(n!=null){let i=JSON.parse(n);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=mE(s),t}};So.URL_SCHEME="localstorage://";var qw=e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(So.URL_SCHEME)?ME(e.slice(So.URL_SCHEME.length)):null;Ot.registerSaveRouter(qw);Ot.registerLoadRouter(qw);function ME(e){return new So(e)}var _E=class{constructor(){O(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=iu+Wn,a=Wn+Gw;for(let r=0;r<this.LS.length;++r){let n=this.LS.key(r);if(n.startsWith(t)&&n.endsWith(a)){let s=$E(n);e[s]=JSON.parse(this.LS.getItem(n))}}return e}async removeModel(e){e=FE(e);let t=jw(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let a=JSON.parse(this.LS.getItem(t.info));return Hw(t),a}},cu="://",gr=class{constructor(){this.managers={}}static getInstance(){return gr.instance==null&&(gr.instance=new gr),gr.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(cu)&&(e=e.slice(0,e.indexOf(cu))),O(e.length>0,()=>"scheme must not be an empty string.");let a=gr.getInstance();O(a.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),a.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function jc(e){if(e.indexOf(cu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gr.getSchemes().join(",")}`);return{scheme:e.split(cu)[0],path:e.split(cu)[1]}}async function Xw(e,t,a=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Ot.getLoadHandlers(e);O(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let n=r[0],s=Ot.getSaveHandlers(t);O(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=jc(e).scheme,l=jc(e).path,u=o===jc(e).scheme,d=await n.load();a&&u&&await gr.getManager(o).removeModel(l);let p=await i.save(d);return a&&!u&&await gr.getManager(o).removeModel(l),p.modelArtifactsInfo}async function zE(){let e=gr.getSchemes(),t={};for(let a of e){let r=await gr.getManager(a).listModels();for(let n in r){let s=a+cu+n;t[s]=r[n]}}return t}async function OE(e){let t=jc(e);return gr.getManager(t.scheme).removeModel(t.path)}async function PE(e,t){return Xw(e,t,!1)}async function DE(e,t){return Xw(e,t,!0)}var LE=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(J().get("IS_BROWSER")){J().setPlatform("browser",new LE);try{gr.registerManager(So.URL_SCHEME,new _E)}catch{}try{gr.registerManager(Io.URL_SCHEME,new NE)}catch{}}var WE={importFetch:()=>K9()},c2,BE=class{constructor(){this.util=Z9(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return J().global.fetch!=null?J().global.fetch(e,t):(c2==null&&(c2=WE.importFetch()),c2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new BE);function Be(e,t="float32",a){return t=t||"float32",oy(e),new ta(e,t,a)}function VE(e,t){let a=F(e,"x","cast");if(!gw(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&a.dtype!=="string"||t!=="string"&&a.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:a},n={dtype:t};return V.runKernel(Zs,r,n)}var he=U({cast_:VE});function UE(e){let t={x:F(e,"x","clone","string_or_numeric")};return V.runKernel(hi,t)}var ja=U({clone_:UE});function Kw(e,t=!1){console.log(e.toString(t))}Ow();var GE={buffer:Be,cast:he,clone:ja,print:Kw};eE(GE);var Ea={};Le(Ea,{browserFiles:()=>YE,browserHTTPRequest:()=>aR,concatenateArrayBuffers:()=>fy,copyModel:()=>PE,decodeWeights:()=>Ww,encodeWeights:()=>pE,fromMemory:()=>nR,getLoadHandlers:()=>kE,getModelArtifactsForJSON:()=>my,getModelArtifactsInfoForJSON:()=>Qh,getSaveHandlers:()=>wE,http:()=>yy,isHTTPScheme:()=>d1,listModels:()=>zE,loadWeights:()=>JE,moveModel:()=>DE,registerLoadRouter:()=>vE,registerSaveRouter:()=>bE,removeModel:()=>OE,weightsLoaderFactory:()=>Yw,withSaveHandler:()=>sR});var jE="model",HE=".json",qE=".weights.bin";function p5(e){return new Promise(t=>setTimeout(t)).then(e)}var u1=class{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(u1.URL_SCHEME)&&(e=e.slice(u1.URL_SCHEME.length)),(e==null||e.length===0)&&(e=jE),this.modelJsonFileName=e+HE,this.weightDataFileName=e+qE}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let a=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Bw(e,a),n=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=n,await p5(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await p5(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Qh(e)}}}},ff=u1;ff.URL_SCHEME="downloads://";var XE=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let a=new FileReader;a.onload=r=>{let n=JSON.parse(r.target.result),s=n.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(n.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=my(n,o=>this.loadWeights(o));e(i)},a.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(this.jsonFile)})}loadWeights(e){let t=[],a=[];for(let s of e)t.push(...s.weights),a.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),n=a.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(n).then(s=>[t,fy(s)])}loadWeightsFile(e,t){return new Promise((a,r)=>{let n=new FileReader;n.onload=s=>{let i=s.target.result;a(i)},n.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),n.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],a=this.weightsFiles.map(n=>h5(n.name)),r={};for(let n of e)n.paths.forEach(s=>{let i=h5(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),a.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[a.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},KE=e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ff.URL_SCHEME)?ZE(e.slice(ff.URL_SCHEME.length)):null;Ot.registerSaveRouter(KE);function ZE(e="model"){return new ff(e)}function YE(e){return new XE(e)}function c5(e,t,a,r){i(e),a=a??0,r=r??1,o(a,r);let n=0,s=l=>(l.then(u=>{let d=a+ ++n/e.length*(r-a);return t(d),u}),l);function i(l){O(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),O(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}async function Zw(e,t){t==null&&(t={});let a=t.fetchFunc==null?J().platform.fetch:t.fetchFunc,r=e.map(u=>a(u,t.requestInit,{isBinary:!0})),n=0,s=.5,i=(t.onProgress==null?await Promise.all(r):await c5(r,t.onProgress,n,s)).map(u=>u.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await c5(i,t.onProgress,o,l)}async function JE(e,t="",a,r){return Yw(n=>Zw(n,{requestInit:r}))(e,t,a)}function Yw(e){return async(t,a="",r)=>{let n=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,f)=>{let m=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,A=s1[y]*kt(g.shape),x=()=>{n[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:A})};r!=null?r.forEach((b,v)=>{b===g.name&&(x(),i[v]=!0)}):x(),o.push(g.name),m+=A})}),!i.every(c=>c)){let c=r.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=n.reduce((c,f,m)=>(f&&c.push(m),c),[]),u=[];l.forEach(c=>{t[c].paths.forEach(f=>{let m=a+(a.endsWith("/")?"":"/")+f;u.push(m)})});let d=await e(u),p={},h=0;return l.forEach(c=>{let f=t[c].paths.length,m=0;for(let x=0;x<f;x++)m+=d[h+x].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),A=0;for(let x=0;x<f;x++){let b=new Uint8Array(d[h+x]);y.set(b,A),A+=b.byteLength}s[c].forEach(x=>{let b=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),v=Ww(b,[x.manifestEntry]);for(let S in v)p[S]=v[S]}),h+=f}),p}}var QE="application/octet-stream",eR="application/json",gy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=J().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let a=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Bw(e,a);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:eR}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:QE}),"model.weights.bin");let n=await this.fetch(this.path,t);if(n.ok)return{modelArtifactsInfo:Qh(e),responses:[n]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${n.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let a=t.modelTopology,r=t.weightsManifest;if(a==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return my(t,n=>this.loadWeights(n))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[a,r]=tR(t),n=this.weightPathPrefix||a,s=[];for(let u of e)s.push(...u.weights);let i=[],o=[];for(let u of e)for(let d of u.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(d)):i.push(n+d+r);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await Zw(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,fy(l)]}};gy.URL_SCHEME_REGEX=/^https?:\/\//;function tR(e){let t=e.lastIndexOf("/"),a=e.lastIndexOf("?"),r=e.substring(0,t),n=a>t?e.substring(a):"";return[r+"/",n]}function d1(e){return e.match(gy.URL_SCHEME_REGEX)!=null}var Jw=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let a=!0;if(Array.isArray(e)?a=e.every(r=>d1(r)):a=d1(e),a)return yy(e,t)}return null};Ot.registerSaveRouter(Jw);Ot.registerLoadRouter(Jw);function yy(e,t){return new gy(e,t)}function aR(e,t){return yy(e,t)}var f2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},rR=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function nR(e,t,a,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new f2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new f2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new f2({modelTopology:e,weightSpecs:t,weightData:a,trainingConfig:r}))}function sR(e){return new rR(e)}var Qw={};Le(Qw,{confusionMatrix:()=>dR});function iR(e,t,a=!1,r=!1){let n=F(e,"a","matMul"),s=F(t,"b","matMul");[n,s]=_t(n,s);let i={a:n,b:s},o={transposeA:a,transposeB:r};return V.runKernel(Ks,i,o)}var Ze=U({matMul_:iR});function oR(e,t,a=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let n={indices:F(e,"indices","oneHot","int32")},s={depth:t,onValue:a,offValue:r};return V.runKernel(sl,n,s)}var kh=U({oneHot_:oR});function lR(e,t){let a=F(e,"x","transpose");if(t==null&&(t=a.shape.map((s,i)=>i).reverse()),O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`),t.forEach(s=>{O(s>=0&&s<a.rank,()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`)}),a.rank<=1)return a.clone();let r={x:a},n={perm:t};return V.runKernel(Di,r,n)}var Je=U({transpose_:lR});function uR(e,t,a){let r=F(e,"labels","confusionMatrix"),n=F(t,"predictions","confusionMatrix");O(a==null||a>0&&Number.isInteger(a),()=>`If provided, numClasses must be a positive integer, but got ${a}`),O(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),O(n.rank===1,()=>`Expected the rank of predictions to be 1, but got ${n.rank}`),O(r.shape[0]===n.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${n.shape[0]}. Labels and predictions should have the same number of elements.`),O(a>0&&Number.isInteger(a),()=>`numClasses is required to be a positive integer, but got ${a}`);let s=kh(he(r,"int32"),a),i=kh(he(n,"int32"),a),o=Je(s),l=Ze(o,i);return he(l,"int32")}var dR=U({confusionMatrix_:uR}),kl={};Le(kl,{assertAndGetBroadcastShape:()=>gt,getBroadcastDims:()=>ek,getReductionAxes:()=>Ht});function ek(e,t){let a=e.length,r=[];for(let n=0;n<a;n++){let s=a-1-n,i=e[s]||1;(t[t.length-1-n]||1)>1&&i===1&&r.unshift(s)}return r}function Ht(e,t){let a=[];for(let r=0;r<t.length;r++){let n=e[e.length-r-1],s=t.length-r-1,i=t[s];(n==null||n===1&&i>1)&&a.unshift(s)}return a}function gt(e,t){let a=[],r=Math.max(e.length,t.length);for(let n=0;n<r;n++){let s=e[e.length-n-1];s==null&&(s=1);let i=t[t.length-n-1];if(i==null&&(i=1),s===1)a.unshift(i);else if(i===1)a.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else a.unshift(s)}return a}var Xr={};Le(Xr,{fromPixels:()=>yR,fromPixelsAsync:()=>mR,toPixels:()=>gR});function tk(e,t,a){if(Po(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=In(e,a);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Wi(e,t,r,a)}var to;function ak(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=!1,r=!1,n=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)a=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(n&&n&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(hf(Ah,V.backendName)!=null){let h={pixels:e},c={numChannels:t};return V.runKernel(Ah,h,c)}let[l,u]=n?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(i)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||a)d=e.data;else if(s||n||o){if(to==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")to=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else to=document.createElement("canvas").getContext("2d");to.canvas.width=l,to.canvas.height=u,to.drawImage(e,0,0,l,u),d=to.getImageData(0,0,l,u).data}let p;if(t===4)p=new Int32Array(d);else{let h=l*u;p=new Int32Array(h*t);for(let c=0;c<h;c++)for(let f=0;f<t;++f)p[c*t+f]=d[c*4+f]}return tk(p,[u,l,t],"int32")}function hR(e){return e!=null&&e.data instanceof Uint8Array}function pR(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function cR(e){return e!=null&&e.width!==0&&e.height!==0}function fR(e){return pR()&&!(e instanceof ImageBitmap)&&cR(e)&&!hR(e)}async function mR(e,t=3){let a=null;if(J().getBool("WRAP_TO_IMAGEBITMAP")&&fR(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?a=r:a=e}else a=e;return ak(a,t)}async function gR(e,t){let a=F(e,"img","toPixels");if(!(e instanceof tt)){let u=a;a=he(u,"int32"),u.dispose()}if(a.rank!==2&&a.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${a.rank}.`);let[r,n]=a.shape.slice(0,2),s=a.rank===2?1:a.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(a.dtype!=="float32"&&a.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${a.dtype}. Please use float32 or int32 tensors.`);let i=await a.data(),o=a.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*r*4);for(let u=0;u<r*n;++u){let d=[0,0,0,255];for(let h=0;h<s;h++){let c=i[u*s+h];if(a.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(a.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(d[0]=c*o,d[1]=c*o,d[2]=c*o):d[h]=c*o}let p=u*4;l[p+0]=Math.round(d[0]),l[p+1]=Math.round(d[1]),l[p+2]=Math.round(d[2]),l[p+3]=Math.round(d[3])}if(t!=null){t.width=n,t.height=r;let u=t.getContext("2d"),d=new ImageData(l,n,r);u.putImageData(d,0,0)}return a!==e&&a.dispose(),l}var yR=U({fromPixels_:ak}),Ay={};Le(Ay,{prepareAndValidate:()=>rk});function rk(e,t){let a=e.shape.length,r=t.shape.length;if(a<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${a}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>a)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${a}`);if(kt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let n=t.shape,s=n[n.length-1],i=1;for(let p=0;p<n.length-1;++p)i*=n[p];let o=e.shape,l=n.slice();l.pop();let u=1;for(let p=s;p<a;++p)u*=o[p],l.push(o[p]);let d=[...Ou(e.shape).map(p=>p/u),1].slice(0,s);return[l,i,u,d]}var xy={};Le(xy,{calculateShapes:()=>nk,validateInput:()=>vy,validateUpdateShape:()=>by});function by(e,t,a){let r=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${a.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${n}.`;if(a.rank<n)throw new Error(s+` update.rank < ${n}. `);if(e.length<r+(a.rank-n))throw new Error(s+` Output shape length < ${r+(a.rank-n)}`);if(a.rank!==n+e.length-r)throw new Error(s+` update.rank != ${n+e.length-r}`);for(let i=0;i<n;++i)if(a.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${a.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<a.rank-n;++i)if(a.shape[i+n]!==e[i+r])throw new Error(s+` updates.shape[${i+n}] (${a.shape[i+n]}) != shape[${i+n}] (${e[i+n]})`)}function vy(e,t,a){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(a.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${a}`);if(a.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}by(a,t,e)}function nk(e,t,a){let r=t.shape.length,n=r>1?t.shape[r-1]:1,s=a.length,i=1;for(let p=n;p<s;++p)i*=a[p];let o=n<1?1:n,l=kt(t.shape)/o,u=[...Ou(a.slice(0,n)),1],d=kt(a);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:u,outputSize:d}}var Ft={};Le(Ft,{assertParamsValid:()=>xR,computeFlatOffset:()=>IR,computeOutShape:()=>vR,getNormalizedAxes:()=>wR,isSliceContinous:()=>kR,maskToAxes:()=>bR,parseSliceParams:()=>ck,sliceInfo:()=>SR,startForAxis:()=>hk,startIndicesWithElidedDims:()=>lk,stopForAxis:()=>pk,stopIndicesWithElidedDims:()=>uk,stridesForAxis:()=>dk,stridesWithElidedDims:()=>sk});var h1=-2,AR=-1;function xR(e,t,a){let r=e.shape.length;O(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),O(r===a.length,()=>`Error in slice${r}D: Length of size ${a} must match the rank of the array (${r}).`);for(let n=0;n<r;++n)O(t[n]+a[n]<=e.shape[n],()=>`Error in slice${r}D: begin[${n}] + size[${n}] (${t[n]+a[n]}) would overflow input.shape[${n}] (${e.shape[n]})`)}function bR(e){let t=[],a=0;for(;e>0;)e&1&&t.push(a),e/=2,a++;return t}function vR(e,t,a){let r=[];for(let n=0;n<e.length;n++)r[n]=Math.ceil((t[n]-e[n])/a[n]);return r}function sk(e,t,a,r){let n=[...e];for(let s=n.length;s<r.length;s++)n.push(1);for(let s=0;s<a;s++)s===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function ik(e,t,a){return a<=e?a:a-(t-1)}function ok(e,t){let a=[];for(let r=0;r<e;r++)a.push(t+r);return a}function wR(e,t,a,r,n,s,i,o,l){let u=e.length,d=new Array(u),p=new Array(u),h=new Array(u);if(t.length&&a>0){let c=t[0],f=a+1;d=lk(i,c,f,r,e),p=uk(o,c,f,n,e),h=sk(s,c,f,e)}else for(let c=0;c<u;c++)d[c]=hk(i,r,s,e,c,l),p[c]=pk(o,n,s,e,c,l),h[c]=dk(s,c,l);return{begin:d,end:p,strides:h}}function lk(e,t,a,r,n){let s=[...n],i=ok(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=ik(t,a,o),u=r[l];e&1<<l&&(u=0),s[o]=u}return s}function uk(e,t,a,r,n){let s=[...n],i=ok(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=ik(t,a,o),u=r[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=n[o];s[o]<0&&(s[o]+=l),s[o]=yh(0,s[o],n[o])}return s}function dk(e,t,a){let r=e[t];return(a&1<<t||r==null)&&(r=1),r}function hk(e,t,a,r,n,s){let i=t[n],o=a[n]||1;(e&1<<n||s&1<<n||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[n];return i<0&&(i+=l),i=yh(0,i,l-1),i}function pk(e,t,a,r,n,s){let i=t[n],o=a[n]||1;(e&1<<n||s&1<<n||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[n];return i<0&&(i+=l),o>0?i=yh(0,i,l):i=yh(-1,i,l-1),i}function kR(e,t,a){let r=a.length;for(let n=0;n<a.length;n++)if(a[n]>1){r=n;break}for(let n=r+1;n<a.length;n++)if(t[n]>0||a[n]!==e[n])return!1;return!0}function IR(e,t){let a=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)a+=e[r]*t[r];return a}function ck(e,t,a){let r,n=e.shape.length;typeof t=="number"?r=[t,...new Array(n-1).fill(0)]:t.length<n?r=t.concat(new Array(n-t.length).fill(0)):r=t.slice(),r.forEach(i=>{O(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return a==null?s=new Array(n).fill(-1):typeof a=="number"?s=[a,...new Array(n-1).fill(-1)]:a.length<n?s=a.concat(new Array(n-a.length).fill(-1)):s=a,s=s.map((i,o)=>i>=0?i:(O(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function SR(e,t,a,r,n,s,i,o,l){let u;if(r==null?(u=new Array(t.length),u.fill(1)):u=r,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:a.slice(),strides:u.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let A=0;A<p.dims;A++)d&&(1<<A&o)!==0&&p.numAddAxisAfterEllipsis++,1<<A&i&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};NR(p,h);let c=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(h.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let x=!!(h.shrinkAxisMask&1<<A),b=e[A];if(b===-1){g.push(x?1:-1);continue}let v=[h.beginMask&1<<A,h.endMask&1<<A],S=[h.strides[A]>0?0:-1,h.strides[A]>0?b:b-1];if(x&&h.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[A]===1;let N=!!(h.beginMask&1<<A&&h.endMask&1<<A);if(h.beginValid&&h.endValid){if(x){let $=h.begin[A]<0?b+h.begin[A]:h.begin[A];if(h.begin[A]=$,h.end[A]=h.begin[A]+1,$<0||$>=b)throw Error(`slice index ${h.begin[A]} of dimension ${A} out of bounds.`)}else h.begin[A]=f5(h.begin[A],0,h.strides[A],b,v,S),h.end[A]=f5(h.end[A],1,h.strides[A],b,v,S);let P=h.strides[A]===1&&h.begin[A]===0&&h.end[A]===b;c=c&&P,f=f&&(A===0&&h.strides[A]===1||P)}else c=c&&h.strides[A]===1&&N,f=f&&(A===0&&h.strides[A]===1||N);let E,R=!1;if(h.beginValid&&h.endValid?(E=h.end[A]-h.begin[A],R=!0):x?(E=1,R=!0):N&&b>=0&&(h.strides[A]<0?E=-b:E=b,R=!0),R){let P;E===0||E<0!=h.strides[A]<0?P=0:P=Math.trunc(E/h.strides[A])+(E%h.strides[A]!==0?1:0),g.push(P)}else g.push(-1)}for(let A=0;A<h.finalShapeGatherIndices.length;++A){let x=h.finalShapeGatherIndices[A];x>=0?y.push(g[x]):x===h1&&y.push(1)}return{finalShapeSparse:y.filter((A,x)=>h.finalShapeGatherIndices[x]!==h1),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function NR(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let a=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let n=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;a<n;a++)t.begin[a]=0,t.end[a]=0,t.strides[a]=1,t.beginMask|=1<<a,t.endMask|=1<<a,t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[a]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(h1),t.finalShapeGatherIndicesSparse.push(-1);else{if(a===t.begin.length)throw Error(`Index out of range using input dim ${a}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[a]=e.begin[r]),e.end!=null&&(t.end[a]=e.end[r]),t.strides[a]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<a),e.endMask&1<<r&&(t.endMask|=1<<a),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(AR),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<a):(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[a]=r,a++}}function f5(e,t,a,r,n,s){if(n[t])return a>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var oe={};Le(oe,{Serializable:()=>fk,SerializationMap:()=>lo,registerClass:()=>Bi});var fk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},lo=class{constructor(){this.classNameMap={}}static getMap(){return lo.instance==null&&(lo.instance=new lo),lo.instance}static register(e){lo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Bi(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),lo.register(e)}var mk={};Le(mk,{TEST_EPSILON_FLOAT16:()=>gk,encodeStrings:()=>yk,expectArrayBuffersEqual:()=>MR,expectArraysClose:()=>CR,expectArraysEqual:()=>RR,expectNumbersClose:()=>$R,expectPromiseToFail:()=>ER,expectValuesInRange:()=>FR,testEpsilon:()=>wy});var TR=.001,gk=.1;function CR(e,t,a){return a==null&&(a=wy()),p1(e,t,(r,n)=>ky(r,n,a))}function wy(){return V.backend.floatPrecision()===32?TR:gk}function p1(e,t,a){let r=!0;if((Aa(e)||Aa(t))&&(r=!1),Aa(e)&&Aa(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=In(e),o=In(t);if(!js(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let n=Aa(e)?e:wo(e),s=Aa(t)?t:wo(t);if(n.length!==s.length)throw new Error(`Arrays have different lengths actual: ${n.length} vs expected: ${s.length}.
Actual:   ${n}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=n[i],l=s[i];if(!a(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${n}.
Expected: ${s}.`)}}function ER(e,t){e().then(()=>t.fail(),()=>t())}function RR(e,t){let a=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return bs(e)||bs(e[0])||bs(t)||bs(t[0])?p1(e,a,(r,n)=>r==n):p1(e,t,(r,n)=>ky(r,n,0))}function $R(e,t,a){if(a==null&&(a=wy()),!ky(e,t,a))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ky(e,t,a){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>a)}function FR(e,t,a){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>a)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${a}`)}function MR(e,t){let a=new Float32Array(e),r=new Float32Array(t);if(a.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${a.length}`);for(let n=0;n<r.length;n++)if(a[n]!==r[n])throw new Error(`Expected ArrayBuffer value at ${n} to be ${r[n]} but got ${a[n]} instead`)}function yk(e){for(let t=0;t<e.length;t++){let a=e[t];Array.isArray(a)?yk(a):e[t]=Zh(a)}return e}var Ak="0.0.0";function xk(){J().set("PROD",!0)}function _R(){J().set("DEBUG",!0)}function zR(){J().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Iy(e){J().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}tE(Iy);function OR(){V.disposeVariables()}function Ca(){return V}function mf(){return V.memory()}function PR(e){return V.profile(e)}function Z(e,t){return V.tidy(e,t)}function se(e){hy(e).forEach(t=>t.dispose())}function ua(e){return V.keep(e)}function DR(e){return V.time(e)}function bk(e){return V.setBackend(e)}function gf(){return V.ready()}function yr(){return V.backendName}function LR(e){V.removeBackend(e)}function vk(e){return V.findBackend(e)}function WR(e){return V.findBackendFactory(e)}function dd(e,t,a=1){return V.registerBackend(e,t,a)}function Hn(){return V.backend}function BR(e,t){J().setPlatform(e,t)}function VR(e,t){let a=F(e,"a","add"),r=F(t,"b","add");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(Yn,n)}var ie=U({add_:VR});function UR(e,t){let a=F(e,"a","floorDiv"),r=F(t,"b","floorDiv");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(li,n)}var b0=U({floorDiv_:UR});function GR(e,t){let a=F(e,"a","div"),r=F(t,"b","div");if([a,r]=_t(a,r),a.dtype==="int32"&&r.dtype==="int32")return b0(a,r);let n={a,b:r},s={};return V.runKernel(ni,n,s)}var me=U({div_:GR});function jR(e,t){let a=F(e,"a","mul"),r=F(t,"b","mul");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(vi,n)}var W=U({mul_:jR});function HR(e){let t=F(e,"x","abs");if(t.dtype==="complex64"){let a={x:t};return V.runKernel(_h,a)}else{let a={x:t};return V.runKernel(Do,a)}}var Jt=U({abs_:HR});function qR(e){let t={x:F(e,"x","acos")};return V.runKernel(Pu,t)}var wk=U({acos_:qR});function XR(e){let t={x:F(e,"x","acosh")};return V.runKernel(Du,t)}var kk=U({acosh_:XR});function KR(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((n,s)=>F(n,`tensors${s}`,"addN")),a=t[0];t.forEach(n=>{if(n.dtype!==a.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!js(n.shape,a.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return V.runKernel(Hs,r)}var Sy=U({addN_:KR});function ZR(e,t=null,a=!1){let r={x:F(e,"x","all","bool")},n={axis:t,keepDims:a};return V.runKernel(Lu,r,n)}var Ny=U({all_:ZR});function YR(e,t=null,a=!1){let r={x:F(e,"x","any","bool")},n={axis:t,keepDims:a};return V.runKernel(Wu,r,n)}var yf=U({any_:YR});function JR(e,t=0){let a={x:F(e,"x","argMax")},r={axis:t};return V.runKernel(qs,a,r)}var qn=U({argMax_:JR});function QR(e,t=0){let a={x:F(e,"x","argMin")},r={axis:t};return V.runKernel(Bu,a,r)}var Ik=U({argMin_:QR});function e$(e){let t={x:F(e,"x","asin")};return V.runKernel(Vu,t)}var Sk=U({asin_:e$});function t$(e){let t={x:F(e,"x","asinh")};return V.runKernel(Uu,t)}var Nk=U({asinh_:t$});function a$(e){let t={x:F(e,"x","atan")};return V.runKernel(Gu,t)}var Tk=U({atan_:a$});function r$(e,t){let a=F(e,"a","atan2"),r=F(t,"b","atan2");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(Hu,n)}var Ck=U({atan2_:r$});function n$(e){let t={x:F(e,"x","atanh")};return V.runKernel(ju,t)}var Ek=U({atanh_:n$});function s$(e,t,a,r,n="NHWC",s){let i=e[3],o=[...t,i],l=Fk(n);return ep(e,o,a,s,r,null,null,l)}function Rk(e,t,a,r,n,s,i="channelsLast"){let[o,l]=Af(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return ep(e,u,a,r,n,s,!1,i)}function i$(e,t,a,r,n,s,i="NDHWC"){let[o,l,u]=c1(t),d,p;if(i==="NDHWC")p="channelsLast",d=[o,l,u,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",d=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return $k(e,d,a,r,n,!1,p,s)}function ep(e,t,a,r,n,s,i=!1,o="channelsLast"){let[l,u,d,p]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,d,p]=e;else if(o==="channelsFirst")[l,p,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,c,,f]=t,[m,g]=Af(a),[y,A]=Af(r),x=fu(h,y),b=fu(c,A),{padInfo:v,outHeight:S,outWidth:N}=u$(n,u,d,m,g,x,b,s,o),E=i?f*p:f,R;return o==="channelsFirst"?R=[l,E,S,N]:o==="channelsLast"&&(R=[l,S,N,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:p,outHeight:S,outWidth:N,outChannels:E,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:A,inShape:e,outShape:R,filterShape:t}}function $k(e,t,a,r,n,s=!1,i="channelsLast",o){let[l,u,d,p,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,d,p,h]=e;else if(i==="channelsFirst")[l,h,u,d,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,f,m,,g]=t,[y,A,x]=c1(a),[b,v,S]=c1(r),N=fu(c,b),E=fu(f,v),R=fu(m,S),{padInfo:P,outDepth:$,outHeight:k,outWidth:_}=d$(n,u,d,p,y,A,x,N,E,R,o),z=s?g*h:g,L;return i==="channelsFirst"?L=[l,z,$,k,_]:i==="channelsLast"&&(L=[l,$,k,_,z]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:p,inChannels:h,outDepth:$,outHeight:k,outWidth:_,outChannels:z,padInfo:P,strideDepth:y,strideHeight:A,strideWidth:x,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:v,dilationWidth:S,inShape:e,outShape:L,filterShape:t}}function o$(e,t,a,r,n){r==null&&(r=Ty(e,t,a));let s=e[0],i=e[1],o=yo((s-t+2*r)/a+1,n),l=yo((i-t+2*r)/a+1,n);return[o,l]}function l$(e,t,a,r,n,s){n==null&&(n=Ty(e,t,r));let i=e[0],o=e[1],l=e[2],u=yo((i-t+2*n)/r+1,s),d=yo((o-t+2*n)/r+1,s),p=yo((l-t+2*n)/r+1,s);return[u,d,p,a]}function Ty(e,t,a,r=1){let n=fu(t,r);return Math.floor((e[0]*(a-1)-a+n)/2)}function Af(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function c1(e){return typeof e=="number"?[e,e,e]:e}function fu(e,t){return t<=1?e:e+(e-1)*(t-1)}function u$(e,t,a,r,n,s,i,o,l){let u,d,p;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=o$([t,a],s,r,e,o);d=h[0],p=h[1]}else if(e==="same"){d=Math.ceil(t/r),p=Math.ceil(a/n);let h=Math.max(0,(d-1)*r+s-t),c=Math.max(0,(p-1)*n+i-a),f=Math.floor(h/2),m=h-f,g=Math.floor(c/2),y=c-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((a-i+1)/n);else if(typeof e=="object"){let h=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:h,bottom:c,left:f,right:m,type:h===0&&c===0&&f===0&&m===0?"VALID":"EXPLICIT"},d=yo((t-s+h+c)/r+1,o),p=yo((a-i+f+m)/n+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:d,outWidth:p}}function d$(e,t,a,r,n,s,i,o,l,u,d){let p,h,c,f;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=l$([t,a,r,1],o,1,n,e,d);h=m[0],c=m[1],f=m[2]}else if(e==="same"){h=Math.ceil(t/n),c=Math.ceil(a/s),f=Math.ceil(r/i);let m=(h-1)*n+o-t,g=(c-1)*s+l-a,y=(f-1)*i+u-r,A=Math.floor(m/2),x=m-A,b=Math.floor(g/2),v=g-b,S=Math.floor(y/2),N=y-S;p={top:b,bottom:v,left:S,right:N,front:A,back:x,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-o+1)/n),c=Math.ceil((a-l+1)/s),f=Math.ceil((r-u+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:h,outHeight:c,outWidth:f}}function yo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function zs(e){let[t,a,r]=Af(e);return t===1&&a===1&&r===1}function Tn(e,t){return zs(e)||zs(t)}function Fk(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Oa(e,t,a){if(a!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);if(typeof t=="number")O(yu(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(n=>{O(yu(n),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function h$(e,t){let a={x:F(e,"x","reshape","string_or_numeric")},r={shape:t};return V.runKernel(ol,a,r)}var q=U({reshape_:h$});function p$(e,t,a,r,n){let s=F(e,"x","avgPool","float32"),i=1;O(Tn(a,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Oa("avgPool",r,n);let u={x:o},d={filterSize:t,strides:a,pad:r,dimRoundingMode:n},p=V.runKernel(Xs,u,d);return p=he(p,s.dtype),l?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var v0=U({avgPool_:p$});function c$(e,t,a,r,n,s="NDHWC"){let i=F(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),O(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Oa("avgPool3d",r,n);let u={x:o},d={filterSize:t,strides:a,pad:r,dimRoundingMode:n,dataFormat:s},p=V.runKernel(Fh,u,d);return p=he(p,o.dtype),l?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Cy=U({avgPool3d_:c$});function f$(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let a=wh(e,"tensors","concat","string_or_numeric");if(a[0].dtype==="complex64"&&a.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),a.length===1)return ja(a[0]);let r=a,n={axis:t};return V.runKernel(Wo,r,n)}var Nt=U({concat_:f$});function m$(e){let t={x:F(e,"x","sigmoid","float32")};return V.runKernel($i,t)}var xr=U({sigmoid_:m$});function g$(e,t,a){let r=F(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let n={x:r},s={begin:t,size:a};return V.runKernel(pl,n,s)}var Pe=U({slice_:g$});function y$(e){let t={x:F(e,"x","tanh","float32")};return V.runKernel(Pi,t)}var xu=U({tanh_:y$});function A$(e,t,a,r,n,s){let i=F(e,"forgetBias","basicLSTMCell"),o=F(t,"lstmKernel","basicLSTMCell"),l=F(a,"lstmBias","basicLSTMCell"),u=F(r,"data","basicLSTMCell"),d=F(n,"c","basicLSTMCell"),p=F(s,"h","basicLSTMCell"),h=Nt([u,p],1),c=Ze(h,o),f=ie(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=Pe(f,[0,0],y),x=Pe(f,[0,g],y),b=Pe(f,[0,g*2],y),v=Pe(f,[0,g*3],y),S=ie(W(xr(A),xu(x)),W(d,xr(ie(i,b)))),N=W(xu(S),xr(v));return[S,N]}var x$=U({basicLSTMCell_:A$});function b$(e,t,a){let r=F(e,"x","batchToSpaceND"),n=t.reduce((o,l)=>o*l);O(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),O(a.length===t.length,()=>`crops.length is ${a.length} but should be equal to blockShape.length  ${t.length}`),O(r.shape[0]%n===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let s={x:r},i={blockShape:t,crops:a};return V.runKernel(Lo,s,i)}var w0=U({batchToSpaceND_:b$});function v$(e){let t;return e.rank===0||e.rank===1?t=q(e,[1,1,1,e.size]):e.rank===2?t=q(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function w$(e,t,a,r,n,s){s==null&&(s=.001);let i=F(e,"x","batchNorm"),o=F(t,"mean","batchNorm"),l=F(a,"variance","batchNorm"),u;n!=null&&(u=F(n,"scale","batchNorm"));let d;r!=null&&(d=F(r,"offset","batchNorm")),O(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:v$(i),scale:u,offset:d,mean:o,variance:l},h={varianceEpsilon:s},c=V.runKernel(ui,p,h);return q(c,i.shape)}var bu=U({batchNorm_:w$});function k$(e,t,a,r,n,s){let i=F(e,"x","batchNorm"),o=F(t,"mean","batchNorm"),l=F(a,"variance","batchNorm"),u;n!=null&&(u=F(n,"scale","batchNorm"));let d;return r!=null&&(d=F(r,"offset","batchNorm")),O(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&O(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),bu(i,o,l,d,u,s)}var Mk=U({batchNorm2d_:k$});function I$(e,t,a,r,n,s){let i=F(e,"x","batchNorm"),o=F(t,"mean","batchNorm"),l=F(a,"variance","batchNorm"),u;n!=null&&(u=F(n,"scale","batchNorm"));let d;return r!=null&&(d=F(r,"offset","batchNorm")),O(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&O(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),bu(i,o,l,d,u,s)}var _k=U({batchNorm3d_:I$});function S$(e,t,a,r,n,s){let i=F(e,"x","batchNorm"),o=F(t,"mean","batchNorm"),l=F(a,"variance","batchNorm"),u;n!=null&&(u=F(n,"scale","batchNorm"));let d;return r!=null&&(d=F(r,"offset","batchNorm")),O(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&O(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),bu(i,o,l,d,u,s)}var zk=U({batchNorm4d_:S$});function N$(e,t,a){let r=F(e,"x","bincount"),n=F(t,"weights","bincount");O(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),O(a>=0,()=>`size must be non-negative, but got ${a}.`),O(n.size===r.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${n.shape}.`);let s={x:r,weights:n},i={size:a};return V.runKernel(Zf,s,i)}var Ey=U({bincount_:N$});function T$(e,t){let a=F(e,"s0","broadcastArgs","int32"),r=F(t,"s1","broadcastArgs","int32");if(a.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${a.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let n={s0:a,s1:r};return V.runKernel(Yf,n)}var Ok=U({broadcastArgs_:T$});function C$(e,t){let a=F(e,"broadcastTo","x"),r=a.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<a.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${a.rank}.`);if(t.length>a.rank){let l=a.shape.slice();for(;l.length<t.length;)l.unshift(1);a=q(a,l)}let n=a.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(n[l]===t[l])s[l]=1;else if(a.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return ja(a);let i={x:a},o={reps:s};return V.runKernel(Qn,i,o)}var dh=U({broadcastTo_:C$});function E$(e){let t={x:F(e,"x","ceil","float32")};return V.runKernel(Ys,t)}var Pk=U({ceil_:E$});function R$(e,t,a){let r=F(e,"x","clipByValue");O(t<=a,()=>`Error in clip: min (${t}) must be less than or equal to max (${a}).`);let n={x:r},s={clipValueMin:t,clipValueMax:a};return V.runKernel(Jn,n,s)}var lr=U({clipByValue_:R$});function $$(e){return Nt(e,0)}var Dk=U({concat1d_:$$});function F$(e,t){return Nt(e,t)}var k0=U({concat2d_:F$});function M$(e,t){return Nt(e,t)}var Lk=U({concat3d_:M$});function _$(e,t){return Nt(e,t)}var Wk=U({concat4d_:_$});function z$(e,t,a,r,n="NHWC",s=[1,1],i){let o=F(e,"x","conv2d","float32"),l=F(t,"filter","conv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Oa("conv2d",r,i);let p=n==="NHWC"?u.shape[3]:u.shape[1];O(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),O(Tn(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let h={x:u,filter:l},c={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i},f=V.runKernel(Js,h,c);return d?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Os=U({conv2d_:z$});function O$(e,t,a,r,n="NWC",s=1,i){let o=F(e,"x","conv1d"),l=F(t,"filter","conv1d"),u=o,d=!1;o.rank===2&&(d=!0,u=q(o,[1,o.shape[0],o.shape[1]])),O(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),O(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Oa("conv1d",r,i),O(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),O(Tn(a,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${a} and dilation '${s}'`),O(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=q(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=q(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Os(h,p,[1,a],r,"NHWC",[1,s],i);return d?q(c,[c.shape[2],c.shape[3]]):q(c,[c.shape[0],c.shape[2],c.shape[3]])}var Ry=U({conv1d_:O$});function P$(e,t,a,r,n,s="NHWC",i){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),O(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),O(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),O(a.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${a.rank}`);let d=s==="NHWC"?o[3]:o[1],p=s==="NHWC"?l.shape[3]:l.shape[1];O(d===a.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${a.shape[2]}.`),O(p===a.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${a.shape[3]}.`),Oa("conv2dDerInput",n,i);let h={dy:l,filter:a},c={strides:r,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:o},f=V.runKernel(Qs,h,c);return u?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var $y=U({conv2DBackpropInput_:P$});function D$(e,t,a,r,n,s){let i=F(e,"x","conv2dTranspose"),o=F(t,"filter","conv2dTranspose");return $y(a,i,o,r,n,"NHWC",s)}var Fy=U({conv2dTranspose_:D$});function L$(e,t,a,r,n="NDHWC",s=[1,1,1]){let i=F(e,"x","conv3d"),o=F(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),O(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),O(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),O(Tn(a,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`);let d={x:l,filter:o},p={strides:a,pad:r,dataFormat:n,dilations:s},h=V.runKernel(zh,d,p);return u?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var My=U({conv3d_:L$});function W$(e,t,a,r,n){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];O(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),O(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(a.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${a.rank}`),O(l===a.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${a.shape[3]}.`),O(u===a.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${a.shape[4]}.`);let d={dy:i,filter:a},p={pad:n,strides:r,inputShape:s},h=V.runKernel(e0,d,p);return o?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Bk=U({conv3DBackpropInput_:W$});function B$(e,t,a,r,n){let s=F(e,"x","conv3dTranspose"),i=F(t,"filter","conv3dTranspose");return Bk(a,s,i,r,n)}var Vk=U({conv3dTranspose_:B$});function V$(e){let t={x:F(e,"x","cos","float32")};return V.runKernel(ei,t)}var I0=U({cos_:V$});function U$(e){let t={x:F(e,"x","cosh","float32")};return V.runKernel(ti,t)}var _y=U({cosh_:U$});function G$(e,t=0,a=!1,r=!1){let n={x:F(e,"x","cumprod")},s={axis:t,exclusive:a,reverse:r};return V.runKernel(Bo,n,s)}var xf=U({cumprod_:G$});function j$(e,t=0,a=!1,r=!1){let n={x:F(e,"x","cumsum")},s={axis:t,exclusive:a,reverse:r};return V.runKernel(ai,n,s)}var zy=U({cumsum_:j$});function H$(e,t,a,r=!1){let n=F(e,"x","denseBincount"),s=F(t,"weights","denseBincount");O(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),O(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),O(a>=0,()=>`size must be non-negative, but got ${a}.`),O(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},o={size:a,binaryOutput:r};return V.runKernel(t0,i,o)}var Uk=U({denseBincount_:H$});function q$(e,t,a="NHWC"){let r=F(e,"x","depthToSpace","float32"),n=a==="NHWC"?r.shape[1]:r.shape[2],s=a==="NHWC"?r.shape[2]:r.shape[3],i=a==="NHWC"?r.shape[3]:r.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${r.shape}`),O(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),O(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:a};return V.runKernel(Uo,o,l)}var Gk=U({depthToSpace_:q$});function X$(e,t,a,r,n="NHWC",s=[1,1],i){let o=F(e,"x","depthwiseConv2d","float32"),l=F(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),O(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Oa("depthwiseConv2d",r,i);let p={x:u,filter:l},h={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i},c=V.runKernel(ri,p,h);return d?q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var tp=U({depthwiseConv2d_:X$});function K$(e){let t={x:F(e,"x","diag")};return V.runKernel(n0,t)}var Z$=U({diag_:K$});function Y$(e,t,a,r,n=[1,1],s="NHWC"){let i=F(e,"x","dilation2d"),o=F(t,"filter","dilation2d");O(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),O(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let d={x:l,filter:o},p={strides:a,pad:r,dilations:n},h=V.runKernel(Oh,d,p);return u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var jk=U({dilation2d_:Y$});function J$(e,t){let a=F(e,"a","equal","string_or_numeric"),r=F(t,"b","equal","string_or_numeric");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(Go,n)}var br=U({equal_:J$});function Q$(e,t,a){let r=F(t,"a","where"),n=F(a,"b","where"),s=F(e,"condition","where","bool"),i=gt(gt(s.shape,r.shape),n.shape),o=dh(s,i),l=dh(r,i),u=dh(n,i),d={condition:o,t:l,e:u};return V.runKernel(hl,d)}var Ma=U({where_:Q$});function eF(e){let t={x:F(e,"x","zerosLike")};return V.runKernel(vl,t)}var Qe=U({zerosLike_:eF});function tF(e,t){let a=F(e,"a","div"),r=F(t,"b","div");[a,r]=_t(a,r);let n=me(a,r),s=Qe(n),i=br(r,s);return Ma(i,s,n)}var Hk=U({divNoNan_:tF});function aF(e,t){let a=F(e,"t1","dot"),r=F(t,"t2","dot");O((a.rank===1||a.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${a.rank} and ${r.rank}.`);let n=a.rank===1?a.size:a.shape[1],s=r.rank===1?r.size:r.shape[0];if(O(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),a.rank===1&&r.rank===1){let i=q(a,[1,-1]),o=q(r,[-1,1]),l=Ze(i,o);return q(l,[])}else if(a.rank===1&&r.rank===2){let i=q(a,[1,-1]),o=q(r,[r.shape[0],r.shape[1]]),l=Ze(i,o);return q(l,[l.size])}else if(a.rank===2&&r.rank===1){let i=q(r,[-1,1]),o=Ze(a,i);return q(o,[o.size])}else{let i=q(r,[r.shape[0],r.shape[1]]);return Ze(a,i)}}var rF=U({dot_:aF});function nF(e,...t){let a=t.map((n,s)=>F(n,`tensors${s}`,"einsum")),r={equation:e};return V.runKernel(Ph,a,r)}var qk=U({einsum_:nF});function sF(e){let t={x:F(e,"x","elu","float32")};return V.runKernel(si,t)}var ap=U({elu_:sF});function iF(e){let t=F(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=he(t,"float32"));let a={x:t};return V.runKernel(qu,a)}var Xk=U({erf_:iF});function oF(e){let t={x:F(e,"x","exp")};return V.runKernel(ii,t)}var vr=U({exp_:oF});function lF(e,t=0){let a=F(e,"x","expandDims","string_or_numeric");O(t<=a.rank,()=>"Axis must be <= rank of the tensor");let r={input:a},n={dim:t};return V.runKernel(jo,r,n)}var la=U({expandDims_:lF});function uF(e){let t={x:F(e,"x","expm1")};return V.runKernel(Ho,t)}var Kk=U({expm1_:uF});function dF(e,t){let a=F(e,"x","tile","string_or_numeric");O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of reps ${t}.`);let r={x:a},n={reps:t};return V.runKernel(Qn,r,n)}var Mr=U({tile_:dF});function hF(e,t,a,r="float32"){t==null&&(t=e);let n=Be([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)n.set(1,o,o);let i=q(n.toTensor(),[e,t]);if(a==null)return i;if(a.length===1)return Mr(la(i,0),[a[0],1,1]);if(a.length===2)return Mr(la(la(i,0),0),[a[0],a[1],1,1]);if(a.length===3)return Mr(la(la(la(i,0),0),0),[a[0],a[1],a[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}var Oy=U({eye_:hF});function hd(e,t,a){let r={shape:e,value:t,dtype:a};return V.runKernel(Xu,{},r)}function pF(e){let t={x:F(e,"x","floor","float32")};return V.runKernel(oi,t)}var rp=U({floor_:pF});function cF(e,t,a=0,r=0){let n=F(e,"x","gather"),s=F(t,"indices","gather","int32"),i={x:n,indices:s},o={axis:a,batchDims:r};return V.runKernel(Xo,i,o)}var vu=U({gather_:cF});function fF(e,t){let a=F(e,"a","greater","string_or_numeric"),r=F(t,"b","greater","string_or_numeric");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(Zo,n)}var ur=U({greater_:fF});function mF(e,t){let a=F(e,"a","greaterEqual","string_or_numeric"),r=F(t,"b","greaterEqual","string_or_numeric");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(di,n)}var Il=U({greaterEqual_:mF});function gF(e){let t={input:F(e,"input","imag")};return V.runKernel(Dh,t)}var S0=U({imag_:gF});function yF(e){let t={x:F(e,"x","isFinite")};return V.runKernel(Ku,t)}var AF=U({isFinite_:yF});function xF(e){let t={x:F(e,"x","isInf")};return V.runKernel(Zu,t)}var bF=U({isInf_:xF});function vF(e){let t={x:F(e,"x","isNaN")};return V.runKernel(Yu,t)}var Zk=U({isNaN_:vF});function wF(e,t=.2){let a={x:F(e,"x","leakyRelu")},r={alpha:t};return V.runKernel(pi,a,r)}var N0=U({leakyRelu_:wF});function kF(e,t){let a=F(e,"a","less","string_or_numeric"),r=F(t,"b","less","string_or_numeric");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(Yo,n)}var Py=U({less_:kF});function IF(e,t){let a=F(e,"a","lessEqual","string_or_numeric"),r=F(t,"b","lessEqual","string_or_numeric");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(Jo,n)}var Sl=U({lessEqual_:IF});function Yk(e,t,a){if(a<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:a};return V.runKernel(l0,{},r)}function SF(e,t=5,a=1,r=1,n=.5){let s=F(e,"x","localResponseNormalization");O(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),O(yu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:a,alpha:r,beta:n},d=V.runKernel(Wh,l,u);return o?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Jk=U({localResponseNormalization_:SF});function NF(e){let t={x:F(e,"x","log","float32")};return V.runKernel(ci,t)}var wr=U({log_:NF});function TF(e){let t={x:F(e,"x","log1p")};return V.runKernel(Ju,t)}var T0=U({log1p_:TF});function CF(e){return O(Rs(e),()=>"The f passed in grad(f) must be a function"),(t,a)=>{let r=F(t,"x","tf.grad","string_or_numeric"),n=a!=null?F(a,"dy","tf.grad"):null;return V.tidy(()=>{let{value:s,grads:i}=V.gradients(()=>e(r),[r],n);return n!=null&&za(s.shape,n.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),C0(i),i[0]})}}function EF(e){return O(Rs(e),()=>"The f passed in grads(f) must be a function"),(t,a)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=wh(t,"args","tf.grads","string_or_numeric"),n=a!=null?F(a,"dy","tf.grads"):null;return V.tidy(()=>{let{value:s,grads:i}=V.gradients(()=>e(...r),r,n);return n!=null&&za(s.shape,n.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),C0(i),i})}}function RF(e){return O(Rs(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,a)=>{O(t instanceof tt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(a==null||a instanceof tt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:n}=V.gradients(()=>e(t),[t],a);return C0(r),{grad:r[0],value:n}}}function $F(e){return O(Rs(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,a)=>{O(Array.isArray(t)&&t.every(n=>n instanceof tt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(a==null||a instanceof tt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=V.gradients(()=>e(...t),t,a);return a!=null&&za(r.value.shape,a.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),C0(r.grads),r}}function Qk(e,t){O(Rs(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(u=>u instanceof vh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=t!=null;if(!a){t=[];for(let u in V.registeredVariables)t.push(V.registeredVariables[u])}let r=a?t.filter(u=>!u.trainable):null,n=t.length;t=t.filter(u=>u.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:i,grads:o}=V.gradients(e,t,null,s);O(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,d)=>{o[d]!=null&&(l[u.name]=o[d])}),r?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Sn(e){return V.customGrad(e)}function C0(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function FF(e){let t={x:F(e,"x","neg")};return V.runKernel(el,t)}var Mt=U({neg_:FF});function MF(e){let t={x:F(e,"x","softplus")};return V.runKernel(od,t)}var pd=U({softplus_:MF});function _F(e){let t=F(e,"x","logSigmoid");return Sn(a=>({value:Mt(pd(Mt(a))),gradFunc:r=>W(r,xr(Mt(a)))}))(t)}var zF=U({logSigmoid_:_F});function OF(e,t=null,a=!1){let r={x:F(e,"x","max")},n={reductionIndices:t,keepDims:a};return V.runKernel(fi,r,n)}var Fa=U({max_:OF});function PF(e,t){let a=F(e,"a","sub"),r=F(t,"b","sub");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(Oi,n)}var ce=U({sub_:PF});function DF(e,t=null,a=!1){let r=F(e,"x","sum");r.dtype==="bool"&&(r=he(r,"int32"));let n={x:r},s={axis:t,keepDims:a};return V.runKernel(Mi,n,s)}var we=U({sum_:DF});function LF(e,t=-1){let a=F(e,"logits","logSoftmax");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and axis was ${t}`);return Sn((r,n)=>{let s=Fa(r,t,!0),i=ce(r,s),o=ce(he(i,"float32"),wr(we(vr(i),t,!0)));return n([o]),{value:o,gradFunc:(l,u)=>{let[d]=u,p=!0,h=vr(d);return ce(l,W(we(l,t,p),h))}}})(a)}var Dy=U({logSoftmax_:LF});function Ly(e,t){for(let a=0;a<e.length;++a)if(e[e.length-a-1]!==t-1-a)return!1;return!0}function e7(e,t,a){let r=e.length+t.length,n=[],s=0,i=0;for(let o=0;o<r;o++)a.indexOf(o)===-1?n.push(e[s++]):n.push(t[i++]);return n}function t7(e,t){let a=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&a.push(e[s]);let n=t.map(s=>e[s]);return[a,n]}function No(e,t){let a=t.map(r=>1);return e7(e,a,t)}function WF(e,t,a){O(Ly(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function a7(e,t){if(Ly(e,t))return null;let a=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&a.push(r);return e.forEach(r=>a.push(r)),a}function Wy(e){return e.map((t,a)=>[a,t]).sort((t,a)=>t[1]-a[1]).map(t=>t[0])}function BF(e,t){let a=[];for(let r=t-e;r<t;++r)a.push(r);return a}function VF(e,t=null,a=!1){let r=F(e,"x","logSumExp"),n=zr(t,r.shape),s=Fa(r,n,!0),i=ce(r,s),o=vr(i),l=we(o,n),u=wr(l),d=ie(q(s,u.shape),u);if(a){let p=No(d.shape,n);return q(d,p)}return d}var r7=U({logSumExp_:VF});function UF(e,t){let a=F(e,"a","logicalAnd","bool"),r=F(t,"b","logicalAnd","bool");gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(Qo,n)}var sn=U({logicalAnd_:UF});function GF(e){let t={x:F(e,"x","logicalNot","bool")};return V.runKernel(Qu,t)}var E0=U({logicalNot_:GF});function jF(e,t){let a=F(e,"a","logicalOr","bool"),r=F(t,"b","logicalOr","bool");gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(Lh,n)}var By=U({logicalOr_:jF});function HF(e,t){let a=F(e,"a","logicalXor","bool"),r=F(t,"b","logicalXor","bool");return gt(a.shape,r.shape),sn(By(e,t),E0(sn(e,t)))}var qF=U({logicalXor_:HF});function XF(e,t,a,r,n){let s=F(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),O(Tn(a,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`),Oa("maxPool",r,n);let u={x:o},d={filterSize:t,strides:a,pad:r,dimRoundingMode:n},p=V.runKernel(gi,u,d);return l?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var R0=U({maxPool_:XF});function KF(e,t=[1,1,1],a,r,n,s="NDHWC"){let i=F(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),O(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Oa("maxPool3d",r,n);let u={x:o},d={filterSize:t,strides:a,pad:r,dimRoundingMode:n,dataFormat:s},p=V.runKernel(Bh,u,d);return l?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Vy=U({maxPool3d_:KF});function ZF(e,t,a,r,n=!1){let s={x:F(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:a,pad:r,includeBatchInIndex:n},o=V.runKernel(p0,s,i);return{result:o[0],indexes:o[1]}}var n7=U({maxPoolWithArgmax_:ZF});function YF(e,t){let a=F(e,"a","maximum"),r=F(t,"b","maximum");[a,r]=_t(a,r),a.dtype==="bool"&&(a=he(a,"int32"),r=he(r,"int32")),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(mi,n)}var es=U({maximum_:YF});function JF(e,t=null,a=!1){let r={x:F(e,"x","mean")},n={axis:t,keepDims:a};return V.runKernel(yi,r,n)}var Pt=U({mean_:JF});function Dt(e,t="float32"){if(t==="complex64"){let r=Dt(e,"float32"),n=Dt(e,"float32");return _s(r,n)}let a=qf(kt(e),t);return V.makeTensor(a,e,t)}function or(e,t="float32"){if(t==="complex64"){let r=or(e,"float32"),n=Dt(e,"float32");return _s(r,n)}let a=iy(kt(e),t);return V.makeTensor(a,e,t)}function QF(e,t,{indexing:a="xy"}={}){if(a!=="xy"&&a!=="ij")throw new TypeError(`${a} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=F(e,"x","meshgrid",e instanceof tt?e.dtype:"float32");if(t===void 0)return[r];let n=F(t,"y","meshgrid",t instanceof tt?t.dtype:"float32"),s=kt(r.shape),i=kt(n.shape);return a==="xy"?(r=q(r,[1,-1]),n=q(n,[-1,1]),[Ze(or([i,1],r.dtype),r),Ze(n,or([1,s],n.dtype))]):(r=q(r,[-1,1]),n=q(n,[1,-1]),[Ze(r,or([1,i],r.dtype)),Ze(or([s,1],n.dtype),n)])}function eM(e,t=null,a=!1){let r={x:F(e,"x","min")},n={axis:t,keepDims:a};return V.runKernel(Ai,r,n)}var Ao=U({min_:eM});function tM(e,t){let a=F(e,"a","minimum"),r=F(t,"b","minimum");[a,r]=_t(a,r),a.dtype==="bool"&&(a=he(a,"int32"),r=he(r,"int32")),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(xi,n)}var np=U({minimum_:tM});function aM(e,t,a){O(a==="reflect"||a==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${a}.`);let r=F(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let n=a==="reflect"?1:0;for(let o=0;o<r.rank;o++)O(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[o][0]>=0&&t[o][0]<=r.shape[o]-n&&t[o][1]>=0&&t[o][1]<=r.shape[o]-n,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-n} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:a},i={x:r};return V.runKernel(bi,i,s)}var s7=U({mirrorPad_:aM});function rM(e,t){let a=F(e,"a","mod"),r=F(t,"b","mod");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(ed,n)}var $0=U({mod_:rM});function nM(e){let t=F(e,"x","square"),a={};return V.runKernel("Square",{x:t},a)}var ct=U({square_:nM});function sM(e,t=null,a=!1){e=F(e,"x","moments");let r=zr(t,e.shape),n=Pt(e,r,a),s=n.shape;a||(s=No(n.shape,r));let i=ct(ce(he(e,"float32"),q(n,s))),o=Pt(i,r,a);return{mean:n,variance:o}}var F0=U({moments_:sM});function iM(e,t,a,r){let n=F(t,"data","multiRNNCell"),s=wh(a,"c","multiRNNCell"),i=wh(r,"h","multiRNNCell"),o=n,l=[];for(let p=0;p<e.length;p++){let h=e[p](o,s[p],i[p]);l.push(h[0]),l.push(h[1]),o=h[1]}let u=[],d=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),d.push(l[p+1]);return[u,d]}var oM=U({multiRNNCell_:iM});function lM(e,t,a,r=!1){let n=F(e,"logits","multinomial"),s=n.size,i=n.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);a=a||Math.random();let o={logits:i===1?q(n,[1,-1]):n},l={numSamples:t,seed:a,normalized:r},u=V.runKernel(c0,o,l);return i===1?q(u,[u.size]):u}var i7=U({multinomial_:lM});function uM(e,t){let a=F(e,"a","notEqual","string_or_numeric"),r=F(t,"b","notEqual","string_or_numeric");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r};return V.runKernel(tl,n)}var wu=U({notEqual_:uM});function dM(e){let t={x:F(e,"x","onesLike")};return V.runKernel(nl,t)}var kr=U({onesLike_:dM});function hM(e,t){let a=F(e,"v1","outerProduct"),r=F(t,"v2","outerProduct");O(a.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${a.rank} and ${r.rank}.`);let n=q(a,[-1,1]),s=q(r,[1,-1]);return Ze(n,s)}var pM=U({outerProduct_:hM});function cM(e,t,a=0){let r=F(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:a},s={x:r};return V.runKernel(wi,s,n)}var Cn=U({pad_:cM});function fM(e,t,a=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Cn(e,[t],a)}var mM=U({pad1d_:fM});function gM(e,t,a=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Cn(e,t,a)}var yM=U({pad2d_:gM});function AM(e,t,a=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Cn(e,t,a)}var xM=U({pad3d_:AM});function bM(e,t,a=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Cn(e,t,a)}var vM=U({pad4d_:bM});function wM(e,t,a){let r=F(e,"x","spaceToBatchND");O(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),O(a.length===t.length,()=>`paddings.shape[0] ${a.length} must be equal to [blockShape] ${t.length}`),O(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+a[l-1][0]+a[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${a.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:r},s={blockShape:t,paddings:a};return V.runKernel(fl,n,s)}var M0=U({spaceToBatchND_:wM});function kM(e,t,a,r,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=F(e,"x","maxPool"),l=o,u=!1;o.rank===3&&(u=!0,l=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(Tn(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let d=Rk(l.shape,t,s,n,r),p=[d.dilationHeight,d.dilationWidth],h;r==="same"?h=SM([d.filterHeight,d.filterWidth],p):h=[[0,0],[0,0]];let c=p[0]===1&&p[1]===1,[f,m]=IM([d.inHeight,d.inWidth],p,h),g=c?r:"valid",y=c?l:M0(l,p,f),A=(a==="avg"?()=>v0(y,t,s,g,i):()=>R0(y,t,s,g,i))(),x=c?A:w0(A,p,m);return u?q(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function IM(e,t,a){let r=a.map(d=>d[0]),n=a.map(d=>d[1]),s=e.concat(r,n),i=t.map((d,p)=>(d-s[p]%d)%d),o=n.map((d,p)=>d+i[p]),l=t.map((d,p)=>[r[p],o[p]]),u=t.map((d,p)=>[0,i[p]]);return[l,u]}function SM(e,t){let a=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=a.map(s=>Math.floor(s/2)),n=a.map((s,i)=>s-r[i]);return a.map((s,i)=>[r[i],n[i]])}var NM=U({pool_:kM});function TM(e,t){let a=F(e,"base","pow"),r=F(t,"exp","pow");[a,r]=_t(a,r);let n={a,b:r};return V.runKernel(ki,n)}var Ps=U({pow_:TM});function CM(e,t){let a=F(e,"x","prelu"),r=F(t,"alpha","prelu"),n={x:a,alpha:r};return V.runKernel(Ii,n)}var _0=U({prelu_:CM});function EM(e,t=null,a=!1){let r=F(e,"x","prod");r.dtype==="bool"&&(r=he(r,"int32"));let n={x:r},s={axis:t,keepDims:a};return V.runKernel(Si,n,s)}var Uy=U({prod_:EM});function RM(e,t,a){let r=kt(e),n=null;if(a==null||a==="float32")n=new Float32Array(r);else if(a==="int32")n=new Int32Array(r);else if(a==="bool")n=new Uint8Array(r);else throw new Error(`Unknown data type ${a}`);for(let s=0;s<r;s++)n[s]=t();return V.makeTensor(n,e,a)}var $M=U({rand_:RM}),Gy=Oo(jf()),jy=class{constructor(e,t,a,r,n){this.mean=e,this.stdDev=t,this.dtype=a,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=n||Math.random();this.random=Gy.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,a=!1;for(;!a;){let r,n,s;do r=2*this.random()-1,n=2*this.random()-1,s=r*r+n*n;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*n*i,(!this.truncated||this.isValidTruncated(e))&&(a=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},FM=class{constructor(e,t,a,r){this.alpha=e,this.beta=1/t,this.dtype=a;let n=r||Math.random();this.randu=Gy.alea(n.toString()),this.randn=new jy(0,1,a,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,a,r,n,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,a=.5*e+this.d*(1-s+Math.log(s)),n=this.randu(),n<t||Math.log(n)<a)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},MM=class{constructor(e=0,t=1,a,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=a,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Gy.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function _M(e,t,a=1,r="float32",n){if(a==null&&(a=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new FM(t,a,r,n),i=Be(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var zM=U({randomGamma_:_M});function OM(e,t=0,a=1,r,n){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new jy(t,a,r,!1,n),i=Be(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var o7=U({randomNormal_:OM});function PM(e,t=0,a=1,r="float32",n){let s=Be(e,r),i=new MM(t,a,null,n);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var cd=U({randomUniform_:PM});function ku(e,t,a=1,r="float32"){if(a===0)throw new Error("Cannot have a step of zero");let n={start:e,stop:t,step:a,dtype:r};return V.runKernel(ad,{},n)}function DM(e){let t={input:F(e,"input","real")};return V.runKernel(Vh,t)}var Ih=U({real_:DM});function LM(e){let t={x:F(e,"x","reciprocal")};return V.runKernel(rd,t)}var l7=U({reciprocal_:LM});function WM(e){let t={x:F(e,"x","relu")};return V.runKernel(Ni,t)}var En=U({relu_:WM});function BM(e){let t={x:F(e,"x","relu6")};return V.runKernel(Ci,t)}var Hy=U({relu6_:BM});function VM(e,t){let a={x:F(e,"x","reverse")},r={dims:t};return V.runKernel(ll,a,r)}var Ir=U({reverse_:VM});function UM(e){let t=F(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ir(t,0)}var GM=U({reverse1d_:UM});function jM(e,t){let a=F(e,"x","reverse");return O(a.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),Ir(a,t)}var HM=U({reverse2d_:jM});function qM(e,t){let a=F(e,"x","reverse");return O(a.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),Ir(a,t)}var XM=U({reverse3d_:qM});function KM(e,t){let a=F(e,"x","reverse");return O(a.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),Ir(a,t)}var ZM=U({reverse4d_:KM});function YM(e){let t={x:F(e,"x","round")};return V.runKernel(ul,t)}var qy=U({round_:YM});function JM(e){let t={x:F(e,"x","rsqrt","float32")};return V.runKernel(Ei,t)}var Xy=U({rsqrt_:JM});function ke(e,t){if((Aa(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Aa(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Wi(e,[],[],t)}function QM(e){let t={x:F(e,"x","selu")};return V.runKernel(sd,t)}var Ky=U({selu_:QM});function e_(e,t,a,r,n,s=[1,1],i="NHWC"){let o=F(e,"x","separableConv2d"),l=F(t,"depthwiseFilter","separableConv2d"),u=F(a,"pointwiseFilter","separableConv2d"),d=o,p=!1;if(o.rank===3&&(p=!0,d=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),O(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),O(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let h=l.shape[2],c=l.shape[3];O(u.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${u.shape[2]}.`);let f=tp(d,l,r,n,i,s),m=Os(f,u,1,"valid",i);return p?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var u7=U({separableConv2d_:e_});async function t_(e,t){let a=F(e,"x","setdiff1d"),r=F(t,"y","setdiff1d");O(a.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${a.dtype}) and y (${r.dtype}).`),O(a.rank===1,()=>`x should be 1D tensor, but got x (${a.shape}).`),O(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let n=await a.data(),s=await r.data(),i=new Set(s),o=0;for(let d=0;d<n.length;d++)i.has(n[d])||o++;let l=new ta([o],a.dtype),u=new ta([o],"int32");for(let d=0,p=0;d<n.length;d++)i.has(n[d])||(l.values[p]=n[d],u.values[p]=d,p++);return[l.toTensor(),u.toTensor()]}var d7=t_;function a_(e){let t={x:F(e,"x","sign")};return V.runKernel(id,t)}var h7=U({sign_:a_});function r_(e){let t={x:F(e,"x","sin","float32")};return V.runKernel(Ri,t)}var Zy=U({sin_:r_});function n_(e){let t={x:F(e,"x","sinh")};return V.runKernel(cl,t)}var Yy=U({sinh_:n_});function s_(e,t,a){let r=F(e,"x","slice1d");return O(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Pe(r,[t],[a])}var z0=U({slice1d_:s_});function i_(e,t,a){let r=F(e,"x","slice2d");return O(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Pe(r,t,a)}var Jy=U({slice2d_:i_});function o_(e,t,a){let r=F(e,"x","slice3d");return O(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Pe(r,t,a)}var Iu=U({slice3d_:o_});function l_(e,t,a){let r=F(e,"x","slice4d");return O(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Pe(r,t,a)}var Su=U({slice4d_:l_});function u_(e,t=-1){let a=F(e,"logits","softmax","float32");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and dim was ${t}`);let r={logits:a},n={dim:t};return V.runKernel(_i,r,n)}var sp=U({softmax_:u_});function d_(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(i0,t)}var O0=U({fft_:d_});function h_(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(o0,t)}var Sh=U({ifft_:h_});function p_(e){let t=e.shape[e.shape.length-1],a=e.size/t,r;if(t<=2){let n=q(e,[a,t]);r=Sh(n)}else{let n=[a,2*(t-1)],s=q(Ih(e),[a,t]),i=q(S0(e),[a,t]),o=Ir(Pe(s,[0,1],[a,t-2]),1),l=W(Ir(Pe(i,[0,1],[a,t-2]),1),ke(-1)),u=Nt([s,o],1),d=Nt([i,l],1),p=q(_s(u,d),[n[0],n[1]]);r=Sh(p)}if(r=Ih(r),e.rank===3&&e.shape[0]!==0){let n=r,s=e.shape[0];r=q(r,[s,r.shape[0]/s,r.shape[1]]),n.dispose()}return r}var Qy=U({irfft_:p_});function c_(e,t,a=0){let r={x:F(e,"x","split")},n={numOrSizeSplits:t,axis:a};return V.runKernel(ml,r,n)}var xa=U({split_:c_});function f_(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let a=e.shape[e.shape.length-1],r=e.size/a,n;if(t!=null&&t<a){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,n=Pe(e,f,m),a=t}else if(t!=null&&t>a){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-a,n=Nt([e,Dt(f)],e.shape.length-1),a=t}else n=e;let s=Qe(n),i=q(_s(n,s),[r,a]),o=O0(i),l=Math.floor(a/2)+1,u=Ih(o),d=S0(o),p=xa(u,[l,a-l],u.shape.length-1),h=xa(d,[l,a-l],d.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,q(_s(p[0],h[0]),c)}var P0=U({rfft_:f_});function m_(e){let t={x:F(e,"x","sqrt","float32")};return V.runKernel(Fi,t)}var va=U({sqrt_:m_});function g_(e,t){let a=F(e,"a","squaredDifference"),r=F(t,"b","squaredDifference");[a,r]=_t(a,r),gt(a.shape,r.shape);let n={a,b:r},s={};return V.runKernel(zi,n,s)}var eA=U({squaredDifference_:g_});function y_(e,t){let a=F(e,"x","squeeze");return q(a,pw(a.shape,t).newShape)}var ft=U({squeeze_:y_});function A_(e,t=0){let a=wh(e,"tensors","stack","string_or_numeric");O(a.length>=1,()=>"Pass at least one tensor to tf.stack"),a.length>0&&O(t<=a[0].rank,()=>"Axis must be <= rank of the tensor");let r=a,n={axis:t};return V.runKernel(il,r,n)}var _a=U({stack_:A_});function x_(e,t=0){let a={x:F(e,"x","step")},r={alpha:t};return V.runKernel(Li,a,r)}var ip=U({step_:x_});function b_(e,t,a,r,n=0,s=0,i=0,o=0,l=0){let u={x:F(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:a,strides:r,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return V.runKernel(gl,u,d)}var p7=U({stridedSlice_:b_});function v_(e){let t={x:F(e,"x","tan","float32")};return V.runKernel(yl,t)}var c7=U({tan_:v_});function Lt(e,t){Po(e);let a=In(e,t);if(a.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Wi(e,null,a,t)}function Gn(e,t,a){if(Po(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=In(e,a);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Wi(e,t,r,a)}function w_(e,t,a){if(Po(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=In(e,a);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Wi(e,t,r,a)}function k_(e,t,a){if(Po(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=In(e,a);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Wi(e,t,r,a)}function I_(e,t,a){if(Po(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=In(e,a);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Wi(e,t,r,a)}function S_(e,t=1,a=!0){let r=F(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let s={x:r},i={k:t,sorted:a},[o,l]=V.runKernel(Al,s,i);return{values:o,indices:l}}var f7=U({topk_:S_});function N_(e,t=0,a=1,r,n){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new jy(t,a,r,!0,n),i=Be(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var D0=U({truncatedNormal_:N_});function T_(e,t=0){let a=F(e,"x","unique","string_or_numeric");O(a.rank>0,()=>"The input tensor must be at least 1D");let r={x:a},n={axis:t},[s,i]=V.runKernel(A0,r,n);return{values:s,indices:i}}var f1=U({unique_:T_});function C_(e,t,a){let r=F(e,"x","unsortedSegmentSum"),n=F(t,"segmentIds","unsortedSegmentSum","int32");O(yu(a),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:n},i={numSegments:a};return V.runKernel(Xh,s,i)}var m7=U({unsortedSegmentSum_:C_});function E_(e,t=0){let a=F(e,"x","unstack","string_or_numeric");O(t>=-a.shape.length&&t<a.shape.length,()=>`Axis = ${t} is not in [-${a.shape.length}, ${a.shape.length})`);let r={value:a},n={axis:t};return V.runKernel(bl,r,n)}var Sr=U({unstack_:E_});function g7(e,t=!0,a,r){return V.makeVariable(e,t,a,r)}function y7(e,t){let a=[];for(let s=0;s<t.length;s++)t[s]&&a.push(s);let r=Be(e,"int32"),n=Be([a.length,e.length],"int32");for(let s=0;s<a.length;s++){let i=r.indexToLoc(a[s]),o=s*e.length;n.values.set(i,o)}return n.toTensor()}async function R_(e){let t=F(e,"condition","whereAsync","bool"),a=await t.data(),r=y7(t.shape,a);return e!==t&&t.dispose(),r}var tA=R_;async function $_(e,t,a){let r=F(e,"tensor","boolMask"),n=F(t,"mask","boolMask","bool"),s=a??0,i=n.rank,o=r.shape;O(i>0,()=>"mask cannot be scalar"),za(o.slice(s,s+i),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=q(r,u),p=q(n,[-1]),h=await tA(p),c=ft(h,[1]),f=vu(d,c,s);return e!==r&&r.dispose(),t!==n&&n.dispose(),c.dispose(),d.dispose(),p.dispose(),h.dispose(),f}var F_=$_;function M_(e,t="euclidean",a=null,r=!1){e=F(e,"x","norm");let n=A7(e,t,a),s=n.shape;if(r){let i=zr(a,e.shape);s=No(n.shape,i)}return q(n,s)}function A7(e,t,a=null){if(e.rank===0)return Jt(e);if(e.rank!==1&&a===null)return A7(q(e,[-1]),t,a);if(e.rank===1||typeof a=="number"||Array.isArray(a)&&a.length===1){if(t===1)return we(Jt(e),a);if(t===1/0)return Fa(Jt(e),a);if(t===-1/0)return Ao(Jt(e),a);if(t==="euclidean"||t===2)return va(we(Ps(Jt(e),ke(2,"int32")),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(a)&&a.length===2){if(t===1)return Fa(we(Jt(e),a[0]),a[1]-1);if(t===1/0)return Fa(we(Jt(e),a[1]),a[0]);if(t===-1/0)return Ao(we(Jt(e),a[1]),a[0]);if(t==="fro"||t==="euclidean")return va(we(ct(e),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${a}`)}var aA=U({norm_:M_});function __(e,t,a,r,n=!0){let s=F(e,"v","movingAverage"),i=F(t,"x","movingAverage"),o=F(a,"decay","movingAverage");_w(s,i),O(js(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ke(1),u=ce(l,o),d=W(ce(i,s),u);if(n){O(r!=null,()=>"When using zeroDebias: true, step is required.");let p=F(r,"step","movingAverage");d=me(d,ce(l,Ps(o,p)))}return ie(s,d)}var z_=U({movingAverage_:__});function O_(e,t,a){let r=F(e,"indices","scatterND","int32"),n=F(t,"updates","scatterND");vy(n,r,a);let s={indices:r,updates:n},i={shape:a};return V.runKernel(dl,s,i)}var x7=U({scatterND_:O_});function P_(e,t,a,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let n=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(a.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${a.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function D_(e,t,a,r=0){let n=F(e,"sparseIndices","sparseToDense","int32"),s=F(t,"sparseValues","sparseToDense"),i=F(r,"defaultValue","sparseToDense",s.dtype);P_(n,s,a,i);let o={sparseIndices:n,sparseValues:s,defaultValue:i},l={outputShape:a};return V.runKernel(Hh,o,l)}var rA=U({sparseToDense_:D_});function L_(e,t){let a=F(t,"indices","gatherND","int32"),r={params:F(e,"x","gatherND","string_or_numeric"),indices:a};return V.runKernel(Ko,r)}var b7=U({gatherND_:L_});function W_(e,t){if(t==null)return e.shape.slice();if(js(e.shape,t))return t;if(e.shape.length===t.length){let a=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?a.push(e.shape[r]):a.push(t[r]);return a}return t}function B_(e,t,a,r){let n=F(e,"x","dropout");if(O(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof tt?n.clone():n;let s=W_(n,a),i=1-t,o=me(rp(ie(cd(s,0,1,"float32",r),i)),i);return W(n,o)}var v7=U({dropout_:B_});function w7(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function nA(e,t,a){let r=1-e%2,n=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);n[s]=t-a*Math.cos(i)}return Lt(n,"float32")}async function V_(e,t,a=1){let r=F(e,"predictions","inTopK"),n=F(t,"targets","inTopK");O(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),O(r.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${n.rank}`),za(r.shape.slice(0,r.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];O(a>0&&a<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${a}`);let i=await r.data(),o=await n.data(),[l,u]=[i.length/s,s],d=cw("bool",l);for(let p=0;p<l;p++){let h=p*u,c=i.subarray(h,h+u),f=[];for(let m=0;m<c.length;m++)f.push({value:c[m],index:m});f.sort((m,g)=>g.value-m.value),d[p]=0;for(let m=0;m<a;m++)if(f[m].index===o[p]){d[p]=1;break}}return e!==r&&r.dispose(),t!==n&&n.dispose(),lt(d,n.shape,"bool")}var U_=V_,Ds={};Le(Ds,{conv2d:()=>H_,depthwiseConv2d:()=>Z_,matMul:()=>J_});function G_(e,t,a,r,n,s="NHWC",i){let o=e;e.rank===3&&(o=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),O(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),O(a.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${a}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],d=s==="NHWC"?l.shape[3]:l.shape[1];O(u===a[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${a[2]}.`),O(d===a[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${a[3]}).`),Oa("conv2dDerFilter",n,i);let p={x:o,dy:l},h={strides:r,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:a};return V.runKernel(Jf,p,h)}var sA=U({conv2DBackpropFilter_:G_});function L0(e,t,a){if(a==null||a==="linear")return e;if(a==="relu")return W(e,ip(t));throw new Error(`Cannot compute gradient for fused activation ${a}.`)}function W0(e,t){let a=t,r=Ht(e.shape,t.shape);return r.length>0&&(a=we(a,r)),q(a,e.shape)}function B0(e,t,a,r){if(t==="linear")return e;if(t==="relu")return En(e);if(t==="elu")return ap(e);if(t==="relu6")return Hy(e);if(t==="prelu")return _0(e,a);if(t==="leakyrelu")return N0(e,r);if(t==="sigmoid")return xr(e);throw new Error(`Unknown fused activation ${t}.`)}var V0=(e,t)=>!(e>0)||t==="linear";function j_({x:e,filter:t,strides:a,pad:r,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",V0(V.state.gradientDepth,l)===!1){let v=Os(e,t,a,r,n,s,i);return o!=null&&(v=ie(v,o)),B0(v,l,u,d)}let p=F(e,"x","conv2d","float32"),h=F(t,"filter","conv2d","float32"),c=p,f=!1;p.rank===3&&(f=!0,c=q(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),O(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Oa("fused conv2d",r,i),O(c.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${c.shape[3]}) must match input depth for filter ${h.shape[2]}.`),O(Tn(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O(n==="NHWC",()=>`Error in conv2d: got dataFormat of ${n} but only NHWC is currently supported.`);let m=ep(c.shape,h.shape,a,s,r,i),g;o!=null&&(g=F(o,"bias","fused conv2d"),[g]=_t(g,p),gt(m.outShape,g.shape));let y;u!=null&&(y=F(u,"prelu weights","fused conv2d"));let A=(v,S)=>{let[N,E,R,P]=S,$=L0(v,R,l);O(zs(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let k=$y(E.shape,$,N,a,r),_=sA(E,$,N.shape,a,r),z=[k,_];if(P!=null){let L=W0(P,$);z.push(L)}return z},x={x:c,filter:h,bias:g,preluActivationWeights:y},b={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Sn((v,S,N)=>{let E=V.runKernel(Fs,x,b);return N([S,v,E]),f&&(E=q(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(c,h):Sn((v,S,N,E)=>{let R=V.runKernel(Fs,x,b);return E([S,v,R,N]),f&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(c,h,g)}var H_=U({fusedConv2d_:j_});function q_(e,t,a,r,n,s=[1,1],i){let o=e;e.rank===3&&(o=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:n,dimRoundingMode:i,dilations:s,filterShape:a};return V.runKernel(a0,u,d)}var k7=U({depthwiseConv2dNativeBackpropFilter_:q_});function X_(e,t,a,r,n,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:a},d={strides:r,pad:n,dimRoundingMode:i,dilations:s,inputShape:e},p=V.runKernel(r0,u,d);return l?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var I7=U({depthwiseConv2dNativeBackpropInput_:X_});function K_({x:e,filter:t,strides:a,pad:r,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(V0(V.state.gradientDepth,l)===!1){let v=tp(e,t,a,r,n,s,i);return o!=null&&(v=ie(v,o)),B0(v,l,u,d)}let p=F(e,"x","depthwiseConv2d","float32"),h=F(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;p.rank===3&&(f=!0,c=q(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),O(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),O(c.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),s==null&&(s=[1,1]),O(Tn(a,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),Oa("fused depthwiseConv2d",r,i);let m=ep(c.shape,h.shape,a,s,r,i,!0),g;o!=null&&(g=F(o,"bias","fused conv2d"),[g]=_t(g,p),gt(m.outShape,g.shape));let y;u!=null&&(y=F(u,"prelu weights","fused depthwiseConv2d"));let A=(v,S)=>{O(zs(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[N,E,R,P]=S,$=L0(v,R,l),k=I7(E.shape,$,N,a,r,s,i),_=k7(E,$,N.shape,a,r,s,i);if(P!=null){let z=W0(g,$);return[k,_,z]}return[k,_]},x={x:c,filter:h,bias:g,preluActivationWeights:y},b={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Sn((v,S,N)=>{let E=V.runKernel(Ms,x,b);return N([S,v,E]),f&&(E=q(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(c,h):Sn((v,S,N,E)=>{let R=V.runKernel(Ms,x,b);return E([S,v,R,N]),f&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(c,h,g)}var Z_=U({fusedDepthwiseConv2d_:K_});function Y_({a:e,b:t,transposeA:a=!1,transposeB:r=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(V0(V.state.gradientDepth,s)===!1){let P=Ze(e,t,a,r);return n!=null&&(P=ie(P,n)),B0(P,s,i,o)}let l=F(e,"a","fused matMul"),u=F(t,"b","fused matMul");[l,u]=_t(l,u);let d=a?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=a?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=kt(f),y=kt(m);O(d===p,()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${a} and transposeB=${r} must match.`);let A=gt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,c]),x=a?q(l,[g,d,h]):q(l,[g,h,d]),b=r?q(u,[y,c,p]):q(u,[y,p,c]),v;n!=null&&(v=F(n,"bias","fused matMul"),[v]=_t(v,l),gt(A,v.shape));let S;i!=null&&(S=F(i,"prelu weights","fused matMul"));let N=(P,$)=>{let[k,_,z,L]=$,j=L0(q(P,z.shape),z,s),D,B;if(!a&&!r?(D=Ze(j,_,!1,!0),B=Ze(k,j,!0,!1)):!a&&r?(D=Ze(j,_,!1,!1),B=Ze(j,k,!0,!1)):a&&!r?(D=Ze(_,j,!1,!0),B=Ze(k,j,!1,!1)):(D=Ze(_,j,!0,!0),B=Ze(j,k,!0,!0)),n!=null){let G=W0(L,j);return[D,B,G]}else return[D,B]},E={a:x,b,bias:v,preluActivationWeights:S},R={transposeA:a,transposeB:r,activation:s,leakyreluAlpha:o};return n==null?Sn((P,$,k)=>{let _=V.runKernel($s,E,R);return k([P,$,_]),{value:q(_,A),gradFunc:N}})(x,b):Sn((P,$,k,_)=>{let z=V.runKernel($s,E,R);return _([P,$,z,k]),{value:q(z,A),gradFunc:N}})(x,b,v)}var J_=U({fusedMatMul_:Y_});function Q_(e){return nA(e,.54,.46)}var ez=U({hammingWindow_:Q_});function tz(e){return nA(e,.5,.5)}var S7=U({hannWindow_:tz});function az(e,t,a,r=!1,n=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Pe(e,s,t)),s+=a;if(r)for(;s<e.size;){let o=s+t-e.size,l=Nt([Pe(e,s,t-o),hd([o],n)]);i.push(l),s+=a}return i.length===0?Gn([],[0,t]):q(Nt(i),[i.length,t])}var N7=U({frame_:az});function rz(e,t,a,r,n=S7){r==null&&(r=w7(t));let s=N7(e,t,a),i=W(s,n(t));return P0(i,r)}var nz=U({stft_:rz});function sz(e,t,a,r,n="bilinear",s=0){let i=F(e,"image","cropAndResize"),o=F(t,"boxes","cropAndResize","float32"),l=F(a,"boxInd","cropAndResize","int32"),u=o.shape[0];O(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),O(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),O(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),O(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),O(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let d={image:i,boxes:o,boxInd:l},p={method:n,extrapolationValue:s,cropSize:r};return V.runKernel(Vo,d,p)}var iz=U({cropAndResize_:sz});function oz(e){let t=F(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let a={image:t};return V.runKernel(qo,a,{})}var lz=U({flipLeftRight_:oz});function uz(e){let t=F(e,"image","grayscaleToRGB"),a=t.rank-1,r=t.shape[a];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let n=new Array(t.rank);return n.fill(1,0,a),n[a]=3,Mr(t,n)}var dz=U({grayscaleToRGB_:uz});function hz(e,t,a=0,r=.5){let n=F(e,"image","rotateWithOffset","float32");O(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:t,fillValue:a,center:r};return V.runKernel(wl,s,i)}var pz=U({rotateWithOffset_:hz});function fd(e,t,a,r,n,s){r==null&&(r=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return a=Math.min(a,i),O(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:a,iouThreshold:r,scoreThreshold:n,softNmsSigma:s}}function cz(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY){let s=F(e,"boxes","nonMaxSuppression","float32"),i=F(t,"scores","nonMaxSuppression","float32"),o=fd(s,i,a,r,n);a=o.maxOutputSize,r=o.iouThreshold,n=o.scoreThreshold;let l={maxOutputSize:a,iouThreshold:r,scoreThreshold:n};return V.runKernel(al,{boxes:s,scores:i},l)}var fz=U({nonMaxSuppression_:cz});function mz(e,t,a){let r=gz(e,t,a),n=r<0?-(r+1):r;e.splice(n,0,t)}function gz(e,t,a){return Az(e,t,a||yz)}function yz(e,t){return e>t?1:e<t?-1:0}function Az(e,t,a){let r=0,n=e.length,s=0,i=!1;for(;r<n;){s=r+(n-r>>>1);let o=a(t,e[s]);o>0?r=s+1:(n=s,i=!o)}return i?r:-r-1}function T7(e,t,a,r,n){return iA(e,t,a,r,n,0)}function C7(e,t,a,r,n,s){return iA(e,t,a,r,n,0,!1,s,!0)}function E7(e,t,a,r,n,s){return iA(e,t,a,r,n,s,!0)}function iA(e,t,a,r,n,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>n&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(m5);let d=s>0?-.5/s:0,p=[],h=[];for(;p.length<a&&u.length>0;){let g=u.pop(),{score:y,boxIndex:A,suppressBeginIndex:x}=g;if(y<n)break;let b=!1;for(let v=p.length-1;v>=x;--v){let S=xz(e,A,p[v]);if(S>=r){b=!0;break}if(g.score=g.score*bz(r,d,S),g.score<=n)break}g.suppressBeginIndex=p.length,b||(g.score===y?(p.push(A),h.push(g.score)):g.score>n&&mz(u,g,m5))}let c=p.length,f=a-c;o&&f>0&&(p.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=h),l&&(m.validOutputs=c),m}function xz(e,t,a){let r=e.subarray(t*4,t*4+4),n=e.subarray(a*4,a*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(n[0],n[2]),d=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),h=Math.max(n[1],n[3]),c=(o-s)*(l-i),f=(p-u)*(h-d);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,p),A=Math.min(l,h),x=Math.max(y-m,0)*Math.max(A-g,0);return x/(c+f-x)}function bz(e,t,a){let r=Math.exp(t*a*a);return a<=e?r:0}function m5(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function vz(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY){let s=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),o=fd(s,i,a,r,n);a=o.maxOutputSize,r=o.iouThreshold,n=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:p}=T7(u,d,a,r,n);return s!==e&&s.dispose(),i!==t&&i.dispose(),Lt(p,"int32")}var wz=vz;function kz(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=F(e,"boxes","nonMaxSuppression"),o=F(t,"scores","nonMaxSuppression"),l=fd(i,o,a,r,n,s);a=l.maxOutputSize,r=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:a,iouThreshold:r,scoreThreshold:n,softNmsSigma:s},p=V.runKernel(rl,u,d);return{selectedIndices:p[0],selectedScores:p[1]}}var Iz=U({nonMaxSuppressionWithScore_:kz});async function Sz(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=F(e,"boxes","nonMaxSuppressionAsync"),o=F(t,"scores","nonMaxSuppressionAsync"),l=fd(i,o,a,r,n,s);a=l.maxOutputSize,r=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],p=u[1],{selectedIndices:h,selectedScores:c}=E7(d,p,a,r,n,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Lt(h,"int32"),selectedScores:Lt(c)}}var Nz=Sz;function Tz(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=F(e,"boxes","nonMaxSuppression"),o=F(t,"scores","nonMaxSuppression"),l=fd(i,o,a,r,n,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,h={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:p,padToMaxOutputSize:s},f=V.runKernel(td,h,c);return{selectedIndices:f[0],validOutputs:f[1]}}var Cz=U({nonMaxSuppressionPadded_:Tz});async function Ez(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=F(e,"boxes","nonMaxSuppressionAsync"),o=F(t,"scores","nonMaxSuppressionAsync"),l=fd(i,o,a,r,n,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=C7(h,c,u,d,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Lt(f,"int32"),validOutputs:ke(m,"int32")}}var Rz=Ez;function $z(e,t,a=!1,r=!1){let n=F(e,"images","resizeBilinear");O(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(r===!1||a===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,o={images:s},l={alignCorners:a,halfPixelCenters:r,size:t},u=V.runKernel(Ti,o,l);return i?q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Fz=U({resizeBilinear_:$z});function Mz(e,t,a=!1,r=!1){let n=F(e,"images","resizeNearestNeighbor");O(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(r===!1||a===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,o={images:s},l={alignCorners:a,halfPixelCenters:r,size:t},u=V.runKernel(nd,o,l);return i?q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var _z=U({resizeNearestNeighbor_:Mz});function zz(e,t="binary",a=!1,r=.5){let n=F(e,"image","threshold"),s=.2989,i=.587,o=.114,l=n.shape[0]*n.shape[1],u=W(Lt([r]),255),d,p,h,c;if(O(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),O(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),O(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[d,p,h]=xa(n,[1,1,1],-1);let m=W(d,s),g=W(p,i),y=W(h,o);c=ie(ie(m,g),y)}else c=e;if(t==="otsu"){let m=Ey(he(qy(c),"int32"),lt([]),256);u=Oz(m,l)}let f=a?Sl(c,u):ur(c,u);return he(W(f,255),"int32")}function Oz(e,t){let a=Lt([-1]),r=Lt([0]),n=Lt([0]),s,i,o,l,u,d;for(let p=0;p<e.size-1;p++){s=Pe(e,0,p+1),i=Pe(e,p+1),u=me(we(s),t),d=me(we(i),t);let h=we(W(s,ku(0,s.size)));o=me(h,we(s));let c=hd(i.shape,s.size),f=ie(ku(0,i.size),c),m=W(i,f);l=me(we(m),we(i));let g=ce(o,l),y=ce(o,l),A=W(u,d);n=W(W(A,g),y);let x=ur(n,r);r=Ma(x,n,r),a=Ma(x,Lt([p]),a)}return a}var Pz=U({threshold_:zz});function Dz(e,t,a="nearest",r="constant",n=0,s){let i=F(e,"image","transform","float32"),o=F(t,"transforms","transform","float32");O(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:a,fillMode:r,fillValue:n,outputShape:s};return V.runKernel(xl,l,u)}var Lz=U({transform_:Dz});function Wz(e,t,a){O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(a%1===0,()=>`bandPart(): numUpper must be an integer, got ${a}.`);let r=F(e,"a","bandPart");O(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let n=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(a<=i))throw new Error(`bandPart(): numUpper (${a}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),a<0&&(a=i);let o=q(ku(0,s,1,"int32"),[-1,1]),l=ku(0,i,1,"int32"),u=ce(o,l),d=sn(Sl(u,ke(+t,"int32")),Il(u,ke(-a,"int32"))),p=Dt([s,i],r.dtype);return q(_a(Sr(q(r,[-1,s,i])).map(h=>Ma(d,h,p))),n)}var Bz=U({bandPart_:Wz});function Vz(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let s=1;s<e.length;++s)O(e[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${n})`)}else t=!0,e=xa(e,e.shape[0],0).map(n=>ft(n,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let a=[],r=e;for(let n=0;n<e.length;++n)a.push(V.tidy(()=>{let s=r[n];if(n>0)for(let i=0;i<n;++i){let o=W(we(W(a[i],s)),a[i]);s=ce(s,o)}return me(s,aA(s,"euclidean"))}));return t?_a(a,0):a}var Uz=U({gramSchmidt_:Vz});function Gz(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return g5(e,t);{let a=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),r=Sr(q(e,[a,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),n=[],s=[];r.forEach(l=>{let[u,d]=g5(l,t);n.push(u),s.push(d)});let i=q(_a(n,0),e.shape),o=q(_a(s,0),e.shape);return[i,o]}}function g5(e,t=!1){return V.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let a=e.shape[0],r=e.shape[1],n=Oy(a),s=ja(e),i=Gn([[1]],[1,1]),o=ja(i),l=a>=r?r:a;for(let u=0;u<l;++u){let d=s,p=o,h=n;[o,s,n]=V.tidy(()=>{let c=Pe(s,[u,u],[a-u,1]),f=aA(c),m=Pe(s,[u,u],[1,1]),g=Ma(ur(m,0),Gn([[-1]]),Gn([[1]])),y=ce(m,W(g,f)),A=me(c,y);A.shape[0]===1?o=ja(i):o=Nt([i,Pe(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);let x=Mt(me(Ze(g,y),f)),b=Pe(s,[u,0],[a-u,r]),v=W(x,o),S=Je(o);if(u===0)s=ce(b,Ze(v,Ze(S,b)));else{let R=ce(b,Ze(v,Ze(S,b)));s=Nt([Pe(s,[0,0],[u,r]),R],0)}let N=Je(v),E=Pe(n,[0,u],[a,n.shape[1]-u]);if(u===0)n=ce(E,Ze(Ze(E,o),N));else{let R=ce(E,Ze(Ze(E,o),N));n=Nt([Pe(n,[0,0],[a,u]),R],1)}return[o,s,n]}),se([d,p,h])}return!t&&a>r&&(n=Pe(n,[0,0],[a,r]),s=Pe(s,[0,0],[r,r])),[n,s]})}var jz=U({qr_:Gz}),R7=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(R7||{});function Hz(e,t,a=3){let r=F(e,"losses","computeWeightedLoss"),n=null;t!=null&&(n=F(t,"weights","computeWeightedLoss"));let s=n==null?r:W(r,n);if(a===0)return s;if(a===2)return we(s);if(a===1){if(n==null)return Pt(s);{let i=r.size/n.size,o=me(we(s),we(n));return i>1?me(o,ke(i)):o}}if(a===3){if(n==null)return me(we(s),ke(r.size));{let i=W(n,or(r.shape)),o=he(we(wu(i,ke(0))),"float32");return me(we(s),o)}}throw Error(`Unknown reduction: ${a}`)}var ts=U({computeWeightedLoss_:Hz});function qz(e,t,a,r=3){let n=F(e,"labels","absoluteDifference"),s=F(t,"predictions","absoluteDifference"),i=null;a!=null&&(i=F(a,"weights","absoluteDifference")),za(n.shape,s.shape,"Error in absoluteDifference: ");let o=Jt(ce(n,s));return ts(o,i,r)}var Xz=U({absoluteDifference_:qz});function Kz(e,t,a,r,n=3){let s=F(e,"labels","cosineDistance"),i=F(t,"predictions","cosineDistance"),o=null;r!=null&&(o=F(r,"weights","cosineDistance")),za(s.shape,i.shape,"Error in cosineDistance: ");let l=ke(1),u=ce(l,we(W(s,i),a,!0));return ts(u,o,n)}var Zz=U({cosineDistance_:Kz});function Yz(e,t,a,r=3){let n=F(e,"labels","hingeLoss"),s=F(t,"predictions","hingeLoss"),i=null;a!=null&&(i=F(a,"weights","hingeLoss")),za(n.shape,s.shape,"Error in hingeLoss: ");let o=ke(1);n=ce(W(ke(2),n),o);let l=En(ce(o,W(n,s)));return ts(l,i,r)}var Jz=U({hingeLoss_:Yz});function Qz(e,t,a,r=1,n=3){let s=F(e,"labels","huberLoss"),i=F(t,"predictions","huberLoss"),o=null;a!=null&&(o=F(a,"weights","huberLoss")),za(s.shape,i.shape,"Error in huberLoss: ");let l=ke(r),u=Jt(ce(i,s)),d=np(u,l),p=ce(u,d),h=ie(W(ke(.5),ct(d)),W(l,p));return ts(h,o,n)}var eO=U({huberLoss_:Qz});function tO(e,t,a,r=1e-7,n=3){let s=F(e,"labels","logLoss"),i=F(t,"predictions","logLoss"),o=null;a!=null&&(o=F(a,"weights","logLoss")),za(s.shape,i.shape,"Error in logLoss: ");let l=ke(1),u=ke(r),d=Mt(W(s,wr(ie(i,u)))),p=W(ce(l,s),wr(ie(ce(l,i),u))),h=ce(d,p);return ts(h,o,n)}var aO=U({logLoss_:tO});function rO(e,t,a,r=3){let n=F(e,"labels","meanSquaredError"),s=F(t,"predictions","meanSquaredError"),i=null;a!=null&&(i=F(a,"weights","meanSquaredError")),za(n.shape,s.shape,"Error in meanSquaredError: ");let o=eA(n,s);return ts(o,i,r)}var nO=U({meanSquaredError_:rO});function sO(e,t){let a=F(e,"labels","sigmoidCrossEntropyWithLogits"),r=F(t,"logits","sigmoidCrossEntropyWithLogits");za(a.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=En(r),s=W(r,a),i=T0(vr(Mt(Jt(r))));return ie(ce(n,s),i)}function iO(e,t,a,r=0,n=3){let s=F(e,"multiClassLabels","sigmoidCrossEntropy"),i=F(t,"logits","sigmoidCrossEntropy"),o=null;if(a!=null&&(o=F(a,"weights","sigmoidCrossEntropy")),za(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let u=ke(r),d=ke(1),p=ke(.5);s=ie(W(s,ce(d,u)),W(p,u))}let l=sO(s,i);return ts(l,o,n)}var oO=U({sigmoidCrossEntropy_:iO});function lO(e,t,a=-1){if(a===-1&&(a=t.rank-1),a!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${a}`);return Sn((r,n,s)=>{let i=r7(n,[a],!0),o=ce(he(n,"float32"),i);s([r,o]);let l=Mt(W(o,r));return{value:we(l,[a]),gradFunc:(u,d)=>{let[p,h]=d,c=No(u.shape,[a]);return[W(q(u,c),ce(he(p,"float32"),vr(h))),W(q(u,c),ce(vr(h),he(p,"float32")))]}}})(e,t)}function uO(e,t,a,r=0,n=3){let s=F(e,"onehotLabels","softmaxCrossEntropy"),i=F(t,"logits","softmaxCrossEntropy"),o=null;if(a!=null&&(o=F(a,"weights","softmaxCrossEntropy")),za(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let u=ke(r),d=ke(1),p=ke(s.shape[1]);s=ie(W(s,ce(d,u)),me(u,p))}let l=lO(s,i);return ts(l,o,n)}var dO=U({softmaxCrossEntropy_:uO});function hO(e,t,a,r){let n=F(e,"indices","sparseFillEmptyRows","int32"),s=F(t,"values","sparseFillEmptyRows"),i=F(a,"denseShape","sparseFillEmptyRows","int32"),o=F(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:n,values:s,denseShape:i,defaultValue:o},u=V.runKernel(Uh,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var pO=U({sparseFillEmptyRows_:hO});function cO(e,t,a){let r=F(e,"inputIndices","sparseReshape","int32"),n=F(t,"inputShape","sparseReshape","int32"),s=F(a,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:n,newShape:s},o=V.runKernel(ld,i);return{outputIndices:o[0],outputShape:o[1]}}var fO=U({sparseReshape_:cO});function mO(e,t,a){let r=F(e,"data","sparseSegmentMean"),n=F(t,"indices","sparseSegmentMean","int32"),s=F(a,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:n,segmentIds:s};return V.runKernel(Gh,i)}var gO=U({sparseSegmentMean_:mO});function yO(e,t,a){let r=F(e,"data","sparseSegmentSum"),n=F(t,"indices","sparseSegmentSum","int32"),s=F(a,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:n,segmentIds:s};return V.runKernel(jh,i)}var AO=U({sparseSegmentSum_:yO});function xO(e,t,a,r,n,s,i,o){let l=F(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=F(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let d={separator:a,nGramWidths:r,leftPad:n,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},h=V.runKernel(qh,p,d);return{nGrams:h[0],nGramsSplits:h[1]}}var bO=U({stringNGrams_:xO});function vO(e,t,a=!0){let r=F(e,"input","stringSplit","string"),n=F(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let s={skipEmpty:a},i={input:r,delimiter:n},o=V.runKernel(g0,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var wO=U({stringSplit_:vO});function kO(e,t){let a=F(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:a};return V.runKernel(y0,n,r)}var IO=U({stringToHashBucketFast_:kO}),SO={fft:O0,ifft:Sh,rfft:P0,irfft:Qy},NO={hammingWindow:ez,hannWindow:S7,frame:N7,stft:nz},De={flipLeftRight:lz,grayscaleToRGB:dz,resizeNearestNeighbor:_z,resizeBilinear:Fz,rotateWithOffset:pz,cropAndResize:iz,nonMaxSuppression:fz,nonMaxSuppressionAsync:wz,nonMaxSuppressionWithScore:Iz,nonMaxSuppressionWithScoreAsync:Nz,nonMaxSuppressionPadded:Cz,nonMaxSuppressionPaddedAsync:Rz,threshold:Pz,transform:Lz},$7={bandPart:Bz,gramSchmidt:Uz,qr:jz},TO={absoluteDifference:Xz,computeWeightedLoss:ts,cosineDistance:Zz,hingeLoss:Jz,huberLoss:eO,logLoss:aO,meanSquaredError:nO,sigmoidCrossEntropy:oO,softmaxCrossEntropy:dO},Jd={sparseFillEmptyRows:pO,sparseReshape:fO,sparseSegmentMean:gO,sparseSegmentSum:AO},Hc={stringNGrams:bO,stringSplit:wO,stringToHashBucketFast:IO},as=class extends fk{minimize(e,t=!1,a){let{value:r,grads:n}=this.computeGradients(e,a);if(a!=null){let s=a.map(i=>({name:i.name,tensor:n[i.name]}));this.applyGradients(s)}else this.applyGradients(n);return se(n),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Qk(e,t)}dispose(){this.iterations_!=null&&se(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ke(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(as,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var U0=class extends as{constructor(e,t,a=null){super(),this.learningRate=e,this.rho=t,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],a==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=V.registeredVariables[t],n=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accum_grad`,variable:Z(()=>Qe(r).variable(n))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${t}/accum_var`,variable:Z(()=>Qe(r).variable(n))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[a].variable,o=this.accumulatedUpdates[a].variable;Z(()=>{let l=ie(W(i,this.rho),W(ct(s),1-this.rho)),u=W(me(va(ie(o,this.epsilon)),va(ie(i,this.epsilon))),s),d=ie(W(o,this.rho),W(ct(u),1-this.rho));i.assign(l),o.assign(d);let p=ie(W(u,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(se(this.accumulatedGrads.map(e=>e.variable)),se(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,a=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};U0.className="Adadelta";Bi(U0);var G0=class extends as{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=V.registeredVariables[t];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accumulator`,variable:Z(()=>hd(r.shape,this.initialAccumulatorValue).variable(!1))});let n=Array.isArray(e)?e[a].tensor:e[t];if(n==null)return;let s=this.accumulatedGrads[a].variable;Z(()=>{let i=ie(s,ct(n));s.assign(i);let o=ie(W(me(n,va(ie(i,V.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&se(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};G0.className="Adagrad";Bi(G0);var j0=class extends as{constructor(e,t,a,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Z(()=>{this.accBeta1=ke(t).variable(),this.accBeta2=ke(a).variable()}),r==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);Z(()=>{let a=ce(1,this.accBeta1),r=ce(1,this.accBeta2);t.forEach((n,s)=>{let i=V.registeredVariables[n],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${n}/m`,variable:Z(()=>Qe(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${n}/v`,variable:Z(()=>Qe(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[n];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedSecondMoment[s].variable,p=ie(W(u,this.beta1),W(l,1-this.beta1)),h=ie(W(d,this.beta2),W(ct(l),1-this.beta2)),c=me(p,a),f=me(h,r);u.assign(p),d.assign(h);let m=ie(W(me(c,ie(va(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(W(this.accBeta1,this.beta1)),this.accBeta2.assign(W(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&se(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&se(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Z(()=>{this.accBeta1.assign(Ps(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ps(this.beta2,this.iterations_+1))});let t=e.length/2,a=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};j0.className="Adam";Bi(j0);var H0=class extends as{constructor(e,t,a,r=null,n=0){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=r,this.decay=n,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Z(()=>{this.iteration=ke(0).variable(),this.accBeta1=ke(t).variable()}),r==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);Z(()=>{let a=ce(1,this.accBeta1),r=me(-this.learningRate,ie(W(this.iteration,this.decay),1));t.forEach((n,s)=>{let i=V.registeredVariables[n],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${n}/m`,variable:Qe(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${n}/v`,variable:Qe(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[n];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedWeightedInfNorm[s].variable,p=ie(W(u,this.beta1),W(l,1-this.beta1)),h=W(d,this.beta2),c=Jt(l),f=es(h,c);u.assign(p),d.assign(f);let m=ie(W(me(r,a),me(p,ie(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(W(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&se(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&se(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};H0.className="Adamax";Bi(H0);var op=class extends as{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=Array.isArray(e)?e[a].tensor:e[t];if(r==null)return;let n=V.registeredVariables[t];Z(()=>{let s=ie(W(this.c,r),n);n.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=ua(ke(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};op.className="SGD";Bi(op);var q0=class extends op{constructor(e,t,a=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=a,this.accumulations=[],this.m=ke(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=V.registeredVariables[t];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${t}/momentum`,variable:Z(()=>Qe(r).variable(!1))});let n=this.accumulations[a].variable,s=Array.isArray(e)?e[a].tensor:e[t];s!=null&&Z(()=>{let i,o=ie(W(this.m,n),s);this.useNesterov?i=ie(W(this.c,ie(s,W(o,this.m))),r):i=ie(W(this.c,o),r),n.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&se(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};q0.className="Momentum";Bi(q0);var X0=class extends as{constructor(e,t=.9,a=0,r=null,n=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=a,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=n,r==null&&(this.epsilon=V.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=V.registeredVariables[t],n=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${t}/rms`,variable:Z(()=>Qe(r).variable(n))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${t}/momentum`,variable:Z(()=>Qe(r).variable(n))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${t}/mg`,variable:Z(()=>Qe(r).variable(n))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[a].variable,o=this.accumulatedMoments[a].variable;Z(()=>{let l=ie(W(i,this.decay),W(ct(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[a].variable,d=ie(W(u,this.decay),W(s,1-this.decay)),p=me(W(s,this.learningRate),va(ce(l,ie(ct(d),this.epsilon)))),h=ie(W(o,this.momentum),p);i.assign(l),u.assign(d),o.assign(h);let c=ce(r,h);r.assign(c)}else{let u=ie(W(i,this.decay),W(ct(s),1-this.decay)),d=ie(W(o,this.momentum),me(W(s,this.learningRate),va(ie(u,this.epsilon))));i.assign(u),o.assign(d);let p=ce(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&se(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&se(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&se(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,a=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};X0.className="RMSProp";Bi(X0);var ms=class{static sgd(e){return new op(e)}static momentum(e,t,a=!1){return new q0(e,t,a)}static rmsprop(e,t=.9,a=0,r=null,n=!1){return new X0(e,t,a,r,n)}static adam(e=.001,t=.9,a=.999,r=null){return new j0(e,t,a,r)}static adadelta(e=.001,t=.95,a=null){return new U0(e,t,a)}static adamax(e=.002,t=.9,a=.999,r=null,n=0){return new H0(e,t,a,r,n)}static adagrad(e,t=.1){return new G0(e,t)}},so={sgd:ms.sgd,momentum:ms.momentum,adadelta:ms.adadelta,adagrad:ms.adagrad,rmsprop:ms.rmsprop,adamax:ms.adamax,adam:ms.adam},CO=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function oA(){return new Promise(e=>CO(()=>e()))}var T={};Le(T,{ERF_A1:()=>LO,ERF_A2:()=>WO,ERF_A3:()=>BO,ERF_A4:()=>VO,ERF_A5:()=>UO,ERF_P:()=>DO,PARALLELIZE_THRESHOLD:()=>lA,SELU_SCALE:()=>M7,SELU_SCALEALPHA:()=>F7,applyActivation:()=>B0,assertAndGetBroadcastShape:()=>gt,assertAxesAreInnerMostDims:()=>WF,assertParamsConsistent:()=>EO,assignToTypedArray:()=>KO,axesAreInnerMostDims:()=>Ly,calculateShapes:()=>nk,checkEinsumDimSizes:()=>tP,checkPadOnDimRoundingMode:()=>Oa,combineLocations:()=>e7,complexWithEvenIndex:()=>HO,complexWithOddIndex:()=>qO,computeConv2DInfo:()=>ep,computeConv3DInfo:()=>$k,computeDefaultPad:()=>Ty,computeDilation2DInfo:()=>s$,computeOptimalWindowSize:()=>$O,computeOutAndReduceShapes:()=>t7,computeOutShape:()=>RO,computePool2DInfo:()=>Rk,computePool3DInfo:()=>i$,convertConv2DDataFormat:()=>Fk,decodeEinsumEquation:()=>QO,eitherStridesOrDilationsAreOne:()=>Tn,expandShapeToKeepDim:()=>No,exponent:()=>YO,exponents:()=>ZO,fromStringArrayToUint8:()=>wP,fromUint8ToStringArray:()=>vP,getAxesPermutation:()=>a7,getBroadcastDims:()=>ek,getComplexWithIndex:()=>XO,getEinsumComputePath:()=>aP,getEinsumPermutation:()=>eP,getFusedBiasGradient:()=>W0,getFusedDyActivation:()=>L0,getImageCenter:()=>FO,getInnerMostAxes:()=>BF,getPermuted:()=>_O,getReductionAxes:()=>Ht,getReshaped:()=>MO,getReshapedPermuted:()=>zO,getSliceBeginCoords:()=>OO,getSliceSize:()=>PO,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>iP,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>oP,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>lP,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>hP,getSparseReshapeInputOutputMismatchErrorMessage:()=>cP,getSparseReshapeInputOutputMultipleErrorMessage:()=>pP,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>uP,getSparseReshapeNegativeOutputDimErrorMessage:()=>dP,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>yP,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>fP,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>mP,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>gP,getUndoAxesPermutation:()=>Wy,isIdentityPermutation:()=>rP,log:()=>MC,mergeRealAndImagArrays:()=>GO,prepareAndValidate:()=>rk,prepareSplitSize:()=>sP,segment_util:()=>_7,shouldFuse:()=>V0,slice_util:()=>Ft,splitRealAndImagArrays:()=>jO,tupleValuesAreOne:()=>zs,upcastType:()=>ba,validateInput:()=>vy,validateUpdateShape:()=>by,warn:()=>xs});function EO(e,t){let a=e[0].length;e.forEach((n,s)=>{O(n.length===a,()=>`Error in concat${a}D: rank of tensors[${s}] must be the same as the rank of the rest (${a})`)}),O(t>=0&&t<a,()=>`Error in concat${a}D: axis must be between 0 and ${a-1}.`);let r=e[0];e.forEach((n,s)=>{for(let i=0;i<a;i++)O(i===t||n[i]===r[i],()=>`Error in concat${a}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function RO(e,t){let a=e[0].slice();for(let r=1;r<e.length;r++)a[t]+=e[r][t];return a}var lA=30;function $O(e){return e<=lA?e:lf(e,Math.floor(Math.sqrt(e)))}function FO(e,t,a){let r=a*(typeof e=="number"?e:e[0]),n=t*(typeof e=="number"?e:e[1]);return[r,n]}function MO(e,t,a,r=!0){let n=[];if(r)n=n.concat(t.slice(0)),n.push(e[0]/a),n=n.concat(e.slice(1));else{n=n.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)n=n.concat([e[i+1]/t[i],t[i]]);n=n.concat(e.slice(s+1))}return n}function _O(e,t,a=!0){let r=[];if(a){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):n.push(i);r.push(...n),r.push(0),r.push(...s)}return r}function zO(e,t,a,r=!0){let n=[];r?n.push(e[0]/a):n.push(e[0]*a);for(let s=1;s<e.length;++s)s<=t.length?r?n.push(t[s-1]*e[s]):n.push(e[s]/t[s-1]):n.push(e[s]);return n}function OO(e,t){let a=[0];for(let r=0;r<t;++r)a.push(e[r][0]);return a}function PO(e,t,a){let r=e.slice(0,1);for(let n=0;n<a;++n)r.push(e[n+1]-t[n][0]-t[n][1]);return r}var F7=1.7580993408473768,M7=1.0507009873554805,DO=.3275911,LO=.254829592,WO=-.284496736,BO=1.421413741,VO=-1.453152027,UO=1.061405429;function GO(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let a=new Float32Array(e.length*2);for(let r=0;r<a.length;r+=2)a[r]=e[r/2],a[r+1]=t[r/2];return a}function jO(e){let t=new Float32Array(e.length/2),a=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],a[r/2]=e[r+1];return{real:t,imag:a}}function HO(e){let t=Math.ceil(e.length/4),a=new Float32Array(t),r=new Float32Array(t);for(let n=0;n<e.length;n+=4)a[Math.floor(n/4)]=e[n],r[Math.floor(n/4)]=e[n+1];return{real:a,imag:r}}function qO(e){let t=Math.floor(e.length/4),a=new Float32Array(t),r=new Float32Array(t);for(let n=2;n<e.length;n+=4)a[Math.floor(n/4)]=e[n],r[Math.floor(n/4)]=e[n+1];return{real:a,imag:r}}function XO(e,t){let a=e[t*2],r=e[t*2+1];return{real:a,imag:r}}function KO(e,t,a,r){e[r*2]=t,e[r*2+1]=a}function ZO(e,t){let a=new Float32Array(e/2),r=new Float32Array(e/2);for(let n=0;n<Math.ceil(e/2);n++){let s=(t?2:-2)*Math.PI*(n/e);a[n]=Math.cos(s),r[n]=Math.sin(s)}return{real:a,imag:r}}function YO(e,t,a){let r=(a?2:-2)*Math.PI*(e/t),n=Math.cos(r),s=Math.sin(r);return{real:n,imag:s}}var m2="->",JO=/->/g,y5=",",A5="...";function QO(e,t){e=e.replace(/\s/g,"");let a=(e.length-e.replace(JO,"").length)/m2.length;if(a<1)throw new Error("Equations without an arrow are not supported.");if(a>1)throw new Error(`Equation must contain exactly one arrow ("${m2}").`);let[r,n]=e.split(m2);O(r.indexOf(A5)===-1,()=>`The ellipsis notation ("${A5}") is not supported yet.`);let s=r.split(y5),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let h=0;h<n.length;++h){let c=n[h];if(!s.some(f=>f.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let h=0;h<r.length;++h){let c=r[h];o.indexOf(c)===-1&&c!==y5&&o.push(c)}let l=new Array(s.length);for(let h=0;h<i;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let c=0;c<s[h].length;++c)l[h].push(o.indexOf(s[h][c]))}let u=o.length,d=n.length,p=[];for(let h=d;h<u;++h)p.push(h);return{allDims:o,summedDims:p,idDims:l}}function eP(e,t){let a=new Array(e);a.fill(-1);for(let n=0;n<t.length;++n)a[t[n]]=n;let r=[];for(let n=0;n<e;++n)a[n]===-1&&r.push(n);return a=a.filter(n=>n!==-1),{permutationIndices:a,expandDims:r}}function tP(e,t,a){let r=new Array(e);for(let n=0;n<a.length;++n){let s=a[n].shape;for(let i=0;i<t[n].length;++i)r[t[n][i]]===void 0?r[t[n][i]]=s[i]:O(r[t[n][i]]===s[i],()=>`Expected dimension ${r[t[n][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function aP(e,t){let a=e,r=[],n=0;e.length===0&&a.push(-1),n=e.length+1;for(let i=0;i<n;++i)r.push([]);let s=[];for(let i=0;i<a.length;++i){let o=a[i],l=nP(t,o);for(let u of l)s.indexOf(u)===-1&&(r[i].push(u),s.push(u))}return{path:a,steps:r}}function rP(e){return e.every((t,a)=>t===a)}function nP(e,t){let a=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&a.push(r);return a}function sP(e,t,a=0){let r=[];if(typeof t=="number")O(e.shape[a]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[a]/t);else{let n=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);O(n<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[a]-i}O(e.shape[a]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function iP(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function oP(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function lP(e,t,a){return`indices(${e}, 0) is invalid: ${t} >= ${a}`}function uP(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function dP(e,t){return`size ${e} must be non-negative, not ${t}`}function hP(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function pP(e,t){let a=kt(e),r=kt(t);return`Input to reshape is a SparseTensor with ${a}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function cP(e,t){let a=kt(e),r=kt(t);return`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function fP(){return"segment ids must be >= 0"}function mP(){return"segment ids are not increasing"}function gP(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function yP(e,t,a){return`Bad: indices[${e}] == ${t} out of range [0, ${a})`}var _7={};Le(_7,{collectGatherOpShapeInfo:()=>bP,computeOutShape:()=>xP,segOpComputeOptimalWindowSize:()=>AP});function AP(e,t){let a=!1,r;for(e<=lA?(r=e,a=!0):r=lf(e,Math.floor(Math.sqrt(e)));!a;)r>t||r===e?a=!0:r=lf(e,r+1);return r}function xP(e,t,a){let r=[],n=e.length;for(let s=0;s<n;s++)s!==t?r.push(e[s]):r.push(a);return r}function bP(e,t,a,r){let n=t.shape.length,s=e.shape.length;if(r!==0&&(r<-n||r>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${r}`);if(r<0&&(r+=n),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(a<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${a}).`);for(let p=0;p<r;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[a],o=[],l=1,u=1,d=1;for(let p=0;p<r;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=r;p<a;p++)o.push(e.shape[p]),u*=e.shape[p];for(let p=r;p<n;p++)o.push(t.shape[p]);for(let p=a+1;p<s;p++)o.push(e.shape[p]),d*=e.shape[p];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function vP(e){try{return e.map(t=>pf(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function wP(e){return e.map(t=>Zh(t))}var Or={};Le(Or,{nonMaxSuppressionV3Impl:()=>T7,nonMaxSuppressionV4Impl:()=>C7,nonMaxSuppressionV5Impl:()=>E7,whereImpl:()=>y7});var On=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,On.prototype)}},Qr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qr.prototype)}},K=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,K.prototype)}},Ve=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ve.prototype)}},z7=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,z7.prototype)}},O7=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let a=this.cache.keys().next().value;this.cache.delete(a)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let a=this.cache.keys().next().value;this.cache.delete(a)}this.maxEntries=e}};function To(e,t){if(Array.isArray(e)){let a=[];for(let r=0;r<t;r++)a=a.concat(e);return a}else{let a=new Array(t);return a.fill(e),a}}function An(e,t){if(!e)throw new z7(t)}function x5(e,t){let a=0;for(let r of e)r===t&&a++;return a}function Ga(e){return e.length===1?e[0]:e}function wt(e){return Array.isArray(e)?e:[e]}function Pn(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function uo(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,a)=>a.toUpperCase())}var Cr={};function uA(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function m1(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>m1(t));else{let t=Object.keys(e);for(let a of t){let r=e[a];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[a]=r.value:m1(r))}}}function lp(e,t={},a={},r="object",n=!1){if(typeof e=="string"){let s=e,i;if(s in a)i=a[s];else if(s in Cr)i=Cr[s];else if(i=t[s],i==null)throw new K(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new K(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in a?[o,l]=a[i]:i in Cr?[o,l]=Cr.className:i in t&&([o,l]=t[i]),o==null)throw new K(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let c of Object.keys(Cr))u[c]=Cr[c];for(let c of Object.keys(a))u[c]=a[c];let d=s.config;d.customObjects=u;let p={...Cr};for(let c of Object.keys(a))Cr[c]=a[c];m1(s.config);let h=l(o,s.config,a,n);return Cr={...p},h}else{let u={...Cr};for(let p of Object.keys(a))Cr[p]=a[p];let d=new o(s.config);return Cr={...u},d}}}function kP(e,t){return e<t?-1:e>t?1:0}function xc(e,t){return-1*kP(e,t)}function Ss(e){if(e==null)return e;let t=[];for(let a of e)t.indexOf(a)===-1&&t.push(a);return t}function IP(e){if(e==null)throw new K(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Nl(e,t,a){if(a!=null&&e.indexOf(a)<0)throw new K(`${a} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function dA(e,t,a=0,r=1/0){return An(a>=0),An(r>=a),Array.isArray(e)&&e.length>=a&&e.length<=r&&e.every(n=>typeof n===t)}function da(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((a,r)=>da(a,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${P7(e)}.`)}function P7(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>P7(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function SP(e,t,a){let r=a!=null?a():w.now(),n;return(...s)=>{let i=a!=null?a():w.now();return i-r<t||(r=i,n=e(...s)),n}}function D7(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var NP=0;function L7(){return NP++}var bc={};function K0(e=""){return e in bc||(bc[e]=0),bc[e]+=1,e+bc[e].toString()}var TP=["channelsFirst","channelsLast"],CP=["nearest","bilinear"],EP=["valid","same","causal"],RP=["max","avg"],$P=["sum","mul","concat","ave"],Kl=new Map;function Ut(e){Nl(TP,"DataFormat",e)}function FP(e){Nl(CP,"InterpolationFormat",e)}function Tr(e){Nl(EP,"PaddingMode",e)}function W7(e){Nl(RP,"PoolMode",e)}var hh=[],b5="/";function xo(e,t){hh.push(e);try{let a=t();return hh.pop(),a}catch(a){throw hh.pop(),a}}function MP(){return hh.length===0?"":hh.join(b5)+b5}function B7(e){if(!U7(e))throw new Error("Not a valid tensor name: '"+e+"'");return MP()+e}function V7(e){if(!U7(e))throw new Error("Not a valid tensor name: '"+e+"'");Kl.has(e)||Kl.set(e,0);let t=Kl.get(e);if(Kl.set(e,Kl.get(e)+1),t>0){let a=`${e}_${t}`;return Kl.set(a,1),a}else return e}var _P=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function U7(e){return!!e.match(_P)}function zP(e){return e===parseInt(e.toString(),10)}function Ns(e,t,a){t==null&&(t=0),a==null&&(a=e.length);let r=1;for(let n=t;n<a;++n)r*=e[n];return r}function Nu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let a=0;a<e.length;a++){let r=e[a];r<t&&(t=r)}return t}function Ls(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let a=0;a<e.length;a++){let r=e[a];r>t&&(t=r)}return t}function on(e,t){if(t<e)throw new K(`end (${t}) < begin (${e}) is forbidden.`);let a=[];for(let r=e;r<t;++r)a.push(r);return a}var g2;function ea(){return g2==null&&(g2=Hn().epsilon()),g2}function ln(){return"channelsLast"}function Z0(e,t){return he(e,t)}function up(e,t=-1){let a=e.shape.slice();return t<0&&(t=a.length+t+1),a.splice(t,0,1),q(e,a)}function OP(e,t){return Z(()=>{if(e.shape.length!==2)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let a=up(e,1);return g1(a,[1,t,1])})}function PP(e){let t=[Ns(e.shape)];return q(e,t)}function DP(e){if(e.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ns(e.shape,1)];return q(e,t)}function bo(e,t,a){return Z(()=>{switch(e.rank){case 1:return z0(e,t,a);case 2:return Jy(e,[t,0],[a,e.shape[1]]);case 3:return Iu(e,[t,0,0],[a,e.shape[1],e.shape[2]]);case 4:return Su(e,[t,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Pe(e,[t,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Pe(e,[t,0,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function y2(e,t,a){return Z(()=>{switch(e.rank){case 1:return z0(e,t,a);case 2:return Jy(e,[0,t],[e.shape[0],a]);case 3:return Iu(e,[0,0,t],[e.shape[0],e.shape[1],a]);case 4:return Su(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],a]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function vc(e,t,a,r){return Z(()=>{switch(e.rank){case 1:return z0(e,t,a);case 2:switch(r){case 1:return bo(e,t,a);case 2:return y2(e,t,a);default:throw new K(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return bo(e,t,a);case 2:return Iu(e,[0,t,0],[e.shape[0],a,e.shape[2]]);case 3:return y2(e,t,a);default:throw new K(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return bo(e,t,a);case 2:return Su(e,[0,t,0,0],[e.shape[0],a,e.shape[2],e.shape[3]]);case 3:return Su(e,[0,0,t,0],[e.shape[0],e.shape[1],a,e.shape[3]]);case 4:return y2(e,t,a);default:throw new K(`The axis is not within the rank of the tensor ${r}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hA(e,t=-1){let a;return t<0&&(a=e[0].rank,a!==0?t=a:t=0),t===e[0].rank&&(t=-1),Nt(e,t)}function v5(e,t){switch(e.rank){case 1:return Dk([e,t]);case 2:return k0([e,t],0);case 3:return Lk([e,t],0);case 4:return Wk([e,t],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function g1(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new K(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Mr(e,t)}function Y0(e,t=0,a=1,r,n){return o7(e,t,a,r,n)}function wn(e,t,a,r){if(e.rank<2||t.rank<2)throw new Ve(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new Ve(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Ds.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?y1(e.rank,r,ln()):null,activation:a});{let n=e.shape.slice(),s=n.pop();e=q(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=q(Je(t,d),[l,-1]);let p=[...n,...u],h=!1,c=!1;return q(Ds.matMul({a:e,b:t,transposeA:h,transposeB:c,bias:r?y1(e.rank,r,ln()):null,activation:a}),p)}}function G7(e,t,a){return Z(()=>(Array.isArray(t)?t=Lt(t,"int32"):t=he(t,"int32"),vu(e,t,a)))}function dp(e){return W(e,e)}function y1(e,t,a){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new K(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(a==="channelsFirst")return r.length===1?q(t,[1,r[0],1,1,1]):q(t,[1,r[3],r[0],r[1],r[2]]);if(a==="channelsLast")return r.length===1?q(t,[1,1,1,1,r[0]]):q(t,[1].concat(r))}else if(e===4){if(a==="channelsFirst")return r.length===1?q(t,[1,r[0],1,1]):q(t,[1,r[2],r[0],r[1]]);if(a==="channelsLast")return r.length===1?q(t,[1,1,1,r[0]]):q(t,[1].concat(r))}else if(e===3){if(a==="channelsFirst")return r.length===1?q(t,[1,r[0],1]):q(t,[1,r[1],r[0]]);if(a==="channelsLast")return r.length===1?q(t,[1,1,r[0]]):q(t,[1].concat(r))}else if(e<3)return t;throw new K(`Unsupported input rank by biasAdd: ${t.rank}`)}function dn(e,t,a){return Z(()=>(a==null&&(a=ln()),Ut(a),ie(e,y1(e.rank,t,a))))}function LP(e,t=1){if(t!==1)throw new Ve(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ap(e)}function WP(e){return Z(()=>me(e,ie(Jt(e),1)))}function j7(e,t,a,r){return Z(()=>v7(e,t,a,r))}function BP(e){return Z(()=>{let t=ie(.5,W(.2,e));return lr(t,0,1)})}function hp(e,t,a=!1){return a?e():t()}var VP=["fanIn","fanOut","fanAvg"],UP=["normal","uniform","truncatedNormal"];function GP(e){Nl(VP,"FanMode",e)}function jP(e){Nl(UP,"Distribution",e)}var Pr=class extends oe.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},pA=class extends Pr{apply(e,t){return Dt(e,t)}};pA.className="Zeros";oe.registerClass(pA);var J0=class extends Pr{apply(e,t){return or(e,t)}};J0.className="Ones";oe.registerClass(J0);var cA=class extends Pr{constructor(e){if(super(),typeof e!="object")throw new K(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new K(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Z(()=>W(ke(this.value),or(e,t)))}getConfig(){return{value:this.value}}};cA.className="Constant";oe.registerClass(cA);var fA=class extends Pr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return cd(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};fA.className="RandomUniform";oe.registerClass(fA);var mA=class extends Pr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`randomNormal does not support dType ${t}.`);return Y0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};mA.className="RandomNormal";oe.registerClass(mA);var gA=class extends Pr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`truncatedNormal does not support dType ${t}.`);return D0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};gA.className="TruncatedNormal";oe.registerClass(gA);var yA=class extends Pr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Z(()=>{if(e.length!==2||e[0]!==e[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return W(this.gain,Oy(e[0]))})}getConfig(){return{gain:this.gain}}};yA.className="Identity";oe.registerClass(yA);function HP(e,t="channelsLast"){let a,r;if(Ut(t),e.length===2)a=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let n=Ns(e,2);a=e[1]*n,r=e[0]*n}else if(t==="channelsLast"){let n=Ns(e,0,e.length-2);a=e[e.length-2]*n,r=e[e.length-1]*n}}else{let n=Ns(e);a=Math.sqrt(n),r=Math.sqrt(n)}return[a,r]}var qa=class extends Pr{constructor(e){if(super(),e.scale<0)throw new K(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,GP(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,jP(this.distribution),this.seed=e.seed}apply(e,t){let a=HP(e),r=a[0],n=a[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,r):this.mode==="fanOut"?s/=Math.max(1,n):s/=Math.max(1,(r+n)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`${this.getClassName()} does not support dType ${t}.`);return D0(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return cd(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};qa.className="VarianceScaling";oe.registerClass(qa);var Q0=class extends qa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return qa.className}};Q0.className="GlorotUniform";oe.registerClass(Q0);var em=class extends qa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return qa.className}};em.className="GlorotNormal";oe.registerClass(em);var tm=class extends qa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return qa.className}};tm.className="HeNormal";oe.registerClass(tm);var am=class extends qa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return qa.className}};am.className="HeUniform";oe.registerClass(am);var rm=class extends qa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return qa.className}};rm.className="LeCunNormal";oe.registerClass(rm);var nm=class extends qa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return qa.className}};nm.className="LeCunNormal";oe.registerClass(nm);var AA=class extends Pr{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ve("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Z(()=>{if(e.length<2)throw new Ve("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let a=e[0]>e[1]?[e[1],e[0]]:e,r=Y0(a,0,1,"float32"),n=$7.gramSchmidt(r);return e[0]>e[1]&&(n=Je(n)),W(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}};AA.className="Orthogonal";oe.registerClass(AA);var w5={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function k5(e,t={}){return lp(e,oe.SerializationMap.getMap().classNameMap,t,"initializer")}function $t(e){return uA(e)}function St(e){if(typeof e=="string"){let t=e in w5?w5[e]:e;if(t==="GlorotNormal")return new em;if(t==="GlorotUniform")return new Q0;if(t==="HeNormal")return new tm;if(t==="HeUniform")return new am;if(t==="LeCunNormal")return new rm;if(t==="LeCunUniform")return new nm;{let a={};return a.className=t,a.config={},k5(a)}}else return e instanceof Pr?e:k5(e)}function A1(e){return Array.isArray(e)&&Array.isArray(e[0])}function bf(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ue(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new K(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ut(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new K(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function vf(e){let t=0;for(let a of e)a.shape.length===0?t+=1:t+=a.shape.reduce((r,n)=>r*n);return t}var I5="Variable",H7=class{constructor(e,t="float32",a=I5,r=!0,n=null){this.dtype=t??"float32",this.shape=e.shape,this.id=L7(),a=a??I5,this.originalName=B7(a),this.name=V7(this.originalName),this.trainable_=r,this.constraint=n,this.val=g7(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),qP(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function qP(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function x1(e){return e.map(t=>t.read())}function xA(e){e.forEach(t=>{t[0].write(t[1])})}var jt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},en=class{constructor(e,t,a,r,n,s,i){this.dtype=e,this.shape=t,this.sourceLayer=a,this.inputs=r,this.callArgs=n,this.outputTensorIndex=i,this.id=L7(),s!=null&&(this.originalName=B7(s),this.name=V7(this.originalName)),this.rank=t.length}},XP=0,sm=class{constructor(e,t){this.callArgs=t,this.id=XP++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let a of e.inboundLayers)a?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},KP=0,et=class extends oe.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=KP++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let a=this.getClassName();t=Pn(a)+"_"+K0(a)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let a;if(e.batchInputShape!=null)a=e.batchInputShape;else if(e.inputShape!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),a=[n].concat(e.inputShape)}this.batchInputShape=a;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Qr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new K(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ga(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ga(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new On(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new On(`Layer ${this.name} is not connected, no input to return.`);return Ga(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new On(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new On(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ga(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=wt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=wt(this.inputSpec);if(e.length!==t.length)throw new K(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let a=0;a<e.length;a++){let r=e[a],n=t[a];if(n==null)continue;let s=r.rank;if(n.ndim!=null&&s!==n.ndim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${n.ndim}, found ndim=${s}`);if(n.maxNDim!=null&&s>n.maxNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${n.maxNDim}, found ndim=${s}`);if(n.minNDim!=null&&s<n.minNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${n.minNDim}, found ndim=${s}.`);if(n.dtype!=null&&r.dtype!==n.dtype)throw new K(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${n.dtype}, found dtype=${r.dtype}.`);if(n.axes){let i=r.shape;for(let o in n.axes){let l=Number(o),u=n.axes[o],d=l>=0?i[l]:i[i.length+l];if(u!=null&&[u,null].indexOf(d)===-1)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${i}.`)}}if(n.shape!=null)for(let i=0;i<n.shape.length;++i){let o=n.shape[i],l=r.shape[i];if(o!=null&&l!=null&&o!==l)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected shape=${n.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let a=wt(e),r=!0;for(let s of a)if(!(s instanceof en)){r=!1;break}let n=!0;for(let s of a)if(s instanceof en){n=!1;break}if(r===n)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return xo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of wt(e))s.push(i.shape);this.build(Ga(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&n&&(this._refCount=1)}if(this.assertInputCompatibility(e),n){let s=this.call(e,t),i=wt(s),o=[];for(let l of i)a.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=Ga(o),this.activityRegularizer!=null)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=ZP(e),i=this.computeOutputShape(s),o,l=YP(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((u,d)=>new en(l,u,this,wt(e),t,this.name,d)):o=new en(l,i,this,wt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((a,r)=>{a!=null&&e[r]!=null&&e[r]!==a&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new On(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let a=JSON.stringify(t.outputShapes);e.indexOf(a)===-1&&e.push(a)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new On(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return vf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return x1(e?this.trainableWeights:this.weights)}setWeights(e){Z(()=>{let t=this.weights;if(t.length!==e.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let a=[],r=x1(t);for(let n=0;n<r.length;++n){let s=r[n],i=t[n],o=e[n];if(!w.arraysEqual(s.shape,o.shape))throw new K(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);a.push([i,o])}xA(a)})}addWeight(e,t,a,r,n,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new K(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),a==null&&(a="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():St("zeros"));let l=r.apply(t,a),u=new H7(l,a,e,s,i);return l.dispose(),n!=null&&this.addLoss(()=>n.apply(u.read())),s==null&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=wt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(a=>{if(a!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,a,r,n,s,i=null){let o=wt(e);t=wt(t),a=wt(a),r=wt(r),n=bf(n),s=bf(s);let l=[],u=[],d=[];for(let p of o)l.push(p.sourceLayer),u.push(p.nodeIndex),d.push(p.tensorIndex);new sm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:a,outputMasks:r,inputShapes:n,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ZP(e){e=wt(e);let t=[];for(let a of e)t.push(a.shape);return Ga(t)}function YP(e){return"float32"}function q7(e,t,a){if((t==null||a!=null&&a>0)&&(t=e.sourceLayer,a=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[a];if(r.inboundLayers.length===0)return r.inputTensors;{let n=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],u=q7(i,o,l);for(let d of u)n.indexOf(d)===-1&&n.push(d)}return n}}}var md=class extends et{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:K0("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let a=e.dtype||"float32";this.batchInputShape=t,this.dtype=a,this.inputSpec=[{shape:t}];let r=new en(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};md.className="InputLayer";oe.registerClass(md);function X7(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let a=e.dtype;return a==null&&(a="float32"),new md({batchInputShape:t,name:e.name,dtype:a,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function JP(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return he(t,e.dtype)}catch{throw new K(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var fo=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof fo)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,a){if(this.id2Value[e.id]==null)this.id2Value[e.id]=JP(e,t),this.name2Id[e.name]=e.id,a!=null&&(this.id2Mask[e.id]=a);else throw new K(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof en){if(this.id2Value[e.id]==null)throw new K(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new K(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof en){if(this.id2Value[e.id]==null)throw new K(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new K(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&se(this.id2Mask)}},wf=new O7,kf=new O7;function QP(e){wf?.setMaxEntries(e),kf?.setMaxEntries(e)}function Qd(e,t,a,r){let n=a==null?!1:a.training,s=Array.isArray(e),i=s?e:[e],o=i.map(f=>f.name),l=[],u=t.names();for(let f of o)u.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d=o.join(",")+"|"+t.names().join(","),p=wf.get(d),h;if(p==null){let f=eD(i,t);p=f.sorted,h=f.recipientCounts,wf.put(d,p),kf.put(d,h)}h={},n||Object.assign(h,kf.get(d));let c=new fo(t);for(let f=0;f<p.length;++f){if(r!=null){let R=mf().numTensors;R>r.maxNumTensors&&(r.maxNumTensors=R),R<r.minNumTensors&&(r.minNumTensors=R)}let m=p[f],g=m.sourceLayer;if(g instanceof md)continue;let y=[],A=[],x=[],b=!1;for(let R of m.inputs){let P=c.getValue(R),$=c.getMask(R);y.push(P),A.push($),$!=null&&(b=!0),n||(h[R.name]--,h[R.name]===0&&!t.hasKey(R)&&o.indexOf(R.name)===-1&&!P.isDisposed&&R.sourceLayer.stateful!==!0&&x.push(P))}b&&(a=a||{},a.mask=A[0]);let v=wt(g.apply(y,a)),S=null;g.supportsMasking&&(S=g.computeMask(y,A));let N=aD(m),E=Array.isArray(N)?N:[N];for(let R=0;R<E.length;++R){c.hasKey(E[R])||c.add(E[R],v[R],Array.isArray(S)?S[0]:S);let P=o.indexOf(E[R].name);P!==-1&&(l[P]=v[R])}n||se(x)}return c.disposeMasks(),s?l:l[0]}function eD(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let a=[],r={};if(e.length===1){let n=S5(e[0],t);a=n.sorted,r=n.recipientMap}else{let n=new Set;for(let s of e){let{sorted:i,recipientMap:o}=S5(s,t);for(let l of i)n.has(l.name)||(a.push(l),n.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:a,recipientCounts:tD(r)}}function tD(e){let t={};for(let a in e)t[a]=e[a].size;return t}function S5(e,t){let a=new Set,r=[],n={};for(let o of t.names())a.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(a.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),a.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)n[u.name]==null&&(n[u.name]=new Set),n[u.name].add(o.name),!a.has(u.name)&&s.push(u)}}return{sorted:r,recipientMap:n}}function aD(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let a=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let n of e.sourceLayer.inboundNodes[r].outputTensors)if(n.id===e.id){a=r;break}t=e.sourceLayer.getOutputAt(a)}return t}var rD=J();rD.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,QP);var K7={kernelName:Do,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,ip(he(a,"float32"),-1))}}},nD={kernelName:Pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=ct(he(a,"float32")),n=va(ce(ke(1),r));return Mt(me(e,n))}}}},sD={kernelName:Du,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=va(ce(ct(he(a,"float32")),1));return me(e,r)}}}},iD={kernelName:Yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=e,i=Ht(a.shape,n);return i.length>0&&(s=we(s,i)),q(s,a.shape)},b:()=>{let s=e,i=Ht(r.shape,n);return i.length>0&&(s=we(s,i)),q(s,r.shape)}}}},oD={kernelName:Hs,saveAllInputs:!0,gradFunc:(e,t)=>{let a={};return t.forEach((r,n)=>{a[n]=()=>e.clone()}),a}},lD={kernelName:qs,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>Qe(a)}}},uD={kernelName:Bu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>Qe(a)}}},dD={kernelName:Vu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,va(ce(ke(1),ct(he(a,"float32")))))}}},hD={kernelName:Uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=va(ie(ke(1),ct(he(a,"float32"))));return me(e,r)}}}},pD={kernelName:Hu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=ie(ct(a),ct(r)),i=W(e,me(r,s)),o=Ht(a.shape,n);return o.length>0&&(i=we(i,o)),q(i,a.shape)},b:()=>{let s=ie(ct(a),ct(r)),i=Mt(W(e,me(a,s))),o=Ht(r.shape,n);return o.length>0&&(i=we(i,o)),q(i,r.shape)}}}},cD={kernelName:Gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,ie(ct(he(a,"float32")),1))}}},fD={kernelName:ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,ce(ke(1),ct(he(a,"float32"))))}}};function mD(e,t,a,r,n,s){let i=F(e,"dy","avgPool3dGrad"),o=F(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;o.rank===4&&(d=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Oa("avgPool3dGrad",n,s);let p={dy:l,input:u},h={filterSize:a,strides:r,pad:n,dimRoundingMode:s},c=V.runKernel(Kf,p,h);return d?q(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var gD=U({avgPool3dGrad_:mD}),yD={kernelName:Fh,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{filterSize:n,strides:s,pad:i,dimRoundingMode:o}=a;return{x:()=>gD(e,r,n,s,i,o)}}};function AD(e,t,a,r,n){let s=F(e,"dy","avgPoolGrad"),i=F(t,"input","avgPoolGrad");O(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;i.rank===3&&(u=!0,o=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let d={dy:l,input:o},p={filterSize:a,strides:r,pad:n},h=V.runKernel(Xf,d,p);return u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var xD=U({avgPoolGrad_:AD}),bD={kernelName:Xs,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{filterSize:n,strides:s,pad:i}=a;return{x:()=>xD(e,r,n,s,i)}}},vD={kernelName:Ks,inputsToSave:["a","b"],gradFunc:(e,t,a)=>{let[r,n]=t,{transposeA:s,transposeB:i}=a;return!s&&!i?{a:()=>Ze(e,n,!1,!0),b:()=>Ze(r,e,!0,!1)}:!s&&i?{a:()=>Ze(e,n,!1,!1),b:()=>Ze(e,r,!0,!1)}:s&&!i?{a:()=>Ze(n,e,!1,!0),b:()=>Ze(r,e,!1,!1)}:{a:()=>Ze(n,e,!0,!0),b:()=>Ze(e,r,!0,!0)}}},wD={kernelName:Lo,gradFunc:(e,t,a)=>{let{blockShape:r,crops:n}=a;return{x:()=>M0(e,r,n)}}},kD={kernelName:kw,gradFunc:(e,t,a)=>{let r=a,n=r.inputShape,s=r.shape,i=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])i[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>we(e,o,!0)}}},ID={kernelName:Zs,gradFunc:e=>({x:()=>e.clone()})},SD={kernelName:Ys,gradFunc:e=>({x:()=>Qe(e)})},ND={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{clipValueMin:n,clipValueMax:s}=a;return{x:()=>Ma(sn(Il(r,n),Sl(r,s)),e,Qe(e))}}},TD={kernelName:_h,inputsToSave:["x"],gradFunc:K7.gradFunc},CD={kernelName:Wo,saveAllInputs:!0,gradFunc:(e,t,a)=>{let r=t.map(o=>o.shape),{axis:n}=a,s=zr(n,t[0].shape)[0],i=r.map(o=>o[s]);return xa(e,i,s).map(o=>()=>o)}},ED={kernelName:Js,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=a;return O(zs(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>$y(r.shape,e,n,i,o,l),filter:()=>sA(r,e,n.shape,i,o,l)}}},RD={kernelName:Qs,inputsToSave:["dy","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=a;return{dy:()=>Os(e,n,s,i,o,1,l),filter:()=>sA(e,r,n.shape,s,i,o,l)}}};function $D(e,t,a,r,n){let s=e;e.rank===4&&(s=q(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),O(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),O(a.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${a}.`),O(s.shape[4]===a[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${a[3]}.`),O(i.shape[4]===a[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${a[4]}).`);let o={x:s,dy:i},l={strides:r,pad:n,filterShape:a};return V.runKernel(Qf,o,l)}var FD=U({conv3DBackpropFilter_:$D}),MD={kernelName:zh,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:r,strides:n,pad:s}=a;O(zs(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>Bk(i.shape,e,o,n,s),filter:()=>FD(i,e,o.shape,n,s)}}},_D={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(Mt(Zy(he(a,"float32"))),e)}}},zD={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(Yy(he(a,"float32")),e)}}},OD={kernelName:ai,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{axis:n,exclusive:s,reverse:i}=a;return{x:()=>{let o=a7([n],r.rank),l=zy(e,n,s,!i);return o!=null&&(l=Je(l,o)),l}}}},PD={kernelName:ri,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:r,strides:n,pad:s,dimRoundingMode:i}=a,o=r??[1,1];O(zs(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),O(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),O(Tn(n,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${o}'.`),Oa("depthwiseConv2d",s,i),{x:()=>I7(l.shape,e,u,n,s,o,i),filter:()=>k7(l,e,u.shape,n,s,o,i)}}},DD={kernelName:Oh,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,s={x:r,filter:n,dy:e},i={x:r,filter:n,dy:e};return{x:()=>V.runKernel(uf,s,a),filter:()=>V.runKernel(df,i,a)}}},LD={kernelName:si,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t,r={dy:e,y:a};return{x:()=>V.runKernel(s0,r)}}},WD={kernelName:qu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,r=W(vr(Mt(ct(a))),2/Math.sqrt(Math.PI));return{x:()=>W(e,r)}}},BD={kernelName:ii,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,a)}}},VD={kernelName:jo,inputsToSave:["input"],gradFunc:(e,t)=>{let[a]=t;return{input:()=>q(e,a.shape)}}},UD={kernelName:Ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,vr(a))}}},GD={kernelName:oi,gradFunc:e=>({x:()=>Qe(e)})},jD={kernelName:li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=me(e,he(r,"float32")),i=Ht(a.shape,n);return i.length>0?q(we(s,i),a.shape):s},b:()=>{let s=W(e,he(a,"float32")),i=Ht(r.shape,n);i.length>0&&(s=q(we(s,i),r.shape));let o=ct(r);return Mt(me(s,he(o,"float32")))}}}},HD={kernelName:ui,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,a)=>{let{varianceEpsilon:r}=a,[n,s,i,o]=t,l=o??ke(1),u=Ht(s.shape,n.shape),d=[];if(s.rank===1){for(let m=0;m<n.shape.length-1;++m)d.push(n.shape[m]);d.push(1)}let p=ce(n,s),h=W(e,l),c=Xy(ie(i,ke(r))),f=W(W(W(c,c),c),ke(-.5));return{x:()=>s.rank===1?q(W(W(e,Mr(q(c,[1,1,1,s.shape[0]]),d)),l),n.shape):q(W(W(e,c),l),n.shape),mean:()=>{let m=W(W(c,ke(-1)),h);return s.rank===1&&(m=we(m,u)),q(m,s.shape)},variance:()=>{let m=W(W(f,p),h);return s.rank===1&&(m=we(m,u)),q(m,s.shape)},scale:()=>{let m=W(p,c),g=W(e,m);return s.rank===1&&(g=we(g,u)),q(g,s.shape)},offset:()=>{let m=e;return s.rank===1&&(m=we(m,u)),q(m,s.shape)}}}},qD={kernelName:Xo,inputsToSave:["x","indices"],gradFunc:(e,t,a)=>{let[r,n]=t,{axis:s}=a,i=zr(s,r.shape)[0];return{x:()=>{let o=r.shape,l=n.size,u=o.slice(0,i),d=u.length,p=o.slice(s,o.length).slice(1),h=p.length,c=N5(0,d),f=N5(d+1,d+1+h),m=T5([u,[l],p]),g=q(e,m),y=q(n,[l]),A=T5([[d],c,f]),x=Je(g,A),b=m7(x,y,r.shape[i]),v=Wy(A);return b=Je(b,v),b},indices:()=>n}}};function N5(e,t){let a=[];for(let r=e;r<t;++r)a.push(r);return a}function T5(e){let t=[];for(let a=0;a<e.length;++a)for(let r=0;r<e[a].length;++r)t.push(e[a][r]);return t}var XD={kernelName:di,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>Qe(a),b:()=>Qe(r)}}},KD={kernelName:hi,gradFunc:e=>({x:()=>he(e,"float32")})},ZD={kernelName:Ku,gradFunc:e=>({x:()=>Qe(e)})},YD={kernelName:Zu,gradFunc:e=>({x:()=>Qe(e)})},JD={kernelName:Yu,gradFunc:e=>({x:()=>Qe(e)})},QD={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{alpha:n}=a,s=ur(r,0);return{x:()=>Ma(s,e,W(e,n))}}},eL={kernelName:Ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,ie(a,1))}}},tL={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,he(a,"float32"))}}},aL={kernelName:Iw,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r]=t,{axis:n}=a;return{logits:()=>{let s=vr(r);return ce(e,W(we(e,n,!0),s))}}}};function rL(e,t,a,r=5,n=1,s=1,i=.5){let o={x:e,y:t,dy:a},l={depthRadius:r,bias:n,alpha:s,beta:i};return V.runKernel(u0,o,l)}var nL=U({localResponseNormalizationBackprop_:rL}),sL={kernelName:Wh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;return{x:()=>nL(r,n,e,s,i,o,l)}}};function Z7(e,t,a,r){return t.rank<a.rank&&(t=q(t,No(t.shape,r))),e.rank<a.rank&&(e=q(e,No(e.shape,r))),{x:()=>W(e,he(br(a,t),e.dtype))}}var C5={kernelName:fi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let r=a,{reductionIndices:n}=r,s=t[0],i=t[1],o=zr(n,s.shape),l=Z7(e,i,s,o);return{x:()=>l.x()}}},iL={kernelName:mi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>W(e,he(Il(a,r),"float32")),b:()=>W(e,he(Py(a,r),"float32"))}}};function oL(e,t,a,r,n,s,i){let o=F(e,"dy","maxPool3dGrad"),l=F(t,"input","maxPool3dGrad"),u=F(a,"output","maxPool3dGrad"),d=o,p=l,h=u,c=!1;l.rank===4&&(c=!0,d=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=q(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),O(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),O(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Oa("maxPool3dGrad",s,i);let f={dy:d,input:p,output:h},m={filterSize:r,strides:n,pad:s,dimRoundingMode:i},g=V.runKernel(h0,f,m);return c?q(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var lL=U({maxPool3dGrad_:oL}),uL={kernelName:Bh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;return{x:()=>lL(e,r,n,s,i,o,l)}}};function dL(e,t,a,r,n,s,i){let o=F(e,"dy","maxPoolGrad"),l=F(t,"input","maxPoolGrad"),u=F(a,"output","maxPoolGrad");O(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),O(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),O(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Oa("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},p={filterSize:r,strides:n,pad:s,dimRoundingMode:i};return V.runKernel(d0,d,p)}var hL=U({maxPoolGrad_:dL}),pL={kernelName:gi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{filterSize:s,strides:i,pad:o}=a;return{x:()=>hL(e,r,n,s,i,o)}}},cL={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{axis:n}=a,s=zr(n,r.shape),i=t7(r.shape,s)[1],o=kt(i);return{x:()=>{let l=r.shape.slice();s.forEach(d=>{l[d]=1});let u=q(e,l);return me(W(u,or(r.shape,"float32")),o)}}}},fL={kernelName:Ai,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let r=a,{axis:n}=r,[s,i]=t,o=zr(n,s.shape),l=Z7(e,i,s,o);return{x:()=>l.x()}}},mL={kernelName:xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>W(e,he(Sl(a,r),"float32")),b:()=>W(e,he(ur(a,r),"float32"))}}},gL={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let r=t[0],{paddings:n}=a,s=n.map(i=>i[0]);return{x:()=>Pe(e,s,r.shape)}}},yL={kernelName:ed,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=Ht(a.shape,n);return s.length>0?q(we(e,s),a.shape):e},b:()=>{let s=W(e,Mt(rp(me(a,r)))),i=Ht(r.shape,n);return i.length>0?q(we(s,i),r.shape):s}}}},AL={kernelName:vi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=W(e,he(r,"float32")),i=Ht(a.shape,n);return i.length>0?q(we(s,i),a.shape):s},b:()=>{let s=W(e,he(a,"float32")),i=Ht(r.shape,n);return i.length>0?q(we(s,i),r.shape):s}}}},xL={kernelName:el,gradFunc:e=>({x:()=>Mt(e)})},bL={kernelName:sl,inputsToSave:["indices"],gradFunc:(e,t)=>{let a=t[0];return{indices:()=>Dt(a.shape,"float32")}}},vL={kernelName:nl,gradFunc:e=>({x:()=>Qe(e)})},wL={kernelName:il,saveAllInputs:!0,gradFunc:(e,t,a)=>{let{axis:r}=a;return Sr(e,r).map(n=>()=>n)}},E5={kernelName:wi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let r=t[0],{paddings:n}=a,s=n.map(i=>i[0]);return{x:()=>Pe(e,s,r.shape)}}},kL={kernelName:ki,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[a,r,n]=t,s=a,i=r,o=gt(s.shape,i.shape);return{a:()=>{let l=he(i,"float32"),u=W(e,W(l,Ps(s,ce(l,ke(1))))),d=Ht(s.shape,o);return d.length>0&&(u=we(u,d)),q(u,s.shape)},b:()=>{let l=ur(s,0),u=Ma(l,wr(s),Qe(s)),d=W(e,W(n,u)),p=Ht(i.shape,o);return p.length>0&&(d=we(d,p)),q(d,i.shape)}}}},IL={kernelName:Ii,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[a,r]=t,n=ur(a,0);return{x:()=>Ma(n,e,W(e,r)),alpha:()=>{let s=Ma(n,Qe(e),W(e,a)),i=Ht(r.shape,e.shape);return i.length>0&&(s=we(s,i)),q(s,r.shape)}}}};function SL(e,t,a){let r=e.shape.slice();r[a]=1;let n=q(t,r),s=xf(e,a,!0,!1),i=xf(e,a,!0,!0),o=W(s,i);return W(n,o)}function NL(e,t,a){let r=e.shape.length,n=r-a.length,s=T.getAxesPermutation(a,r),i=e;s!=null&&(i=Je(e,s));let o=i.shape.slice(),l=o.splice(r-a.length,a.length).reduce((p,h)=>p*h,1);o.push(l);let u=i.reshape(o),d=SL(u,t,n);if(d=d.reshape(i.shape),s!=null){let p=T.getUndoAxesPermutation(s);d=Je(d,p)}return d}var TL={kernelName:Si,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{axis:n}=a,s=[];return n==null?s=r.shape.map((i,o)=>o):typeof n=="number"?s=[n]:s=n,{x:()=>NL(r,e,s)}}},CL={kernelName:ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=me(e,he(r,"float32")),i=Ht(a.shape,n);return i.length>0?q(we(s,i),a.shape):s},b:()=>{let s=W(e,he(a,"float32")),i=Ht(r.shape,n);i.length>0&&(s=q(we(s,i),r.shape));let o=ct(r);return Mt(me(s,he(o,"float32")))}}}},EL={kernelName:rd,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,Mt(ct(a)))}}},RL={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,r=W(Sl(a,6),ip(a));return{x:()=>W(e,he(r,"float32"))}}},$L={kernelName:Ni,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,he(ip(a),"float32"))}}},FL={kernelName:ol,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>q(e,a.shape)}}},ML={kernelName:Ti,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[r]=t,n={dy:e,images:r};return{images:()=>V.runKernel(m0,n,a)}}},_L={kernelName:nd,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[r]=t,n={dy:e,images:r};return{images:()=>V.runKernel(f0,n,a)}}},zL={kernelName:ll,gradFunc:(e,t,a)=>{let{dims:r}=a,n=zr(r,e.shape);return{x:()=>Ir(e,n)}}},OL={kernelName:ul,gradFunc:e=>({x:()=>Qe(e)})},PL={kernelName:Ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>Mt(me(e,W(Ps(a,1.5),2)))}}},DL={kernelName:hl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[a]=t;return{condition:()=>he(Qe(a),"float32"),t:()=>W(e,he(a,e.dtype)),e:()=>W(e,he(E0(a),e.dtype))}}},LL={kernelName:sd,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=ur(a,ke(0)),n=ke(F7),s=ke(M7),i=W(e,s),o=W(W(e,n),vr(he(a,"float32")));return Ma(r,i,o)}}}},WL={kernelName:$i,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,W(a,ce(ke(1),a)))}}},BL={kernelName:id,gradFunc:e=>({x:()=>Qe(e)})},VL={kernelName:Ri,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(I0(he(a,"float32")),e)}}},UL={kernelName:cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(_y(he(a,"float32")),e)}}},GL={kernelName:pl,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{begin:n,size:s}=a,i=r.shape,[o,l]=ck(r,n,s),u=[];for(let d=0;d<e.rank;d++)u.push([o[d],i[d]-o[d]-l[d]]);return{x:()=>Cn(e,u)}}},jL={kernelName:_i,outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r]=t,{dim:n}=a,s=!0,i=W(e,r);return{logits:()=>ce(i,W(we(i,[n],s),r))}}},HL={kernelName:od,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,xr(a))}}},R5={kernelName:fl,gradFunc:(e,t,a)=>{let{blockShape:r,paddings:n}=a;return{x:()=>w0(e,r,n)}}},$5={kernelName:ml,gradFunc:(e,t,a)=>{let{axis:r}=a;return{x:()=>Nt(e,r)}}},qL={kernelName:Fi,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,W(va(he(a,"float32")),2))}}},XL={kernelName:ud,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(e,W(he(a,"float32"),2))}}},KL={kernelName:zi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=ke(2);return{a:()=>W(e,W(n,ce(a,r))),b:()=>W(e,W(n,ce(r,a)))}}},ZL={kernelName:Li,gradFunc:e=>({x:()=>Qe(e)})},YL={kernelName:Oi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=e,i=Ht(a.shape,n);return i.length>0&&(s=we(s,i)),q(s,a.shape)},b:()=>{let s=e,i=Ht(r.shape,n);return i.length>0&&(s=we(s,i)),q(Mt(s),r.shape)}}}},JL={kernelName:Mi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,n=r.shape.slice(),{axis:s}=a;zr(s,r.shape).forEach(l=>{n[l]=1});let i=q(e,n),o=W(i,or(r.shape,"float32"));return{x:()=>o}}},QL={kernelName:yl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>me(e,ct(I0(a)))}}},eW={kernelName:Pi,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>W(ce(ke(1),ct(a)),e)}}},tW={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{reps:n}=a;return{x:()=>{let s=Qe(r);if(r.rank===1)for(let i=0;i<n[0];++i)s=ie(s,Pe(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<n[0];++i)for(let o=0;o<n[1];++o)s=ie(s,Pe(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<n[0];++i)for(let o=0;o<n[1];++o)for(let l=0;l<n[2];++l)s=ie(s,Pe(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<n[0];++i)for(let o=0;o<n[1];++o)for(let l=0;l<n[2];++l)for(let u=0;u<n[3];++u)s=ie(s,Pe(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},aW={kernelName:Di,gradFunc:(e,t,a)=>{let r=a,{perm:n}=r,s=Wy(n);return{x:()=>Je(e,s)}}},rW={kernelName:bl,gradFunc:(e,t,a)=>{let r=a,{axis:n}=r;return{value:()=>_a(e,n)}}},nW={kernelName:Xh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>sW(e,a)}}};function sW(e,t){let a=es(t,Qe(t)),r=vu(e,a),n=Il(t,ke(0,"int32")),s=r.rank-n.rank;for(let o=0;o<s;++o)n=la(n,o+1);n=sn(n,or(r.shape,"bool"));let i=Qe(r);return Ma(n,r,i)}var iW={kernelName:vl,gradFunc:e=>({x:()=>Qe(e)})},oW=[K7,nD,sD,iD,oD,lD,uD,dD,hD,pD,cD,fD,yD,bD,vD,wD,kD,ID,SD,ND,TD,CD,RD,ED,MD,_D,zD,OD,PD,DD,CL,LD,WD,BD,VD,UD,jD,GD,HD,qD,XD,KD,ZD,YD,JD,QD,eL,tL,aL,sL,C5,C5,iL,uL,pL,cL,fL,mL,gL,yL,AL,xL,bL,vL,wL,E5,E5,kL,IL,TL,EL,RL,$L,FL,ML,_L,zL,OL,PL,DL,LL,WL,BL,VL,UL,GL,jL,HL,R5,R5,$5,$5,qL,KL,XL,ZL,YL,JL,QL,eW,tW,aW,rW,nW,iW];for(let e of oW)Sw(e);var Y7={};Le(Y7,{maxNorm:()=>lW,minMaxNorm:()=>hW,nonNeg:()=>dW,unitNorm:()=>uW});function bA(e,t){return Z(()=>va(we(W(e,e),t,!0)))}var pp=class extends oe.Serializable{getConfig(){return{}}},vA=class extends pp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>{let t=bA(e,this.axis),a=lr(t,0,this.maxValue);return W(e,me(a,ie(ea(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};vA.className="MaxNorm";oe.registerClass(vA);var wA=class extends pp{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>me(e,ie(ea(),bA(e,this.axis))))}getConfig(){return{axis:this.axis}}};wA.className="UnitNorm";oe.registerClass(wA);var kA=class extends pp{apply(e){return En(e)}};kA.className="NonNeg";oe.registerClass(kA);var IA=class extends pp{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>{let t=bA(e,this.axis),a=ie(W(this.rate,lr(t,this.minValue,this.maxValue)),W(1-this.rate,t));return W(e,me(a,ie(ea(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};IA.className="MinMaxNorm";oe.registerClass(IA);var F5={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function aa(e){return uA(e)}function M5(e,t={}){return lp(e,oe.SerializationMap.getMap().classNameMap,t,"constraint")}function ra(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in F5?F5[e]:e,config:{}};return M5(t)}else return e instanceof pp?e:M5(e)}function lW(e){return new vA(e)}function uW(e){return new wA(e)}function dW(){return new kA}function hW(e){return new IA(e)}var J7={};Le(J7,{constant:()=>fW,glorotNormal:()=>vW,glorotUniform:()=>bW,heNormal:()=>wW,heUniform:()=>kW,identity:()=>AW,leCunNormal:()=>IW,leCunUniform:()=>SW,ones:()=>cW,orthogonal:()=>NW,randomNormal:()=>gW,randomUniform:()=>mW,truncatedNormal:()=>yW,varianceScaling:()=>xW,zeros:()=>pW});function pW(){return new pA}function cW(){return new J0}function fW(e){return new cA(e)}function mW(e){return new fA(e)}function gW(e){return new mA(e)}function yW(e){return new gA(e)}function AW(e){return new yA(e)}function xW(e){return new qa(e)}function bW(e){return new Q0(e)}function vW(e){return new em(e)}function wW(e){return new tm(e)}function kW(e){return new am(e)}function IW(e){return new rm(e)}function SW(e){return new nm(e)}function NW(e){return new AA(e)}var Q7={};Le(Q7,{Layer:()=>et,RNN:()=>rs,RNNCell:()=>mp,activation:()=>YB,add:()=>iV,alphaDropout:()=>UV,average:()=>oV,averagePooling1d:()=>Mx,averagePooling2d:()=>_x,averagePooling3d:()=>zx,avgPool1d:()=>gV,avgPool2d:()=>AV,avgPool3d:()=>bV,avgPooling1d:()=>yV,avgPooling2d:()=>xV,avgPooling3d:()=>vV,batchNormalization:()=>cV,bidirectional:()=>zV,concatenate:()=>lV,conv1d:()=>VB,conv2d:()=>UB,conv2dTranspose:()=>GB,conv3d:()=>jB,conv3dTranspose:()=>HB,convLstm2d:()=>$V,convLstm2dCell:()=>FV,cropping2D:()=>XB,dense:()=>JB,depthwiseConv2d:()=>ZB,dot:()=>pV,dropout:()=>QB,elu:()=>OB,embedding:()=>sV,flatten:()=>tV,gaussianDropout:()=>VV,gaussianNoise:()=>BV,globalAveragePooling1d:()=>wV,globalAveragePooling2d:()=>kV,globalMaxPool1d:()=>PV,globalMaxPool2d:()=>DV,globalMaxPooling1d:()=>X6,globalMaxPooling2d:()=>K6,gru:()=>SV,gruCell:()=>NV,input:()=>y6,inputLayer:()=>zB,layerNormalization:()=>fV,leakyReLU:()=>DB,lstm:()=>TV,lstmCell:()=>CV,masking:()=>GV,maxPool1d:()=>LV,maxPool2d:()=>WV,maxPooling1d:()=>Z6,maxPooling2d:()=>Y6,maxPooling3d:()=>IV,maximum:()=>uV,minimum:()=>dV,multiply:()=>hV,permute:()=>nV,prelu:()=>LB,reLU:()=>PB,repeatVector:()=>aV,reshape:()=>rV,rnn:()=>MV,separableConv2d:()=>qB,simpleRNN:()=>EV,simpleRNNCell:()=>RV,softmax:()=>WB,spatialDropout1d:()=>eV,stackedRNNCells:()=>_V,thresholdedReLU:()=>BB,timeDistributed:()=>OV,upSampling2d:()=>KB,zeroPadding2d:()=>mV});async function gs(e){if(e==null)return;let t=[],a=[],r=[];for(let n in e){let s=e[n];if(typeof s!="number"){let i=s;t.push(i.data()),a.push(n),r.push(i)}}if(t.length>0){let n=await Promise.all(t);for(let s=0;s<n.length;++s)e[a[s]]=n[s][0];se(r)}}function e6(e){if(e!=null)for(let t in e){let a=e[t];typeof a!="number"&&a.dispose()}}var TW=125,Tu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},t6=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},CW=class extends Tu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let a=t.size==null?0:t.size;this.seen+=a;for(let r in t){let n=t[r];if(typeof n=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+n*a;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=Z(()=>ie(this.totals[r],W(n,a)));this.totals[r]=i,s?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let a of this.params.metrics)this.totals[a]!=null&&(typeof this.totals[a]=="number"?t[a]=this.totals[a]/this.seen:Z(()=>{let r=W(me(1,this.seen),this.totals[a]);t[a]=r,this.totals[a].dispose(),ua(t[a])}))}},a6=class extends Tu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let a in t)this.history[a]==null&&(this.history[a]=[]),this.history[a].push(t[a])}async syncData(){let e=[],t=[],a=[];for(let n in this.history){let s=this.history[n];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(n),a.push(i)}}let r=await Promise.all(e);for(let n=0;n<r.length;++n)this.history[t[n]][a[n]].dispose(),this.history[t[n]][a[n]]=r[n][0]}},r6=class extends Tu{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||oA,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=TW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=SP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,a){let r=[];this.yield!=null&&(await gs(a),r.push(this.yield(e,t,a))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await gs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let a=[];this.epochEnd!=null&&(await gs(t),a.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&a.push(this.nextFrameFunc()),await Promise.all(a)}async onBatchBegin(e,t){this.batchBegin!=null&&(await gs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let a=[];this.batchEnd!=null&&(await gs(t),a.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?a.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&a.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(a)}async onTrainBegin(e){this.trainBegin!=null&&(await gs(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await gs(e),await this.trainEnd(e))}};function n6(e,t){return e==null&&(e={}),e instanceof Tu?[e]:Array.isArray(e)&&e[0]instanceof Tu?e:wt(e).map(a=>new r6(a,t))}var mn=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),mn.checkForDuplicate(t),mn.constructors[e]==null&&(mn.constructors[e]=[]),mn.constructors[e].push(t)}static checkForDuplicate(e){for(let t in mn.constructors)mn.constructors[+t].forEach(a=>{if(a===e)throw new K("Duplicate callback constructor.")})}static clear(){mn.constructors={}}static createCallbacks(e){let t=[];for(let a in mn.constructors){let r=+a;e>=r&&t.push(...mn.constructors[r])}return t.map(a=>new a)}},SA=mn;SA.constructors={};function s6(e,t,a,r,n,s,i,o,l){let u=new a6,d=[new CW,...SA.createCallbacks(t)];e!=null&&d.push(...e),d.push(u);let p=new t6(d);return p.setParams({epochs:a,initialEpoch:r,samples:n,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function an(e,t={},a=!1){return lp(e,oe.SerializationMap.getMap().classNameMap,t,"layer",a)}function If(e,t){return Z(()=>{e.dtype!=="float32"&&(e=he(e,"float32"));let a=we(dp(e),t,!0),r=hd(a.shape,ea()),n=va(es(a,r));return me(e,n)})}function Tl(e,t){return Z(()=>Pt(dp(ce(t,e)),-1))}function im(e,t){return Z(()=>Pt(Jt(ce(t,e)),-1))}function gd(e,t){return Z(()=>{let a=ce(e,t),r=lr(Jt(e),ea(),Number.MAX_VALUE),n=Jt(me(a,r));return W(100,Pt(n,-1))})}function EW(e,t){return Z(()=>{let a=lr(t,ea(),Number.MAX_VALUE),r=wr(ie(1,a)),n=lr(e,ea(),Number.MAX_VALUE),s=wr(ie(1,n));return Pt(dp(ce(r,s)),-1)})}function RW(e,t){return Z(()=>{let a=es(0,ce(1,W(e,t)));return Pt(dp(a),-1)})}function $W(e,t){return Z(()=>{let a=es(0,ce(1,W(e,t)));return Pt(a,-1)})}function FW(e,t){return Z(()=>{let a=we(W(e,t),-1),r=Fa(W(ce(1,e),t),-1);return es(0,ie(1,ce(r,a)))})}function MW(e,t){return Z(()=>{let a=Math.log(2),r=ce(t,e),n=ce(ie(r,pd(W(-2,r))),a);return Pt(n,-1)})}function Nh(e,t,a=!1){return Z(()=>{if(a)t=sp(t);else{let r=we(t,t.shape.length-1,!0);t=me(t,r)}return t=lr(t,ea(),1-ea()),Mt(we(W(he(e,"float32"),wr(t)),t.shape.length-1))})}function Sf(e,t,a=!1){return Z(()=>{let r=he(rp(PP(e)),"int32");t=lr(t,ea(),1-ea());let n=t.shape,s=q(kh(r,n[n.length-1]),n);return Nh(s,t,a)})}function _W(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Z(()=>{let a=En(t),r=Mt(Jt(t));return ie(ce(a,W(t,e)),T0(vr(r)))})}function om(e,t){return Z(()=>{let a;return a=lr(t,ea(),1-ea()),a=wr(me(a,ce(1,a))),Pt(_W(e,a),-1)})}function zW(e,t){return Z(()=>{let a=lr(e,ea(),1),r=lr(t,ea(),1);return we(W(e,wr(me(a,r))),-1)})}function OW(e,t){return Z(()=>{let a=wr(ie(ea(),t));return Pt(ce(t,W(e,a)),-1)})}function NA(e,t){return Z(()=>{let a=If(e,-1),r=If(t,-1),n=W(a,r);return Mt(we(n,-1))})}var Nf={meanSquaredError:Tl,meanAbsoluteError:im,meanAbsolutePercentageError:gd,meanSquaredLogarithmicError:EW,squaredHinge:RW,hinge:$W,categoricalHinge:FW,logcosh:MW,categoricalCrossentropy:Nh,sparseCategoricalCrossentropy:Sf,binaryCrossentropy:om,kullbackLeiblerDivergence:zW,poisson:OW,cosineProximity:NA};function A2(e){if(typeof e=="string"){if(e in Nf)return Nf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(t)}else return e}function TA(e,t){return Z(()=>{let a=W(.5,kr(t)),r=Z0(ur(t,a),e.dtype);return Pt(br(e,r),-1)})}function CA(e,t){return Z(()=>Z0(br(qn(e,-1),qn(t,-1)),"float32"))}function i6(e,t){return Z(()=>he(we(sn(br(e,1),br(t,1))),"float32"))}function PW(e,t){return Z(()=>he(we(sn(br(e,1),br(t,0))),"float32"))}function DW(e,t){return Z(()=>he(we(sn(br(e,0),br(t,1))),"float32"))}function o6(e,t){return Z(()=>{let a=i6(e,t),r=DW(e,t),n=ie(a,r);return he(Ma(ur(n,0),me(a,n),0),"float32")})}function LW(e,t){return Z(()=>{let a=i6(e,t),r=PW(e,t),n=ie(a,r);return he(Ma(ur(n,0),me(a,n),0),"float32")})}function l6(e,t){return om(e,t)}function u6(e,t){return e.rank===t.rank&&(e=ft(e,[e.rank-1])),t=qn(t,-1),t.dtype!==e.dtype&&(t=he(t,e.dtype)),he(br(e,t),"float32")}var WW=Tl,BW=Tl,VW=im,UW=im,GW=gd,jW=gd,EA=Nh,HW=NA,d6=Sf,Tf={binaryAccuracy:TA,categoricalAccuracy:CA,precision:o6,categoricalCrossentropy:EA,sparseCategoricalCrossentropy:d6,mse:WW,MSE:BW,mae:VW,MAE:UW,mape:GW,MAPE:jW,cosine:HW};function qW(e){if(typeof e=="string"&&e in Tf)return Tf[e];if(typeof e!="string"&&e!=null)return e;throw new K(`Unknown metric ${e}`)}function wc(e){if(An(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let a of Object.keys(Nf))if(Nf[a]===e){t=a;break}if(t!==void 0)return t;for(let a of Object.keys(Tf))if(Tf[a]===e){t=a;break}return t!==void 0?t:e.name}}function XW(e){let t={Adagrad:()=>so.adagrad(.01),Adadelta:()=>so.adadelta(1,.95,ea()),Adam:()=>so.adam(.001,.9,.999,ea()),Adamax:()=>so.adamax(.002,.9,.999,ea(),0),RMSProp:()=>so.rmsprop(.001,.9,0,ea()),SGD:()=>so.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new K(`Unknown Optimizer ${e}`)}var _5=1*1024*1024;function z5(e,t,a=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!b1(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(a){let r=JSON.stringify(e);r.length>_5&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${_5}.`)}}function b1(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let a of t)if(typeof a!="string"||!b1(e[a]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!b1(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function KW(e,t,a,r=console.log){let n=YW(e),s=["Layer (type)","Input Shape","Output shape","Param #"];n?(t=t||90,a=a||[.32,.61,.89,1]):(t=t||115,a=a||[.24,.48,.7,.8,1]),a[a.length-1]<=1&&(a=a.map(d=>Math.floor(t*d)));let i;if(!n){s.push("Receives inputs"),i=[];for(let d in e.nodesByDepth)i.push(...e.nodesByDepth[d])}r("_".repeat(t)),Cf(s,a,r),r("=".repeat(t));let o=e.layers;for(let d=0;d<o.length;++d)n?JW(o[d],a,r):QW(o[d],a,i,r),r((d===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=ZW(e),u=vf(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function ZW(e){let t;return e.collectedTrainableWeights!=null?t=vf(e.collectedTrainableWeights):t=vf(e.trainableWeights),t}function YW(e){let t=!0,a=[],r=[];for(let n in e.nodesByDepth)a.push(e.nodesByDepth[n]);for(let n of a){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){t=!1;break}r.push(...n)}if(t)for(let n of e.layers){let s=!1;for(let i of n.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Cf(e,t,a=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);a(r)}function JW(e,t,a){let r,n;try{n=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{n="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,n,r,e.countParams().toString()];Cf(o,t,a)}function QW(e,t,a,r){let n,s;try{s=e.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{n=JSON.stringify(e.outputShape)}catch{n="multiple"}let i=[];for(let p of e.inboundNodes)if(!(a!=null&&a.length>0&&a.indexOf(p)===-1))for(let h=0;h<p.inboundLayers.length;++h){let c=p.inboundLayers[h].name,f=p.nodeIndices[h],m=p.tensorIndices[h];i.push(`${c}[${f}][${m}]`)}let o=e.name,l=e.getClassName(),u=i.length===0?"":i[0],d=[`${o} (${l})`,s,n,e.countParams().toString(),u];Cf(d,t,r);for(let p=1;p<i.length;++p)Cf(["","","","",i[p]],t,r)}function h6(e,t,a){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof a=="string"}function Th(e,t){if(e===null)return null;if(typeof e=="string")return uo(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let a=[],r=e.length;for(let n=0;n<r;++n){let s=e[n];h6(t,n,s)?a.push(s):a.push(Th(s,t))}return a}else{let a={};for(let r of Object.keys(e)){let n=e[r];if(r==="name"&&typeof n=="string")a[r]=n;else{let s=uo(r);a[s]=Th(n,s)}}return a}}function v1(e,t){if(e==null)return null;if(typeof e=="string")return Pn(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let a=[],r=e.length;for(let n=0;n<r;++n){let s=e[n];h6(t,n,s)?a.push(s):a.push(v1(s,t))}return a}else{let a={};for(let r of Object.keys(e)){let n=e[r],s=Pn(r);(r==="name"||r==="className")&&typeof n=="string"?a[s]=n:a[s]=v1(n,r)}return a}}var RA="0.0.0",gn=class extends et{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=K0(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ss(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ss(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(A),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;An(x===0,"input layer has >1 nodes"),An(b===0,"input layer has >1 tensors"),this.inputLayers.push(A),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let A=this.inputLayers[y];if(!(A instanceof md))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${A.getClassName()}.`);this.inputNames.push(A.name),this.feedInputShapes.push(A.batchInputShape),this.feedInputNames.push(A.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},a={},r={},n={},s={},i=[],o=(y,A,x,b,v,S)=>{(b==null||v==null||S==null)&&(b=y.sourceLayer,v=y.nodeIndex,S=y.tensorIndex);let N=b.inboundNodes[v];if(x.indexOf(N)!==-1)throw new Qr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(A.indexOf(N)!==-1)return;this.containerNodes.add(gn.nodeKey(b,v)),b.id in s||(s[b.id]=Object.keys(s).length),x.indexOf(N)===-1&&x.push(N);let E=N.inboundLayers.length;for(let R=0;R<E;R++){let P=N.inputTensors[R],$=N.inboundLayers[R],k=N.nodeIndices[R],_=N.tensorIndices[R];o(P,A,x,$,k,_)}for(A.push(N);x.indexOf(N)>=0;)x.splice(x.indexOf(N),1);i.push(N)},l=[],u=[];for(let y of this.outputs)o(y,l,u);let d=i.slice().reverse();for(let y of d){a[y.id]=y,y.id in t||(t[y.id]=0);let A=t[y.id],x=r[y.outboundLayer.id]==null?0:r[y.outboundLayer.id];A=Math.max(A,x),r[y.outboundLayer.id]=A,n[y.outboundLayer.id]=y.outboundLayer,t[y.id]=A;for(let b=0;b<y.inboundLayers.length;b++){let v=y.inboundLayers[b],S=y.nodeIndices[b],N=v.inboundNodes[S],E=t[N.id]==null?0:t[N.id];t[N.id]=Math.max(A+1,E),a[N.id]=N}}let p={};for(let y in t){let A=t[y];A in p||(p[A]=[]),p[A].push(a[y])}let h={};for(let y in r){let A=r[y];A in h||(h[A]=[]),h[A].push(n[y])}let c=Object.keys(h).map(y=>parseInt(y,10)).sort(xc);this.layers=[];for(let y of c){let A=h[y];A.sort((x,b)=>{let v=s[x.id],S=s[b.id];return v<S?-1:v>S?1:0});for(let x of A)x instanceof gn&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=h,c=Object.keys(p).map(y=>parseInt(y,10)).sort(xc);let f=this.inputs.slice(),m=[];for(let y of c)for(let A of p[y]){let x=A.outboundLayer;if(x!=null){for(let b of A.inputTensors)if(f.indexOf(b)===-1)throw new Qr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let b of A.outputTensors)f.push(b);m.push(x.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let A=g.filter(x=>x===y).length;if(A!==1)throw new Qr(`The name "${y}" is used ${A} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(a=>a.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let a of this.layers)t.push(...a.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let a={},r=0;for(let s of this.layers)for(let i of s.weights){if(a[i.originalName]!=null)throw new K(`Duplicate weight name: ${i.originalName}`);a[i.originalName]=i,r++}let n=[];for(let s in e){let i=s;if(a[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(a[i]!=null)n.push([a[i],e[s]]);else if(t)throw new K(`Provided weight data has no target variable: ${s}`);delete a[i]}if(t){let s=[];for(let i in a)s.push(i);if(s.length>0)throw new K(`${s.length} of ${r} weights are not set: ${s}`)}xA(n)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${RA}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let a=v1(this.updatedConfig());return t?JSON.stringify(a):a}call(e,t){return Z(()=>{e=wt(e);let a=new fo;for(let r=0;r<this.inputs.length;++r)a.add(this.inputs[r],e[r]);return Qd(this.outputs,a,t)})}computeMask(e,t){return Z(()=>{e=wt(e);let a;return t==null?a=To(null,e.length):a=wt(t),this.runInternalGraph(e,a)[1]})}computeOutputShape(e){let t=bf(e);if(t.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let a={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],u=o.name+"_0_0";a[u]=l}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(xc);if(r.length>1)for(let i of r){let o=this.nodesByDepth[i];for(let l of o){let u=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let d=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],A=`${m.name}_${g}_${y}`,x=a[A];d.push(x)}let p=u.computeOutputShape(Ga(d)),h=bf(p),c=u.inboundNodes.indexOf(l);for(let f=0;f<h.length;f++){let m=`${u.name}_${c}_${f}`;a[m]=h[f]}}}let n=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=this.outputLayersTensorIndices[i],d=`${o.name}_${l}_${u}`;s.push(d)}for(let i=0;i<s.length;i++){let o=s[i];An(o in a),n.push(a[o])}return Ga(n)}runInternalGraph(e,t){t==null&&(t=To(null,e.length));let a={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],u=e[o],d=t[o];a[l.id]=[u,d]}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(xc);for(let o of r){let l=this.nodesByDepth[o];for(let u of l){let d=u.outboundLayer,p=u.inputTensors,h=u.outputTensors,c=new Array;for(let f of p)f.id in a&&c.push(a[f.id]);if(c.length===p.length){let f={},m,g,y,A;if(u.callArgs!=null&&(f=u.callArgs),c.length===1){let[x,b]=c[0];f.mask==null&&(f.mask=b),y=wt(d.call(x,f)),A=wt(d.computeMask(x,b)),m=[x],g=[b]}else m=c.map(x=>x[0]),g=c.map(x=>x[1]),f.mask==null&&(f.mask=g),y=wt(d.call(m,f)),A=wt(d.computeMask(m,g));if(d.activityRegularizer)throw new Ve("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<h.length;++x){let b=h[x],v=y[x],S=A[x];a[b.id]=[v,S]}}}}let n=[],s=[],i=[];for(let o of this.outputs){An(o.id in a,`Could not compute output ${o.name} : ${o.id}`);let[l,u]=a[o.id];i.push(l.shape),n.push(l),s.push(u)}return[n,s,i]}buildNodeConversionMap(e){let t={},a;for(let r of this.layers){a=r instanceof gn?1:0;for(let n=0;n<r.inboundNodes.length;n++){let s=gn.nodeKey(r,n);this.containerNodes.has(s)&&(t[s]=a,a+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new K(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new K("Provide either a layer name or layer index");for(let a of this.layers)if(a.name===e)return a;throw new K(`No such layer: ${e}`)}calculateLosses(){return Z(()=>{let e=[];for(let t of this.layers)for(let a=0;a<t.inboundNodes.length;++a){let r=gn.nodeKey(t,a);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),a=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let d=0;d<s.inboundNodes.length;d++){let p=s.inboundNodes[d],h=gn.nodeKey(s,d),c={};if(this.containerNodes.has(h)){if(p.callArgs)try{JSON.stringify(p.callArgs),c=p.callArgs}catch{console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(p.inboundLayers.length>0){let f=[];for(let m=0;m<p.inboundLayers.length;m++){let g=p.inboundLayers[m],y=p.nodeIndices[m],A=p.tensorIndices[m],x=gn.nodeKey(g,y),b=t[x];b==null&&(b=0),f.push([g.name,b,A,c])}l.push(f)}}}let u={};u.name=s.name,u.className=i,u.config=o,u.inboundNodes=l,a.push(u)}e.layers=a;let r=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=gn.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let d=this.inputLayersTensorIndices[s];r.push([i.name,u,d])}e.inputLayers=r;let n=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=gn.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let d=this.outputLayersTensorIndices[s];n.push([i.name,u,d])}return e.outputLayers=n,e}static fromConfig(e,t,a={},r=!1){let n={},s={};function i(m,g){m.name in s?s[m.name].push(g):s[m.name]=[g]}function o(m,g){let y=[],A;for(let x of g){let b=x[0],v=x[1],S=x[2];if(A=x[3]==null?{}:x[3],!(b in n)){i(m,g);return}let N=n[b];if(N.inboundNodes.length<=v){i(m,g);return}let E=N.inboundNodes[v];y.push(E.outputTensors[S])}y.length>0&&m.apply(Ga(y),A)}function l(m){let g=m.name,y=an(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(r),n[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${A}`);i(y,A)})}let u=t.name,d=t.layers;for(let m of d)l(m);for(;!IP(s);)for(let m of d){let g=n[m.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let A of y)o(g,A)}}let p=[],h=[],c=t.inputLayers;for(let m of c){let g=m[0],y=m[1],A=m[2];An(g in n);let x=n[g].inboundNodes[y].outputTensors;p.push(x[A])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],A=m[2];An(g in n);let x=n[g].inboundNodes[y].outputTensors;h.push(x[A])}return new e({inputs:p,outputs:h,name:u})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function eB(e,t,a){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(n=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${a} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let n=[];return t.forEach(s=>{s in e?n.push(e[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${r}) outputs, so ${a} must be either an array with ${r} elements or an object with ${t} keys. Provided ${a} not understood: ${JSON.stringify(e)}`)}function p6(e,t){return eB(e,t,"classWeight")}async function c6(e,t,a,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(a!=null){let n=Z(()=>{if(e.shape.length===1)return ja(e);if(e.shape.length===2){if(e.shape[1]>1)return qn(e,1);if(e.shape[1]===1)return q(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await n.data());se(n);let i=[];return s.forEach(o=>{if(a[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(a[o])}),Lt(i,"float32")}else return null}function tB(e,t){return W(e,t)}var aB=32;function f6(e,t){let a,r,n=t;a=n.xs,r=n.ys,w.assert(a!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=O5("input",e.inputNames,a),i=O5("output",e.outputNames,r),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function O5(e,t,a){if(a instanceof tt)return[a];if(Array.isArray(a))return w.assert(a.length===t.length,()=>`Received an array of ${a.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),a;{let r=[];for(let n of t){if(a[n]==null)throw new K(`The feature data generated by the dataset lacks the required ${e} key '${n}'.`);r.push(a[n])}return r}}function rB(e){if(e.length===3)throw new Ve("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function nB(e,t,a){let r=a.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(a!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(a.epochs!=null&&a.epochs>0&&Number.isInteger(a.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${a.epochs}`),w.assert(!r||a.batchesPerEpoch>0&&Number.isInteger(a.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${a.batchesPerEpoch}`),w.assert(a.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let n=a.validationData!=null,s,i;if(n)if(P5(a.validationData))w.assert(a.validationBatches==null||a.validationBatches>0&&Number.isInteger(a.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${a.validationBatches}`);else{let g=rB(a.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;n?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let d=n6(a.callbacks,a.yieldEvery),p=a.verbose==null?1:a.verbose,{callbackList:h,history:c}=s6(d,p,a.epochs,null,null,sB(t,a),null,n,u);h.setModel(e),e.history=c,await h.onTrainBegin(),e.stopTraining_=!1;let f=a.initialEpoch==null?0:a.initialEpoch,m=await t.iterator();for(;f<a.epochs;){let g={};await h.onEpochBegin(f);let y=0,A=0;for(r||(m=await t.iterator());!r||y<a.batchesPerEpoch;){let x=await m.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${a.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${a.batchesPerEpoch*a.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:b,ys:v}=f6(e,x.value),S={};S.batch=A,S.size=b[0].shape[0],await h.onBatchBegin(A,S);let N=[];if(a.classWeight!=null){let P=p6(a.classWeight,e.outputNames);for(let $=0;$<P.length;++$)N.push(await c6(v[$],null,P[$]))}let E=b.concat(v).concat(N),R=o(E);se(E);for(let P=0;P<l.length;++P){let $=l[P],k=R[P];S[$]=k,ua(k)}await h.onBatchEnd(A,S),e6(S),A++,y++}if(r?y>=a.batchesPerEpoch:x.done){if(n){let b;P5(a.validationData)?b=wt(await e.evaluateDataset(a.validationData,{batches:a.validationBatches})):b=wt(e.evaluate(s,i,{batchSize:a.validationBatchSize==null?aB:a.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=b[v]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function sB(e,t){let a=null;return t.batchesPerEpoch!=null?a=t.batchesPerEpoch:Number.isFinite(e.size)&&(a=e.size),a}function P5(e){return typeof e.iterator=="function"}function iB(e){return typeof e.next=="function"}async function oB(e,t,a){a=a||{};let r=a.batches!=null,n=e.testFunction,s=[];if(a.verbose>0)throw new Ve("Verbose mode is not implemented yet.");w.assert(!r||a.batches>0&&Number.isInteger(a.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(a.batches)}`);let i=iB(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<a.batches;){let u=await i.next();if(s=Z(()=>{if(u.value){let{xs:d,ys:p}=f6(e,u.value),h=d.concat(p),c=Z(()=>n(h));if(se(h),l===0)for(let m=0;m<c.length;++m)s.push(ke(0));let f=h[0].shape[0];for(let m=0;m<c.length;++m){let g=c[m],y=s[m];s[m]=Z(()=>ie(s[m],W(f,g))),l>0&&se(y)}se(c),o+=f,++l}return s}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${a.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let d=s[u];s[u]=me(s[u],o),se(d)}return Ga(s)}function w1(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function eh(e,t,a){return e==null?[null]:Array.isArray(e)?e.map(r=>bo(r,t,a-t)):bo(e,t,a-t)}function $A(e,t){return Z(()=>e==null?null:Array.isArray(e)?e.map(a=>$A(a,t)):G7(e,t.dtype==="int32"?t:he(t,"int32")))}function k1(e,t){let a=[],r=0,n=null;for(;r<e;)n=r+t,n>=e&&(n=e),a.push([r,n]),r=n;return a}async function lB(e,t,a,r,n,s,i,o,l,u,d,p,h,c,f){n==null&&(n=32),s==null&&(s=1),d==null&&(d=!0),h==null&&(h=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,c==null))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(a,n,c,"steps_per_epoch"),y;g!=null&&(y=on(0,g)),i==null&&(i=1);let{callbackList:A,history:x}=s6(o,i,s,h,g,c,n,m,p);A.setModel(e),e.history=x,await A.onTrainBegin(),e.stopTraining_=!1;for(let b=h;b<s;++b){await A.onEpochBegin(b);let v={};if(c!=null)throw new Ve("stepsPerEpoch mode is not implemented yet.");{if(d==="batch")throw new Ve("batch shuffling is not implemneted yet");d&&w.shuffle(y);let S=Lt(y),N=k1(g,n);for(let E=0;E<N.length;++E){let R={};if(await A.onBatchBegin(E,R),Z(()=>{let P=N[E][0],$=N[E][1],k=bo(S,P,$-P);R.batch=E,R.size=$-P;let _=$A(a,k),z=t(_);for(let L=0;L<r.length;++L){let j=r[L],D=z[L];R[j]=D,ua(D)}if(E===N.length-1&&m){let L=e.testLoop(l,u,n);for(let j=0;j<r.length;++j){let D=r[j],B=L[j];ua(B),v["val_"+D]=B}}}),await A.onBatchEnd(E,R),e6(R),e.stopTraining_)break}S.dispose()}if(await A.onEpochEnd(b,v),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}async function uB(e,t,a,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let n,s,i,o,l,u,d,p,h;try{let c=r.batchSize==null?32:r.batchSize;w1(c);let f=!1,m=await e.standardizeUserData(t,a,r.sampleWeight,r.classWeight,f,c);n=m[0],s=m[1],h=m[2];let g=!1,y;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)l=r.validationData[0],u=r.validationData[1];else throw r.validationData.length===3?new Ve("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let E=!0,R=await e.standardizeUserData(l,u,null,null,E,c);d=R[0],p=R[1],y=d.concat(p)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;let E=Math.floor(n[0].shape[0]*(1-r.validationSplit)),R=n[0].shape[0];d=eh(n,E,R),i=n,n=eh(n,0,E),p=eh(s,E,R),o=s,s=eh(s,0,E),y=d.concat(p)}else r.validationSteps!=null&&(g=!0);let A=n.concat(s).concat(h);e.checkTrainableWeightsConsistency();let x=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),v,S;g?(e.makeTestFunction(),v=e.testFunction,S=b.slice().concat(b.map(E=>"val_"+E))):(v=null,y=[],S=b.slice());let N=n6(r.callbacks,r.yieldEvery);return await lB(e,x,A,b,c,r.epochs,r.verbose,N,v,y,r.shuffle,S,r.initialEpoch,null,null)}finally{e.isTraining=!1,Kr(n,t),Kr(s,a),Kr(i,t),Kr(o,a),Kr(d,l),Kr(p,u),h!=null&&se(h)}}function m6(e){let t=[];e instanceof tt&&(e=[e]);for(let a=0;a<e.length;++a){let r=e[a];if(r.rank===1)t.push(up(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Kr(e,t){if(e==null)return;let a=[];if(t instanceof tt)a.push(t.id);else if(Array.isArray(t))t.forEach(n=>a.push(n.id));else if(t!=null)for(let n in t){let s=t[n];a.push(s.id)}let r=[];if(e instanceof tt)a.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(n=>{a.indexOf(n.id)===-1&&r.push(n)});else if(e!=null)for(let n in e){let s=e[n];a.indexOf(s.id)===-1&&r.push(s)}r.forEach(n=>{n.isDisposed||n.dispose()})}function dB(e){return e instanceof tt}function I1(e){return Array.isArray(e)}function D5(e){return!dB(e)&&!I1(e)}function L5(e,t,a,r=!0,n=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(I1(e)&&e.length>0)i=!0;else if(D5(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new K(`Error when checking model ${n} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(D5(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new K(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(I1(e)){if(e=e,e.length!==t.length)throw new K(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new K(`The model ${n} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=m6(s),a!=null)for(let i=0;i<t.length;++i){if(a[i]==null)continue;let o=s[i];if(o.shape.length!==a[i].length)throw new K(`Error when checking ${n}: expected ${t[i]} to have ${a[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<a[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],d=a[i][l];if(d!=null&&d>=0&&u!==d)throw new K(`${n} expected a batch of elements where each example has shape [${a[i].slice(1,a[i].length)}] (i.e.,tensor shape [*,${a[i].slice(1,a[i].length)}]) but the ${n} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function hB(e,t,a){let r=Ss(e.map(s=>s.shape[0]));r.sort();let n=Ss(t.map(s=>s.shape[0]));if(n.sort(),r.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&n.length>0&&!w.arraysEqual(r,n))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${n[0]} target sample(s).`)}function pB(e,t,a){let r=[Tl,om,Nh];for(let n=0;n<e.length;++n){let s=e[n],i=t[n],o=a[n];if(i!=null){if(i===Nh&&s.shape[s.shape.length-1]===1)throw new K(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),u=o.slice(1);for(let d=0;d<l.length;++d){let p=l[d],h=u[d];if(h!=null&&p!==h)throw new K(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function W5(e,t,a,r=!0,n=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new K(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new K(`The model expects ${t.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(a!=null)for(let i=0;i<t.length;++i){if(a[i]==null)continue;let o=s[i];if(o.shape.length!==a[i].length)throw new K(`Error when checking ${n}: expected ${t[i]} to have ${a[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<a[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],d=a[i][l];if(d!=null&&d!==u)throw new K(`Error when checking ${n}: expected ${t[i]} to have shape ${JSON.stringify(a[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function cB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let a;if(typeof e=="string"||typeof e=="function")a=[e];else if(Array.isArray(e)||typeof e=="object")a=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(a))return t.map(r=>a);{let r=[];for(let n of t){let s=a.hasOwnProperty(n)?a[n]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var fB="layers-model",jn=class extends gn{constructor(e){super(e),this.isTraining=!1}summary(e,t,a=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");KW(this,e,t,a)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=XW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof as))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new K(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(A2(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>A2(s))}else{let s=A2(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let a=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xo("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(a.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=cB(e.metrics,this.outputNames),n=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};xo("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(a.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",u,d,p;for(let h of o){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let f=this.internalOutputShapes[s];f[f.length-1]===1||this.lossFunctions[s]===om?["accuracy","acc"].indexOf(h)!==-1?d=TA:["crossentropy","ce"].indexOf(h)!==-1&&(d=l6):this.lossFunctions[s]===Sf?["accuracy","acc"].indexOf(h)!==-1?d=u6:["crossentropy","ce"].indexOf(h)!==-1&&(d=d6):["accuracy","acc"].indexOf(h)!==-1?d=CA:["crossentropy","ce"].indexOf(h)!==-1&&(d=EA);let m;["accuracy","acc"].indexOf(h)!==-1?m="acc":["crossentropy","ce"].indexOf(h)!==-1&&(m="ce"),p=d,u=l+m}else p=qW(h),u=l+wc(h);let c;xo(u,()=>{c=p}),n(s,u,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,a={}){let r=a.batchSize==null?32:a.batchSize;w1(r);let n=!0,s=this.standardizeUserDataXY(e,t,n,r);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,r,a.verbose,a.steps);return Ga(l)}finally{Kr(s[0],e),Kr(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),oB(this,e,t)}checkNumSamples(e,t,a,r="steps"){let n;if(a!=null){if(n=null,t!=null)throw new K(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?n=e[0].shape[0]:n=e.shape[0];else throw new K(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return n}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new K("`outputs` is an empty Array, which is not allowed.");let a=Array.isArray(t),r=a?t:[t],n=this.retrieveSymbolicTensors(r),s=new fo;if(e instanceof tt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new K(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new K(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=Qd(n,s);return a?i:i[0]}retrieveSymbolicTensors(e){let t=To(null,e.length),a=e.length;for(let r of this.layers){let n=Array.isArray(r.output)?r.output:[r.output],s=n.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=n[o],a--),a===0)break}if(a===0)break}if(a>0){let r=[];throw t.forEach((n,s)=>{n==null&&r.push(e[s])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,a=!1){return Z(()=>{let r=this.checkNumSamples(e);if(a)throw new Ve("Verbose predictLoop() is not implemented yet.");let n=k1(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<n.length;++i)Z(()=>{let o=n[i][0],l=n[i][1],u=eh(e,o,l),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new fo(d);return Qd(this.outputs,p)}).forEach((o,l)=>s[l].push(o));return Ga(s.map(i=>Nt(i,0)))})}predict(e,t={}){let a=m6(e);W5(a,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return w1(r),this.predictLoop(a,r)}finally{Kr(a,e)}}predictOnBatch(e){W5(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,a=!0,r){if(this.optimizer_==null)throw new Qr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let n=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===Sf?n.push(i.slice(0,i.length-1).concat([1])):n.push(i)}if(e=L5(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=L5(t,this.feedOutputNames,n,!1,"target"),hB(e,t,null),pB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,a,r,n=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,n,s);if(a!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let u=p6(r,this.outputNames);l=[];for(let d=0;d<u.length;++d)l.push(await c6(o[d],null,u[d]))}return[i,o,l]}testLoop(e,t,a,r=0,n){return Z(()=>{let s=this.checkNumSamples(t,a,n,"steps"),i=[];if(r>0)throw new Ve("Verbose mode is not implemented yet.");if(n!=null)throw new Ve("steps mode in testLoop() is not implemented yet");{let o=k1(s,a),l=Lt(on(0,s));for(let u=0;u<o.length;++u){let d=o[u][0],p=o[u][1],h=bo(l,d,p-d),c=$A(t,h),f=e(c);if(u===0)for(let m=0;m<f.length;++m)i.push(ke(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=ie(i[m],W(p-d,g))}}for(let u=0;u<i.length;++u)i[u]=me(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let a=0;a<e.length;++a){let r=e[a],n=r;x5(e,r)>1&&(n+=`_${x5(e.slice(0,a),r)}`),t.push(n)}return t}makeTrainFunction(){return e=>{let t=[],a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),n=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let u=[];for(let c=0;c<this.inputs.length;++c)u.push({key:this.inputs[c],value:a[c]});let d=new fo(u),p=Qd(this.outputs,d,{training:!0}),h;for(let c=0;c<this.lossFunctions.length;++c){let f=this.lossFunctions[c](r[c],p[c]);n[c]!=null&&(f=tB(f,n[c]));let m=Pt(f);t.push(m),c===0?h=f:h=ie(h,f)}for(let c=0;c<this.metricsTensors.length;++c){let f;if(this.outputs.length>1&&c<this.outputs.length)f=t[c];else{let m=this.metricsTensors[c][0],g=this.metricsTensors[c][1];f=Pt(m(r[g],p[g]))}ua(f),s.push(f)}return h=Pt(h),this.calculateLosses().forEach(c=>{h=ie(h,c)}),h},o=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Z(()=>{let t=[],a,r=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new fo(s),o=Qd(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],d=Pt(u(n[l],o[l]));l===0?a=d:a=ie(a,d),t.push(a)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],d=this.metricsTensors[l][1],p=Pt(u(n[d],o[d]));t.push(p)}return t})}async fit(e,t,a={}){return uB(this,e,t,a)}async fitDataset(e,t){return nB(this,e,t)}async trainOnBatch(e,t){let a=await this.standardizeUserData(e,t),r=a[0],n=a[1],s=this.makeTrainFunction()(r.concat(n)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return se(s),Kr(a[0],e),Kr(a[1],t),Ga(i)}getNamedWeights(e){let t=[],a=e!=null&&e.trainableOnly,r=a?this.trainableWeights:this.weights,n=this.getWeights(a);for(let s=0;s<r.length;++s)a&&!r[s].trainable||t.push({name:r[s].originalName,tensor:n[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=mf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-mf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Pn(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Pn(t))}else{let t=Object.keys(this.loss);e={};let a=this.loss;for(let r of t)if(typeof a[r]=="string")e[r]=Pn(a[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Pn(wc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Pn(wc(e)));{let e={};for(let t in this.metrics)e[t]=Pn(wc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Th(e.optimizer_config),a=an(t),r;if(typeof e.loss=="string")r=uo(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>uo(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=uo(e.loss[s])}let n;if(Array.isArray(e.metrics))n=e.metrics.map(s=>uo(s));else if(e.metrics!=null){n={};for(let s in e.metrics)n[s]=uo(e.metrics[s])}this.compile({loss:r,metrics:n,optimizer:a})}async save(e,t){if(typeof e=="string"){let i=Ea.getSaveHandlers(e);if(i.length===0)throw new K(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new K(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let a=await Ea.encodeWeights(this.getNamedWeights(t)),r=!1,n=null,s={modelTopology:this.toJSON(n,r),format:fB,generatedBy:`TensorFlow.js tfjs-layers v${RA}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await Ea.encodeWeights(await this.optimizer.getWeights(),i);a.specs.push(...l),a.data=Ea.concatenateArrayBuffers([a.data,o])}return this.userDefinedMetadata!=null&&(z5(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=a.data,s.weightSpecs=a.specs,e.save(s)}setUserDefinedMetadata(e){z5(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};jn.className="Model";oe.registerClass(jn);var g6=class extends jn{};g6.className="Functional";oe.registerClass(g6);async function mB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let a=e.modelTopology;a.model_config!=null&&(a=a.model_config);let r=Th(a),n=an(r,t);if(e.weightsManifest!=null){let s=await Ea.loadWeights(e.weightsManifest,e.pathPrefix,n.weights.map(o=>o.originalName)),i={};for(let o of n.weights)i[o.originalName]=s[o.originalName];n.loadWeights(i),se(s)}return n}async function gB(e,t){if(t==null&&(t={}),typeof e=="string"){let a=Ea.getLoadHandlers(e,t);if(a.length===0)a.push(Ea.browserHTTPRequest(e,t));else if(a.length>1)throw new K(`Found more than one (${a.length}) load handlers for URL '${e}'`);e=a[0]}return yB(e,void 0,t)}async function yB(e,t,a){if(a==null&&(a={}),e.load==null)throw new K("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),n=r.modelTopology;n.model_config!=null&&(n=n.model_config);let s=a.strict==null?!0:a.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=an(Th(n),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new K("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:d}=AB(r.weightData,r.weightSpecs);o.loadWeights(u,s),o.optimizer!=null&&d.length>0&&await o.optimizer.setWeights(d),se(u),se(d.map(p=>p.tensor))}return o}function AB(e,t){let a=Ea.decodeWeights(e,t),r={},n=[];return t.forEach(s=>{s.group==="optimizer"?n.push({name:s.name,tensor:a[s.name]}):r[s.name]=a[s.name]}),{modelWeights:r,optimizerWeights:n}}var S1=class extends jn{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:K0("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new K(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof S1||e instanceof jn,a;if(t){if(a=e,a.outputs.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(a.inputs.length!==1)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=X7({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=a.outputs,this.inputs=a.inputs;else{if(e.inboundNodes.length!==1)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=q7(this.outputs[0])}this.inboundNodes=[],new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:To(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ut(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new jn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,a=console.log){this.built||this.build(),super.summary(e,t,a)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,a={}){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,a)}async evaluateDataset(e,t){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,a={}){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.fit(e,t,a)}async fitDataset(e,t){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,a={},r=!1){let n,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new K("Legacy serialization format not supported yet.");n=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof S1))throw new Ve(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of n){let l=an(o,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let a={};a.className=t.getClassName(),a.config=t.getConfig(),e.push(a)}return{name:this.name,layers:e}}},lm=S1;lm.className="Sequential";oe.registerClass(lm);function xB(e){return new jn(e)}function bB(e){return new lm(e)}function vB(e,t){return t==null&&(t={}),gB(e,t)}function y6(e){return X7(e)}function wB(e,t){SA.registerCallbackConstructor(e,t)}var Za=class extends oe.Serializable{getConfig(){return{}}},A6=class extends Za{apply(e,t=1){return LP(e,t)}};A6.className="elu";oe.registerClass(A6);var x6=class extends Za{apply(e){return Ky(e)}};x6.className="selu";oe.registerClass(x6);var b6=class extends Za{apply(e){return En(e)}};b6.className="relu";oe.registerClass(b6);var v6=class extends Za{apply(e){return Z(()=>np(6,En(e)))}};v6.className="relu6";oe.registerClass(v6);var w6=class extends Za{apply(e){return e}};w6.className="linear";oe.registerClass(w6);var k6=class extends Za{apply(e){return xr(e)}};k6.className="sigmoid";oe.registerClass(k6);var I6=class extends Za{apply(e){return BP(e)}};I6.className="hardSigmoid";oe.registerClass(I6);var S6=class extends Za{apply(e){return pd(e)}};S6.className="softplus";oe.registerClass(S6);var N6=class extends Za{apply(e){return WP(e)}};N6.className="softsign";oe.registerClass(N6);var T6=class extends Za{apply(e){return xu(e)}};T6.className="tanh";oe.registerClass(T6);var FA=class extends Za{apply(e,t=-1){return sp(e,t)}};FA.className="softmax";oe.registerClass(FA);var C6=class extends Za{apply(e,t=-1){return Dy(e,t)}};C6.className="logSoftmax";oe.registerClass(C6);var E6=class extends Za{apply(e,t=1){return Z(()=>W(xr(W(e,t)),e))}};E6.className="swish";oe.registerClass(E6);var R6=class extends Za{apply(e){return Z(()=>W(e,xu(pd(e))))}};R6.className="mish";oe.registerClass(R6);function Ws(e){return e.getClassName()}function x2(e,t={}){return lp(e,oe.SerializationMap.getMap().classNameMap,t,"activation")}function Bs(e){if(e==null){let t={};return t.className="linear",t.config={},x2(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},x2(t)}else return e instanceof Za?e:x2(e)}function MA(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var $6=class extends oe.Serializable{},cp=class extends $6{constructor(e){super(),MA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Z(()=>{let t=Dt([1]);return this.hasL1&&(t=ie(t,we(W(this.l1,Jt(e))))),this.hasL2&&(t=ie(t,we(W(this.l2,dp(e))))),q(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};cp.className="L1L2";oe.registerClass(cp);function kB(e){return MA(e),new cp({l1:e!=null?e.l1:null,l2:0})}function IB(e){return MA(e),new cp({l2:e!=null?e.l2:null,l1:0})}var B5={l1l2:"L1L2"};function mt(e){return uA(e)}function V5(e,t={}){return lp(e,oe.SerializationMap.getMap().classNameMap,t,"regularizer")}function Tt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in B5?B5[e]:e,config:{}};return V5(t)}else return e instanceof $6?e:V5(e)}var _A=class extends et{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ue(e);let a=En(e);return this.maxValue!=null&&(a=lr(a,0,this.maxValue)),a}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};_A.className="ReLU";oe.registerClass(_A);var zA=class extends et{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let a=Ue(e);return N0(a,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};zA.className="LeakyReLU";oe.registerClass(zA);var OA=class extends et{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=St(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Tt(e.alphaRegularizer),this.alphaConstraint=ra(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ut(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let a={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)a[r]=e[r];this.inputSpec=[new jt({ndim:e.length,axes:a})],this.built=!0}call(e,t){return e=Ue(e),_0(e,this.alpha.read())}getConfig(){let e={alphaInitializer:$t(this.alphaInitializer),alphaRegularizer:mt(this.alphaRegularizer),alphaConstraint:aa(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};OA.className="PReLU";oe.registerClass(OA);var PA=class extends et{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ve(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let a=Ue(e);return ap(a)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};PA.className="ELU";oe.registerClass(PA);var DA=class extends et{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let a=Ue(e);return W(a,he(ur(a,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};DA.className="ThresholdedReLU";oe.registerClass(DA);var LA=class extends et{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new FA().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let a=Ue(e);return this.softmax(a,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};LA.className="Softmax";oe.registerClass(LA);function mu(e,t,a){if(typeof e=="number")return To(e,t);if(e.length!==t)throw new K(`The ${a} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let n=e[r];if(!zP(n))throw new K(`The ${a} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${n}`)}return e}function rn(e,t,a,r,n=1){if(e==null)return e;let s=t+(t-1)*(n-1),i;return a==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function xn(e,t,a,r){if(e==null)return null;if(r==="valid")e=e*t+Ls([a-t,0]);else if(r==="same")e=e*t;else throw new K(`Unsupport padding mode: ${r}.`);return e}function WA(e,t){return Z(()=>(Ut(t),t==="channelsFirst"?Je(e,[0,2,3,1]):e))}function F6(e,t){return Z(()=>(Ut(t),t==="channelsFirst"?Je(e,[0,2,3,4,1]):e))}function SB(e,t,a,r=1,n="valid",s,i=1){return Z(()=>{if(s==null&&(s=ln()),Ut(s),e.shape.length!==3)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(a!=null&&a.shape.length!==1)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Je(e,[0,2,1])),n==="causal")throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ry(e,t,r,n==="same"?"same":"valid","NWC",i);return a!=null&&(o=dn(o,a)),o})}function U5(e,t,a,r=[1,1],n="valid",s,i,o=null){return Z(()=>{if(s==null&&(s=ln()),Ut(s),e.rank!==3&&e.rank!==4)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=WA(e,s);if(n==="causal")throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ds.conv2d({x:l,filter:t,strides:r,pad:n==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:a,activation:o}),s==="channelsFirst"&&(l=Je(l,[0,3,1,2])),l})}function NB(e,t,a,r=[1,1,1],n="valid",s,i){return Z(()=>{if(s==null&&(s=ln()),Ut(s),e.rank!==4&&e.rank!==5)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=F6(e,s);if(n==="causal")throw new Ve("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=My(o,t,r,n==="same"?"same":"valid","NDHWC",i),a!=null&&(o=dn(o,a)),s==="channelsFirst"&&(o=Je(o,[0,4,1,2,3])),o})}var BA=class extends et{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BA.verifyArgs(t),this.rank=e,da(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ve(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=mu(t.kernelSize,e,"kernelSize"),this.strides=mu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Tr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ut(this.dataFormat),this.activation=Bs(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=St(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ra(t.biasConstraint),this.biasRegularizer=Tt(t.biasRegularizer),this.activityRegularizer=Tt(t.activityRegularizer),this.dilationRate=mu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(An("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!dA(e.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ws(this.activation),useBias:this.useBias,biasInitializer:$t(this.biasInitializer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),biasConstraint:aa(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},fp=class extends BA{constructor(e,t){super(e,t),this.kernel=null,fp.verifyArgs(t),this.filters=t.filters,da(this.filters,"filters"),this.kernelInitializer=St(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ra(t.kernelConstraint),this.kernelRegularizer=Tt(t.kernelRegularizer)}build(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K(`The channel dimension of the input should be defined. Found ${e[t]}`);let a=e[t],r=this.kernelSize.concat([a,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:a}}],this.built=!0}call(e,t){return Z(()=>{e=Ue(e);let a,r=this.bias==null?null:this.bias.read(),n=D7(this.activation.getClassName());if(n!=null&&this.rank===2)a=U5(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,n);else{if(this.rank===1)a=SB(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)a=U5(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)a=NB(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ve("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(a=this.activation.apply(a))}return a})}computeOutputShape(e){e=ut(e);let t=[],a=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let n=0;n<a.length;++n){let s=rn(a[n],this.kernelSize[n],this.padding,this.strides[n],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[n]);t.push(s)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:$t(this.kernelInitializer),kernelRegularizer:mt(this.kernelRegularizer),kernelConstraint:aa(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},M6=class extends fp{constructor(e){super(2,e),M6.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!dA(e.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},um=M6;um.className="Conv2D";oe.registerClass(um);var _6=class extends fp{constructor(e){super(3,e),_6.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},dm=_6;dm.className="Conv3D";oe.registerClass(dm);var VA=class extends um{constructor(e){if(super(e),this.inputSpec=[new jt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ut(e),e.length!==4)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");let a=e[t],r=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jt({ndim:4,axes:{[t]:a}})],this.built=!0}call(e,t){return Z(()=>{let a=Ue(e);if(a.shape.length!==4)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let r=a.shape,n=r[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=r[s],l=r[i],u=this.kernelSize[0],d=this.kernelSize[1],p=this.strides[0],h=this.strides[1],c=xn(o,p,u,this.padding),f=xn(l,h,d,this.padding),m=[n,c,f,this.filters];this.dataFormat!=="channelsLast"&&(a=Je(a,[0,2,3,1]));let g=Fy(a,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Je(g,[0,3,1,2])),this.bias!=null&&(g=dn(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ut(e);let t=e.slice(),a,r,n;this.dataFormat==="channelsFirst"?(a=1,r=2,n=3):(a=3,r=1,n=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[a]=this.filters,t[r]=xn(t[r],o,s,this.padding),t[n]=xn(t[n],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};VA.className="Conv2DTranspose";oe.registerClass(VA);var UA=class extends dm{constructor(e){if(super(e),this.inputSpec=[new jt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ut(e),e.length!==5)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");let a=e[t],r=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jt({ndim:5,axes:{[t]:a}})],this.built=!0}call(e,t){return Z(()=>{let a=Ue(e);if(a.shape.length!==5)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let r=a.shape,n=r[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let l=r[o],u=r[s],d=r[i],p=this.kernelSize[0],h=this.kernelSize[1],c=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=xn(l,f,p,this.padding),A=xn(u,m,h,this.padding),x=xn(d,g,c,this.padding),b=[n,y,A,x,this.filters];this.dataFormat!=="channelsLast"&&(a=Je(a,[0,2,3,4,1]));let v=Vk(a,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=Je(v,[0,4,1,2,3])),this.bias!==null&&(v=dn(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=ut(e);let t=e.slice(),a,r,n,s;this.dataFormat==="channelsFirst"?(a=1,r=2,n=3,s=4):(a=4,r=1,n=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],d=this.strides[1],p=this.strides[2];return t[a]=this.filters,t[r]=xn(t[r],u,i,this.padding),t[n]=xn(t[n],d,o,this.padding),t[s]=xn(t[s],p,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};UA.className="Conv3DTranspose";oe.registerClass(UA);var z6=class extends fp{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=St(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Tt(t.depthwiseRegularizer),this.depthwiseConstraint=ra(t.depthwiseConstraint),this.pointwiseInitializer=St(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Tt(t.pointwiseRegularizer),this.pointwiseConstraint=ra(t.pointwiseConstraint)}build(e){if(e=ut(e),e.length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let a=e[t],r=this.kernelSize.concat([a,this.depthMultiplier]),n=[];for(let i=0;i<this.rank;++i)n.push(1);n.push(a*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",n,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new jt({ndim:this.rank+2,axes:{[t]:a}})],this.built=!0}call(e,t){return Z(()=>{e=Ue(e);let a;if(this.rank===1)throw new Ve("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Je(e,[0,2,3,1])),a=u7(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(a=dn(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),this.dataFormat==="channelsFirst"&&(a=Je(a,[0,3,1,2])),a})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=$t(this.depthwiseInitializer),e.pointwiseInitializer=$t(this.pointwiseInitializer),e.depthwiseRegularizer=mt(this.depthwiseRegularizer),e.pointwiseRegularizer=mt(this.pointwiseRegularizer),e.depthwiseConstraint=aa(this.depthwiseConstraint),e.pointwiseConstraint=aa(this.pointwiseConstraint),e}};z6.className="SeparableConv";var GA=class extends z6{constructor(e){super(2,e)}};GA.className="SeparableConv2D";oe.registerClass(GA);var O6=class extends fp{constructor(e){super(1,e),O6.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!dA(e.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},jA=O6;jA.className="Conv1D";oe.registerClass(jA);var HA=class extends et{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Z(()=>{if(e=Ue(e),this.dataFormat==="channelsLast"){let a=vc(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vc(a,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let a=vc(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vc(a,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};HA.className="Cropping2D";oe.registerClass(HA);var qA=class extends et{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,FP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],a=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,a]}else{let t=e[1]==null?null:this.size[0]*e[1],a=e[2]==null?null:this.size[1]*e[2];return[e[0],t,a,e[3]]}}call(e,t){return Z(()=>{let a=Ue(e),r=a.shape;if(this.dataFormat==="channelsFirst"){a=Je(a,[0,2,3,1]);let n=this.size[0]*r[2],s=this.size[1]*r[3],i=this.interpolation==="nearest"?De.resizeNearestNeighbor(a,[n,s]):De.resizeBilinear(a,[n,s]);return Je(i,[0,3,1,2])}else{let n=this.size[0]*r[1],s=this.size[1]*r[2];return this.interpolation==="nearest"?De.resizeNearestNeighbor(a,[n,s]):De.resizeBilinear(a,[n,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};qA.className="UpSampling2D";oe.registerClass(qA);function TB(e,t,a=[1,1],r="valid",n,s){return Z(()=>{n==null&&(n=ln()),Ut(n);let i=WA(e,n);if(e.rank!==4)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=tp(i,t,a,r==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(i=Je(i,[0,3,1,2])),i})}var XA=class extends BA{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=St(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ra(e.depthwiseConstraint),this.depthwiseRegularizer=Tt(e.depthwiseRegularizer)}build(e){if(e=ut(e),e.length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let a=e[t],r=[this.kernelSize[0],this.kernelSize[1],a,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[a*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{e=Ue(e);let a=TB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(a=dn(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),a})}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],a=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,n=rn(t,this.kernelSize[0],this.padding,this.strides[0]),s=rn(a,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,n,s]:[e[0],n,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=$t(this.depthwiseInitializer),e.depthwiseRegularizer=mt(this.depthwiseRegularizer),e.depthwiseConstraint=aa(this.depthwiseRegularizer),e}};XA.className="DepthwiseConv2D";oe.registerClass(XA);function P6(e,t,a,r){if(Array.isArray(e)){if(t!=null||a!=null)throw new K("When inputs is an array, neither initialState or constants should be provided");r!=null&&(a=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return t=n(t),a=n(a),{inputs:e,initialState:t,constants:a}}function D6(e,t,a,r=!1,n,s,i=!1,o=!1){return Z(()=>{let l=t.shape.length;if(l<3)throw new K(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(on(2,l));if(t=Je(t,u),s!=null)throw new Ve("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=he(he(n,"bool"),"float32"),n.rank===l-1&&(n=la(n,-1)),n=Je(n,u)),r&&(t=Ir(t,0),n!=null&&(n=Ir(n,0)));let d=[],p,h=a,c=t.shape[0],f=Sr(t),m;n!=null&&(m=Sr(n));for(let y=0;y<c;++y){let A=f[y],x=Z(()=>e(A,h));if(n==null)p=x[0],h=x[1];else{let b=Z(()=>{let v=m[y],S=ce(kr(v),v),N=ie(W(x[0],v),W(h[0],S)),E=h.map((R,P)=>ie(W(x[1][P],v),W(R,S)));return{output:N,newStates:E}});p=b.output,h=b.newStates}o&&d.push(p)}let g;return o&&(g=_a(d,1)),[p,g,h]})}var L6=class extends et{constructor(e){super(e);let t;if(e.cell==null)throw new K("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new cm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new jt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return on(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){A1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let a=t[0],r;if(this.returnSequences?r=[e[0],e[1],a]:r=[e[0],a],this.returnState){let n=[];for(let s of t)n.push([e[0],s]);return[r].concat(n)}else return r}computeMask(e,t){return Z(()=>{Array.isArray(t)&&(t=t[0]);let a=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(n=>null);return[a].concat(r)}else return a})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let a=0;a<e;++a)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ve("Constants support is not implemented in RNN yet.");A1(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new jt({shape:[t,null,...a]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let n;if(Array.isArray(this.cell.stateSize)?n=this.cell.stateSize:n=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),n))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=n.map(s=>new jt({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Z(()=>{if(!this.stateful)throw new On("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape[0];if(a==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Dt([a,r])):this.states_=[Dt([a,this.cell.stateSize])];else if(e==null)se(this.states_),this.keptStates!=null&&(se(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Dt([a,r])):this.states_[0]=Dt([a,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):se(this.states_);for(let r=0;r<this.states_.length;++r){let n=e[r],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[a,s];if(!w.arraysEqual(n.shape,i))throw new K(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${n.shape}`);this.states_[r]=n}}this.states_=this.states_.map(r=>ua(r.clone()))})}apply(e,t){let a=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let n=P6(e,a,r,this.numConstants);e=n.inputs,a=n.initialState,r=n.constants;let s=[],i=[];if(a!=null){t.initialState=a,s=s.concat(a),this.stateSpec=[];for(let o of a)this.stateSpec.push(new jt({shape:o.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof en){let o=[e].concat(s),l=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=l;let d=super.apply(o,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return Z(()=>{let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;e=Ue(e),n==null&&(this.stateful?n=this.states_:n=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(n.length!==s)throw new K(`RNN Layer has ${s} state(s) but was passed ${n.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=D6((h,c)=>{let f=this.cell.call([h].concat(c),i);return[f[0],f.slice(1)]},e,n,this.goBackwards,a,null,this.unroll,this.returnSequences),l=o[0],u=o[1],d=o[2];this.stateful&&this.resetStates(d,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(d):p})}getInitialState(e){return Z(()=>{let t=Dt(e.shape);return t=we(t,[1,2]),t=up(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>a>1?g1(t,[1,a]):t):this.cell.stateSize>1?[g1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let a=this.cell.getConfig();return this.getClassName()===L6.className&&(t.cell={className:this.cell.getClassName(),config:a}),{...a,...e,...t}}static fromConfig(e,t,a={}){let r=t.cell,n=an(r,a);return new e(Object.assign(t,{cell:n}))}},rs=L6;rs.className="RNN";oe.registerClass(rs);var mp=class extends et{},hm=class extends mp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,da(this.units,"units"),this.activation=Bs(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Tt(e.kernelRegularizer),this.recurrentRegularizer=Tt(e.recurrentRegularizer),this.biasRegularizer=Tt(e.biasRegularizer),this.kernelConstraint=ra(e.kernelConstraint),this.recurrentConstraint=ra(e.recurrentConstraint),this.biasConstraint=ra(e.biasConstraint),this.dropout=Nu([1,Ls([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Nu([1,Ls([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{if(e=e,e.length!==2)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let a=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>kr(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>kr(a),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let n,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?n=wn(W(e,s),this.kernel.read()):n=wn(e,this.kernel.read()),this.bias!=null&&(n=dn(n,this.bias.read())),i!=null&&(a=W(a,i));let o=ie(n,wn(a,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ws(this.activation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:aa(this.kernelConstraint),recurrentConstraint:aa(this.recurrentConstraint),biasConstraint:aa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};hm.className="SimpleRNNCell";oe.registerClass(hm);var KA=class extends rs{constructor(e){e.cell=new hm(e),super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}static fromConfig(e,t){return new e(t)}};KA.className="SimpleRNN";oe.registerClass(KA);var pm=class extends mp{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=e.units,da(this.units,"units"),this.activation=Bs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Tt(e.kernelRegularizer),this.recurrentRegularizer=Tt(e.recurrentRegularizer),this.biasRegularizer=Tt(e.biasRegularizer),this.kernelConstraint=ra(e.kernelConstraint),this.recurrentConstraint=ra(e.recurrentConstraint),this.biasConstraint=ra(e.biasConstraint),this.dropout=Nu([1,Ls([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Nu([1,Ls([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{if(e=e,e.length!==2)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let a=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>kr(e),rate:this.dropout,training:a,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>kr(r),rate:this.recurrentDropout,training:a,count:3,dropoutFunc:this.dropoutFunc}));let n=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=W(e,n[0]));let u=wn(e,this.kernel.read());this.useBias&&(u=dn(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=W(r,s[0]));let d=this.recurrentKernel.read(),[p,h]=xa(d,[2*this.units,this.units],d.rank-1),c=wn(r,p),[f,m,g]=xa(u,3,u.rank-1),[y,A]=xa(c,2,c.rank-1);i=this.recurrentActivation.apply(ie(f,y)),o=this.recurrentActivation.apply(ie(m,A));let x=wn(W(o,r),h);l=this.activation.apply(ie(g,x));let b=ie(W(i,r),W(ie(1,Mt(i)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ws(this.activation),recurrentActivation:Ws(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:aa(this.kernelConstraint),recurrentConstraint:aa(this.recurrentConstraint),biasConstraint:aa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};pm.className="GRUCell";oe.registerClass(pm);var ZA=class extends rs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pm(e),super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ZA.className="GRU";oe.registerClass(ZA);var gp=class extends mp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,da(this.units,"units"),this.activation=Bs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Tt(e.kernelRegularizer),this.recurrentRegularizer=Tt(e.recurrentRegularizer),this.biasRegularizer=Tt(e.biasRegularizer),this.kernelConstraint=ra(e.kernelConstraint),this.recurrentConstraint=ra(e.recurrentConstraint),this.biasConstraint=ra(e.biasConstraint),this.dropout=Nu([1,Ls([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Nu([1,Ls([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ut(e);let a=e[e.length-1];this.kernel=this.addWeight("kernel",[a,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let n=this.biasInitializer,s=this.units;r=new(t=class extends Pr{apply(i,o){let l=n.apply([s]),u=new J0().apply([s]),d=n.apply([s*2]);return v5(v5(l,u),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Z(()=>{let a=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],n=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>kr(e),rate:this.dropout,training:a,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>kr(r),rate:this.recurrentDropout,training:a,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,u,d;0<this.dropout&&this.dropout<1&&(e=W(e,s[0]));let p=wn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=W(r,i[0])),p=ie(p,wn(r,this.recurrentKernel.read())),this.useBias&&(p=dn(p,this.bias.read()));let[h,c,f,m]=xa(p,4,p.rank-1);o=this.recurrentActivation.apply(h),l=this.recurrentActivation.apply(c),u=ie(W(l,n),W(o,this.activation.apply(f))),d=this.recurrentActivation.apply(m);let g=W(d,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ws(this.activation),recurrentActivation:Ws(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:aa(this.kernelConstraint),recurrentConstraint:aa(this.recurrentConstraint),biasConstraint:aa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};gp.className="LSTMCell";oe.registerClass(gp);var YA=class extends rs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gp(e),super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};YA.className="LSTM";oe.registerClass(YA);var cm=class extends mp{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Z(()=>{e=e;let a=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(a.splice(0,i.stateSize.length)):r.push(a.splice(0,1));r.reverse();let n=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];a=r[i],i===0?s=[e[0]].concat(a):s=[s[0]].concat(a),s=o.call(s,t),n.push(s.slice(1))}a=[];for(let i of n.slice().reverse())a.push(...i);return[s[0]].concat(a)})}build(e){A1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((a,r)=>{xo(`RNNCell_${r}`,()=>{a.build(e),Array.isArray(a.stateSize)?t=a.stateSize[0]:t=a.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(t)};return{...e,...a}}static fromConfig(e,t,a={}){let r=[];for(let n of t.cells)r.push(an(n,a));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let a of this.cells)t.push(...a.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return x1(e)}setWeights(e){let t=[];for(let a of this.cells){let r=a.weights.length,n=e.splice(r);for(let s=0;s<a.weights.length;++s)t.push([a.weights[s],n[s]])}xA(t)}};cm.className="StackedRNNCells";oe.registerClass(cm);function Vs(e){let{ones:t,rate:a,training:r=!1,count:n=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),a):j7(t(),a),o=()=>hp(i,t,r);return!n||n<=1?ua(o().clone()):Array(n).fill(void 0).map(o).map(l=>ua(l.clone()))}var W6=class extends rs{constructor(e){if(e.unroll)throw new Ve("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ve("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new jt({ndim:5})]}call(e,t){return Z(()=>{if(this.cell.dropoutMask!=null&&(se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new K("ConvRNN2D cell does not support constants");let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Z(()=>{let{stateSize:t}=this.cell,a=e.shape,r=this.computeSingleOutputShape(a),n=[r[0],...r.slice(2)],s=Dt(n);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){Z(()=>{if(!this.stateful)throw new On("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape,r=this.computeSingleOutputShape(a),n=[r[0],...r.slice(2)];if(a[0]==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Dt(n)):this.states_=[Dt(n)];else if(e==null)se(this.states_),this.keptStates!=null&&(se(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Dt(n)):this.states_[0]=Dt(n);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):se(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=n;if(!w.arraysEqual(i.shape,o))throw new K(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>ua(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:a,kernelSize:r,padding:n,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],u=e[o?4:3],d=rn(l,r[0],n,s[0],i[0]),p=rn(u,r[1],n,s[1],i[1]);return[...e.slice(0,2),...o?[a,d,p]:[d,p,a]]}};W6.className="ConvRNN2D";var fm=class extends gp{constructor(e){let{filters:t,kernelSize:a,strides:r,padding:n,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,da(this.filters,"filters"),this.kernelSize=mu(a,2,"kernelSize"),this.kernelSize.forEach(o=>da(o,"kernelSize")),this.strides=mu(r||1,2,"strides"),this.strides.forEach(o=>da(o,"strides")),this.padding=n||"valid",Tr(this.padding),this.dataFormat=s||"channelsLast",Ut(this.dataFormat),this.dilationRate=mu(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>da(o,"dilationRate"))}build(e){var t;e=ut(e);let a=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[a]==null)throw new K(`The channel dimension of the input should be defined. Found ${e[a]}`);let r=e[a],n=4,s=this.kernelSize.concat([r,this.filters*n]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*n]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;o=new(t=class extends Pr{apply(d,p){let h=l.apply([u]),c=or([u]),f=l.apply([u*2]);return hA([h,c,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*n],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Z(()=>{if(e.length!==3)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=t.training||!1,r=e[0],n=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>kr(r),rate:this.dropout,training:a,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(G,ee,Q)=>!ee||!ee[Q]?G:W(ee[Q],G),u=l(r,o,0),d=l(r,o,1),p=l(r,o,2),h=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>kr(n),rate:this.recurrentDropout,training:a,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(n,c,0),m=l(n,c,1),g=l(n,c,2),y=l(n,c,3),A=3,[x,b,v,S]=xa(this.kernel.read(),i,A),[N,E,R,P]=this.useBias?xa(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,N,this.padding),d=this.inputConv(d,b,E,this.padding),p=this.inputConv(p,v,R,this.padding),h=this.inputConv(h,S,P,this.padding);let[$,k,_,z]=xa(this.recurrentKernel.read(),i,A);f=this.recurrentConv(f,$),m=this.recurrentConv(m,k),g=this.recurrentConv(g,_),y=this.recurrentConv(y,z);let L=this.recurrentActivation.apply(ie(u,f)),j=this.recurrentActivation.apply(ie(d,m)),D=ie(W(j,s),W(L,this.activation.apply(ie(p,g)))),B=W(this.recurrentActivation.apply(ie(h,y)),this.activation.apply(D));return[B,B,D]})}getConfig(){let{units:e,...t}=super.getConfig(),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...a}}inputConv(e,t,a,r){let n=Os(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return a?dn(n,a,this.dataFormat):n}recurrentConv(e,t){return Os(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};fm.className="ConvLSTM2DCell";oe.registerClass(fm);var JA=class extends W6{constructor(e){let t=new fm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};JA.className="ConvLSTM2D";oe.registerClass(JA);var mm=class extends et{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,a=[];for(let r=0;r<this.noiseShape.length;++r)a.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return a}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,n=this.getNoiseShape(a);return hp(()=>j7(a,this.rate,n,this.seed),()=>a,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};mm.className="Dropout";oe.registerClass(mm);var QA=class extends mm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};QA.className="SpatialDropout1D";oe.registerClass(QA);var ex=class extends et{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,da(this.units,"units"),this.activation=Bs(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ra(e.kernelConstraint),this.biasConstraint=ra(e.biasConstraint),this.kernelRegularizer=Tt(e.kernelRegularizer),this.biasRegularizer=Tt(e.biasRegularizer),this.activityRegularizer=Tt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ut(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ut(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e),r=D7(this.activation.getClassName()),n;return r!=null?n=wn(a,this.kernel.read(),r,this.bias?this.bias.read():null):(n=wn(a,this.kernel.read()),this.bias!=null&&(n=dn(n,this.bias.read())),this.activation!=null&&(n=this.activation.apply(n))),n})}getConfig(){let e={units:this.units,activation:Ws(this.activation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:aa(this.kernelConstraint),biasConstraint:aa(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ex.className="Dense";oe.registerClass(ex);var tx=class extends et{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ut(e);for(let t of e.slice(1))if(t==null)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ns(e,1)]}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e);if(this.dataFormat==="channelsFirst"&&a.rank>1){let r=[0];for(let n=2;n<a.rank;++n)r.push(n);r.push(1),a=Je(a,r)}return DP(a)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};tx.className="Flatten";oe.registerClass(tx);var ax=class extends et{constructor(e){super(e),this.supportsMasking=!0,this.activation=Bs(e.activation)}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e);return this.activation.apply(a)})}getConfig(){let e={activation:Ws(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};ax.className="Activation";oe.registerClass(ax);var rx=class extends et{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Z(()=>(e=Ue(e),OP(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};rx.className="RepeatVector";oe.registerClass(rx);var nx=class extends et{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let a="Total size of new array must be unchanged.",r=t.slice(),n=1,s=null;for(let o=0;o<r.length;++o){let l=r[o];if(this.isUnknown(l))if(s===null)s=o;else throw new K("Can only specifiy one unknown dimension.");else n*=l}let i=Ns(e);if(s!==null){if(n===0||i%n!==0)throw new K(a);r[s]=i/n}else if(i!==n)throw new K(a);return r}computeOutputShape(e){let t=!1;for(let a=0;a<e.length;++a)if(this.isUnknown(e[a])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e),r=a.shape,n=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return q(a,n)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};nx.className="Reshape";oe.registerClass(nx);var sx=class extends et{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=on(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new jt({ndim:this.dims.length+1})]}computeOutputShape(e){e=ut(e);let t=e.slice();return this.dims.forEach((a,r)=>{t[r+1]=e[a]}),t}call(e,t){return Je(Ue(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};sx.className="Permute";oe.registerClass(sx);var ix=class extends et{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let a=Ue(e),r=-1;return yf(wu(a,this.maskValue),r)}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e),r=-1,n=!0,s=yf(wu(a,this.maskValue),r,n);return W(a,he(s,a.dtype))})}};ix.className="Masking";oe.registerClass(ix);var ox=class extends et{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(wt(e.inputLength))}this.inputDim=e.inputDim,da(this.inputDim,"inputDim"),this.outputDim=e.outputDim,da(this.outputDim,"outputDim"),this.embeddingsInitializer=St(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Tt(e.embeddingsRegularizer),this.activityRegularizer=Tt(e.activityRegularizer),this.embeddingsConstraint=ra(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Z(()=>this.maskZero?(e=Ue(e),wu(e,Qe(e))):null)}computeOutputShape(e){if(e=ut(e),this.inputLength==null)return[...e,this.outputDim];let t=wt(this.inputLength);if(t.length!==e.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let a=0;for(let r=0;r<t.length;++r){let n=t[r],s=e[r+1];if(n!=null&&s!=null&&n!==s)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);n==null&&(t[a]=s),a++}}return[e[0],...t,this.outputDim]}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e);a.dtype!=="int32"&&(a=Z0(a,"int32"));let r=G7(this.embeddings.read(),q(a,[a.size]));return q(r,ut(this.computeOutputShape(a.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:$t(this.embeddingsInitializer),embeddingsRegularizer:mt(this.embeddingsRegularizer),activityRegularizer:mt(this.activityRegularizer),embeddingsConstraint:aa(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};ox.className="Embedding";oe.registerClass(ox);var Cl=class extends et{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ve}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let a=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let n=e[e.length-t.length+r],s=t[r];if(n==null||s==null||n<0||s<0)a.push(null);else if(n===1)a.push(s);else if(s===1)a.push(n);else{if(n!==s)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));a.push(n)}}return a}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ut(e)]),e=e,e.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)n!=null&&n[0]!==null&&t.push(n[0]);if(t=Ss(t),t.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let a=e[0]==null?null:e[0].slice(1);for(let n=1;n<e.length;++n){let s=e[n]==null?null:e[n].slice(1);a=this.computeElementwiseOpOutputShape(a,s)}let r=e.map(n=>n.length);e.indexOf(null)===-1&&Ss(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Z(()=>{if(e=e,this.reshapeRequired){let a=[],r=e.map(n=>n.rank);if(r.indexOf(null)===-1){let n=Ls(r);for(let s of e){let i=s.rank;for(let o=0;o<n-i;++o)s=up(s,1);a.push(s)}return this.mergeFunction(a)}else{let n=!1;for(let o of e){let l=o.rank;if(l==null){let u=o.shape,d=u[0],p=u.slice(1).concat([d]),h=q(o,[d].concat(Ns(u.slice(1))));h=Je(h,[1,0]),h=q(h,p),a.push(h),n=!0}else if(l>1){let u=on(1,l).concat([0]);a.push(Je(o,u)),n=!0}else a.push(o)}let s=this.mergeFunction(a),i=s.rank;if(n){if(i==null){let o=s.shape,l=o.length,u=o[l-1],d=[u].concat(o.slice(0,o.length-1));s=q(Je(q(s,[-1,u]),[1,0]),d)}else if(i>1){let o=[i-1].concat(on(0,i-1));s=Je(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let n=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let a=[];for(let r of e)r!=null&&r[0]!==null&&a.push(r[0]);return a=Ss(a),a.length===1?t=a.concat(t):t=[null].concat(t),t}computeMask(e,t){return Z(()=>{if(t==null)return null;if(!Array.isArray(t))throw new K("`mask` should be an Array");if(!Array.isArray(e))throw new K("`inputs` should be an Array");if(t.length!==e.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:la(r,0));let a=t[0];for(let r=1;r<t.length-1;++r)a=sn(a,t[r]);return a})}},lx=class extends Cl{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=ie(t,e[a]);return t})}};lx.className="Add";oe.registerClass(lx);var ux=class extends Cl{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=W(t,e[a]);return t})}};ux.className="Multiply";oe.registerClass(ux);var dx=class extends Cl{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=ie(t,e[a]);return W(1/e.length,t)})}};dx.className="Average";oe.registerClass(dx);var hx=class extends Cl{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0];for(let a=1;a<e.length;++a)t=es(t,e[a]);return t})}};hx.className="Maximum";oe.registerClass(hx);var px=class extends Cl{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0];for(let a=1;a<e.length;++a)t=np(t,e[a]);return t})}};px.className="Minimum";oe.registerClass(px);var cx=class extends Cl{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let a=[];for(let r=0;r<e.length;++r){let n=e[r].slice();n.splice(this.axis,1);let s=!1;for(let i of a)if(w.arraysEqual(i,n)){s=!0;break}s||a.push(n)}if(a.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Z(()=>hA(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new K("A `Concatenate` layer should be called on a list of inputs.");let t=e,a=t[0].slice(),r=this.axis<0?a.length+this.axis:this.axis;for(let n of t.slice(1)){if(a[r]==null||n[r]==null){a[r]=null;break}a[r]+=n[r]}return a}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new K("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new K(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Z(()=>{let a=!0;if(t.forEach(s=>{if(s!=null){a=!1;return}}),a)return null;let r=[];for(let s=0;s<e.length;++s)t[s]==null?r.push(he(kr(e[s]),"bool")):t[s].rank<e[s].rank?r.push(la(t[s],-1)):r.push(t[s]);let n=Nt(r,this.axis);return Ny(n,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};cx.className="Concatenate";oe.registerClass(cx);function qd(e,t){for(;e<0;)e+=t;return e}function CB(e,t,a){if(e.shape.length>3||t.shape.length>3)throw new Ve("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof a=="number"&&(a=[a,a]),e.dtype==="complex64"||t.dtype==="complex64")throw new Ve("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,n=t.shape.length;a==null&&(a=[r-1,n-2]);let s=a;return Z(()=>{let i;if(r>n){i=r-n;let l=[];for(let u=0;u<i;++u)l.push(1);t=q(t,t.shape.concat(l))}else if(n>r){i=n-r;let l=[];for(let u=0;u<i;++u)l.push(1);e=q(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=we(W(e,t),s[0]):o=we(W(Je(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,u=s[1]===t.shape.length-1;o=Ze(e,t,l,u)}if(i>0){let l;r>n?l=r+n-3:l=r-1;let u=[];for(let d=l;d<l+i;++d)u.push(d);o=ft(o,u)}return o.shape.length===1&&(o=la(o,1)),o})}var fx=class extends Cl{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],a=e[1];if(t.length>3||a.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,a);if(t[r[0]]!==a[r[1]])throw new K(`Dimension incompatibility: ${t[r[0]]} !== ${a[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],a=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((n,s)=>qd(n,e[s].shape.length)):r=[qd(this.axes,t.shape.length),qd(this.axes,a.shape.length)],this.normalize&&(t=If(t,r[0]),a=If(a,r[1])),CB(t,a,r)}interpretAxes(e,t){let a;return Array.isArray(this.axes)?a=this.axes:a=[qd(this.axes,e.length),qd(this.axes,t.length)],a}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),a=e[1].slice();if(t.length>3||a.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,a);t.splice(r[0],1),a.splice(r[1],1),a.splice(0,1);let n=t.concat(a);return n.length===1&&n.push(1),n}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};fx.className="Dot";oe.registerClass(fx);var mx=class extends et{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e);return hp(()=>ie(Y0(a.shape,0,this.stddev),a),()=>a,t.training||!1)})}};mx.className="GaussianNoise";oe.registerClass(mx);var gx=class extends et{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Ue(e);return this.rate>0&&this.rate<1?hp(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return W(a,Y0(a.shape,1,r))},()=>a,t.training||!1):a})}};gx.className="GaussianDropout";oe.registerClass(gx);var yx=class extends et{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ue(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Z(()=>{if(this.rate<1&&this.rate>0){let a=this._getNoiseShape(e);return hp(()=>{let r=Ue(e),n=1.6732632423543772,s=1.0507009873554805,i=-n*s,o=Il(cd(a),this.rate);o=Z0(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-l*i*this.rate,d=ie(W(r,o),W(ie(o,-1),i));return ie(W(d,l),u)},()=>Ue(e),t.training||!1)}return e})}};yx.className="AlphaDropout";oe.registerClass(yx);function Ch(e,t,a,r,n,s=.001){let i;if(e.rank===2)i=Mk(e,t,a,r,n,s);else if(e.rank===3)i=_k(e,t,a,r,n,s);else if(e.rank===4)i=zk(e,t,a,r,n,s);else throw new Ve(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function EB(e,t,a,r,n=.001){return Z(()=>{let s=F0(e,r),i=s.mean,o=s.variance;return[Ch(e,i,o,a,t,n),i,o]})}function RB(e,t,a,r,n=.001){return Z(()=>{let s=F0(e,r),i=s.mean,o=s.variance,l=[];for(let c of on(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let u=q(i,l),d=q(o,l),p=t==null?null:q(t,l),h=a==null?null:q(a,l);return[Ch(e,u,d,h,p,n),i,o]})}function $B(e,t,a,r,n=.001){return w.arraysEqual(r.slice().sort(),on(0,e.rank-1))?EB(e,t,a,r,n):RB(e,t,a,r,n)}var Ax=class extends et{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.movingMeanInitializer=St(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=St(e.movingVarianceInitializer||"ones"),this.betaConstraint=ra(e.betaConstraint),this.gammaConstraint=ra(e.gammaConstraint),this.betaRegularizer=Tt(e.betaRegularizer),this.gammaRegularizer=Tt(e.gammaRegularizer)}build(e){e=ut(e);let t=this.axis>=0?this.axis:this.axis+e.length,a=e[t];if(a==null)throw new K(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new jt({ndim:e.length,axes:{[t]:a}})];let r=[a];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Z(()=>{let a=t.training==null?!1:t.training,r=Ue(e),n=r.shape,s=n.length,i=on(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=To(1,s);l[o]=n[o];let u=i.slice();u.sort();let d=!w.arraysEqual(u,on(0,s).slice(0,s-1)),p=()=>{if(d){let g=q(this.movingMean.read(),l),y=q(this.movingVariance.read(),l),A=this.center?q(this.beta.read(),l):null,x=this.scale?q(this.gamma.read(),l):null;return Ch(r,g,y,A,x,this.epsilon)}else return Ch(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!a)return p();let[h,c,f]=$B(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(g,y,A)=>{Z(()=>{let x=1-A,b=g.read(),v=W(ce(b,y),x);g.write(ce(b,v))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),h})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$t(this.betaInitializer),gammaInitializer:$t(this.gammaInitializer),movingMeanInitializer:$t(this.movingMeanInitializer),movingVarianceInitializer:$t(this.movingVarianceInitializer),betaRegularizer:mt(this.betaRegularizer),gammaRegularizer:mt(this.gammaRegularizer),betaConstraint:aa(this.betaConstraint),gammaConstraint:aa(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ax.className="BatchNormalization";oe.registerClass(Ax);var xx=class extends et{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.betaRegularizer=Tt(e.betaRegularizer),this.gammaRegularizer=Tt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ut(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let n=0;n<this.axis.length;++n)this.axis[n]<0&&(this.axis[n]+=t);for(let n of this.axis)if(n<0||n>=t)throw new Error(`Invalid axis: ${n}`);if(this.axis.length!==Ss(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let a=this.axis.map(n=>e[n]),r=!0;this.scale?this.gamma=this.addWeight("gamma",a,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",a,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let a=Ue(e),r=a.shape,n=r.length;return Z(()=>{let{mean:s,variance:i}=F0(a,this.axis,!0),o=To(1,n);for(let c of this.axis)o[c]=r[c];let l=c=>c!=null&&c.shape.length!==n?q(c,o):c,u=l(this.gamma.read()),d=l(this.beta.read()),p=[],h=[];for(let c=0;c<n;++c)this.axis.indexOf(c)!==-1?(p.push(r[c]),h.push(1)):(p.push(1),h.push(r[c]));return s=Mr(s,p),i=Mr(i,p),u=Mr(u,h),d=Mr(d,h),Ch(a,s,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$t(this.betaInitializer),gammaInitializer:$t(this.gammaInitializer),betaRegularizer:mt(this.betaRegularizer),gammaRegularizer:mt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};xx.className="LayerNormalization";oe.registerClass(xx);function FB(e,t,a){return Z(()=>{if(e.rank!==4)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(a==null&&(a=ln()),a!=="channelsLast"&&a!=="channelsFirst")throw new K(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return a==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Cn(e,r)})}var bx=class extends et{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?ln():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,a;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],a=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);a=e.padding[1]}this.padding=[t,a]}this.inputSpec=[new jt({ndim:4})]}computeOutputShape(e){e=ut(e);let t,a;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?a=e[3]+this.padding[1][0]+this.padding[1][1]:a=null,[e[0],e[1],t,a]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?a=e[2]+this.padding[1][0]+this.padding[1][1]:a=null,[e[0],t,a,e[3]])}call(e,t){return Z(()=>FB(Ue(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bx.className="ZeroPadding2D";oe.registerClass(bx);function gm(e,t,a,r,n,s){return Z(()=>{Ut(n),W7(s),Tr(r),a==null&&(a=[1,1]),r==null&&(r="valid"),n==null&&(n=ln()),s==null&&(s="max"),e=WA(e,n);let i,o=r==="same"?"same":"valid";return s==="max"?i=R0(e,t,a,o):i=v0(e,t,a,o),n==="channelsFirst"&&(i=Je(i,[0,3,1,2])),i})}function B6(e,t,a,r,n,s){return Z(()=>{Ut(n),W7(s),Tr(r),a==null&&(a=[1,1,1]),r==null&&(r="valid"),n==null&&(n=ln()),s==null&&(s="max"),e=F6(e,n);let i,o=r==="same"?"same":"valid";return s==="max"?i=Vy(e,t,a,o):i=Cy(e,t,a,o),n==="channelsFirst"&&(i=Je(i,[0,4,1,2,3])),i})}var V6=class extends et{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(da(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);da(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Tr(this.padding),this.inputSpec=[new jt({ndim:3})]}computeOutputShape(e){e=ut(e);let t=rn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Z(()=>{this.invokeCallHook(e,t),e=up(Ue(e),2);let a=this.poolingFunction(Ue(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ft(a,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},vx=class extends V6{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ut(n),Tr(r),gm(e,t,a,r,n,"max")}};vx.className="MaxPooling1D";oe.registerClass(vx);var wx=class extends V6{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ut(n),Tr(r),gm(e,t,a,r,n,"avg")}};wx.className="AveragePooling1D";oe.registerClass(wx);var U6=class extends et{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];da(this.poolSize,"poolSize"),da(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Tr(this.padding),this.inputSpec=[new jt({ndim:4})]}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],a=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=rn(t,this.poolSize[0],this.padding,this.strides[0]),a=rn(a,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,a]:[e[0],t,a,e[3]]}call(e,t){return Z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},kx=class extends U6{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ut(n),Tr(r),gm(e,t,a,r,n,"max")}};kx.className="MaxPooling2D";oe.registerClass(kx);var Ix=class extends U6{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ut(n),Tr(r),gm(e,t,a,r,n,"avg")}};Ix.className="AveragePooling2D";oe.registerClass(Ix);var G6=class extends et{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];da(this.poolSize,"poolSize"),da(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Tr(this.padding),this.inputSpec=[new jt({ndim:5})]}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],a=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=rn(t,this.poolSize[0],this.padding,this.strides[0]),a=rn(a,this.poolSize[1],this.padding,this.strides[1]),r=rn(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,a,r]:[e[0],t,a,r,e[4]]}call(e,t){return Z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Sx=class extends G6{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ut(n),Tr(r),B6(e,t,a,r,n,"max")}};Sx.className="MaxPooling3D";oe.registerClass(Sx);var Nx=class extends G6{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ut(n),Tr(r),B6(e,t,a,r,n,"avg")}};Nx.className="AveragePooling3D";oe.registerClass(Nx);var j6=class extends et{constructor(e){super(e),this.inputSpec=[new jt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ve}},Tx=class extends j6{constructor(e){super(e||{})}call(e,t){return Z(()=>{let a=Ue(e);return Pt(a,1)})}};Tx.className="GlobalAveragePooling1D";oe.registerClass(Tx);var Cx=class extends j6{constructor(e){super(e||{})}call(e,t){return Z(()=>{let a=Ue(e);return Fa(a,1)})}};Cx.className="GlobalMaxPooling1D";oe.registerClass(Cx);var H6=class extends et{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.inputSpec=[new jt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ve}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ex=class extends H6{call(e,t){return Z(()=>{let a=Ue(e);return this.dataFormat==="channelsLast"?Pt(a,[1,2]):Pt(a,[2,3])})}};Ex.className="GlobalAveragePooling2D";oe.registerClass(Ex);var Rx=class extends H6{call(e,t){return Z(()=>{let a=Ue(e);return this.dataFormat==="channelsLast"?Fa(a,[1,2]):Fa(a,[2,3])})}};Rx.className="GlobalMaxPooling2D";oe.registerClass(Rx);var q6=class extends et{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,a={}){let r=t.layer,n=an(r,a);delete t.layer;let s={layer:n};return Object.assign(s,t),new e(s)}},$x=class extends q6{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=ut(e),e.length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ut(e);let t=[e[0]].concat(e.slice(2)),a=this.layer.computeOutputShape(t),r=e[1];return[a[0],r].concat(a.slice(1))}call(e,t){return Z(()=>(e=Ue(e),D6((a,r)=>[Ue(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};$x.className="TimeDistributed";oe.registerClass($x);function MB(e){Nl($P,"BidirectionalMergeMode",e)}var _B="concat",Fx=class extends q6{constructor(e){super(e);let t=e.layer.getConfig(),a={};a.className=e.layer.getClassName(),a.config=t,this.forwardLayer=an(a),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=an(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?_B:e.mergeMode,MB(this.mergeMode),e.weights)throw new Ve("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,a=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,a)),this.backwardLayer.setWeights(e.slice(a))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let a,r,n;return this.returnState&&(n=t.slice(1)),a=t[0],a=a,this.mergeMode==="concat"?(a[a.length-1]*=2,r=[a]):this.mergeMode==null?r=[a,a.slice()]:r=[a],this.returnState?this.mergeMode==null?r.concat(n).concat(n.slice()):[a].concat(n).concat(n.slice()):Ga(r)}apply(e,t){let a=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let n=P6(e,a,r,this.numConstants);if(e=n.inputs,a=n.initialState,r=n.constants,Array.isArray(e)&&(a=e.slice(1),e=e[0]),(a==null||a.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(a!=null){let l=a.length;if(l%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=a,s.push(...a);let u=a.map(d=>new jt({shape:d.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(r!=null)throw new Ve("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof en;for(let l of s)if(l instanceof en!==o)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=d,p}else return super.apply(e,t)}call(e,t){return Z(()=>{let a=t.initialState,r,n;if(a==null)r=this.forwardLayer.call(e,t),n=this.backwardLayer.call(e,t);else{let o=a.slice(0,a.length/2),l=a.slice(a.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),n=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(n.slice(1))),r=r[0],n=n[0]),this.returnSequences&&(n=Ir(n,1));let i;return this.mergeMode==="concat"?i=hA([r,n]):this.mergeMode==="sum"?i=ie(r,n):this.mergeMode==="ave"?i=W(.5,ie(r,n)):this.mergeMode==="mul"?i=W(r,n):this.mergeMode==null&&(i=[r,n]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){xo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),xo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let a;if(this.returnSequences?this.mergeMode==null?a=[t,t]:a=t:this.mergeMode==null?a=[null,null]:a=null,this.returnState){let r=this.forwardLayer.states.map(n=>null);return Array.isArray(a)?a.concat(r).concat(r):[a].concat(r).concat(r)}else return a}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let a=an(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ve("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=a,new e(r)}};Fx.className="Bidirectional";oe.registerClass(Fx);function zB(e){return new md(e)}function OB(e){return new PA(e)}function PB(e){return new _A(e)}function DB(e){return new zA(e)}function LB(e){return new OA(e)}function WB(e){return new LA(e)}function BB(e){return new DA(e)}function VB(e){return new jA(e)}function UB(e){return new um(e)}function GB(e){return new VA(e)}function jB(e){return new dm(e)}function HB(e){return new UA(e)}function qB(e){return new GA(e)}function XB(e){return new HA(e)}function KB(e){return new qA(e)}function ZB(e){return new XA(e)}function YB(e){return new ax(e)}function JB(e){return new ex(e)}function QB(e){return new mm(e)}function eV(e){return new QA(e)}function tV(e){return new tx(e)}function aV(e){return new rx(e)}function rV(e){return new nx(e)}function nV(e){return new sx(e)}function sV(e){return new ox(e)}function iV(e){return new lx(e)}function oV(e){return new dx(e)}function lV(e){return new cx(e)}function uV(e){return new hx(e)}function dV(e){return new px(e)}function hV(e){return new ux(e)}function pV(e){return new fx(e)}function cV(e){return new Ax(e)}function fV(e){return new xx(e)}function mV(e){return new bx(e)}function Mx(e){return new wx(e)}function gV(e){return Mx(e)}function yV(e){return Mx(e)}function _x(e){return new Ix(e)}function AV(e){return _x(e)}function xV(e){return _x(e)}function zx(e){return new Nx(e)}function bV(e){return zx(e)}function vV(e){return zx(e)}function wV(e){return new Tx(e)}function kV(e){return new Ex(e)}function X6(e){return new Cx(e)}function K6(e){return new Rx(e)}function Z6(e){return new vx(e)}function Y6(e){return new kx(e)}function IV(e){return new Sx(e)}function SV(e){return new ZA(e)}function NV(e){return new pm(e)}function TV(e){return new YA(e)}function CV(e){return new gp(e)}function EV(e){return new KA(e)}function RV(e){return new hm(e)}function $V(e){return new JA(e)}function FV(e){return new fm(e)}function MV(e){return new rs(e)}function _V(e){return new cm(e)}function zV(e){return new Fx(e)}function OV(e){return new $x(e)}var PV=X6,DV=K6,LV=Z6,WV=Y6;function BV(e){return new mx(e)}function VV(e){return new gx(e)}function UV(e){return new yx(e)}function GV(e){return new ix(e)}var J6={};Le(J6,{MAPE:()=>tU,MSE:()=>nU,binaryAccuracy:()=>jV,binaryCrossentropy:()=>HV,categoricalAccuracy:()=>XV,categoricalCrossentropy:()=>KV,cosineProximity:()=>JV,mape:()=>aU,meanAbsoluteError:()=>QV,meanAbsolutePercentageError:()=>eU,meanSquaredError:()=>rU,mse:()=>sU,precision:()=>ZV,recall:()=>YV,sparseCategoricalAccuracy:()=>qV});function jV(e,t){return TA(e,t)}function HV(e,t){return l6(e,t)}function qV(e,t){return u6(e,t)}function XV(e,t){return CA(e,t)}function KV(e,t){return EA(e,t)}function ZV(e,t){return o6(e,t)}function YV(e,t){return LW(e,t)}function JV(e,t){return NA(e,t)}function QV(e,t){return im(e,t)}function eU(e,t){return gd(e,t)}function tU(e,t){return gd(e,t)}function aU(e,t){return gd(e,t)}function rU(e,t){return Tl(e,t)}function nU(e,t){return Tl(e,t)}function sU(e,t){return Tl(e,t)}var Q6={};Le(Q6,{modelFromJSON:()=>mB});var e4={};Le(e4,{l1:()=>oU,l1l2:()=>iU,l2:()=>lU});function iU(e){return new cp(e)}function oU(e){return kB(e)}function lU(e){return IB(e)}var t4=class extends Tu{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof jn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function kc(e,t){return e<t}function G5(e,t){return e>t}var a4=class extends t4{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Ve("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=kc:this.mode==="max"?this.monitorFunc=G5:this.monitor.indexOf("acc")!==-1?this.monitorFunc=G5:this.monitorFunc=kc,this.monitorFunc===kc&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===kc?1/0:-1/0}async onEpochEnd(e,t){await gs(t);let a=this.getMonitorValue(t);a!=null&&(this.monitorFunc(a-this.minDelta,this.best)?(this.best=a,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function uU(e){return new a4(e)}var dU={earlyStopping:uU},hU=J();hU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var r4=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(r4||{}),j5;(e=>{let t;(a=>{a[a.LEGACY=0]="LEGACY",a[a.V1=1]="V1",a[a.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(j5||(j5={}));var Ox={};function pU(e,t){let a={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Ox[e]=a}function n4(e){return Ox[e]}function cU(e){delete Ox[e]}function I(e,t,a,r,n){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return Ra(t.inputNames[s.inputIndexStart],a,r,n);if(s.type==="tensors")return t.inputNames.slice(o,l).map(p=>Ra(p,a,r,n));let u=Ra(t.inputNames.slice(o)[0],a,r,n),d=u.dataSync();return s.type==="number"?d[0]:w.toNestedArray(u.shape,d)}let i=t.attrParams[e];return i&&i.value}function Ra(e,t,a,r){let[n,s]=Qa(e);if(r!=null){let o=r.getHashTableHandleByName(n);if(o!=null)return o}let i=a.currentContextIds.find(o=>!!t[Ef(n,o)]);return i!==void 0?t[Ef(n,i)][s]:void 0}function fU(e,t,a){return t[Ef(e,a.currentContextId)]}function bn(e,t){let[a,r,n]=Qa(e);return[Ef(a,t&&t.currentContextId),r,n]}function Ef(e,t){return t?`${e}-${t}`:e}function Qa(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let a=t[0],r=t.length===3?t[1]:void 0,n=Number(t[t.length-1]);return[a,n,r]}function qc(e,t,a){let r=I("pad",e,t,a);if(r==="explicit"){r=I("explicitPaddings",e,t,a);let n=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)n[s][0]=r[s*2],n[s][1]=r[s*2+1];return n}return r}function Dn(e){return e.kept?e:ja(e)}var s4={};Le(s4,{json:()=>mU});var mU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],i4={};Le(i4,{json:()=>gU});var gU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],o4={};Le(o4,{json:()=>yU});var yU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],l4={};Le(l4,{json:()=>AU});var AU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],u4={};Le(u4,{json:()=>xU});var xU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],d4={};Le(d4,{json:()=>bU});var bU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],h4={};Le(h4,{json:()=>vU});var vU=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],p4={};Le(p4,{json:()=>wU});var wU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],c4={};Le(c4,{json:()=>kU});var kU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],f4={};Le(f4,{json:()=>IU});var IU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],m4={};Le(m4,{json:()=>SU});var SU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],g4={};Le(g4,{json:()=>NU});var NU=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],y4={};Le(y4,{json:()=>TU});var TU=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],A4={};Le(A4,{json:()=>CU});var CU=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],x4={};Le(x4,{json:()=>EU});var EU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],b4={};Le(b4,{json:()=>RU});var RU=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],v4={};Le(v4,{json:()=>$U});var $U=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],w4={};Le(w4,{json:()=>FU});var FU=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],k4={};Le(k4,{json:()=>MU});var MU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],H5=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[s4,i4,o4,l4,u4,d4,h4,p4,c4,f4,m4,g4,y4,A4,x4,b4,v4,w4,k4],t=[].concat(...e.map(a=>a.json));this.opMappers=t.reduce((a,r)=>(a[r.tfOpName]=r,a),{})}transformGraph(e,t={}){let a=e.node,r=[],n=[],s=[],i=a.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):m.op==="Const"?n.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],l=[],u={},d={};t!=null&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[A,,x]=bn(g),b=i[A];if(b.outputs!=null){let v=b.outputs.indexOf(x);if(v!==-1){let S=`${A}:${v}`;m.inputNames[y]=S}}m.inputs.push(b),b.children.push(m)})}),Object.keys(d).length===0?p.forEach(f=>{let m=i[f];m.children.length===0&&l.push(m)}):Object.keys(d).forEach(f=>{let[m]=bn(f),g=i[m];g!=null&&(g.signatureKey=d[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=bn(f),g=i[m];g&&(g.signatureKey=u[f],o.push(g))}):o=r;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let c={nodes:i,inputs:o,outputs:l,weights:n,placeholders:r,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,a)=>(t[e[a].name]=a,t),{})}mapNode(e){let t=n4(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let a={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(a.inputParams=t.inputs.reduce((r,n)=>(r[n.name]={type:n.type,inputIndexStart:n.start,inputIndexEnd:n.end},r),{})),t.attrs!=null&&(a.attrParams=t.attrs.reduce((r,n)=>{let s=n.type,i;switch(n.type){case"string":i=N1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=N1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":i=M1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=M1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":i=C1(e.attr,n.tfName,n.defaultValue||0),i===void 0&&!!n.tfDeprecatedName&&(i=C1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":i=F1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=F1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":i=T1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=T1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":i=z1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=z1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":i=$1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=$1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":i=_1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=_1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":i=E1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=E1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":i=R1(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=R1(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":i=q5(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=q5(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return r[n.name]={value:i,type:s},r},{})),a}mapFunction(e){let t=e.nodeDef,a=[],r=[],n={};t!=null&&(n=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&r.push(u[d.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[d]=bn(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Px(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,s.push(p),n[d]=p}),Object.keys(n).forEach(u=>{let d=n[u];d.inputNames.forEach((p,h)=>{let[c,,f]=bn(p),m=n[c];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${c}:${g}`;d.inputNames[h]=y}}d.inputs.push(m),m.children.push(d)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=bn(o[u.name]),h=n[d];h!=null&&(h.defaultOutput=p,i.push(h))});let l=this.mapArgsToSignature(e);return{nodes:n,inputs:s,outputs:i,weights:r,placeholders:a,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a),t),{}),outputs:e.signature.outputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a,e.ret),t),{})}}mapArgToTensorInfo(e,t){let a=e.name;return t!=null&&(a=t[a]),{name:a,dtype:e.type}}};function _U(e){let t=J().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function I4(e,t){let a=Array.isArray(e)?String.fromCharCode.apply(null,e):_U(e);return t?a:a.toLowerCase()}function N1(e,t,a,r=!1){let n=e[t];return n!=null?I4(n.s,r):a}function T1(e,t,a){let r=e[t];return r?r.b:a}function C1(e,t,a){let r=e[t]||{},n=r.i!=null?r.i:r.f!=null?r.f:a;return typeof n=="number"?n:parseInt(n,10)}function Px(e){switch(typeof e=="string"&&(e=r4[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function q5(e,t,a){let r=e[t];return r&&r.func?r.func.name:a}function E1(e,t,a){let r=e[t];return r&&r.type?Px(r.type):a}function R1(e,t,a){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(n=>Px(n)):a}function S4(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function $1(e,t,a){let r=e[t];return r&&r.shape?S4(r.shape):a}function F1(e,t,a){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):a}function M1(e,t,a,r=!1){let n=e[t];return n&&n.list&&n.list.s?n.list.s.map(s=>I4(s,r)):a}function _1(e,t,a){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(n=>S4(n)):a}function z1(e,t,a){let r=e[t];return r&&r.list&&r.list.b?r.list.b:a}var zU=class{constructor(e,t,a){this.node=e,this.tensorMap=t,this.context=a,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,n)=>(r[n]=this.getAttr(n),r),{}))}getInput(e){return Ra(e,this.tensorMap,this.context)}getAttr(e,t){let a=this.node.rawAttrs[e];if(a.tensor!=null)return Ra(e,this.tensorMap,this.context);if(a.i!=null||a.f!=null)return C1(this.node.rawAttrs,e,t);if(a.s!=null)return N1(this.node.rawAttrs,e,t);if(a.b!=null)return T1(this.node.rawAttrs,e,t);if(a.shape!=null)return $1(this.node.rawAttrs,e,t);if(a.type!=null)return E1(this.node.rawAttrs,e,t);if(a.list!=null){if(a.list.i!=null||a.list.f!=null)return F1(this.node.rawAttrs,e,t);if(a.list.s!=null)return M1(this.node.rawAttrs,e,t);if(a.list.shape!=null)return _1(this.node.rawAttrs,e,t);if(a.list.b!=null)return z1(this.node.rawAttrs,e,t);if(a.list.type!=null)return R1(this.node.rawAttrs,e,t)}return t}},OU=(e,t,a)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ie(I("a",e,t,a),I("b",e,t,a))];case"AddN":return[Sy(I("tensors",e,t,a))];case"FloorMod":case"Mod":return[$0(I("a",e,t,a),I("b",e,t,a))];case"Mul":return[W(I("a",e,t,a),I("b",e,t,a))];case"RealDiv":case"Div":return[me(I("a",e,t,a),I("b",e,t,a))];case"DivNoNan":return[Hk(I("a",e,t,a),I("b",e,t,a))];case"FloorDiv":return[b0(I("a",e,t,a),I("b",e,t,a))];case"Sub":return[ce(I("a",e,t,a),I("b",e,t,a))];case"Minimum":return[np(I("a",e,t,a),I("b",e,t,a))];case"Maximum":return[es(I("a",e,t,a),I("b",e,t,a))];case"Pow":return[Ps(I("a",e,t,a),I("b",e,t,a))];case"SquaredDifference":return[eA(I("a",e,t,a),I("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},PU=(e,t,a)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Jt(I("x",e,t,a))];case"Acos":return[wk(I("x",e,t,a))];case"Acosh":return[kk(I("x",e,t,a))];case"Asin":return[Sk(I("x",e,t,a))];case"Asinh":return[Nk(I("x",e,t,a))];case"Atan":return[Tk(I("x",e,t,a))];case"Atan2":return[Ck(I("x",e,t,a),I("y",e,t,a))];case"Atanh":return[Ek(I("x",e,t,a))];case"Ceil":return[Pk(I("x",e,t,a))];case"Complex":return[_s(I("real",e,t,a),I("imag",e,t,a))];case"Cos":return[I0(I("x",e,t,a))];case"Cosh":return[_y(I("x",e,t,a))];case"Elu":return[ap(I("x",e,t,a))];case"Erf":return[Xk(I("x",e,t,a))];case"Exp":return[vr(I("x",e,t,a))];case"Expm1":return[Kk(I("x",e,t,a))];case"Floor":return[rp(I("x",e,t,a))];case"Log":return[wr(I("x",e,t,a))];case"Log1p":return[T0(I("x",e,t,a))];case"Imag":return[S0(I("x",e,t,a))];case"Neg":return[Mt(I("x",e,t,a))];case"Reciprocal":return[l7(I("x",e,t,a))];case"Real":return[Ih(I("x",e,t,a))];case"Relu":return[En(I("x",e,t,a))];case"Round":return[qy(I("x",e,t,a))];case"Selu":return[Ky(I("x",e,t,a))];case"Sigmoid":return[xr(I("x",e,t,a))];case"Sin":return[Zy(I("x",e,t,a))];case"Sign":return[h7(I("x",e,t,a))];case"Sinh":return[Yy(I("x",e,t,a))];case"Softplus":return[pd(I("x",e,t,a))];case"Sqrt":return[va(I("x",e,t,a))];case"Square":return[ct(I("x",e,t,a))];case"Tanh":return[xu(I("x",e,t,a))];case"Tan":return[c7(I("x",e,t,a))];case"ClipByValue":return[lr(I("x",e,t,a),I("clipValueMin",e,t,a),I("clipValueMax",e,t,a))];case"Relu6":return[Hy(I("x",e,t,a))];case"Rsqrt":return[Xy(Ra(e.inputNames[0],t,a))];case"Prod":return[Uy(I("x",e,t,a),I("axes",e,t,a))];case"LeakyRelu":return[N0(I("x",e,t,a),I("alpha",e,t,a))];case"Prelu":return[_0(I("x",e,t,a),I("alpha",e,t,a))];case"IsNan":return[Zk(Ra(e.inputNames[0],t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Er(e,t,a=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>a+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let n=e[r],s=t[r];w.assert(n<0||s<0||n===s,()=>a+` Shapes ${e} and ${t} must match`)}}}function X5(e){return!(typeof e=="number"||e.some(t=>t<0))}function Xd(e,t,a){let r=O1(e,a),n=!X5(r);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(n&&t.forEach(s=>{r=O1(s.shape,r)}),!X5(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function O1(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let a=[];for(let r=0;r<e.length;++r){let n=e[r],s=t[r];if(n>=0&&s>=0&&n!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);a[r]=n>=0?n:s}return a}var DU=class{constructor(e,t,a,r,n,s,i){this.name=e,this.dtype=t,this.maxSize=a,this.elementShape=r,this.identicalElementShapes=n,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ke(0),ua(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let a=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Er(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),a.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(a.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);a.tensor=t,ua(t),a.written=!0,this.tensors[e]=a}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((a,r)=>this.write(a,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return lt([],[0].concat(this.elementShape));let a=this.readMany(e);return Er(this.elementShape,a[0].shape,"TensorArray shape mismatch: "),_a(a,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return lt([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let a=this.readMany(t);return Er(this.elementShape,a[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${a[0].shape})`),Nt(a,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let a=Math.max(...e);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(`Max index must be < array size (${a}  vs. ${this.maxSize})`);this.writeMany(e,Sr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let a=0,r=e.map(o=>(a+=o,a));if(a!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let n=a===0?0:t.size/a,s=[];Z(()=>{t=q(t,[1,a,n]);for(let o=0;o<e.length;++o){let l=o===0?0:r[o-1],u=[0,l,0],d=[1,e[o],n];s[o]=q(Pe(t,u,d),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Cu=class{constructor(e,t,a,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=a,e?.forEach(n=>{if(a!==n.dtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${n.dtype}`);Er(t,n.shape,"TensorList shape mismatch: "),ua(n)}),this.idTensor=ke(0),this.maxNumElements=r,ua(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Cu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,a=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(a!==-1&&this.tensors.length!==a)throw new Error(`Operation expected a list with ${a} elements but got a list with ${this.tensors.length} elements.`);Er(e,this.elementShape,"TensorList shape mismatch: ");let r=Xd(this.elementShape,this.tensors,e);return Z(()=>{let n=this.tensors.map(s=>q(s,r));return _a(n,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let a=Xd(this.elementShape,this.tensors,e),r=this.tensors.pop();return Er(r.shape,e,"TensorList shape mismatch: "),q(r,a)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Er(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ua(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Cu([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let a=0;a<Math.min(this.tensors.length,e);++a)t.tensors[a]=this.tensors[a];return t}getItem(e,t,a){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Er(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=Xd(this.elementShape,this.tensors,t);return q(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Er(this.elementShape,t.shape,"TensorList shape mismatch: "),ua(t),this.tensors[e]=t}gather(e,t,a){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Er(this.elementShape,a,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=Xd(this.elementShape,this.tensors,a);return e.length===0?lt([],[0].concat(r)):Z(()=>{let n=e.map(s=>q(this.tensors[s],r));return _a(n,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Er(this.elementShape,t,"TensorList shape mismatch: ");let a=Xd(this.elementShape,this.tensors,t);return this.size()===0?lt([],[0].concat(a)):Z(()=>{let r=this.tensors.map(n=>q(n,a));return Nt(r,0)})}};function LU(e,t,a){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==a)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${a}`);let n=e.shape.slice(1);Er(n,t,"TensorList shape mismatch: ");let s=Sr(e);return new Cu(s,t,r)}function WU(e,t,a){return new Cu([],e,t,a)}function BU(e,t,a,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(r!=null&&r!==-1&&n>=r)throw new Error(`Max index must be < array size (${n}  vs. ${r})`);let s=new Cu([],a,e.dtype,r),i=Sr(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function VU(e,t,a){let r=0,n=t.map(d=>(r+=d,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=O1(s,a),o=r===0?0:e.size/r,l=Z(()=>{let d=[];e=q(e,[1,r,o]);for(let p=0;p<t.length;++p){let h=p===0?0:n[p-1],c=[0,h,0],f=[1,t[p],o];d[p]=q(Pe(e,c,f),i)}return e.dispose(),d}),u=new Cu([],a,e.dtype,t.length);for(let d=0;d<l.length;d++)u.setItem(d,l[d]);return u}var UU=async(e,t,a)=>{switch(e.op){case"If":case"StatelessIf":{let r=I("thenBranch",e,t,a),n=I("elseBranch",e,t,a),s=I("cond",e,t,a),i=I("args",e,t,a);return(await s.data())[0]?a.functionMap[r].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap):a.functionMap[n].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap)}case"While":case"StatelessWhile":{let r=I("body",e,t,a),n=I("cond",e,t,a),s=I("args",e,t,a),i=await a.functionMap[n].executeFunctionAsync(s,a.tensorArrayMap,a.tensorListMap),o=s.map(d=>d.id),l=await i[0].data();i.forEach(d=>{!d.kept&&o.indexOf(d.id)===-1&&d.dispose()});let u=s;for(;l[0];){let d=u;u=await a.functionMap[r].executeFunctionAsync(u,a.tensorArrayMap,a.tensorListMap);let p=u.map(c=>c.id);d.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&p.indexOf(c.id)===-1&&c.dispose()});let h=await a.functionMap[n].executeFunctionAsync(u,a.tensorArrayMap,a.tensorListMap);l=await h[0].data(),h.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&p.indexOf(c.id)===-1&&c.dispose()})}return u}case"LoopCond":{let r=I("pred",e,t,a);return[Dn(r)]}case"Switch":{let r=I("pred",e,t,a),n=I("data",e,t,a);return n.kept||(n=Dn(n)),(await r.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let r=e.inputNames.find(n=>Ra(n,t,a)!==void 0);if(r){let n=Ra(r,t,a);return[Dn(n)]}return}case"Enter":{let r=I("frameName",e,t,a),n=I("tensor",e,t,a);return a.enterFrame(r),[Dn(n)]}case"Exit":{let r=I("tensor",e,t,a);return a.exitFrame(),[Dn(r)]}case"NextIteration":{let r=I("tensor",e,t,a);return a.nextIteration(),[Dn(r)]}case"TensorArrayV3":{let r=I("size",e,t,a),n=I("dtype",e,t,a),s=I("elementShape",e,t,a),i=I("dynamicSize",e,t,a),o=I("clearAfterRead",e,t,a),l=I("identicalElementShapes",e,t,a),u=I("name",e,t,a),d=new DU(u,n,r,s,l,i,o);return a.addTensorArray(d),[d.idTensor,ke(1)]}case"TensorArrayWriteV3":{let r=I("tensorArrayId",e,t,a),n=I("index",e,t,a),s=I("tensor",e,t,a),i=a.getTensorArray(r.id);return i.write(n,s),[i.idTensor]}case"TensorArrayReadV3":{let r=I("tensorArrayId",e,t,a),n=I("index",e,t,a);return[a.getTensorArray(r.id).read(n)]}case"TensorArrayGatherV3":{let r=I("tensorArrayId",e,t,a),n=I("indices",e,t,a),s=I("dtype",e,t,a);return[a.getTensorArray(r.id).gather(n,s)]}case"TensorArrayScatterV3":{let r=I("tensorArrayId",e,t,a),n=I("indices",e,t,a),s=I("tensor",e,t,a),i=a.getTensorArray(r.id);return i.scatter(n,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=I("tensorArrayId",e,t,a),n=a.getTensorArray(r.id),s=I("dtype",e,t,a);return[n.concat(s)]}case"TensorArraySplitV3":{let r=I("tensorArrayId",e,t,a),n=I("tensor",e,t,a),s=I("lengths",e,t,a),i=a.getTensorArray(r.id);return i.split(s,n),[i.idTensor]}case"TensorArraySizeV3":{let r=I("tensorArrayId",e,t,a),n=a.getTensorArray(r.id);return[ke(n.size(),"int32")]}case"TensorArrayCloseV3":{let r=I("tensorArrayId",e,t,a),n=a.getTensorArray(r.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let r=I("tensorListId",e,t,a),n=I("index",e,t,a),s=I("tensor",e,t,a),i=a.getTensorList(r.id);return i.setItem(n,s),[i.idTensor]}case"TensorListGetItem":{let r=I("tensorListId",e,t,a),n=I("index",e,t,a),s=I("elementShape",e,t,a),i=I("elementDType",e,t,a);return[a.getTensorList(r.id).getItem(n,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=I("indices",e,t,a),n=I("tensor",e,t,a),s=I("elementShape",e,t,a),i=I("numElements",e,t,a),o=BU(n,r,s,i);return a.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=I("elementShape",e,t,a),n=I("elementDType",e,t,a),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=I(s,e,t,a),o=WU(r,n,i);return a.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=I("tensorListId",e,t,a),n=I("indices",e,t,a),s=I("elementShape",e,t,a),i=I("elementDType",e,t,a);return[a.getTensorList(r.id).gather(n,i,s)]}case"TensorListStack":{let r=I("tensorListId",e,t,a),n=I("elementShape",e,t,a),s=I("elementDType",e,t,a),i=I("numElements",e,t,a);return[a.getTensorList(r.id).stack(n,s,i)]}case"TensorListFromTensor":{let r=I("tensor",e,t,a),n=I("elementShape",e,t,a),s=I("elementDType",e,t,a),i=LU(r,n,s);return a.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let r=I("tensorListId",e,t,a),n=a.getTensorList(r.id),s=I("dtype",e,t,a),i=I("elementShape",e,t,a);return[n.concat(s,i)]}case"TensorListPushBack":{let r=I("tensorListId",e,t,a),n=I("tensor",e,t,a),s=a.getTensorList(r.id);return s.pushBack(n),[s.idTensor]}case"TensorListPopBack":{let r=I("tensorListId",e,t,a),n=I("elementShape",e,t,a),s=I("elementDType",e,t,a);return[a.getTensorList(r.id).popBack(n,s)]}case"TensorListSplit":{let r=I("tensor",e,t,a),n=I("elementShape",e,t,a),s=I("lengths",e,t,a),i=VU(r,s,n);return a.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=I("tensorListId",e,t,a),n=a.getTensorList(r.id);return[ke(n.size(),"int32")]}case"TensorListResize":{let r=I("tensorListId",e,t,a),n=I("size",e,t,a),s=a.getTensorList(r.id).resize(n);return a.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function K5(e,t,a){let[r,n]=I("fusedOps",e,t,a),s=r==="biasadd",i=!s,o=n==="prelu",l=r==="fusedbatchnorm",u=I("numArgs",e,t,a);if(s){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=I("strides",e,t,a),p=qc(e,t,a),h=I("dataFormat",e,t,a).toUpperCase(),c=I("dilations",e,t,a),[f,m]=I("args",e,t,a);i&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,a);return{stride:d,pad:p,dataFormat:h,dilations:c,biasArg:f,preluArg:m,activationFunc:n,leakyreluAlpha:g}}var GU=(e,t,a)=>{switch(e.op){case"Conv1D":{let r=I("stride",e,t,a),n=I("pad",e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilation",e,t,a);return[Ry(I("x",e,t,a),I("filter",e,t,a),r,n,s,i)]}case"Conv2D":{let r=I("strides",e,t,a),n=qc(e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilations",e,t,a);return[Os(I("x",e,t,a),I("filter",e,t,a),[r[1],r[2]],n,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:n,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=K5(e,t,a);return[Ds.conv2d({x:I("x",e,t,a),filter:I("filter",e,t,a),strides:[r[1],r[2]],pad:n,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:n,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=K5(e,t,a);return[Ds.depthwiseConv2d({x:I("x",e,t,a),filter:I("filter",e,t,a),strides:[r[1],r[2]],pad:n,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=I("outputShape",e,t,a),n=I("strides",e,t,a),s=qc(e,t,a);return[Fy(I("x",e,t,a),I("filter",e,t,a),r,[n[1],n[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=I("strides",e,t,a),n=qc(e,t,a),s=I("dilations",e,t,a),i=I("dataFormat",e,t,a).toUpperCase();return[tp(I("input",e,t,a),I("filter",e,t,a),[r[1],r[2]],n,i,[s[1],s[2]])]}case"Conv3D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilations",e,t,a);return[My(I("x",e,t,a),I("filter",e,t,a),[r[1],r[2],r[3]],n,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[v0(I("x",e,t,a),[s[1],s[2]],[r[1],r[2]],n)]}case"MaxPool":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[R0(I("x",e,t,a),[s[1],s[2]],[r[1],r[2]],n)]}case"MaxPoolWithArgmax":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a),i=I("includeBatchInIndex",e,t,a),{result:o,indexes:l}=n7(I("x",e,t,a),[s[1],s[2]],[r[1],r[2]],n,i);return[o,l]}case"AvgPool3D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[Cy(I("x",e,t,a),[s[1],s[2],s[3]],[r[1],r[2],r[3]],n)]}case"MaxPool3D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[Vy(I("x",e,t,a),[s[1],s[2],s[3]],[r[1],r[2],r[3]],n)]}case"Dilation2D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("dilations",e,t,a),i=r[1],o=r[2],l=s[1],u=s[2];return[jk(I("x",e,t,a),I("filter",e,t,a),[i,o],n,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},jU=(e,t,a)=>{switch(e.op){case"Fill":{let r=I("shape",e,t,a),n=I("dtype",e,t,a),s=I("value",e,t,a);return[hd(r,s,n)]}case"LinSpace":{let r=I("start",e,t,a),n=I("stop",e,t,a),s=I("num",e,t,a);return[Yk(r,n,s)]}case"Multinomial":{let r=I("logits",e,t,a),n=I("numSamples",e,t,a),s=I("seed",e,t,a);return[i7(r,n,s)]}case"OneHot":{let r=I("indices",e,t,a),n=I("depth",e,t,a),s=I("onValue",e,t,a),i=I("offValue",e,t,a);return[kh(r,n,s,i)]}case"Ones":return[or(I("shape",e,t,a),I("dtype",e,t,a))];case"OnesLike":return[kr(I("x",e,t,a))];case"RandomUniform":return[cd(I("shape",e,t,a),I("minval",e,t,a),I("maxval",e,t,a),I("dtype",e,t,a))];case"Range":{let r=I("start",e,t,a),n=I("stop",e,t,a),s=I("step",e,t,a);return[ku(r,n,s,I("dtype",e,t,a))]}case"TruncatedNormal":{let r=I("shape",e,t,a),n=I("mean",e,t,a),s=I("stdDev",e,t,a),i=I("seed",e,t,a);return[D0(r,n,s,I("dtype",e,t,a),i)]}case"Zeros":return[Dt(I("shape",e,t,a),I("dtype",e,t,a))];case"ZerosLike":return[Qe(I("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function b2(e,t,a){let r=I("boxes",e,t,a),n=I("scores",e,t,a),s=I("maxOutputSize",e,t,a),i=I("iouThreshold",e,t,a),o=I("scoreThreshold",e,t,a),l=I("softNmsSigma",e,t,a);return{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var HU=async(e,t,a)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=b2(e,t,a),u=await De.nonMaxSuppressionWithScoreAsync(r,n,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=b2(e,t,a),l=I("padToMaxOutputSize",e,t,a),u=await De.nonMaxSuppressionPaddedAsync(r,n,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=b2(e,t,a);return[await De.nonMaxSuppressionAsync(r,n,s,i,o)]}case"Where":{let r=he(I("condition",e,t,a),"bool"),n=[await tA(r)];return r.dispose(),n}case"ListDiff":return d7(I("x",e,t,a),I("y",e,t,a));default:throw TypeError(`Node type ${e.op} is not implemented`)}},qU=(e,t,a)=>{switch(e.op){case"TopKV2":{let r=I("x",e,t,a),n=I("k",e,t,a),s=I("sorted",e,t,a),i=f7(r,n,s);return[i.values,i.indices]}case"Unique":{let r=I("x",e,t,a),n=f1(r);return[n.values,n.indices]}case"UniqueV2":{let r=I("x",e,t,a),n=I("axis",e,t,a),s=f1(r,n);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},XU=(e,t,a)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=I("default",e,t,a);return[Ra(e.name,t,a)||r];case"Placeholder":return[Ra(e.name,t,a)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=I("x",e,t,a);return[Dn(u)]}case"IdentityN":return I("x",e,t,a).map(u=>Dn(u));case"Snapshot":let n=I("x",e,t,a);return[Dn(n)];case"Shape":return[Lt(I("x",e,t,a).shape,"int32")];case"ShapeN":return I("x",e,t,a).map(u=>Lt(u.shape));case"Size":return[ke(I("x",e,t,a).size,"int32")];case"Rank":return[ke(I("x",e,t,a).rank,"int32")];case"NoOp":return[ke(1)];case"Print":let s=I("x",e,t,a),i=I("data",e,t,a),o=I("message",e,t,a),l=I("summarize",e,t,a);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},KU=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ke(0),this.tensorMap=new Map,ua(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ke(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Z(()=>{let r=Sr(t),n=a.length,s=r.length;w.assert(n===s,()=>`The number of elements doesn't match, keys has ${n} elements, the values has ${s} elements.`);for(let i=0;i<n;i++){let o=a[i],l=r[i];ua(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return Z(()=>{let r=[];for(let n=0;n<a.length;n++){let s=a[n],i=this.findWithDefault(s,t);r.push(i)}return _a(r)})}findWithDefault(e,t){let a=this.tensorMap.get(e);return a??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},ZU=async(e,t,a,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let n=I("keyDType",e,t,a),s=I("valueDType",e,t,a),i=new KU(n,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let n=I("tableHandle",e,t,a,r),s=I("keys",e,t,a),i=I("values",e,t,a);return[await r.getHashTableById(n.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let n=I("tableHandle",e,t,a,r),s=I("keys",e,t,a),i=I("defaultValue",e,t,a);return[await r.getHashTableById(n.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=I("tableHandle",e,t,a,r);return[r.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},YU=(e,t,a)=>{switch(e.op){case"ResizeBilinear":{let r=I("images",e,t,a),n=I("size",e,t,a),s=I("alignCorners",e,t,a),i=I("halfPixelCenters",e,t,a);return[De.resizeBilinear(r,[n[0],n[1]],s,i)]}case"ResizeNearestNeighbor":{let r=I("images",e,t,a),n=I("size",e,t,a),s=I("alignCorners",e,t,a),i=I("halfPixelCenters",e,t,a);return[De.resizeNearestNeighbor(r,[n[0],n[1]],s,i)]}case"CropAndResize":{let r=I("image",e,t,a),n=I("boxes",e,t,a),s=I("boxInd",e,t,a),i=I("cropSize",e,t,a),o=I("method",e,t,a),l=I("extrapolationValue",e,t,a);return[De.cropAndResize(r,n,s,i,o,l)]}case"ImageProjectiveTransformV3":{let r=I("images",e,t,a),n=I("transforms",e,t,a),s=I("outputShape",e,t,a),i=I("fillValue",e,t,a),o=I("interpolation",e,t,a),l=I("fillMode",e,t,a);return[De.transform(r,n,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},JU=(e,t,a)=>{switch(e.op){case"Equal":return[br(I("a",e,t,a),I("b",e,t,a))];case"NotEqual":return[wu(I("a",e,t,a),I("b",e,t,a))];case"Greater":return[ur(I("a",e,t,a),I("b",e,t,a))];case"GreaterEqual":return[Il(I("a",e,t,a),I("b",e,t,a))];case"Less":return[Py(I("a",e,t,a),I("b",e,t,a))];case"LessEqual":return[Sl(I("a",e,t,a),I("b",e,t,a))];case"LogicalAnd":return[sn(I("a",e,t,a),I("b",e,t,a))];case"LogicalNot":return[E0(I("a",e,t,a))];case"LogicalOr":return[By(I("a",e,t,a),I("b",e,t,a))];case"Select":case"SelectV2":return[Ma(I("condition",e,t,a),I("a",e,t,a),I("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},QU=(e,t,a)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ze(I("a",e,t,a),I("b",e,t,a),I("transposeA",e,t,a),I("transposeB",e,t,a))];case"Einsum":return[qk(I("equation",e,t,a),...I("tensors",e,t,a))];case"Transpose":return[Je(I("x",e,t,a),I("perm",e,t,a))];case"_FusedMatMul":let[r,n]=I("fusedOps",e,t,a),s=r==="biasadd",i=n==="prelu",o=I("numArgs",e,t,a),l=I("leakyreluAlpha",e,t,a);if(s){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,d]=I("args",e,t,a);return[Ds.matMul({a:I("a",e,t,a),b:I("b",e,t,a),transposeA:I("transposeA",e,t,a),transposeB:I("transposeB",e,t,a),bias:u,activation:n,preluActivationWeights:d,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eG=(e,t,a)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[bu(I("x",e,t,a),I("mean",e,t,a),I("variance",e,t,a),I("offset",e,t,a),I("scale",e,t,a),I("epsilon",e,t,a))];case"FusedBatchNormV3":return[bu(I("x",e,t,a),I("mean",e,t,a),I("variance",e,t,a),I("offset",e,t,a),I("scale",e,t,a),I("epsilon",e,t,a))];case"LRN":return[Jk(I("x",e,t,a),I("radius",e,t,a),I("bias",e,t,a),I("alpha",e,t,a),I("beta",e,t,a))];case"Softmax":return[sp(I("x",e,t,a))];case"LogSoftmax":return[Dy(I("x",e,t,a))];case"SparseToDense":return[rA(I("sparseIndices",e,t,a),I("outputShape",e,t,a),I("sparseValues",e,t,a),I("defaultValue",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},tG=(e,t,a)=>{switch(e.op){case"Max":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Fa(I("x",e,t,a),i,o)]}case"Mean":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Pt(I("x",e,t,a),i,o)]}case"Min":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Ao(I("x",e,t,a),i,o)]}case"Sum":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[we(I("x",e,t,a),i,o)]}case"All":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Ny(I("x",e,t,a),i,o)]}case"Any":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[yf(I("x",e,t,a),i,o)]}case"ArgMax":{let i=I("axis",e,t,a);return[qn(I("x",e,t,a),i)]}case"ArgMin":{let i=I("axis",e,t,a);return[Ik(I("x",e,t,a),i)]}case"Prod":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Uy(I("x",e,t,a),i,o)]}case"Cumprod":{let i=I("axis",e,t,a),o=I("exclusive",e,t,a),l=I("reverse",e,t,a);return[xf(I("x",e,t,a),i,o,l)]}case"Cumsum":{let i=I("axis",e,t,a),o=I("exclusive",e,t,a),l=I("reverse",e,t,a);return[zy(I("x",e,t,a),i,o,l)]}case"Bincount":let r=I("x",e,t,a),n=I("weights",e,t,a),s=I("size",e,t,a);return[Ey(r,n,s)];case"DenseBincount":{let i=I("x",e,t,a),o=I("weights",e,t,a),l=I("size",e,t,a),u=I("binaryOutput",e,t,a);return[Uk(i,o,l,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aG=(e,t,a)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=I("n",e,t,a),n=I("axis",e,t,a),s=I("tensors",e,t,a);return s=s.slice(0,r),[Nt(s,n)]}case"Gather":{let r=I("x",e,t,a),n=I("indices",e,t,a);return[vu(r,he(n,"int32"),0)]}case"GatherV2":{let r=I("axis",e,t,a),n=I("batchDims",e,t,a),s=I("x",e,t,a),i=I("indices",e,t,a);return[vu(s,he(i,"int32"),r,n)]}case"Reverse":{let r=I("dims",e,t,a),n=[];for(let i=0;i<r.length;i++)r[i]&&n.push(i);let s=I("x",e,t,a);return[Ir(s,n)]}case"ReverseV2":{let r=I("axis",e,t,a),n=I("x",e,t,a);return[Ir(n,r)]}case"Slice":{let r=I("begin",e,t,a),n=I("size",e,t,a);return[Pe(I("x",e,t,a),r,n)]}case"StridedSlice":{let r=I("begin",e,t,a),n=I("end",e,t,a),s=I("strides",e,t,a),i=I("beginMask",e,t,a),o=I("endMask",e,t,a),l=I("ellipsisMask",e,t,a),u=I("newAxisMask",e,t,a),d=I("shrinkAxisMask",e,t,a),p=I("x",e,t,a);return[p7(p,r,n,s,i,o,l,u,d)]}case"Pack":return Z(()=>{let r=I("axis",e,t,a),n=I("tensors",e,t,a),s=n[0].shape,i=ft(n[0]).shape,o=n.map(l=>{let u=w.arraysEqual(l.shape,s);if(!u&&!w.arraysEqual(ft(l).shape,i))throw new Error("the input tensors shape does not match");return u?l:q(l,s)});return[_a(o,r)]});case"Unpack":{let r=I("axis",e,t,a),n=I("tensor",e,t,a);return Sr(n,r)}case"Tile":{let r=I("reps",e,t,a);return[Mr(I("x",e,t,a),r)]}case"Split":case"SplitV":{let r=I("axis",e,t,a),n=I("numOrSizeSplits",e,t,a),s=I("x",e,t,a);return xa(s,n,r)}case"ScatterNd":{let r=I("indices",e,t,a),n=I("values",e,t,a),s=I("shape",e,t,a);return[x7(r,n,s)]}case"GatherNd":{let r=I("x",e,t,a),n=I("indices",e,t,a);return[b7(r,n)]}case"SparseToDense":{let r=I("sparseIndices",e,t,a),n=I("outputShape",e,t,a),s=I("sparseValues",e,t,a),i=I("defaultValue",e,t,a);return[rA(r,s,n,s.dtype===i.dtype?i:he(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},rG=(e,t,a)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:n,emptyRowIndicator:s,reverseIndexMap:i}=Jd.sparseFillEmptyRows(I("indices",e,t,a),I("values",e,t,a),I("denseShape",e,t,a),I("defaultValue",e,t,a));return[r,n,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:n}=Jd.sparseReshape(I("inputIndices",e,t,a),I("inputShape",e,t,a),I("newShape",e,t,a));return[r,n]}case"SparseSegmentMean":return[Jd.sparseSegmentMean(I("data",e,t,a),I("indices",e,t,a),I("segmentIds",e,t,a))];case"SparseSegmentSum":return[Jd.sparseSegmentSum(I("data",e,t,a),I("indices",e,t,a),I("segmentIds",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nG=(e,t,a)=>{switch(e.op){case"FFT":return[O0(I("x",e,t,a))];case"IFFT":return[Sh(I("x",e,t,a))];case"RFFT":return[P0(I("x",e,t,a))];case"IRFFT":return[Qy(I("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sG=(e,t,a)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:n}=Hc.stringNGrams(I("data",e,t,a),I("dataSplits",e,t,a),I("separator",e,t,a),I("nGramWidths",e,t,a),I("leftPad",e,t,a),I("rightPad",e,t,a),I("padWidth",e,t,a),I("preserveShortSequences",e,t,a));return[r,n]}case"StringSplit":{let{indices:r,values:n,shape:s}=Hc.stringSplit(I("input",e,t,a),I("delimiter",e,t,a),I("skipEmpty",e,t,a));return[r,n,s]}case"StringToHashBucketFast":return[Hc.stringToHashBucketFast(I("input",e,t,a),I("numBuckets",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},iG=(e,t,a)=>{switch(e.op){case"Cast":return[he(I("x",e,t,a),I("dtype",e,t,a))];case"ExpandDims":{let r=I("axis",e,t,a);return[la(I("x",e,t,a),r)]}case"Squeeze":{let r=I("axis",e,t,a);return[ft(I("x",e,t,a),r)]}case"Reshape":return[q(I("x",e,t,a),I("shape",e,t,a))];case"MirrorPad":return[s7(I("x",e,t,a),I("padding",e,t,a),I("mode",e,t,a))];case"PadV2":case"Pad":return[Cn(I("x",e,t,a),I("padding",e,t,a),I("constantValue",e,t,a))];case"SpaceToBatchND":{let r=I("blockShape",e,t,a),n=I("paddings",e,t,a);return[M0(I("x",e,t,a),r,n)]}case"BatchToSpaceND":{let r=I("blockShape",e,t,a),n=I("crops",e,t,a);return[w0(I("x",e,t,a),r,n)]}case"DepthToSpace":{let r=I("blockSize",e,t,a),n=I("dataFormat",e,t,a).toUpperCase();return[Gk(I("x",e,t,a),r,n)]}case"BroadcastTo":return[dh(I("x",e,t,a),I("shape",e,t,a))];case"BroadcastArgs":return[Ok(I("s0",e,t,a),I("s1",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Z5(e,t,a,r){let n=((s,i,o)=>{switch(s.category){case"arithmetic":return Z(()=>OU(s,i,o));case"basic_math":return Z(()=>PU(s,i,o));case"control":return UU(s,i,o);case"convolution":return Z(()=>GU(s,i,o));case"creation":return Z(()=>jU(s,i,o));case"dynamic":return HU(s,i,o);case"evaluation":return Z(()=>qU(s,i,o));case"image":return Z(()=>YU(s,i,o));case"graph":return Z(()=>XU(s,i,o));case"logical":return Z(()=>JU(s,i,o));case"matrices":return Z(()=>QU(s,i,o));case"normalization":return Z(()=>eG(s,i,o));case"reduction":return Z(()=>tG(s,i,o));case"slice_join":return Z(()=>aG(s,i,o));case"sparse":return Z(()=>rG(s,i,o));case"spectral":return Z(()=>nG(s,i,o));case"string":return Z(()=>sG(s,i,o));case"transformation":return Z(()=>iG(s,i,o));case"hash_table":return ZU(s,i,o,r);case"custom":let l=n4(s.op);if(l&&l.customExecutor)return l.customExecutor(new zU(s,i,o));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,a);return w.isPromise(n)?n.then(s=>[].concat(s)):[].concat(n)}var Y5=class{constructor(e={},t={},a={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=a,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let a=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(a))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function J5(e,t,a,r){let n=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map(h=>Qa(h)[0]),d=[];r!=null&&(d=r.map(h=>Qa(h.name)[0]));let p=[...t];for(;p.length>0;){let h=p.pop();if((N4(h)||hG(h)||pG(h))&&i==null&&(i=h,o=i.children.map(c=>c.name).filter(c=>n.has(c))),n.add(h.name),a[h.name]==null&&u.indexOf(h.name)===-1&&d.indexOf(h.name)===-1){if(h.inputs.length===0){s.push(h.name);continue}h.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),p.push(c))})}}return{inputs:e,outputs:t,usedNodes:n,missingInputs:s,dynamicNode:i,syncInputs:o}}function oG(e,t,a){let{usedNodes:r,inputs:n}=a,s=[],i=Object.keys(n).map(d=>Qa(d)[0]).map(d=>e.nodes[d]),o=e.initNodes;i.forEach(d=>{r.has(d.name)&&s.push(d)}),e.weights.forEach(d=>{r.has(d.name)&&s.push(d)}),o?.forEach(d=>{r.has(d.name)&&s.push(d)});let l=new Set,u=[];for(;s.length>0;){let d=s.pop();l.add(d.name),t[d.name]||u.push(d),d.children.forEach(p=>{!l.has(p.name)&&r.has(p.name)&&p.inputs.every(h=>l.has(h.name))&&s.push(p)})}return u}var lG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],uG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],dG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function N4(e){return lG.indexOf(e.op)>=0}function hG(e){return uG.indexOf(e.op)>=0}function pG(e){return dG.indexOf(e.op)>=0}var P1=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(a=>{this._functionExecutorMap[a]=new P1(e.functions[a],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(a=>e[a].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let a=e.map(n=>n.name).sort(),r=t.map(n=>n.name).sort();return a.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let a=J5(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:n,syncInputs:s}=a;if(n!=null)throw new Error(`This execution contains the node '${n.name}', which has the dynamic op '${n.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return oG(this.graph,this.weightMap,a)}execute(e,t){e=this.mapInputs(e);let a=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=a.map(d=>this.graph.nodes[Qa(d)[0]]),n=t.map(d=>Qa(d)[0]),s=n.map(d=>this.graph.nodes[d]);this.resetIntermediateTensors(),s.length===0&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return Z(()=>{let d=new Y5(this.weightMap,l,u,this.functionExecutorMap),p={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=Qa(f),y=[];y[g]=e[f],p[m]=y});let h=this.getFrozenTensorIds(p),c={};for(let f=0;f<o.length;f++){let m=o[f];if(!p[m.name]){let g=Z5(m,p,d,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);p[m.name]=g,this.checkTensorForDisposal(m.name,m,p,d,h,n,c)}}return this.parent==null&&d.dispose(h),t.map(f=>Ra(f,p,d))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(a=>e[a]).map(a=>a.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,a,r,n,s,i){t.category==="control"||s.indexOf(e)!==-1||(a[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=fU(o.name,a,r);l?.forEach(u=>{if(u&&!u.kept&&!n.has(u.id)){let d=i[u.id];if(d===1){if(!this.keepTensorForDebug)u.dispose();else{let[p,h]=bn(t.name,r);this.intermediateTensors[p]?this.intermediateTensors[p][h]=u:(this.intermediateTensors[p]=[],this.intermediateTensors[p][h]=u)}delete i[u.id]}else d!=null&&i[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(t=>{t&&!t.kept&&!t.isDisposed&&!this.keepIds.has(t.id)&&t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,a=!1,r={},n={}){a||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let s=new Y5(this.weightMap,r,n,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,a);let i=t.map(u=>Ra(u,this.tensorsMap,s)),o=i.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,a){let r=e.reduce((n,s,i)=>(n[this.inputs[i].name]=s,n),{});return this._executeAsync(r,this.outputNodes,!0,t,a)}async executeWithControlFlow(e,t,a,r){let n=Object.keys(e),s=n.map(A=>this.graph.nodes[Qa(A)[0]]),i=a.map(A=>Qa(A)[0]),o=i.map(A=>this.graph.nodes[A]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:p}=J5(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(A=>({node:A,contexts:t.currentContext})),c={...this.weightMap};Object.keys(e).forEach(A=>{let[x,b]=Qa(A),v=[];v[b]=e[A],c[x]=v});let f={},m=this.getFrozenTensorIds(c),g={};for(;h.length>0;){let A=this.processStack(s,h,t,c,g,m,i,f,l);await Promise.all(A)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(A=>!N4(A)&&!Ra(A.name,c,t)).map(A=>A.name);if(y.length>0){let A="";throw d!=null&&(A=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${n}]. Consider providing the following inputs: [${u}]. ${A}`)}return c}processStack(e,t,a,r,n,s,i,o,l){let u=[];for(;t.length>0;){let d=t.pop();a.currentContext=d.contexts;let p="";if(d.node.op==="Enter"&&I("isConstant",d.node,r,a)&&([p]=bn(d.node.name,a)),r[d.node.name]==null){let h=Z5(d.node,r,a,this._resourceManager);p||([p]=bn(d.node.name,a));let c=a.currentContext;w.isPromise(h)?u.push(h.then(f=>(r[p]=f,a.currentContext=c,this.checkTensorForDisposal(p,d.node,r,a,s,i,o),this.processChildNodes(d.node,t,a,r,n,l),f))):(r[p]=h,this.checkTensorForDisposal(p,d.node,r,a,s,i,o),this.processChildNodes(d.node,t,a,r,n,l))}else this.processChildNodes(d.node,t,a,r,n,l)}return u}processChildNodes(e,t,a,r,n,s){e.children.forEach(i=>{let[o]=bn(i.name,a);n[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Ra(l,r,a))&&(n[o]=!0,t.push({contexts:a.currentContext,node:i})):i.inputNames.every(l=>!!Ra(l,r,a))&&(n[o]=!0,t.push({contexts:a.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let a=e[t],[r]=Qa(t),n=this.graph.nodes[r];if(n.attrParams.shape&&n.attrParams.shape.value){let s=n.attrParams.shape.value,i=s.length===a.shape.length&&a.shape.every((o,l)=>s[l]===-1||s[l]===o);w.assert(i,()=>`The shape of dict['${n.name}'] provided in model.execute(dict) must be [${s}], but was [${a.shape}]`)}n.attrParams.dtype&&n.attrParams.dtype.value&&w.assert(a.dtype===n.attrParams.dtype.value,()=>`The dtype of dict['${n.name}'] provided in model.execute(dict) must be ${n.attrParams.dtype.value}, but was ${a.dtype}`)})}mapInputs(e){let t={};for(let a in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[a]!=null){let r=this._signature.inputs[a];t[r.name]=e[a]}else t[a]=e[a];return t}checkInputs(e){let t=Object.keys(e).filter(a=>{let[r]=Qa(a);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[a]=Qa(t);if(!this.graph.nodes[a])throw new Error(`The output '${t}' is not found in the graph`)})}},cG=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},fG="?tfjs-format=file",mG="model.json",Dx=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new cG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Ea.browserHTTPRequest(e,this.loadOptions);else{let t=Ea.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Ea.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,a;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?a=this.artifacts.userDefinedMetadata.signature:a=this.artifacts.signature,this.signature=a,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=Ea.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new P1(H5.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let n=H5.Instance.transformGraph(e.modelInitializer);this.initializer=new P1(n),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let a=Ea.getSaveHandlers(e);if(a.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new Error(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof tt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,a,r)=>(t[a]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=this.executor.execute(e,t);return a.length>1?a:a[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=await this.executor.executeAsync(e,t);return a.length>1?a:a[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,a)=>(t[a]=[e[a]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function gG(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${mG}${fG}`);let a=new Dx(e,t);return await a.load(),a}var yG="0.0.0",T4={};Le(T4,{CSVDataset:()=>L4,Dataset:()=>yd,FileDataSource:()=>H4,TextLineDataset:()=>D4,URLDataSource:()=>q4,array:()=>WG,csv:()=>YG,func:()=>JG,generator:()=>QG,microphone:()=>tj,version_data:()=>aj,webcam:()=>ej,zip:()=>BG});var AG=Oo(jf()),xG=Oo(jf());function bG(e,t){return Rf(e,t)}function Rf(e,t,a=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(a.has(e))return a.get(e);let n=t(e);if(n.recurse&&n.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(n.recurse)if(Eu(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=Rf(o,t,a,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return a.set(e,n.value),n.value}function vG(e,t=E4){return C4(e,t)}function C4(e,t,a=new Set){let r=e[0];if(a.has(r))throw new Error("Circular references are not supported.");let n=t(e);if(n.recurse&&n.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(n.recurse)if(Eu(r)){let s=Array.isArray(r)?[]:{};a.add(r);for(let i in r){let o=e.map(u=>u[i]),l=C4(o,t,a);s[i]=l}return a.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return n.value}function E4(e){return e===null?null:Eu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function R4(e,t){let a=new Map;Rf(e,t,a);for(let r of Array.from(a.keys())){let n=a.get(r);if(w.isPromise(n)){let s=await n;a.set(r,s)}}return Rf(e,t,a)}function Eu(e){let t=!1;if(J().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:a}=dw();t=e instanceof a}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof tt)&&!(e instanceof Promise)&&!t)}function wG(e){return e==null||kG(e)||Array.isArray(e)||typeof e=="object"&&e instanceof tt||w.isTypedArray(e)}function kG(e){return e===null||typeof e!="object"&&typeof e!="function"}function IG(e){return bG(e,SG)}function SG(e){return e instanceof tt?{value:e.clone(),recurse:!1}:Eu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var $4=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),a=this.get(t);return this.set(t,this.pop()),a}},F4=class extends $4{constructor(){super(F4.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),a=this.length();for(let r=0;r<a;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=a}},M4=F4;M4.INITIAL_CAPACITY=32;function _4(e){return new CG(e)}function Lx(e){return new EG(e)}function NG(e,t){return new z4(e,t)}function TG(e,t=O4.FAIL){return new DG(e,t)}var pa=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],a=await e.next();for(;!a.done;)t.push(a.value),a=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),a=e(t.value);for(;!t.done&&a;)t=await this.next(),a=e(t.value)}handleErrors(e){return new OG(this,e)}filter(e){return new _G(this,e)}map(e){return new zG(this,e)}mapAsync(e){return new Q5(this,e)}serialMapAsync(e){return new Q5(this,e).serial()}flatmap(e){return new PG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new MG(this,e,t)}columnMajorBatch(e,t=!0,a=E4){return this.rowMajorBatch(e,t).map(r=>vG(r,a))}concatenate(e,t){return new z4(_4([this,e]),t)}take(e){return e<0||e==null?this:new FG(this,e)}skip(e){return e<0||e==null?this:new $G(this,e)}prefetch(e){return new P4(this,e)}shuffle(e,t){return new LG(this,e,t)}serial(){return new RG(this)}},CG=class extends pa{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:IG(e),done:!1}}},EG=class extends pa{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},RG=class extends pa{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},$G=class extends pa{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;se(e.value)}return this.upstream.next()}},FG=class extends pa{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},MG=class extends pa{constructor(e,t,a=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=a,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},_G=class extends pa{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;se(e.value)}}},zG=class extends pa{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=tn.getTensorsInContainer(e.value),a=this.transform(e.value),r=tn.getTensorsInContainer(a);for(let n of t)tn.isTensorInList(n,r)||n.dispose();return{value:a,done:!1}}},OG=class extends pa{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Q5=class extends pa{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=tn.getTensorsInContainer(e.value),a=await this.transform(e.value),r=tn.getTensorsInContainer(a);for(let n of t)tn.isTensorInList(n,r)||n.dispose();return{value:a,done:!1}}},Wx=class extends pa{constructor(){super(),this.outputQueue=new M4,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},PG=class extends Wx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=tn.getTensorsInContainer(e.value),a=this.transform(e.value),r=tn.getTensorsInContainer(a);this.outputQueue.pushAll(a);for(let n of t)tn.isTensorInList(n,r)||n.dispose();return!0}},z4=class extends pa{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let a=await this.moreIterators.next();if(a.done)return{value:null,done:!0};this.iterator=a.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},O4=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(O4||{}),DG=class extends pa{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,a=0;function r(s){return s instanceof pa?{value:s.next().then(i=>(t++,i.done&&a++,i.value)),recurse:!1}:{value:null,recurse:!0}}let n=await R4(this.iterators,r);if(t===a)return{value:null,done:!0};if(a>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:n,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},P4=class extends pa{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new $4(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},LG=class extends P4{constructor(e,t,a){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=xG.alea(a||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},yd=class{constructor(){this.size=null}batch(e,t=!0){let a=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),Ja(async()=>(await a.iterator()).columnMajorBatch(e,t,VG),r)}concatenate(e){let t=this,a;return this.size===1/0||e.size===1/0?a=1/0:this.size!=null&&e.size!=null?a=this.size+e.size:a=null,Ja(async()=>(await t.iterator()).concatenate(await e.iterator()),a)}filter(e){let t=this,a;return this.size===1/0?a=1/0:a=null,Ja(async()=>(await t.iterator()).filter(r=>Z(()=>e(r))),a)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ja(async()=>(await t.iterator()).map(a=>Z(()=>e(a))),this.size)}mapAsync(e){let t=this;return Ja(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ja(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,a;return this.size!=null&&e>0?a=this.size*e:e===0?a=0:this.size!=null&&(e===void 0||e<0)?a=1/0:a=null,Ja(async()=>{let r=Lx(async()=>({value:await t.iterator(),done:!1}));return NG(r.take(e))},a)}skip(e){let t=this,a;return this.size!=null&&e>=0&&this.size>=e?a=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?a=0:a=null,Ja(async()=>(await t.iterator()).skip(e),a)}shuffle(e,t,a=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,n=AG.alea(t||w.now().toString());return Ja(async()=>{let s=n.int32();return a&&(s+=n.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,a;return this.size!=null&&this.size>e?a=e:this.size!=null&&this.size<=e?a=this.size:a=null,Ja(async()=>(await t.iterator()).take(e),a)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};yd.MAX_BUFFER_SIZE=1e4;function Ja(e,t=null){return new class extends yd{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function WG(e){return Ja(async()=>_4(e),e.length)}function BG(e){if(!Eu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let a=0;a<e.length;a++)t=t==null?e[a].size:Math.min(t,e[a].size);else if(e instanceof Object)for(let a in e)t=t==null?e[a].size:Math.min(t,e[a].size);return Ja(async()=>{let a=await R4(e,r=>{if(r instanceof yd)return{value:r.iterator(),recurse:!1};if(Eu(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return TG(a,1)},t)}function VG(e){if(e===null)return null;let t=e[0];return wG(t)?{value:UG(e),recurse:!1}:{value:null,recurse:!0}}function UG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof tt?_a(e):lt(e)}var D4=class extends yd{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Ic='"',Kd=Symbol("out"),ev=Symbol("field"),Sc=Symbol("quote"),v2=Symbol("quoteafterquote"),tv=Symbol("quoteinquote"),L4=class extends yd{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new D4(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,n)=>(r[n]=r[n]+1||1,r),{}),a=Object.keys(t).filter(r=>t[r]>1);if(w.assert(a.length===0,()=>"Duplicate column names found: "+a.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),a={},r={};for(let n=0;n<this.fullColumnNames.length;n++){let s=this.fullColumnNames[n],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[n],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=u;else switch(i.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o);break;default:l=u}}i&&i.isLabel?r[s]=l:a[s]=l}}return Object.keys(r).length===0?a:{xs:a,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let a=[],r=0,n=e.length,s=Kd;for(let i=0;i<n;i++)switch(s){case Kd:switch(e.charAt(i)){case Ic:r=i+1,s=Sc;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;a.push(""),s=Kd;break;default:s=ev,r=i;break}break;case ev:switch(e.charAt(i)){case this.delimiter:a.push(e.substring(r,i)),s=Kd,r=i+1;break;default:}break;case Sc:switch(e.charAt(i)){case Ic:s=v2;break;default:}break;case v2:switch(e.charAt(i)){case this.delimiter:a.push(e.substring(r,i-1)),s=Kd,r=i+1;break;case Ic:s=Sc;break;default:s=tv;break}break;case tv:switch(e.charAt(i)){case Ic:s=Sc;break;default:}break;default:}if(s===v2?a.push(e.substring(r,n-1)):a.push(e.substring(r)),t&&a.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${a}`);return a}},W4=class extends pa{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!J().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new W4(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(a){throw new Error(`Error thrown while initializing video stream: ${a.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,a=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(a.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(a.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],a=0;return new Promise(r=>{let n=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++a===this.numFrames&&(clearInterval(n),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,a=new Float32Array(e.length*t);return e.forEach((r,n)=>a.set(r,n*t)),a}getTensorFromAudioDataArray(e,t){let a=new Float32Array(w.sizeFromShape(t));return a.set(e,a.length-e.length),lt(a,t)}},B4=class extends pa{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Lt([0],"int32"),this.webcamConfig.centerCrop){let a=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,n=(1-a)/2,s=(1-r)/2,i=n+a,o=r+s;this.cropBox=Gn([s,n,o,i],[1,4])}else this.cropBox=Gn([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!J().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let a=new B4(e,t);return await a.start(),a}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Xr.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Z(()=>{let t=la(he(e,"float32"),0),a;a=De.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=a.shape;return q(a,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},V4=class{},U4=class extends pa{split(e){return new GG(this,e)}},GG=class extends U4{constructor(e,t){super(),this.upstream=e,this.impl=new jG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},jG=class extends Wx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let a of t.slice(0,-1))this.outputQueue.push(a);return this.carryover=t[t.length-1],!0}},HG=class extends pa{decodeUTF8(){return new qG(this)}},qG=class extends U4{constructor(e){super(),this.upstream=e,this.impl=new XG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},XG=class extends Wx{constructor(e){if(super(),this.upstream=e,J().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=dw();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let a;return J().get("IS_BROWSER")?a=this.decoder.decode(t,{stream:!0}):a=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(a),!0}},G4=class extends HG{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(J().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let a=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,a)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let n=this.file.slice(this.offset,a);r.readAsArrayBuffer(n)}this.offset=a}),done:!1}}};async function KG(e,t={},a){let r,n;typeof e=="string"?r=e:(r=e.url,n=ZG(e));let s=await(a||w.fetch)(r,n);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new G4(i,t)}else throw new Error(s.statusText)}var ZG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function j4(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var H4=class extends V4{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(j4(this.input)&&J().get("IS_NODE")){let e=sy();this.input=e.readFileSync(this.input.slice(7))}return new G4(this.input,this.options)}},q4=class extends V4{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return j4(this.url)?new H4(this.url,this.fileOptions).iterator():KG(this.url,this.fileOptions)}};function YG(e,t={}){return new L4(new q4(e),t)}function JG(e){let t=Lx(e);return Ja(async()=>t)}function QG(e){return Ja(async()=>{let t=await e();return Lx(()=>t.next())})}async function ej(e,t){return B4.create(e,t)}async function tj(e){return W4.create(e)}var aj="0.0.0";function Ie(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&w.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var rj=Or.whereImpl,X4=class extends zu{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new $h(this,Ca())}nextDataId(){return X4.nextDataId++}write(e,t,a){this.firstUse&&(this.firstUse=!1,J().get("IS_NODE")&&T.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:a,refCount:1}),r}makeTensorInfo(e,t,a){let r;if(t==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let n=a.map(s=>w.encodeString(s));r=this.write(n,e,t)}else r=this.write(a,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,a,r,n){this.data.set(e,{values:t,dtype:r,refCount:n})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:a}=this.data.get(e);if(t==="complex64"){let r=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId);return T.mergeRealAndImagArrays(r,n)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),a=t;if(e.dtype==="string")try{a=t.map(r=>w.decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,a)}makeOutput(e,t,a){let r=this.write(e,t,a);return Ca().makeTensorFromDataId(r,t,a,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:a}=this.data.get(e);a!=null&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ie([e],"where");let t=this.readSync(e.dataId);return rj(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Bx=X4;Bx.nextDataId=0;var ym={};Le(ym,{addImpl:()=>Z4,bincountImpl:()=>Ux,bincountReduceImpl:()=>Y4,ceilImpl:()=>J4,concatImpl:()=>Gx,equalImpl:()=>Q4,expImpl:()=>tI,expm1Impl:()=>rI,floorImpl:()=>nI,gatherNdImpl:()=>sI,gatherV2Impl:()=>iI,greaterEqualImpl:()=>lI,greaterImpl:()=>oI,lessEqualImpl:()=>dI,lessImpl:()=>uI,linSpaceImpl:()=>hI,logImpl:()=>pI,maxImpl:()=>cI,maximumImpl:()=>fI,minimumImpl:()=>mI,multiplyImpl:()=>jx,negImpl:()=>gI,notEqualImpl:()=>yI,prodImpl:()=>AI,rangeImpl:()=>qx,rsqrtImpl:()=>xI,sigmoidImpl:()=>jj,simpleAbsImpl:()=>K4,sliceImpl:()=>Ff,sparseFillEmptyRowsImpl:()=>vI,sparseReshapeImpl:()=>wI,sparseSegmentReductionImpl:()=>Xx,sqrtImpl:()=>Xj,squaredDifferenceImpl:()=>kI,stridedSliceImpl:()=>II,stringNGramsImpl:()=>SI,stringSplitImpl:()=>NI,stringToHashBucketFastImpl:()=>TI,subImpl:()=>CI,tileImpl:()=>EI,topKImpl:()=>$I,transposeImpl:()=>Hx,uniqueImpl:()=>FI});function K4(e){let t=new Float32Array(e.length);for(let a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}var nj=e=>{let{x:t}=e.inputs,a=e.backend;Ie(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),n=a.data.get(t.dataId).values;return r=K4(n),a.makeOutput(r,t.shape,t.dtype)},sj={kernelName:Do,backendName:"cpu",kernelFunc:nj};function qt(e){return(t,a,r,n,s)=>{let i=T.assertAndGetBroadcastShape(t,a),o=i.length,l=w.computeStrides(i),u=w.sizeFromShape(i),d=w.getTypedArrayFromDType(s,u),p=t.length,h=a.length,c=w.computeStrides(t),f=w.computeStrides(a),m=T.getBroadcastDims(t,i),g=T.getBroadcastDims(a,i);if(m.length+g.length===0)for(let y=0;y<d.length;++y)d[y]=e(r[y%r.length],n[y%n.length]);else for(let y=0;y<d.length;++y){let A=w.indexToLoc(y,o,l),x=A.slice(-p);m.forEach(N=>x[N]=0);let b=w.locToIndex(x,p,c),v=A.slice(-h);g.forEach(N=>v[N]=0);let S=w.locToIndex(v,h,f);d[y]=e(r[b],n[S])}return[d,i]}}function sr(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,o=a.makeTensorInfo(r.shape,"complex64"),l=a.data.get(o.dataId);return l.complexTensorInfos={real:a.makeTensorInfo(r.shape,"float32",s),imag:a.makeTensorInfo(n.shape,"float32",i)},o}var ij={kernelName:Mh,backendName:"cpu",kernelFunc:sr};function $f(e,t,a="float32"){if(a==="complex64"){let n=$f(e,t,"float32"),s=$f(e,t,"float32");return sr({inputs:{real:n,imag:s},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),a);return e.makeTensorInfo(t,a,r)}function Nn(e){let{inputs:t,backend:a}=e,{x:r}=t;return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var oj={kernelName:hi,backendName:"cpu",kernelFunc:Nn};function Co(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.data.get(r.dataId).complexTensorInfos.real,s=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,s)}var lj={kernelName:Vh,backendName:"cpu",kernelFunc:Co};function Us(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dtype:s}=r;if(s==="complex64"){if(n.dtype==="complex64")return Nn({inputs:{x:n},backend:a});let i=$f(a,n.shape,n.dtype),o=Us({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),l=sr({inputs:{real:o,imag:i},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}if(n.dtype==="complex64"){let i=Co({inputs:{input:n},backend:a}),o=Us({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(n.dtype,s)){let i=Nn({inputs:{x:n},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=a.data.get(n.dataId).values,o=Int32Array.from(i);return a.makeTensorInfo(n.shape,"int32",o)}if(s==="bool"){let i=a.data.get(n.dataId).values,o=w.toTypedArray([0],n.dtype),[l,u]=qt((d,p)=>d!==p?1:0)(n.shape,[],i,o,"bool");return a.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var uj={kernelName:Zs,backendName:"cpu",kernelFunc:Us};function ca(e,t,a,r){return a==null?({inputs:n,backend:s})=>{let{a:i,b:o}=n,l=s;Ie([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,p=i.dtype==="string"?T.fromUint8ToStringArray(u):u,h=i.dtype==="string"?T.fromUint8ToStringArray(d):d,c=r||i.dtype,[f,m]=t(i.shape,o.shape,p,h,c);return l.makeTensorInfo(m,c,f)}:({inputs:n,backend:s})=>{let{a:i,b:o}=n,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=Us({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(u.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,c=l.data.get(p.dataId).values,f=l.data.get(h.dataId).values,m=Us({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,A=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,b=l.data.get(A.dataId).values,[v,S,N]=a(i.shape,o.shape,c,f,x,b),E=l.makeTensorInfo(N,"float32",v),R=l.makeTensorInfo(N,"float32",S),P=sr({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),P}else{let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,p=r||i.dtype,[h,c]=t(i.shape,o.shape,u,d,p);return l.makeTensorInfo(c,p,h)}}}function Vx(e){return(t,a,r,n,s,i)=>{let o=T.assertAndGetBroadcastShape(t,a),l=w.sizeFromShape(o),u=o.length,d=w.computeStrides(o),p=w.getTypedArrayFromDType("float32",l),h=w.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),f=T.getBroadcastDims(a,o),m=T.mergeRealAndImagArrays(r,n),g=T.mergeRealAndImagArrays(s,i),y=t.length,A=w.computeStrides(t),x=a.length,b=w.computeStrides(a);if(c.length+f.length===0)for(let v=0;v<p.length;v++){let S=v%m.length,N=v%g.length,E=e(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);p[v]=E.real,h[v]=E.imag}else for(let v=0;v<p.length;v++){let S=w.indexToLoc(v,u,d),N=S.slice(-y);c.forEach(k=>N[k]=0);let E=w.locToIndex(N,y,A),R=S.slice(-x);f.forEach(k=>R[k]=0);let P=w.locToIndex(R,x,b),$=e(m[E*2],m[E*2+1],g[P*2],g[P*2+1]);p[v]=$.real,h[v]=$.imag}return[p,h,o]}}var Z4=qt((e,t)=>e+t),dj=Vx((e,t,a,r)=>({real:e+a,imag:t+r})),yp=ca(Yn,Z4,dj),hj={kernelName:Yn,backendName:"cpu",kernelFunc:yp};function Ux(e,t,a,r,n){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(n,a);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function Y4(e,t,a,r=!1){let n=e.shape[0],s=e.shape[1],i=Be([n,a],t.dtype);for(let o=0;o<n;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=a||(r?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}function Vi(e){return(t,a,r)=>{let n=w.getTypedArrayFromDType(a,t.length);for(let s=0;s<t.length;++s)n[s]=e(t[s],r);return n}}function dt(e,t,a){return({inputs:r,attrs:n,backend:s})=>{let{x:i}=r;if(Ie(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=w.sizeFromShape(i.shape),d=a||i.dtype,p=w.getArrayFromDType(d,u);for(let h=0;h<u;++h)p[h]=t(l[h],n);return o.makeTensorInfo(i.shape,d,p)}}function Ad(e,t,a){return({inputs:r,attrs:n,backend:s})=>{let{x:i}=r;if(Ie(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=a||i.dtype,d=t(l,u,n);return o.makeTensorInfo(i.shape,u,d)}}var J4=Vi(e=>Math.ceil(e)),pj=Ad(Ys,J4),cj={kernelName:Ys,backendName:"cpu",kernelFunc:pj};function Gx(e,t,a,r){let n=w.getArrayFromDType(a,w.sizeFromShape(t));if(r&&a!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);n.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=a==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let d=u*t[1]+s;for(let p=0;p<i.shape[1];++p)n[d+p]=o[l++]}s+=i.shape[1]})}return n}var Q4=qt((e,t)=>e===t?1:0),eI=ca(Go,Q4,null,"bool"),fj={kernelName:Go,backendName:"cpu",kernelFunc:eI},tI=Vi(e=>Math.exp(e)),aI=Ad(ii,tI,"float32"),mj={kernelName:ii,backendName:"cpu",kernelFunc:aI},rI=Vi(e=>Math.expm1(e)),gj=Ad(Ho,rI),yj={kernelName:Ho,backendName:"cpu",kernelFunc:gj},nI=Vi(e=>Math.floor(e)),Aj=Ad(oi,nI),xj={kernelName:oi,backendName:"cpu",kernelFunc:Aj};function sI(e,t,a,r,n,s,i,o,l){let u=Be([r,s],a);for(let d=0;d<r;d++){let p=[],h=0;for(let c=0;c<n;c++){let f=e[d*n+c];h+=f*i[c],p.push(f)}if(h<0||h>=l/s)throw new Error(`Invalid indices: ${p} does not index into ${o}`);for(let c=0;c<s;c++)u.values[d*s+c]=t.get(...t.indexToLoc(h*s+c))}return u}function iI(e,t,a){let r=Be(a,e.dtype);for(let n=0;n<r.size;++n){let s=r.indexToLoc(n).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}var oI=qt((e,t)=>e>t?1:0),bj=ca(Zo,oI,null,"bool"),vj={kernelName:Zo,backendName:"cpu",kernelFunc:bj},lI=qt((e,t)=>e>=t?1:0),wj=ca(di,lI,null,"bool"),kj={kernelName:di,backendName:"cpu",kernelFunc:wj},uI=qt((e,t)=>e<t?1:0),Ij=ca(Yo,uI,null,"bool"),Sj={kernelName:Yo,backendName:"cpu",kernelFunc:Ij},dI=qt((e,t)=>e<=t?1:0),Nj=ca(Jo,dI,null,"bool"),Tj={kernelName:Jo,backendName:"cpu",kernelFunc:Nj};function hI(e,t,a){let r=(t-e)/(a-1),n=w.makeZerosTypedArray(a,"float32");n[0]=e;for(let s=1;s<n.length;s++)n[s]=n[s-1]+r;return n}var pI=Vi(e=>Math.log(e)),Cj=Ad(ci,pI),Ej={kernelName:ci,backendName:"cpu",kernelFunc:Cj};function cI(e,t,a,r){let n=w.getTypedArrayFromDType(r,w.sizeFromShape(a));for(let s=0;s<n.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}n[s]=o}return n}var fI=qt((e,t)=>Math.max(e,t)),Rj=ca(mi,fI),$j={kernelName:mi,backendName:"cpu",kernelFunc:Rj},mI=qt((e,t)=>Math.min(e,t)),Fj=ca(xi,mI),Mj={kernelName:xi,backendName:"cpu",kernelFunc:Fj},jx=qt((e,t)=>e*t),_j=Vx((e,t,a,r)=>({real:e*a-t*r,imag:e*r+t*a})),Am=ca(vi,jx,_j),zj={kernelName:vi,backendName:"cpu",kernelFunc:Am};function gI(e,t,a){let r=w.createScalarValue(-1,a);return jx([],t,r,e,a)}function Oj(e){let{inputs:t,backend:a}=e,{x:r}=t;Ie(r,"neg");let n=a.data.get(r.dataId).values,[s,i]=gI(n,r.shape,r.dtype);return a.makeTensorInfo(i,r.dtype,s)}var Pj={kernelName:el,backendName:"cpu",kernelFunc:Oj},yI=qt((e,t)=>e!==t?1:0),Dj=ca(tl,yI,null,"bool"),Lj={kernelName:tl,backendName:"cpu",kernelFunc:Dj};function Hx(e,t,a,r,n){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(n),u=w.getTypedArrayFromDType(a,w.sizeFromShape(n));for(let d=0;d<i;++d){let p=w.indexToLoc(d,s,o),h=new Array(p.length);for(let f=0;f<h.length;f++)h[f]=p[r[f]];let c=w.locToIndex(h,s,l);u[c]=e[d]}return u}function Xa(e){let{inputs:t,attrs:a,backend:r}=e,{x:n}=t,{perm:s}=a;Ie(n,"transpose");let i=n.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=n.shape[s[d]];let l=r.data.get(n.dataId).values,u=Hx(l,n.shape,n.dtype,s,o);return{dataId:r.write(u,o,n.dtype),shape:o,dtype:n.dtype}}var Wj={kernelName:Di,backendName:"cpu",kernelFunc:Xa};function AI(e,t,a,r){let[n,s]=T.computeOutAndReduceShapes(e,r),i=ba(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(n),i),l=w.sizeFromShape(s);for(let u=0;u<o.length;++u){let d=u*l,p=1;for(let h=0;h<l;++h)p*=a[d+h];o[u]=p}return{outVals:o,outShape:n,outDtype:i}}function Bj(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ie(n,"prod");let o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=T.getAxesPermutation(l,o),d=l,p=n,h=[];u!=null&&(p=Xa({inputs:{x:n},backend:a,attrs:{perm:u}}),h.push(p),d=T.getInnerMostAxes(d.length,o));let c=a.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=AI(p.shape,p.dtype,c,d),y=m;return i&&(y=T.expandShapeToKeepDim(m,l)),h.forEach(A=>a.disposeIntermediateTensorInfo(A)),a.makeTensorInfo(y,g,f)}var Vj={kernelName:Si,backendName:"cpu",kernelFunc:Bj};function qx(e,t,a,r){let n=e===t,s=e<t&&a<0,i=t<e&&a>1;if(n||s||i)return w.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/a)),l=w.makeZerosTypedArray(o,r);t<e&&a===1&&(a=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+a;return l}var xI=Vi(e=>1/Math.sqrt(e)),Uj=Ad(Ei,xI),Gj={kernelName:Ei,backendName:"cpu",kernelFunc:Uj},jj=Vi(e=>1/(1+Math.exp(-e))),bI=dt($i,e=>1/(1+Math.exp(-e))),Hj={kernelName:$i,backendName:"cpu",kernelFunc:bI};function Ff(e,t,a,r,n){let s=Ft.isSliceContinous(r,t,a),i=w.sizeFromShape(a),o=w.computeStrides(r);if(s){let p=Ft.computeFlatOffset(t,o);return n==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let l=n==="string"?T.fromUint8ToStringArray(e):e,u=Be(r,n,l),d=Be(a,n);for(let p=0;p<d.size;++p){let h=d.indexToLoc(p),c=h.map((f,m)=>f+t[m]);d.set(u.get(...c),...h)}return n==="string"?T.fromStringArrayToUint8(d.values):d.values}function Eo(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,size:i}=r;Ie(n,"slice");let[o,l]=Ft.parseSliceParams(n,s,i);Ft.assertParamsValid(n,o,l);let u=a.data.get(n.dataId).values,d=Ff(u,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,d)}var qj={kernelName:pl,backendName:"cpu",kernelFunc:Eo};function vI(e,t,a,r,n,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),p=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(a,0),y=w.getArrayFromDType(n,0);return[g,[0,p],y,u,d]}let h=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*p];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],h=h&&y>=c,c=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){let g=e,y=r;for(let A=0;A<o;++A)d[A]=A;return[g,[o,p],y,u,d]}else{let g=f[l-1],y=w.getArrayFromDType(a,g*p),A=w.getArrayFromDType(n,g),x=new Array(l).fill(0);for(let b=0;b<o;++b){let v=e[b*p],S=x[v],N=(v===0?0:f[v-1])+S;x[v]++;for(let E=0;E<p;++E)y[N*p+E]=e[b*p+E];A[N]=r[b],d[b]=N}for(let b=0;b<l;++b)if(x[b]===0){let v=b===0?0:f[b-1];y[v*p+0]=b;for(let S=1;S<p;++S)y[v*p+S]=0;A[v]=i}return[y,[g,p],A,u,d]}}function wI(e,t,a,r,n){let s=w.sizeFromShape(r),i=t[0],o=n.length,l=[],u=1,d=-1;for(let m=0;m<o;++m){let g=n[m];if(g===-1){if(d!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(m,g));u*=g,l.push(g)}}if(d!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/u);if(u*m!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=m}if(w.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,h=[];if(p>0){h[p-1]=1;for(let m=p-2;m>=0;--m)h[m]=h[m+1]*r[m+1]}let c=[];if(o>0){c[o-1]=1;for(let m=o-2;m>=0;--m)c[m]=c[m+1]*l[m+1]}let f=w.getArrayFromDType(a,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<p;++y)g+=e[m*p+y]*h[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[f,[i,o],l]}function Xx(e,t,a,r,n,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?n[o-1]+1:0;if(d<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((A,x)=>A*x,1),c=w.getArrayFromDType(a,h);if(o===0)return d>0&&c.fill(i),[c,p];if(d<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=n[f];for(;;){let A=0;if(m<o){if(A=n[m],y===A){++m;continue}if(y>=A)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let x=f;x<m;++x){let b=r[x];if(b<0||b>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let v=0;v<u;v++)c[y*u+v]+=e[b*u+v]}if(s)for(let x=0;x<u;x++)c[y*u+x]/=m-f;if(f=m,++m,g=y+1,y=A,m>o)break}return g<d&&c.fill(i,g*u,d*u),[c,p]}var Xj=Vi(e=>Math.sqrt(e)),Kj=dt(Fi,e=>Math.sqrt(e)),Zj={kernelName:Fi,backendName:"cpu",kernelFunc:Kj},kI=qt((e,t)=>{let a=e-t;return a*a}),Yj=ca(zi,kI),Jj={kernelName:zi,backendName:"cpu",kernelFunc:Yj};function II(e,t,a,r){let n=Be(e,t.dtype);for(let s=0;s<n.size;s++){let i=n.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*a[l]+r[l];n.set(t.get(...o),...i)}return n}var Qj=class{constructor(e,t,a,r,n,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(a),this.rightPad=w.encodeString(r),this.padWidth=n,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let a=this.getPadWidth(t);return Math.max(0,e+2*a-t+1)}createNGrams(e,t,a,r,n,s){for(let i=0;i<n;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(n-(i+1))),d=s-(l+u),p=t+(l>0?0:i-o),h=0;h+=l*this.leftPad.length;for(let g=0;g<d;++g)h+=e[p+g].length;h+=u*this.rightPad.length,h+=(l+u+d-1)*this.separator.length,a[r+i]=new Uint8Array(h);let c=a[r+i],f=0,m=g=>g.forEach(y=>c[f++]=y);for(let g=0;g<l;++g)m(this.leftPad),m(this.separator);for(let g=0;g<d-1;++g)m(e[p+g]),m(this.separator);if(d>0){m(e[p+d-1]);for(let g=0;g<u;++g)m(this.separator),m(this.rightPad)}else{for(let g=0;g<u-1;++g)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let a=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let u=t[l]>=o;if(u=u&&t[l]<=a,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${a}]`);o=t[l]}if(o!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${o}`)}let n=r-1,s=w.getArrayFromDType("int32",r);if(a===0||r===0){let o=new Array(a);for(let l=0;l<=n;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=n;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[n]);for(let o=0;o<n;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(d=>{let p=t[o+1]-t[o],h=this.getNumNGrams(p,d);this.createNGrams(e,l,i,u,h,d),u+=h}),this.preserveShort&&u===s[o]){let d=t[o+1]-t[o];if(d===0)continue;let p=d+2*this.padWidth,h=1;this.createNGrams(e,l,i,u,h,p)}}return[i,s]}};function SI(e,t,a,r,n,s,i,o){return new Qj(a,r,n,s,i,o).compute(e,t)}function eH(e,t,a,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!a||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!a||e.length!==0)&&r.push(e);return}let n=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(n,s);(!a||i.length!==0)&&r.push(i),n=s+1}}function NI(e,t,a){let r=e.length,n=[],s=0,i=0,o=new Array(r);for(let h=0;h<r;++h){let c=n.length;eH(e[h],t,a,n);let f=n.length-c;o[h]=f,s+=f,i=Math.max(i,f)}let l=w.getArrayFromDType("int32",s*2),u=new Array(s),d=[r,i],p=0;for(let h=0;h<r;++h)for(let c=0;c<o[h];++c)l[p*2]=h,l[p*2+1]=c,u[p]=n[p],++p;return[l,u,d]}function TI(e,t){let a=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)a[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return a}var CI=qt((e,t)=>e-t),tH=Vx((e,t,a,r)=>({real:e-a,imag:t-r})),Kx=ca(Oi,CI,tH),aH={kernelName:Oi,backendName:"cpu",kernelFunc:Kx};function EI(e,t){let a=new Array(e.rank);for(let n=0;n<a.length;n++)a[n]=e.shape[n]*t[n];let r=Be(a,e.dtype);for(let n=0;n<r.values.length;++n){let s=r.indexToLoc(n),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[n]=e.values[o]}return r}var th=(e,t)=>{let a=t.value-e.value;return a===0?e.index-t.index:a};function RI(e,t,a=0,r=e.length-1){for(;r>a;){if(r-a>600){let o=r-a+1,l=t-a+1,u=Math.log(o),d=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*d*(o-d)/o)*Math.sign(l-o/2),h=Math.max(a,Math.floor(t-l*d/o+p)),c=Math.min(r,Math.floor(t+(o-l)*d/o+p));RI(e,t,h,c)}let n=e[t],s=a,i=r;for(w.swap(e,a,t),th(e[r],n)>0&&w.swap(e,a,r);s<i;){for(w.swap(e,s,i),s++,i--;th(e[s],n)<0;)s=s+1;for(;th(e[i],n)>0;)i=i-1}th(e[a],n)===0?w.swap(e,a,i):(i=i+1,w.swap(e,i,r)),i<=t&&(a=i+1),t<=i&&(r=i-1)}}function $I(e,t,a,r,n){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(a,i*r),u=w.getTypedArrayFromDType("int32",i*r);for(let p=0;p<i;p++){let h=p*o,c=e.subarray(h,h+o),f=new Array(c.length);c.forEach((A,x)=>f[x]={value:A,index:x}),r<f.length&&(RI(f,r),f=f.slice(0,r)),n&&f.sort(th);let m=p*r,g=l.subarray(m,m+r),y=u.subarray(m,m+r);for(let A=0;A<r;A++)g[A]=f[A].value,y[A]=f[A].index}let d=t.slice();return d[d.length-1]=r,[Be(d,a,l),Be(d,"int32",u)]}function FI(e,t,a,r){let n=w.parseAxisParam(t,a)[0],s=[1,a[0],1];for(let f=0;f<n;f++)s[0]*=a[f];s[1]=a[n];for(let f=n+1;f<a.length;f++)s[2]*=a[f];let i={},o=new Int32Array(a[n]),l=new ta(s,r,e),u=[],d=s[0]===1&&s[2]===1;for(let f=0;f<a[n];f++){let m;if(d)m=e[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let A=0;A<s[2];A++)g.push(l.get(y,f,A));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,u.push(f)}}let p=s.slice();p[1]=Object.keys(i).length;let h=new ta(p,r);u.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)h.set(l.get(g,f,y),g,m,y)});let c=a.slice();return c[n]=p[1],{outputValues:h.values,outputShape:c,indices:o}}var rH="0.0.0";dd("cpu",()=>new Bx,1);var MI=dt(si,e=>e>=0?e:Math.exp(e)-1),nH={kernelName:si,backendName:"cpu",kernelFunc:MI};function _I(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{alpha:s}=r;Ie([n],"leakyRelu");let i=w.sizeFromShape(n.shape),o=a.data.get(n.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return a.makeTensorInfo(n.shape,"float32",l)}var sH={kernelName:pi,backendName:"cpu",kernelFunc:_I},iH=qt((e,t)=>e<0?t*e:e);function zI(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t;Ie([r,n],"prelu");let s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,[o,l]=iH(r.shape,n.shape,s,i,"float32");return a.makeTensorInfo(l,"float32",o)}var oH={kernelName:Ii,backendName:"cpu",kernelFunc:zI},OI=dt(Ni,e=>Math.max(0,e)),lH={kernelName:Ni,backendName:"cpu",kernelFunc:OI},PI=dt(Ci,e=>Math.min(Math.max(0,e),6)),uH={kernelName:Ci,backendName:"cpu",kernelFunc:PI};function Zx(e,t,a,r,n){if(a==="linear")return Nn({inputs:{x:t},backend:e});if(a==="relu")return OI({inputs:{x:t},backend:e});if(a==="elu")return MI({inputs:{x:t},backend:e});if(a==="relu6")return PI({inputs:{x:t},backend:e});if(a==="prelu")return zI({inputs:{x:t,alpha:r},backend:e});if(a==="leakyrelu")return _I({inputs:{x:t},backend:e,attrs:{alpha:n}});if(a==="sigmoid")return bI({inputs:{x:t},backend:e});throw new Error(`Activation ${a} has not been implemented for the CPU backend.`)}function Ct(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{shape:s}=r,i=w.sizeFromShape(n.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),a.incRef(n.dataId);let u=a.data.get(n.dataId);if(u.complexTensorInfos!=null){let d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;d.shape=o,p.shape=o}return{dataId:n.dataId,shape:o,dtype:n.dtype}}var dH={kernelName:ol,backendName:"cpu",kernelFunc:Ct};function DI(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;Ie([n,s],"matMul");let l=n.shape.length,u=s.shape.length,d=i?n.shape[l-2]:n.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],h=i?n.shape[l-1]:n.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=n.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=kl.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,h]:[g,h,d],b=o?[y,c,p]:[y,p,c],v=Ct({inputs:{x:n},backend:a,attrs:{shape:x}}),S=Ct({inputs:{x:s},backend:a,attrs:{shape:b}}),N=i?v.shape[1]:v.shape[2],E=i?v.shape[2]:v.shape[1],R=o?S.shape[1]:S.shape[2],P=Math.max(g,y),$=a.data.get(v.dataId).values,k=a.data.get(S.dataId).values,_=w.computeStrides(v.shape),z=w.computeStrides(S.shape),[L,j,D]=i?[_[0],1,_[1]]:[_[0],_[1],1],[B,G,ee]=o?[1,z[1],z[0]]:[z[1],1,z[0]],Q=E*R,ne=Be([P,E,R],v.dtype),Y=ne.values,re=a.blockSize;for(let le=0;le<P;le++)for(let ye=0;ye<E;ye+=re)for(let xe=0;xe<R;xe+=re)for(let Ce=0;Ce<N;Ce+=re){let Re=Math.min(ye+re,E),Oe=Math.min(xe+re,R),We=Math.min(Ce+re,N);for(let Xe=ye;Xe<Re;Xe++)for(let rt=xe;rt<Oe;rt++){let st=0;for(let it=Ce;it<We;it++){let Fe=Math.min(le,g-1)*L,yt=Math.min(le,y-1)*ee,pt=$[Fe+Xe*j+it*D],wa=k[it*B+rt*G+yt];st+=pt*wa}Y[le*Q+(Xe*R+rt)]+=st}}return a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.makeTensorInfo(A,ne.dtype,ne.values)}var hH={kernelName:Ks,backendName:"cpu",kernelFunc:DI};function pH(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=r,h,c,f,m=[];h=DI({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:u},backend:a}),i&&(c=yp({inputs:{a:h,b:i},backend:a}),m.push(h),h=c),d&&(f=Zx(a,h,d,o,p),m.push(h),h=f);for(let g of m)a.disposeIntermediateTensorInfo(g);return h}var cH={kernelName:$s,backendName:"cpu",kernelFunc:pH},fH=dt(Pu,e=>Math.acos(e)),mH={kernelName:Pu,backendName:"cpu",kernelFunc:fH},gH=dt(Du,e=>Math.acosh(e)),yH={kernelName:Du,backendName:"cpu",kernelFunc:gH};function AH(e){let{inputs:t,backend:a}=e,r=t;Ie(t,"addN");let n=r.map(o=>a.data.get(o.dataId).values),s=Be(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=n[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return a.makeTensorInfo(s.shape,s.dtype,s.values)}var xH={kernelName:Hs,backendName:"cpu",kernelFunc:AH};function bH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ie(n,"all");let o=w.parseAxisParam(s,n.shape),l=o,u=T.getAxesPermutation(l,n.shape.length),d=n;u!=null&&(d=Xa({inputs:{x:n},backend:a,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,n.shape.length)),T.assertAxesAreInnerMostDims("all",l,d.shape.length);let[p,h]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(p),d.dtype),m=a.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let v=m[A+b];x=x&&v}f[y]=x}u!=null&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(p,d.dtype,f);if(i){let y=T.expandShapeToKeepDim(p,o),A=Ct({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),A}return g}var vH={kernelName:Lu,backendName:"cpu",kernelFunc:bH};function wH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ie(n,"any");let o=w.parseAxisParam(s,n.shape),l=o,u=T.getAxesPermutation(l,n.shape.length),d=n;u!=null&&(d=Xa({inputs:{x:n},backend:a,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,n.shape.length)),T.assertAxesAreInnerMostDims("any",l,d.shape.length);let[p,h]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(p),d.dtype),m=a.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let v=m[A+b];x=x||v}f[y]=x}u!=null&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(p,d.dtype,f);if(i){let y=T.expandShapeToKeepDim(p,o),A=Ct({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),A}return g}var kH={kernelName:Wu,backendName:"cpu",kernelFunc:wH};function IH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r;Ie(n,"argMax");let i=w.parseAxisParam(s,n.shape),o=T.getAxesPermutation(i,n.shape.length),l=n,u=[];o!=null&&(l=Xa({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,p]=T.computeOutAndReduceShapes(l.shape,i),h=w.sizeFromShape(d),c=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(p),m=a.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let v=m[y+b];v>A&&(A=v,x=b)}c[g]=x}return u.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(d,"int32",c)}var SH={kernelName:qs,backendName:"cpu",kernelFunc:IH};function NH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r;Ie(n,"argMin");let i=w.parseAxisParam(s,n.shape),o=T.getAxesPermutation(i,n.shape.length),l=n,u=[];o!=null&&(l=Xa({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,p]=T.computeOutAndReduceShapes(l.shape,i),h=w.sizeFromShape(d),c=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(p),m=a.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let v=m[y+b];v<A&&(A=v,x=b)}c[g]=x}return u.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(d,"int32",c)}var TH={kernelName:Bu,backendName:"cpu",kernelFunc:NH},CH=dt(Vu,e=>Math.asin(e)),EH={kernelName:Vu,backendName:"cpu",kernelFunc:CH},RH=dt(Uu,e=>Math.asinh(e)),$H={kernelName:Uu,backendName:"cpu",kernelFunc:RH},FH=dt(Gu,e=>Math.atan(e)),MH={kernelName:Gu,backendName:"cpu",kernelFunc:FH},_H=qt((e,t)=>Math.atan2(e,t)),zH=ca(Hu,_H),OH={kernelName:Hu,backendName:"cpu",kernelFunc:zH},PH=dt(ju,e=>Math.atanh(e)),DH={kernelName:ju,backendName:"cpu",kernelFunc:PH};function Yx(e,t,a,r,n,s){let i=n.strideHeight,o=n.strideWidth,l=n.dilationHeight,u=n.dilationWidth,d=n.effectiveFilterHeight,p=n.effectiveFilterWidth,h=n.padInfo.top,c=n.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Be(n.outShape,a),g=m.values,y=n.outShape[1]*n.outShape[2]*n.outShape[3],A=n.outShape[2]*n.outShape[3],x=n.outShape[3];for(let b=0;b<n.batchSize;++b){let v=b*y,S=b*r[0];for(let N=0;N<n.inChannels;++N)for(let E=0;E<n.outHeight;++E){let R=E*i-h,P=Math.max(0,R),$=Math.min(n.inHeight,d+R),k=v+E*A;for(let _=0;_<n.outWidth;++_){let z=_*o-c,L=Math.max(0,z),j=Math.min(n.inWidth,p+z),D=f,B=0,G=0;for(let Q=P;Q<$;Q+=l){let ne=S+Q*r[1];for(let Y=L;Y<j;Y+=u){let re=ne+Y*r[2],le=e[re+N];s==="max"&&le>D?D=le:s==="avg"&&(B+=le,G++)}if(isNaN(D))break}let ee=k+_*x+N;g[ee]=s==="avg"?B/G:D}}}return m}function LI(e,t,a,r,n=!1,s=!1){let i=Be(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Be(t,a,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let A=0;A<r.outHeight;++A){let x=A*o-c,b=x;for(;b<0;)b+=u;let v=Math.min(r.inHeight,p+x);for(let S=0;S<r.outWidth;++S){let N=S*l-f,E=N;for(;E<0;)E+=d;let R=Math.min(r.inWidth,h+N),P=Number.NEGATIVE_INFINITY,$=-1;for(let k=b;k<v;k+=u){let _=k-x;for(let z=E;z<R;z+=d){let L=z-N,j=m.get(g,k,z,y);j>P&&(P=j,n?$=s?((g*r.inHeight+k)*r.inWidth+z)*r.inChannels+y:(k*r.inWidth+z)*r.inChannels+y:$=_*h+L)}}i.set($,g,A,S,y)}}return i}function WI(e,t,a,r,n,s){let i=n.strideDepth,o=n.strideHeight,l=n.strideWidth,u=n.dilationDepth,d=n.dilationHeight,p=n.dilationWidth,h=n.effectiveFilterDepth,c=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=n.padInfo.front,g=n.padInfo.top,y=n.padInfo.left,A=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Be(n.outShape,a),b=x.values,v=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],S=n.outShape[2]*n.outShape[3]*n.outShape[4],N=n.outShape[3]*n.outShape[4],E=n.outShape[4];for(let R=0;R<n.batchSize;++R){let P=R*v,$=R*r[0];for(let k=0;k<n.inChannels;++k)for(let _=0;_<n.outDepth;++_){let z=_*i-m,L=z;for(;L<0;)L+=u;let j=Math.min(n.inDepth,h+z),D=P+_*S;for(let B=0;B<n.outHeight;++B){let G=B*o-g,ee=G;for(;ee<0;)ee+=d;let Q=Math.min(n.inHeight,c+G),ne=D+B*N;for(let Y=0;Y<n.outWidth;++Y){let re=Y*l-y,le=re;for(;le<0;)le+=p;let ye=Math.min(n.inWidth,f+re),xe=ne+Y*E,Ce=A,Re=0,Oe=0;for(let Xe=L;Xe<j;Xe+=u){let rt=$+Xe*r[1];for(let st=ee;st<Q;st+=d){let it=rt+st*r[2];for(let Fe=le;Fe<ye;Fe+=p){let yt=it+Fe*r[3],pt=e[yt+k];if(s==="max"&&pt>Ce?Ce=pt:s==="avg"&&(Re+=pt,Oe++),isNaN(Ce))break}if(isNaN(Ce))break}if(isNaN(Ce))break}let We=xe+k;b[We]=s==="avg"?Re/Oe:Ce}}}}return x}function LH(e,t){let a=Be(t.outShape,"int32"),r=t.strideDepth,n=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*r-h,x=A;for(;x<0;)x+=i;let b=Math.min(t.inDepth,u+A);for(let v=0;v<t.outHeight;++v){let S=v*n-c,N=S;for(;N<0;)N+=o;let E=Math.min(t.inHeight,d+S);for(let R=0;R<t.outWidth;++R){let P=R*s-f,$=P;for(;$<0;)$+=l;let k=Math.min(t.inWidth,p+P),_=Number.NEGATIVE_INFINITY,z=-1;for(let L=x;L<b;L+=i){let j=L-A;for(let D=N;D<E;D+=o){let B=D-S;for(let G=$;G<k;G+=l){let ee=G-P,Q=e.get(m,L,D,G,g);Q>=_&&(_=Q,z=j*d*p+B*d+ee)}}}a.set(z,m,y,v,R,g)}}}return a}function WH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;Ie(n,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(n.shape,s,i,u,o,l),p;if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))p=Nn({inputs:{x:n},backend:a});else{let h=a.data.get(n.dataId).values,c=w.computeStrides(n.shape),f=Yx(h,n.shape,n.dtype,c,d,"avg");p=a.makeTensorInfo(d.outShape,n.dtype,f.values)}return p}var BH={kernelName:Xs,backendName:"cpu",kernelFunc:WH};function VH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Ie(n,"avgPool3d");let d=T.computePool3DInfo(n.shape,s,i,1,o,l,u),p=a.data.get(n.dataId).values,h=WI(p,n.shape,n.dtype,w.computeStrides(n.shape),d,"avg");return a.makeTensorInfo(h.shape,"float32",h.values)}var UH={kernelName:Fh,backendName:"cpu",kernelFunc:VH};function GH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Ie([n,s],"avgPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),p=d.strideDepth,h=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,A=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterDepth,v=d.effectiveFilterHeight,S=d.effectiveFilterWidth,N=b-1-d.padInfo.front,E=S-1-d.padInfo.left,R=v-1-d.padInfo.top,P=Be(s.shape,"float32"),$=1/(f*m*g),k=a.bufferSync(n);for(let _=0;_<d.batchSize;++_)for(let z=0;z<d.inChannels;++z)for(let L=0;L<d.inDepth;++L)for(let j=0;j<d.inHeight;++j)for(let D=0;D<d.inWidth;++D){let B=L-N,G=j-R,ee=D-E,Q=0;for(let ne=0;ne<b;ne+=y){let Y=(B+ne)/p;if(!(Y<0||Y>=d.outDepth||Math.floor(Y)!==Y))for(let re=0;re<v;re+=A){let le=(G+re)/h;if(!(le<0||le>=d.outHeight||Math.floor(le)!==le))for(let ye=0;ye<S;ye+=x){let xe=(ee+ye)/c;xe<0||xe>=d.outWidth||Math.floor(xe)!==xe||(Q+=k.get(_,Y,le,xe,z))}}}P.set(Q*$,_,L,j,D,z)}return a.makeTensorInfo(P.shape,P.dtype,P.values)}var jH={kernelName:Kf,backendName:"cpu",kernelFunc:GH};function HH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s;Ie([n,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=T.computePool2DInfo(i.shape,o,l,1,u),p=d.strideHeight,h=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,A=d.effectiveFilterWidth,x=A-1-d.padInfo.left,b=y-1-d.padInfo.top,v=Be(i.shape,"float32"),S=1/(c*f),N=a.data.get(n.dataId).values,E=Be(n.shape,"float32",N);for(let R=0;R<d.batchSize;++R)for(let P=0;P<d.inChannels;++P)for(let $=0;$<d.inHeight;++$)for(let k=0;k<d.inWidth;++k){let _=$-b,z=k-x,L=0;for(let j=0;j<y;j+=m){let D=(_+j)/p;if(!(D<0||D>=d.outHeight||Math.floor(D)!==D))for(let B=0;B<A;B+=g){let G=(z+B)/h;G<0||G>=d.outWidth||Math.floor(G)!==G||(L+=E.get(R,D,G,P))}}v.set(L*S,R,$,k,P)}return a.makeTensorInfo(v.shape,v.dtype,v.values)}var qH={kernelName:Xf,backendName:"cpu",kernelFunc:HH};function XH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ie([n,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);let d=a.data.get(n.dataId).values,p=a.data.get(o.dataId).values,h=a.data.get(l.dataId).values,c=s?a.data.get(s.dataId).values:new Float32Array([1]),f=i?a.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=c.length,A=h.length,x=p.length,b=0,v=0,S=0,N=0;for(let E=0;E<d.length;++E)m[E]=f[b++]+(d[E]-p[v++])*c[S++]/Math.sqrt(h[N++]+u),b>=g&&(b=0),v>=x&&(v=0),S>=y&&(S=0),N>=A&&(N=0);return a.makeTensorInfo(n.shape,n.dtype,m)}var KH={kernelName:ui,backendName:"cpu",kernelFunc:XH};function ZH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r;Ie([n],"batchToSpaceND");let o=s.reduce((y,A)=>y*A),l=T.getReshaped(n.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(n.shape,s,o),p=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(d,i,s.length),c=Ct({inputs:{x:n},backend:a,attrs:{shape:l}}),f=Xa({inputs:{x:c},backend:a,attrs:{perm:u}}),m=Ct({inputs:{x:f},backend:a,attrs:{shape:d}}),g=Eo({inputs:{x:m},backend:a,attrs:{begin:p,size:h}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var YH={kernelName:Lo,backendName:"cpu",kernelFunc:ZH};function JH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i}=r,o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,u=Ux(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}var QH={kernelName:Zf,backendName:"cpu",kernelFunc:JH};function eq(e){let{inputs:t,backend:a}=e,{s0:r,s1:n}=t,s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var tq={kernelName:Yf,backendName:"cpu",kernelFunc:eq},aq=dt(Jn,(e,t)=>{let a=t;return e>a.clipValueMax?a.clipValueMax:e<a.clipValueMin?a.clipValueMin:e}),rq={kernelName:Jn,backendName:"cpu",kernelFunc:aq},nq=e=>{let{x:t}=e.inputs,a=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),n=a.data.get(t.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let d=o[u],p=l[u];r[u]=Math.hypot(d,p)}return a.makeOutput(r,t.shape,"float32")},sq={kernelName:_h,backendName:"cpu",kernelFunc:nq};function Ru(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.data.get(r.dataId).complexTensorInfos.imag,s=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,s)}var iq={kernelName:Dh,backendName:"cpu",kernelFunc:Ru};function $u(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r,s=w.parseAxisParam(n,t[0].shape)[0],i=T.computeOutShape(t.map(m=>m.shape),s);if(w.sizeFromShape(i)===0)return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>w.sizeFromShape(m.shape)>0);if(o.length===1)return Nn({inputs:{x:o[0]},backend:a});let l=o.map(m=>m.shape);if(T.assertParamsConsistent(l,s),o[0].dtype==="complex64"){let m=o.map(b=>Co({inputs:{input:b},backend:a})),g=o.map(b=>Ru({inputs:{input:b},backend:a})),y=$u({inputs:m,backend:a,attrs:{axis:s}}),A=$u({inputs:g,backend:a,attrs:{axis:s}}),x=sr({inputs:{real:y,imag:A},backend:a});return m.forEach(b=>a.disposeIntermediateTensorInfo(b)),g.forEach(b=>a.disposeIntermediateTensorInfo(b)),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(A),x}let u=o.map(m=>{let g=w.sizeFromShape(m.shape.slice(s));return Ct({inputs:{x:m},backend:a,attrs:{shape:[-1,g]}})}),d=u.map(m=>({vals:a.data.get(m.dataId).values,shape:m.shape}));i=T.computeOutShape(u.map(m=>m.shape),1);let p=u[0].shape[0]===1,h=Gx(d,i,t[0].dtype,p),c=T.computeOutShape(o.map(m=>m.shape),s),f=a.makeTensorInfo(c,t[0].dtype,h);return u.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var oq={kernelName:Wo,backendName:"cpu",kernelFunc:$u};function BI(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;Ie([n,s],"conv2d");let p=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!1,p),c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,A=h.padInfo.top,x=h.dataFormat==="channelsLast",b=new ta(h.outShape,n.dtype),v=w.computeStrides(n.shape),S=w.computeStrides(s.shape),N=v[0],E=x?v[1]:v[2],R=x?v[2]:1,P=x?1:v[1],$=b.strides[0],k=x?b.strides[1]:b.strides[2],_=x?b.strides[2]:1,z=x?1:b.strides[1],L=a.data.get(n.dataId).values,j=a.data.get(s.dataId).values,D=b.values;for(let B=0;B<h.batchSize;++B){let G=B*N,ee=B*$;for(let Q=0;Q<h.outHeight;++Q){let ne=ee+Q*k,Y=Q*h.strideHeight-A;for(let re=0;re<c;++re){let le=Y+re*m;if(le<0||le>=h.inHeight)continue;let ye=re*S[0],xe=G+le*E;for(let Ce=0;Ce<h.outWidth;++Ce){let Re=ne+Ce*_,Oe=Ce*h.strideWidth-y;for(let We=0;We<f;++We){let Xe=Oe+We*g;if(Xe<0||Xe>=h.inWidth)continue;let rt=ye+We*S[1],st=xe+Xe*R,it=rt;for(let Fe=0;Fe<h.inChannels;++Fe){let yt=L[st+Fe*P];for(let pt=0;pt<h.outChannels;++pt)D[Re+pt*z]+=yt*j[it+pt];it+=h.outChannels}}}}}}return a.makeTensorInfo(b.shape,b.dtype,D)}var lq={kernelName:Js,backendName:"cpu",kernelFunc:BI};function uq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;Ie([n,s],"conv2dBackpropFilter");let p=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(n.shape,d,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=h.dataFormat==="channelsLast",A=new ta(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,v=a.data.get(n.dataId).values,S=a.data.get(s.dataId).values,N=new ta(n.shape,n.dtype,v),E=new ta(s.shape,s.dtype,S);for(let R=0;R<m;++R){let P=Math.max(0,Math.ceil((b-R)/c)),$=Math.min(h.outHeight,(h.inHeight+b-R)/c);for(let k=0;k<g;++k){let _=Math.max(0,Math.ceil((x-k)/f)),z=Math.min(h.outWidth,(h.inWidth+x-k)/f);for(let L=0;L<h.inChannels;++L)for(let j=0;j<h.outChannels;++j){let D=0;for(let B=0;B<h.batchSize;++B)for(let G=P;G<$;++G){let ee=R+G*c-b;for(let Q=_;Q<z;++Q){let ne=k+Q*f-x;y?D+=N.get(B,ee,ne,L)*E.get(B,G,Q,j):D+=N.get(B,L,ee,ne)*E.get(B,j,G,Q)}}A.set(D,R,k,L,j)}}}return a.makeTensorInfo(A.shape,A.dtype,A.values)}var dq={kernelName:Jf,backendName:"cpu",kernelFunc:uq};function hq(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;Ie([n,s],"conv2dBackpropInput");let p=w.computeStrides(s.shape),h=w.computeStrides(n.shape),c=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),m=new ta(f.inShape,"float32"),g=m.values,y=a.data.get(n.dataId).values,A=a.data.get(s.dataId).values,[x,b,v]=p,{batchSize:S,filterHeight:N,filterWidth:E,inChannels:R,inHeight:P,inWidth:$,outChannels:k,outHeight:_,outWidth:z,strideHeight:L,strideWidth:j}=f;c=f.dataFormat;let D=N-1-f.padInfo.top,B=E-1-f.padInfo.left,G=c==="channelsLast",ee=m.strides[0],Q=G?m.strides[1]:m.strides[2],ne=G?m.strides[2]:1,Y=G?1:m.strides[1],re=h[0],le=G?h[1]:h[2],ye=G?h[2]:1,xe=G?1:h[1];for(let Ce=0;Ce<S;++Ce)for(let Re=0;Re<R;++Re)for(let Oe=0;Oe<P;++Oe){let We=Oe-D,Xe=Math.max(0,Math.ceil(We/L)),rt=Math.min(_,(N+We)/L);for(let st=0;st<$;++st){let it=st-B,Fe=Math.max(0,Math.ceil(it/j)),yt=Math.min(z,(E+it)/j),pt=0;for(let sa=Xe;sa<rt;++sa){let Wa=sa*L-We;for(let Kt=Fe;Kt<yt;++Kt){let ia=Kt*j-it,Lr=re*Ce+le*sa+ye*Kt,Ba=x*(N-1-Wa)+b*(E-1-ia)+v*Re;for(let Zt=0;Zt<k;++Zt){let dr=y[Lr+xe*Zt],hr=A[Ba+Zt];pt+=dr*hr}}}let wa=ee*Ce+Q*Oe+ne*st+Y*Re;g[wa]=pt}}return a.makeTensorInfo(m.shape,m.dtype,m.values)}var pq={kernelName:Qs,backendName:"cpu",kernelFunc:hq};function cq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Ie([n,s],"conv3d");let u=T.computeConv3DInfo(n.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,x=g.top,b=new ta(u.outShape,n.dtype),v=a.data.get(n.dataId).values,S=a.data.get(s.dataId).values,N=b.values,E=w.computeStrides(n.shape),R=w.computeStrides(s.shape);for(let P=0;P<u.batchSize;++P){let $=P*E[0],k=P*b.strides[0];for(let _=0;_<u.outDepth;++_){let z=k+_*b.strides[1],L=_*u.strideDepth-y;for(let j=0;j<d;++j){let D=L+j*c;if(D<0||D>=u.inDepth)continue;let B=j*R[0],G=$+D*E[1];for(let ee=0;ee<u.outHeight;++ee){let Q=z+ee*b.strides[2],ne=ee*u.strideHeight-x;for(let Y=0;Y<p;++Y){let re=ne+Y*f;if(re<0||re>=u.inHeight)continue;let le=B+Y*R[1],ye=G+re*E[2];for(let xe=0;xe<u.outWidth;++xe){let Ce=Q+xe*u.outChannels,Re=xe*u.strideWidth-A;for(let Oe=0;Oe<h;++Oe){let We=Re+Oe*m;if(We<0||We>=u.inWidth)continue;let Xe=le+Oe*R[2],rt=ye+We*u.inChannels,st=Xe;for(let it=0;it<u.inChannels;++it){let Fe=v[rt+it];for(let yt=0;yt<u.outChannels;++yt)N[Ce+yt]+=Fe*S[st+yt];st+=u.outChannels}}}}}}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}var fq={kernelName:zh,backendName:"cpu",kernelFunc:cq};function mq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Ie([n,s],"conv3dBackpropFilterV2");let u=w.computeStrides(n.shape),d=w.computeStrides(s.shape),p=T.computeConv3DInfo(n.shape,l,i,1,o),h=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,A=new ta(p.filterShape,"float32"),x=A.values,[b,v,S,N]=A.strides,E=a.data.get(s.dataId).values,[R,P,$,k]=d,_=a.data.get(n.dataId).values,[z,L,j,D]=u,B=p.padInfo.front,G=p.padInfo.left,ee=p.padInfo.top;for(let Q=0;Q<m;++Q){let ne=Math.max(0,Math.ceil((B-Q)/h)),Y=Math.min(p.outDepth,(p.inDepth+B-Q)/h),re=Q*b;for(let le=0;le<g;++le){let ye=Math.max(0,Math.ceil((ee-le)/c)),xe=Math.min(p.outHeight,(p.inHeight+ee-le)/c),Ce=le*v+re;for(let Re=0;Re<y;++Re){let Oe=Math.max(0,Math.ceil((G-Re)/f)),We=Math.min(p.outWidth,(p.inWidth+G-Re)/f),Xe=Re*S+Ce;for(let rt=0;rt<p.inChannels;++rt){let st=rt*N+Xe;for(let it=0;it<p.outChannels;++it){let Fe=0;for(let yt=0;yt<p.batchSize;++yt){let pt=yt*z,wa=yt*R;for(let sa=ne;sa<Y;++sa){let Wa=(Q+sa*h-B)*L+pt,Kt=sa*P+wa;for(let ia=ye;ia<xe;++ia){let Lr=(le+ia*c-ee)*j+Wa,Ba=ia*$+Kt;for(let Zt=Oe;Zt<We;++Zt){let dr=(Re+Zt*f-G)*D+Lr,hr=Zt*k+Ba;Fe+=_[dr+rt]*E[hr+it]}}}}x[st+it]=Fe}}}}}return a.makeTensorInfo(A.shape,A.dtype,A.values)}var gq={kernelName:Qf,backendName:"cpu",kernelFunc:mq};function yq(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Ie([n],"conv3dBackpropInputV2");let u=w.computeStrides(n.shape),d=w.computeStrides(s.shape),p=T.computeConv3DInfo(l,s.shape,o,1,i),h=new ta(p.inShape,"float32"),c=h.values,[f,m,g,y]=h.strides,A=a.data.get(n.dataId).values,[x,b,v,S]=u,N=a.data.get(s.dataId).values,[E,R,P,$]=d,{batchSize:k,filterDepth:_,filterHeight:z,filterWidth:L,inChannels:j,inDepth:D,inHeight:B,inWidth:G,outChannels:ee,outDepth:Q,outHeight:ne,outWidth:Y,strideDepth:re,strideHeight:le,strideWidth:ye}=p,xe=_-1-p.padInfo.front,Ce=z-1-p.padInfo.top,Re=L-1-p.padInfo.left;for(let Oe=0;Oe<k;++Oe)for(let We=0;We<j;++We)for(let Xe=0;Xe<D;++Xe){let rt=Xe-xe,st=Math.max(0,Math.ceil(rt/re)),it=Math.min(Q,(_+rt)/re);for(let Fe=0;Fe<B;++Fe){let yt=Fe-Ce,pt=Math.max(0,Math.ceil(yt/le)),wa=Math.min(ne,(z+yt)/le);for(let sa=0;sa<G;++sa){let Wa=sa-Re,Kt=Math.max(0,Math.ceil(Wa/ye)),ia=Math.min(Y,(L+Wa)/ye),Lr=0;for(let Ba=st;Ba<it;++Ba){let Zt=Ba*re-rt;for(let dr=pt;dr<wa;++dr){let hr=dr*le-yt;for(let ls=Kt;ls<ia;++ls){let Xi=ls*ye-Wa,Mp=x*Oe+b*Ba+v*dr+S*ls,us=E*(_-1-Zt)+R*(z-1-hr)+P*(L-1-Xi)+$*We;for(let Fn=0;Fn<ee;++Fn){let _d=A[Mp+Fn],zl=N[us+Fn];Lr+=_d*zl}}}}c[f*Oe+m*Xe+g*Fe+y*sa+We]=Lr}}}return a.makeTensorInfo(h.shape,h.dtype,h.values)}var Aq={kernelName:e0,backendName:"cpu",kernelFunc:yq},xq=dt(ei,e=>Math.cos(e)),bq={kernelName:ei,backendName:"cpu",kernelFunc:xq},vq=dt(ti,e=>Math.cosh(e)),wq={kernelName:ti,backendName:"cpu",kernelFunc:vq};function kq(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,p,h,c]=n.shape,f=s.shape[0],[m,g]=o,y=Be([f,m,g,c],"float32"),A=a.data.get(s.dataId).values,x=a.data.get(i.dataId).values,b=a.data.get(n.dataId).values,v=w.computeStrides(n.shape),S=w.computeStrides(y.shape);for(let N=0;N<f;N++){let E=N*4,R=A[E],P=A[E+1],$=A[E+2],k=A[E+3],_=x[N];if(_>=d)continue;let z=m>1?($-R)*(p-1)/(m-1):0,L=g>1?(k-P)*(h-1)/(g-1):0;for(let j=0;j<m;j++){let D=m>1?R*(p-1)+j*z:.5*(R+$)*(p-1);if(D<0||D>p-1){for(let B=0;B<g;B++)for(let G=0;G<c;G++){let ee=G+B*S[2]+j*S[1]+N*S[0];y.values[ee]=u}continue}if(l==="bilinear"){let B=Math.floor(D),G=Math.ceil(D),ee=D-B;for(let Q=0;Q<g;Q++){let ne=g>1?P*(h-1)+Q*L:.5*(P+k)*(h-1);if(ne<0||ne>h-1){for(let ye=0;ye<c;ye++){let xe=ye+Q*S[2]+j*S[1]+N*S[0];y.values[xe]=u}continue}let Y=Math.floor(ne),re=Math.ceil(ne),le=ne-Y;for(let ye=0;ye<c;ye++){let xe=ye+Y*v[2]+B*v[1]+_*v[0],Ce=b[xe];xe=ye+re*v[2]+B*v[1]+_*v[0];let Re=b[xe];xe=ye+Y*v[2]+G*v[1]+_*v[0];let Oe=b[xe];xe=ye+re*v[2]+G*v[1]+_*v[0];let We=b[xe],Xe=Ce+(Re-Ce)*le,rt=Oe+(We-Oe)*le;xe=ye+Q*S[2]+j*S[1]+N*S[0],y.values[xe]=Xe+(rt-Xe)*ee}}}else for(let B=0;B<g;++B){let G=g>1?P*(h-1)+B*L:.5*(P+k)*(h-1);if(G<0||G>h-1){for(let ne=0;ne<c;ne++){let Y=ne+B*S[2]+j*S[1]+N*S[0];y.values[Y]=u}continue}let ee=Math.round(G),Q=Math.round(D);for(let ne=0;ne<c;ne++){let Y=ne+ee*v[2]+Q*v[1]+_*v[0],re=ne+B*S[2]+j*S[1]+N*S[0];y.values[re]=b[Y]}}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var Iq={kernelName:Vo,backendName:"cpu",kernelFunc:kq};function Sq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r;Ie(n,"cumprod");let l=T.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=Xa({inputs:{x:n},backend:a,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,n.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=ba(u.dtype,"int32"),h=w.makeOnesTypedArray(w.sizeFromShape(u.shape),p),c=a.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(y,A)=>y+f-A-1:(y,A)=>y+A;for(let y=0;y<c.length;y+=f)for(let A=0;A<f;A++){let x=m(y,A);if(A===0)h[x]=i?1:c[x];else{let b=m(y,A-1);h[x]=i?c[b]*h[b]:c[x]*h[b]}}let g=a.makeTensorInfo(u.shape,p,h);if(l!=null){let y=T.getUndoAxesPermutation(l),A=Xa({inputs:{x:g},backend:a,attrs:{perm:y}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(u),A}return g}var Nq={kernelName:Bo,backendName:"cpu",kernelFunc:Sq};function Tq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r;Ie(n,"cumsum");let l=T.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=Xa({inputs:{x:n},backend:a,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,n.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=ba(u.dtype,"int32"),h=w.makeZerosTypedArray(w.sizeFromShape(u.shape),p),c=a.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(y,A)=>y+f-A-1:(y,A)=>y+A;for(let y=0;y<c.length;y+=f)for(let A=0;A<f;A++){let x=m(y,A);if(A===0)h[x]=i?0:c[x];else{let b=m(y,A-1);h[x]=i?c[b]+h[b]:c[x]+h[b]}}let g=a.makeTensorInfo(u.shape,p,h);if(l!=null){let y=T.getUndoAxesPermutation(l),A=Xa({inputs:{x:g},backend:a,attrs:{perm:y}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(u),A}return g}var Cq={kernelName:ai,backendName:"cpu",kernelFunc:Tq};function Eq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i,binaryOutput:o}=r;if(n.shape.length===1){let l=a.data.get(n.dataId).values,u=a.data.get(s.dataId).values,d=Ux(l,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}else if(n.shape.length===2){let l=a.bufferSync(n),u=a.bufferSync(s),d=Y4(l,u,i,o);return a.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var Rq={kernelName:t0,backendName:"cpu",kernelFunc:Eq};function $q(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockSize:s,dataFormat:i}=r;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=n.shape[0],l=n.shape[1],u=n.shape[2],d=n.shape[3],p=l*s,h=u*s,c=d/(s*s),f=a.data.get(n.dataId).values,m=new Float32Array(o*p*h*c),g=0;for(let y=0;y<o;++y)for(let A=0;A<p;++A){let x=Math.floor(A/s),b=A%s;for(let v=0;v<h;++v){let S=Math.floor(v/s),N=v%s,E=(b*s+N)*c;for(let R=0;R<c;++R){let P=R+E+d*(S+u*(x+l*y));m[g++]=f[P]}}}return a.makeTensorInfo([o,p,h,c],n.dtype,m)}var Fq={kernelName:Uo,backendName:"cpu",kernelFunc:$q};function VI(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Ie([n,s],"depthwiseConv2DNative");let d=w.computeStrides(n.shape),p=w.computeStrides(s.shape),h=l;h==null&&(h=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let c=T.computeConv2DInfo(n.shape,s.shape,i,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=c,x=A.left,b=A.top,v=c.outChannels/c.inChannels,S=new ta(c.outShape,n.dtype),N=a.data.get(n.dataId).values,E=a.data.get(s.dataId).values,R=S.values;for(let P=0;P<c.batchSize;++P){let $=P*d[0],k=P*S.strides[0];for(let _=0;_<c.outHeight;++_){let z=k+_*S.strides[1],L=_*c.strideHeight-b;for(let j=0;j<f;++j){let D=L+j*g;if(D<0||D>=c.inHeight)continue;let B=j*p[0],G=$+D*d[1];for(let ee=0;ee<c.outWidth;++ee){let Q=z+ee*S.strides[2],ne=ee*c.strideWidth-x;for(let Y=0;Y<m;++Y){let re=ne+Y*y;if(re<0||re>=c.inWidth)continue;let le=B+Y*p[1],ye=G+re*c.inChannels,xe=Q,Ce=le;for(let Re=0;Re<c.inChannels;++Re){let Oe=N[ye+Re];for(let We=0;We<v;++We)R[xe+We]+=Oe*E[Ce+We];xe+=v,Ce+=v}}}}}}return a.makeTensorInfo(S.shape,S.dtype,S.values)}var Mq={kernelName:ri,backendName:"cpu",kernelFunc:VI};function _q(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;Ie([n,s],"depthwiseConv2dNativeBackpropFilter");let p=T.computeConv2DInfo(n.shape,d,i,o,l,u,!0),{strideHeight:h,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new ta(p.filterShape,"float32"),y=p.padInfo.left,A=p.padInfo.top,x=p.outChannels/p.inChannels,b=a.data.get(n.dataId).values,v=new ta(n.shape,n.dtype,b),S=a.data.get(s.dataId).values,N=new ta(s.shape,s.dtype,S);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((A-E)/h)),P=Math.min(p.outHeight,(p.inHeight+A-E)/h);for(let $=0;$<m;++$){let k=Math.max(0,Math.ceil((y-$)/c)),_=Math.min(p.outWidth,(p.inWidth+y-$)/c);for(let z=0;z<p.outChannels;++z){let L=Math.trunc(z/x),j=z%x,D=0;for(let B=0;B<p.batchSize;++B)for(let G=R;G<P;++G){let ee=E+G*h-A;for(let Q=k;Q<_;++Q){let ne=$+Q*c-y;D+=v.get(B,ee,ne,L)*N.get(B,G,Q,z)}}g.set(D,E,$,L,j)}}}return a.makeTensorInfo(g.shape,g.dtype,g.values)}var zq={kernelName:a0,backendName:"cpu",kernelFunc:_q};function Oq(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;Ie([n,s],"depthwiseConv2DNativeBackpropInput");let p=w.computeStrides(n.shape),h=w.computeStrides(s.shape),c=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new ta(c.inShape,"float32"),m=f.values,[g,y,A]=f.strides,x=a.data.get(n.dataId).values,[b,v,S]=p,N=a.data.get(s.dataId).values,[E,R,P]=h,{batchSize:$,filterHeight:k,filterWidth:_,inChannels:z,inHeight:L,inWidth:j,outChannels:D,outHeight:B,outWidth:G,strideHeight:ee,strideWidth:Q}=c,ne=k-1-c.padInfo.top,Y=_-1-c.padInfo.left,re=D/z;for(let le=0;le<$;++le)for(let ye=0;ye<z;++ye)for(let xe=0;xe<L;++xe){let Ce=xe-ne,Re=Math.max(0,Math.ceil(Ce/ee)),Oe=Math.min(B,(k+Ce)/ee);for(let We=0;We<j;++We){let Xe=We-Y,rt=Math.max(0,Math.ceil(Xe/Q)),st=Math.min(G,(_+Xe)/Q),it=0;for(let Fe=Re;Fe<Oe;++Fe){let yt=Fe*ee-Ce;for(let pt=rt;pt<st;++pt){let wa=pt*Q-Xe,sa=b*le+v*Fe+S*pt,Wa=E*(k-1-yt)+R*(_-1-wa)+P*ye;for(let Kt=0;Kt<re;++Kt){let ia=ye*re+Kt,Lr=x[sa+ia],Ba=N[Wa+Kt];it+=Lr*Ba}}}m[g*le+y*xe+A*We+ye]=it}}return a.makeTensorInfo(f.shape,f.dtype,f.values)}var Pq={kernelName:r0,backendName:"cpu",kernelFunc:Oq};function Dq(e){let{inputs:t,backend:a}=e,{x:r}=t,n=w.sizeFromShape(r.shape),s=a.data.get(r.dataId).values,i=Be([n,n],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*n+u]=s[u];let l=[...r.shape,...r.shape];return a.makeTensorInfo(l,i.dtype,i.values)}var Lq={kernelName:n0,backendName:"cpu",kernelFunc:Dq},Wq={kernelName:Oh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n}=e,{strides:s,pad:i,dilations:o}=a,l=t,u=l.data.get(r.dataId).values,d=r.shape.length,p=l.data.get(n.dataId).values,h=n.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:S,filterWidth:N,dilationHeight:E,dilationWidth:R,outShape:P}=T.computeDilation2DInfo(r.shape,n.shape,s,i,"NHWC",o),$=w.sizeFromShape(P),k=P.length,_=w.getArrayFromDType(r.dtype,$);for(let z=0;z<c;++z)for(let L=0;L<y;++L){let j=L*b-x.top;for(let D=0;D<A;++D){let B=D*v-x.left;for(let G=0;G<g;++G){let ee=Number.MIN_SAFE_INTEGER;for(let ne=0;ne<S;++ne){let Y=j+ne*E;if(Y>=0&&Y<f)for(let re=0;re<N;++re){let le=B+re*R;if(le>=0&&le<m){let ye=w.locToIndex([z,Y,le,G],d,w.computeStrides(r.shape)),xe=w.locToIndex([ne,re,G],h,w.computeStrides(n.shape)),Ce=u[ye]+p[xe];Ce>ee&&(ee=Ce)}}}let Q=w.locToIndex([z,L,D,G],k,w.computeStrides(P));_[Q]=ee}}}return{dataId:l.write(w.toTypedArray(_,r.dtype),P,r.dtype),shape:P,dtype:r.dtype}}},Bq={kernelName:df,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n,dy:s}=e,{strides:i,pad:o,dilations:l}=a,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),p=w.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:S,dilationHeight:N,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(r.shape,n.shape,i,o,"NHWC",l);w.assert(s.rank===R.length,()=>`Error in ${df}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let P=w.toNestedArray(R,u.data.get(s.dataId).values),$=w.makeZerosNestedTypedArray(n.shape,n.dtype);for(let k=0;k<h;++k)for(let _=0;_<g;++_){let z=_*x-A.top;for(let L=0;L<y;++L){let j=L*b-A.left;for(let D=0;D<m;++D){let B=Number.MIN_SAFE_INTEGER,G=0,ee=0;for(let Q=0;Q<v;++Q){let ne=z+Q*N;if(ne>=0&&ne<c)for(let Y=0;Y<S;++Y){let re=j+Y*E;if(re>=0&&re<f){let le=d[k][ne][re][D]+p[Q][Y][D];le>B&&(B=le,G=Q,ee=Y)}}}$[G][ee][D]+=P[k][_][L][D]}}}return{dataId:u.write(w.toTypedArray($,r.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Vq={kernelName:uf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n,dy:s}=e,{strides:i,pad:o,dilations:l}=a,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),p=w.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:S,dilationHeight:N,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(r.shape,n.shape,i,o,"NHWC",l);w.assert(s.rank===R.length,()=>`Error in ${uf}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let P=w.toNestedArray(R,u.data.get(s.dataId).values),$=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let k=0;k<h;++k)for(let _=0;_<g;++_){let z=_*x-A.top;for(let L=0;L<y;++L){let j=L*b-A.left;for(let D=0;D<m;++D){let B=Number.MIN_SAFE_INTEGER,G=z<0?0:z,ee=j<0?0:j;for(let Q=0;Q<v;++Q){let ne=z+Q*N;if(ne>=0&&ne<c)for(let Y=0;Y<S;++Y){let re=j+Y*E;if(re>=0&&re<f){let le=d[k][ne][re][D]+p[Q][Y][D];le>B&&(B=le,G=ne,ee=re)}}}$[k][G][ee][D]+=P[k][_][L][D]}}}return{dataId:u.write(w.toTypedArray($,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Ap(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ie(n,"sum");let o;n.dtype==="bool"?o=Us({inputs:{x:n},backend:a,attrs:{dtype:"int32"}}):o=Nn({inputs:{x:n},backend:a});let l=o.shape.length,u=w.parseAxisParam(s,o.shape),d=T.getAxesPermutation(u,l),p=u,h=o;d!=null&&(h=Xa({inputs:{x:o},backend:a,attrs:{perm:d}}),p=T.getInnerMostAxes(p.length,l)),T.assertAxesAreInnerMostDims("sum",p,h.shape.length);let[c,f]=T.computeOutAndReduceShapes(h.shape,p),m=T.upcastType(h.dtype,"int32"),g=$f(a,c,m),y=w.sizeFromShape(f),A=a.data.get(g.dataId).values,x=a.data.get(h.dataId).values;for(let b=0;b<A.length;++b){let v=b*y,S=0;for(let N=0;N<y;++N)S+=x[v+N];A[b]=S}if(i){let b=T.expandShapeToKeepDim(g.shape,u),v=g;g=Ct({inputs:{x:g},backend:a,attrs:{shape:b}}),a.disposeIntermediateTensorInfo(v)}return a.disposeIntermediateTensorInfo(o),d!=null&&a.disposeIntermediateTensorInfo(h),g}var Uq={kernelName:Mi,backendName:"cpu",kernelFunc:Ap};function Gq(e){let{inputs:t,backend:a,attrs:r}=e,{equation:n}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(n,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let g of d[m]){let{permutationIndices:y,expandDims:A}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=Xa({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let v=0;v<A.length;++v)b.splice(A[v],0,1);w.arraysEqual(x.shape,b)||(x=Ct({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),h===null?h=x:(h=Am({inputs:{a:x,b:h},backend:a}),f.push(h))}m<p-1&&(u[m]>=0&&(h=Ap({inputs:{x:h},backend:a,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&a.disposeIntermediateTensorInfo(m);return h}var jq={kernelName:Ph,backendName:"cpu",kernelFunc:Gq};function Hq(e){let{inputs:t,backend:a}=e,{dy:r,y:n}=t;Ie([r,n],"eluGrad");let s=new Float32Array(w.sizeFromShape(n.shape)),i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=1?s[l]=o[l]:s[l]=o[l]*(u+1)}return a.makeTensorInfo(n.shape,"float32",s)}var qq={kernelName:s0,backendName:"cpu",kernelFunc:Hq},Xq=T.ERF_P,Kq=T.ERF_A1,Zq=T.ERF_A2,Yq=T.ERF_A3,Jq=T.ERF_A4,Qq=T.ERF_A5,eX=dt(qu,e=>{let t=Math.sign(e),a=Math.abs(e),r=1/(1+Xq*a);return t*(1-((((Qq*r+Jq)*r+Yq)*r+Zq)*r+Kq)*r*Math.exp(-a*a))}),tX={kernelName:qu,backendName:"cpu",kernelFunc:eX};function Mf(e){let{inputs:t,backend:a,attrs:r}=e,{input:n}=t,{dim:s}=r,i=n.shape.length,o=n.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Ct({inputs:{x:n},backend:a,attrs:{shape:o}})}var aX={kernelName:jo,backendName:"cpu",kernelFunc:Mf},rX=qt((e,t)=>e/t),Jx=ca(ni,rX),D1={kernelName:ni,backendName:"cpu",kernelFunc:Jx};function UI(e,t,a){let r=e.shape,n=r[0],s=r[1],i=a.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[n,s],d=w.sizeFromShape(u),p=w.getTypedArrayFromDType("float32",d),h=w.getTypedArrayFromDType("float32",d);for(let g=0;g<n;g++){let y=Eo({inputs:{x:o},backend:a,attrs:{begin:[g,0],size:[1,s]}}),A=Eo({inputs:{x:l},backend:a,attrs:{begin:[g,0],size:[1,s]}}),x=sr({inputs:{real:y,imag:A},backend:a}),{real:b,imag:v}=nX(x,t,a),S=T.mergeRealAndImagArrays(b,v);for(let N=0;N<s;N++){let E=T.getComplexWithIndex(S,N);p[g*s+N]=E.real,h[g*s+N]=E.imag}a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(x)}let c=a.makeTensorInfo(u,"float32",p),f=a.makeTensorInfo(u,"float32",h),m=sr({inputs:{real:c,imag:f},backend:a});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),m}function nX(e,t,a){let r=w.sizeFromShape(e.shape),n=a.data.get(e.dataId),s=a.data.get(n.complexTensorInfos.real.dataId).values,i=a.data.get(n.complexTensorInfos.imag.dataId).values;if(sX(r)){let o=L1(s,i,r,t,a),l=[e.shape[0],e.shape[1]];if(t){let u=a.makeTensorInfo(l,"float32",o.real),d=a.makeTensorInfo(l,"float32",o.imag),p=a.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),h=Nn({inputs:{x:p},backend:a}),c=D1.kernelFunc({inputs:{a:u,b:p},backend:a}),f=D1.kernelFunc({inputs:{a:d,b:h},backend:a}),m=a.data.get(c.dataId).values,g=a.data.get(f.dataId).values;return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=iX(o,r,t);return T.splitRealAndImagArrays(l)}}function sX(e){return(e&e-1)===0}function L1(e,t,a,r,n){if(a===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=a/2,o=T.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],p=n.makeTensorInfo(d,"float32",l),h=n.makeTensorInfo(d,"float32",u),c=sr({inputs:{real:p,imag:h},backend:n}),f=T.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=n.makeTensorInfo(y,"float32",m),x=n.makeTensorInfo(y,"float32",g),b=sr({inputs:{real:A,imag:x},backend:n}),v=L1(l,u,i,r,n),S=v.real,N=v.imag,E=[S.length],R=n.makeTensorInfo(E,"float32",S),P=n.makeTensorInfo(E,"float32",N),$=sr({inputs:{real:R,imag:P},backend:n}),k=L1(m,g,i,r,n),_=k.real,z=k.imag,L=[_.length],j=n.makeTensorInfo(L,"float32",_),D=n.makeTensorInfo(L,"float32",z),B=sr({inputs:{real:j,imag:D},backend:n}),G=T.exponents(a,r),ee=[G.real.length],Q=n.makeTensorInfo(ee,"float32",G.real),ne=n.makeTensorInfo(ee,"float32",G.imag),Y=sr({inputs:{real:Q,imag:ne},backend:n}),re=Am({inputs:{a:Y,b:B},backend:n}),le=yp({inputs:{a:$,b:re},backend:n}),ye=Kx({inputs:{a:$,b:re},backend:n}),xe=Co({inputs:{input:le},backend:n}),Ce=Co({inputs:{input:ye},backend:n}),Re=Ru({inputs:{input:le},backend:n}),Oe=Ru({inputs:{input:ye},backend:n}),We=$u({inputs:[xe,Ce],backend:n,attrs:{axis:0}}),Xe=$u({inputs:[Re,Oe],backend:n,attrs:{axis:0}}),rt=n.data.get(We.dataId).values,st=n.data.get(Xe.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(R),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo($),n.disposeIntermediateTensorInfo(j),n.disposeIntermediateTensorInfo(D),n.disposeIntermediateTensorInfo(B),n.disposeIntermediateTensorInfo(Q),n.disposeIntermediateTensorInfo(ne),n.disposeIntermediateTensorInfo(Y),n.disposeIntermediateTensorInfo(re),n.disposeIntermediateTensorInfo(le),n.disposeIntermediateTensorInfo(ye),n.disposeIntermediateTensorInfo(xe),n.disposeIntermediateTensorInfo(Re),n.disposeIntermediateTensorInfo(Ce),n.disposeIntermediateTensorInfo(Oe),n.disposeIntermediateTensorInfo(We),n.disposeIntermediateTensorInfo(Xe),{real:rt,imag:st}}function iX(e,t,a){let r=new Float32Array(t*2);for(let n=0;n<t;n++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(n*o,t,a),u=T.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}a&&(s/=t,i/=t),T.assignToTypedArray(r,s,i,n)}return r}function oX(e){let{inputs:t,backend:a}=e,{input:r}=t,n=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,o=Ct({inputs:{x:r},backend:a,attrs:{shape:[i,s]}}),l=UI(o,!1,a),u=Ct({inputs:{x:l},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),u}var lX={kernelName:i0,backendName:"cpu",kernelFunc:oX};function Qx(e){let{backend:t,attrs:a}=e,{shape:r,value:n,dtype:s}=a,i=s||w.inferDtype(n),o=w.getArrayFromDType(i,w.sizeFromShape(r));return dX(o,n,i),t.makeTensorInfo(r,i,o)}var uX={kernelName:Xu,backendName:"cpu",kernelFunc:Qx};function dX(e,t,a){e.fill(t)}var hX={kernelName:qo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,n=a,s=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,d=n.data.get(r.dataId).values;for(let p=0;p<i;p++){let h=p*l*o*u;for(let c=0;c<o;c++){let f=c*(l*u);for(let m=0;m<l;m++){let g=m*u;for(let y=0;y<u;y++){let A=Math.round(l-m-1),x=h+f+g+y,b=d[x];if(A>=0&&A<l){let v=A*u,S=h+f+v+y;b=d[S]}s[x]=b}}}}return{dataId:n.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pX=qt((e,t)=>Math.floor(e/t)),cX=ca(li,pX,null,"int32"),fX={kernelName:li,backendName:"cpu",kernelFunc:cX};function mX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=BI({inputs:{x:n,filter:s},backend:a,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});if(i){let g=m;m=yp({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=Zx(a,m,c,o,f),a.disposeIntermediateTensorInfo(g)}return m}var gX={kernelName:Fs,backendName:"cpu",kernelFunc:mX};function yX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=VI({inputs:{x:n,filter:s},backend:a,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});if(i){let g=m;m=yp({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=Zx(a,m,c,o,f),a.disposeIntermediateTensorInfo(g)}return m}var AX={kernelName:Ms,backendName:"cpu",kernelFunc:yX};function xX(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=w.sizeFromShape(r.shape),i=n.shape,o=i[i.length-1],[l,u,d,p]=T.prepareAndValidate(r,n);if(u===0)return a.makeTensorInfo(l,r.dtype,[]);let h=a.data.get(n.dataId).values,c=a.bufferSync(r),f=sI(h,c,r.dtype,u,o,d,p,r.shape,s);return a.makeTensorInfo(l,r.dtype,f.values)}var bX={kernelName:Ko,backendName:"cpu",kernelFunc:xX};function vX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r;Ie([n,s],"gatherV2");let l=w.parseAxisParam(i,n.shape)[0],u=a.data.get(s.dataId).values,d=n.shape[l];for(let b=0;b<u.length;++b){let v=u[b];w.assert(v<=d-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${d-1}]`)}let p=o;o==null&&(p=0);let h=w.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(n,s,l,p),f=Ct({inputs:{x:n},backend:a,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Ct({inputs:{x:s},backend:a,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=a.bufferSync(m),A=a.bufferSync(f),x=iI(A,y,g);return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.makeTensorInfo(c.outputShape,x.dtype,x.values)}var wX={kernelName:Xo,backendName:"cpu",kernelFunc:vX};function kX(e){let{inputs:t,backend:a}=e,{input:r}=t,n=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,o=Ct({inputs:{x:r},backend:a,attrs:{shape:[i,s]}}),l=UI(o,!0,a),u=Ct({inputs:{x:l},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),u}var IX={kernelName:o0,backendName:"cpu",kernelFunc:kX},SX=dt(Ku,e=>Number.isFinite(e)?1:0,"bool"),NX={kernelName:Ku,backendName:"cpu",kernelFunc:SX},TX=dt(Zu,e=>Math.abs(e)===1/0?1:0,"bool"),CX={kernelName:Zu,backendName:"cpu",kernelFunc:TX},EX=dt(Yu,e=>Number.isNaN(e)?1:0,"bool"),RX={kernelName:Yu,backendName:"cpu",kernelFunc:EX};function $X(e){let{backend:t,attrs:a}=e,{start:r,stop:n,num:s}=a,i=hI(r,n,s);return t.makeTensorInfo([i.length],"float32",i)}var FX={kernelName:l0,backendName:"cpu",kernelFunc:$X},MX=dt(Ju,e=>Math.log1p(e)),_X={kernelName:Ju,backendName:"cpu",kernelFunc:MX},zX=qt((e,t)=>e&&t),OX=ca(Qo,zX,null,"bool"),PX={kernelName:Qo,backendName:"cpu",kernelFunc:OX},DX=dt(Qu,e=>e?0:1,"bool"),LX={kernelName:Qu,backendName:"cpu",kernelFunc:DX},WX=qt((e,t)=>e||t),BX=ca(Lh,WX,null,"bool"),VX={kernelName:Lh,backendName:"cpu",kernelFunc:BX};function UX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Ie(n,"LRN");let u=n.shape[3],d=u-1,p=a.data.get(n.dataId).values,h=w.sizeFromShape(n.shape),c=new Float32Array(h);function f(m){let g=m%u,y=m-g+Math.max(0,g-s),A=m-g+Math.min(g+s,d),x=0;for(;y<=A;y++){let b=p[y];x+=b*b}return x}for(let m=0;m<h;m++){let g=f(m),y=p[m]*Math.pow(i+o*g,-l);c[m]=y}return a.makeTensorInfo(n.shape,n.dtype,c)}var GX={kernelName:Wh,backendName:"cpu",kernelFunc:UX};function jX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;Ie(i,"LRNGrad");let p=w.sizeFromShape(i.shape),h=i.shape[3],c=a.data.get(i.dataId).values,f=a.data.get(n.dataId).values,m=a.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let A=0;A<y;A++){let x=A%h,b=A-x+Math.max(0,x-o),v=A-x+Math.min(h,x+o+1),S=0;for(let N=b;N<v;N++)S+=Math.pow(f[N],2);S=u*S+l;for(let N=b;N<v;N++){let E=-2*u*d*f[N]*m[A]/S;A===N&&(E+=Math.pow(S,-d)),E*=c[A],g[N]+=E}}return a.makeTensorInfo(i.shape,n.dtype,g)}var HX={kernelName:u0,backendName:"cpu",kernelFunc:jX};function GI(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reductionIndices:s,keepDims:i}=r,o=a,l=n.shape,u=l.length,d=w.parseAxisParam(s,l),p=d,h=T.getAxesPermutation(p,u),c=o.data.get(n.dataId).values;if(h!=null){let b=new Array(u);for(let v=0;v<b.length;v++)b[v]=l[h[v]];c=Hx(c,l,n.dtype,h,b),p=T.getInnerMostAxes(p.length,u),l=b}Ie(n,"max"),T.assertAxesAreInnerMostDims("max",p,u);let[f,m]=T.computeOutAndReduceShapes(l,p),g=w.sizeFromShape(m),y=cI(c,g,f,n.dtype),A=o.write(y,f,n.dtype),x=f;return i&&(x=T.expandShapeToKeepDim(f,d)),{dataId:A,shape:x,dtype:n.dtype}}var qX={kernelName:fi,backendName:"cpu",kernelFunc:GI};function XX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;Ie(n,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(n.shape,s,i,u,o,l),p;if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))p=Nn({inputs:{x:n},backend:a});else{let h=a.data.get(n.dataId).values,c=w.computeStrides(n.shape),f=Yx(h,n.shape,n.dtype,c,d,"max");p=a.makeTensorInfo(d.outShape,n.dtype,f.values)}return p}var KX={kernelName:gi,backendName:"cpu",kernelFunc:XX};function ZX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Ie(n,"maxPool3d");let d=T.computePool3DInfo(n.shape,s,i,1,o,l,u),p=a.data.get(n.dataId).values,h=WI(p,n.shape,n.dtype,w.computeStrides(n.shape),d,"max");return a.makeTensorInfo(h.shape,"float32",h.values)}var YX={kernelName:Bh,backendName:"cpu",kernelFunc:ZX};function JX(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Ie([n,s],"maxPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),p=a.bufferSync(s),h=LH(p,d),c=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,A=d.dilationWidth,x=d.effectiveFilterDepth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,S=x-1-d.padInfo.front,N=v-1-d.padInfo.left,E=b-1-d.padInfo.top,R=Be(s.shape,"float32"),P=a.bufferSync(n);for(let $=0;$<d.batchSize;++$)for(let k=0;k<d.inChannels;++k)for(let _=0;_<d.inDepth;++_)for(let z=0;z<d.inHeight;++z)for(let L=0;L<d.inWidth;++L){let j=_-S,D=z-E,B=L-N,G=0;for(let ee=0;ee<x;ee+=g){let Q=(j+ee)/c;if(!(Q<0||Q>=d.outDepth||Math.floor(Q)!==Q))for(let ne=0;ne<b;ne+=y){let Y=(D+ne)/f;if(!(Y<0||Y>=d.outHeight||Math.floor(Y)!==Y))for(let re=0;re<v;re+=A){let le=(B+re)/m;if(le<0||le>=d.outWidth||Math.floor(le)!==le)continue;let ye=x*b*v-1-h.get($,Q,Y,le,k),xe=ee*b*v+ne*v+re,Ce=ye===xe?1:0;Ce!==0&&(G+=P.get($,Q,Y,le,k)*Ce)}}}R.set(G,$,_,z,L,k)}return a.makeTensorInfo(R.shape,R.dtype,R.values)}var QX={kernelName:h0,backendName:"cpu",kernelFunc:JX};function eK(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s,output:i}=t,o=s;Ie([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=r,h=T.computePool2DInfo(o.shape,l,u,1,d,p),c=a.data.get(o.dataId).values,f=Be(h.outShape,o.dtype,LI(c,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,A=h.dilationWidth,x=h.effectiveFilterHeight,b=h.effectiveFilterWidth,v=b-1-h.padInfo.left,S=x-1-h.padInfo.top,N=Be(o.shape,"float32"),E=a.data.get(n.dataId).values,R=Be(n.shape,"float32",E);for(let P=0;P<h.batchSize;++P)for(let $=0;$<h.inChannels;++$)for(let k=0;k<h.inHeight;++k)for(let _=0;_<h.inWidth;++_){let z=k-S,L=_-v,j=0;for(let D=0;D<x;D+=y){let B=(z+D)/m;if(!(B<0||B>=h.outHeight||Math.floor(B)!==B))for(let G=0;G<b;G+=A){let ee=(L+G)/g;if(ee<0||ee>=h.outWidth||Math.floor(ee)!==ee)continue;let Q=x*b-1-f.get(P,B,ee,$),ne=D*b+G,Y=Q===ne?1:0;Y!==0&&(j+=R.get(P,B,ee,$)*Y)}}N.set(j,P,k,_,$)}return a.makeTensorInfo(N.shape,N.dtype,N.values)}var tK={kernelName:d0,backendName:"cpu",kernelFunc:eK};function aK(e,t,a,r,n){let s=w.computeStrides(t),i=Yx(e,t,a,s,n,"max"),o=LI(e,t,a,n,!0,r);return[i.values,o.values]}var rK={kernelName:p0,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{filterSize:n,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;Ie(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,d=T.computePool2DInfo(r.shape,n,s,[1,1],i),[p,h]=aK(u,r.shape,r.dtype,o,d),c=l.write(p,d.outShape,r.dtype),f=l.write(h,d.outShape,r.dtype);return[{dataId:c,shape:d.outShape,dtype:r.dtype},{dataId:f,shape:d.outShape,dtype:"int32"}]}};function nK(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,n.shape),l=T.computeOutAndReduceShapes(n.shape,o)[1],u=w.sizeFromShape(l),d=[],p=a.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=Us({inputs:{x:n},backend:a,attrs:{dtype:"float32"}});d.push(h);let c=Jx({inputs:{a:h,b:p},backend:a});d.push(c);let f=Ap({inputs:{x:c},backend:a,attrs:{axis:s,keepDims:i}});return d.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var sK={kernelName:yi,backendName:"cpu",kernelFunc:nK};function iK(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ie(n,"min");let o=w.parseAxisParam(s,n.shape),l=o,u=T.getAxesPermutation(l,n.shape.length),d=n;u!=null&&(d=Xa({inputs:{x:n},backend:a,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,n.shape.length)),T.assertAxesAreInnerMostDims("min",l,d.shape.length);let[p,h]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(p),d.dtype),m=a.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let v=m[A+b];(Number.isNaN(v)||v<x)&&(x=v)}f[y]=x}u!=null&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(p,d.dtype,f);if(i){let y=T.expandShapeToKeepDim(p,o),A=Ct({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),A}return g}var oK={kernelName:Ai,backendName:"cpu",kernelFunc:iK};function lK(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,mode:i}=r;Ie(n,"mirrorPad");let o=s.map((A,x)=>A[0]+n.shape[x]+A[1]),l=s.map(A=>A[0]),u=s.map((A,x)=>A[0]+n.shape[x]),d=i==="reflect"?0:1,p=a.data.get(n.dataId).values,h=n.shape.length,c=w.computeStrides(n.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(n.dtype,f);for(let A=0;A<f;A++){let x=w.indexToLoc(A,m,g);for(let v=0;v<m;v++)x[v]<l[v]?x[v]=l[v]*2-x[v]-d:x[v]>=u[v]&&(x[v]=(u[v]-1)*2-x[v]+d);x=x.map((v,S)=>v-l[S]);let b=w.locToIndex(x,h,c);y[A]=p[b]}return{dataId:a.write(y,o,n.dtype),shape:o,dtype:n.dtype}}var uK={kernelName:bi,backendName:"cpu",kernelFunc:lK},dK=qt((e,t)=>{let a=e%t;return e<0&&t<0||e>=0&&t>=0?a:(a+t)%t}),hK=ca(ed,dK),pK={kernelName:ed,backendName:"cpu",kernelFunc:hK},cK=Oo(jf());function jI(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{dim:s}=r,i=n.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],n.shape),u=GI({inputs:{x:n},backend:a,attrs:{reductionIndices:l,keepDims:!1}}),d=T.expandShapeToKeepDim(u.shape,l),p=Ct({inputs:{x:u},backend:a,attrs:{shape:d}}),h=Kx({inputs:{a:n,b:p},backend:a}),c=aI({inputs:{x:h},backend:a}),f=Ap({inputs:{x:c},backend:a,attrs:{axis:l,keepDims:!1}}),m=Ct({inputs:{x:f},backend:a,attrs:{shape:d}}),g=Jx({inputs:{a:c,b:m},backend:a});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var fK={kernelName:_i,backendName:"cpu",kernelFunc:jI};function mK(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{numSamples:s,seed:i,normalized:o}=r;Ie(n,"multinomial");let l=o?n:jI({inputs:{logits:n},backend:a,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],p=a.data.get(l.dataId).values,h=[u,s],c=w.makeZerosTypedArray(w.sizeFromShape(h),"int32");for(let f=0;f<u;++f){let m=f*d,g=new Float32Array(d-1);g[0]=p[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+p[m+x];let y=cK.alea(i.toString()),A=f*s;for(let x=0;x<s;++x){let b=y();c[A+x]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){c[A+x]=v;break}}}return o||a.disposeIntermediateTensorInfo(l),a.makeTensorInfo(h,"int32",c)}var gK={kernelName:c0,backendName:"cpu",kernelFunc:mK},yK=Or.nonMaxSuppressionV3Impl;function AK(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Ie(n,"NonMaxSuppression");let u=a.data.get(n.dataId).values,d=a.data.get(s.dataId).values,{selectedIndices:p}=yK(u,d,i,o,l);return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var xK={kernelName:al,backendName:"cpu",kernelFunc:AK},bK=Or.nonMaxSuppressionV4Impl;function vK(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Ie(n,"NonMaxSuppressionPadded");let d=a.data.get(n.dataId).values,p=a.data.get(s.dataId).values,{selectedIndices:h,validOutputs:c}=bK(d,p,i,o,l,u);return[a.makeTensorInfo([h.length],"int32",new Int32Array(h)),a.makeTensorInfo([],"int32",new Int32Array([c]))]}var wK={kernelName:td,backendName:"cpu",kernelFunc:vK},kK=Or.nonMaxSuppressionV5Impl;function IK(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Ie(n,"NonMaxSuppressionWithScore");let d=a.data.get(n.dataId).values,p=a.data.get(s.dataId).values,h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=kK(d,p,h,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var SK={kernelName:rl,backendName:"cpu",kernelFunc:IK};function NK(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n}=t,{depth:s,onValue:i,offValue:o}=r;Ie(n,"oneHot");let l=w.sizeFromShape(n.shape),u=new Float32Array(l*s);u.fill(o);let d=a.data.get(n.dataId).values;for(let p=0;p<l;++p)d[p]>=0&&d[p]<s&&(u[p*s+d[p]]=i);return a.makeTensorInfo([...n.shape,s],"int32",u)}var TK={kernelName:sl,backendName:"cpu",kernelFunc:NK};function _f(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let n=Co({inputs:{input:r},backend:a}),s=_f({inputs:{x:n},backend:a}),i=Ru({inputs:{input:r},backend:a}),o=_f({inputs:{x:i},backend:a}),l=sr({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return Qx({backend:a,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var CK={kernelName:vl,backendName:"cpu",kernelFunc:_f};function HI(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let n=Co({inputs:{input:r},backend:a}),s=HI({inputs:{x:n},backend:a}),i=Ru({inputs:{input:r},backend:a}),o=_f({inputs:{x:i},backend:a}),l=sr({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return Qx({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var EK={kernelName:nl,backendName:"cpu",kernelFunc:HI};function qI(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return Mf({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let p=Mf({inputs:{input:d},backend:a,attrs:{dim:n}});return o.push(p),p}),u=$u({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(d=>a.disposeIntermediateTensorInfo(d)),u}var RK={kernelName:il,backendName:"cpu",kernelFunc:qI};function $K(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,constantValue:i}=r;Ie(n,"pad");let o=s.map((y,A)=>y[0]+n.shape[A]+y[1]),l=s.map(y=>y[0]),u=a.data.get(n.dataId).values,d=w.sizeFromShape(n.shape),p=n.shape.length,h=w.computeStrides(n.shape),c=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(n.dtype,c);i!==0&&g.fill(i);for(let y=0;y<d;y++){let A=w.indexToLoc(y,p,h).map((b,v)=>b+l[v]),x=w.locToIndex(A,f,m);g[x]=u[y]}return{dataId:a.write(g,o,n.dtype),shape:o,dtype:n.dtype}}var XI={kernelName:wi,backendName:"cpu",kernelFunc:$K},FK=qt((e,t)=>Math.pow(e,t)),MK=ca(ki,FK),_K={kernelName:ki,backendName:"cpu",kernelFunc:MK};function zK(e){let{backend:t,attrs:a}=e,{start:r,stop:n,dtype:s,step:i}=a,o=qx(r,n,i,s);return t.makeTensorInfo([o.length],s,o)}var OK={kernelName:ad,backendName:"cpu",kernelFunc:zK},PK=dt(rd,e=>1/e),DK={kernelName:rd,backendName:"cpu",kernelFunc:PK};function LK(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Ie(n,"resizeBilinear");let l=w.computeStrides(n.shape),[u,d]=o,[p,h,c,f]=n.shape,m=a.data.get(n.dataId).values,g=new Float32Array(w.sizeFromShape([p,u,d,f])),y=[s&&u>1?h-1:h,s&&d>1?c-1:c],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=0,b=y[0]/A[0],v=y[1]/A[1];for(let S=0;S<p;S++)for(let N=0;N<u;N++){let E;i?E=b*(N+.5)-.5:E=b*N;let R=Math.max(0,Math.floor(E)),P=E-R,$=Math.min(h-1,Math.ceil(E)),k=S*l[0]+R*l[1],_=S*l[0]+$*l[1];for(let z=0;z<d;z++){let L;i?L=v*(z+.5)-.5:L=v*z;let j=Math.max(0,Math.floor(L)),D=L-j,B=Math.min(c-1,Math.ceil(L)),G=k+j*l[2],ee=_+j*l[2],Q=k+B*l[2],ne=_+B*l[2];for(let Y=0;Y<f;Y++){let re=m[G+Y],le=m[ee+Y],ye=m[Q+Y],xe=m[ne+Y],Ce=re+(ye-re)*D,Re=le+(xe-le)*D,Oe=Ce+(Re-Ce)*P;g[x++]=Oe}}}return a.makeTensorInfo([p,u,d,f],"float32",g)}var WK={kernelName:Ti,backendName:"cpu",kernelFunc:LK};function BK(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r;Ie([s,n],"resizeBilinearGrad");let o=w.computeStrides(n.shape),[l,u,d,p]=n.shape,[,h,c]=s.shape,f=new Float32Array(l*u*d*p),m=[i&&h>1?u-1:u,i&&c>1?d-1:d],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=m[0]/g[0],A=m[1]/g[1],x=a.data.get(s.dataId).values,b=0;for(let v=0;v<l;v++){let S=v*o[0];for(let N=0;N<h;N++){let E=N*y,R=Math.floor(E),P=Math.min(Math.ceil(E),u-1),$=S+R*o[1],k=S+P*o[1],_=E-R,z=1-_;for(let L=0;L<c;L++){let j=L*A,D=Math.floor(j),B=Math.min(Math.ceil(j),d-1),G=j-D,ee=1-G,Q=$+D*o[2],ne=$+B*o[2],Y=k+D*o[2],re=k+B*o[2],le=z*ee,ye=z*G,xe=_*ee,Ce=_*G;for(let Re=0;Re<p;Re++){let Oe=x[b++];f[Q+Re]+=Oe*le,f[ne+Re]+=Oe*ye,f[Y+Re]+=Oe*xe,f[re+Re]+=Oe*Ce}}}}return a.makeTensorInfo([l,d,u,p],"float32",f)}var VK={kernelName:m0,backendName:"cpu",kernelFunc:BK};function UK(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Ie(n,"resizeNearestNeighbor");let l=w.computeStrides(n.shape),[u,d]=o,[p,h,c,f]=n.shape,m=a.data.get(n.dataId).values,g=new Float32Array(p*u*d*f),y=[s&&u>1?h-1:h,s&&d>1?c-1:c],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=y[0]/A[0],b=y[1]/A[1],v=0;for(let S=0;S<p;S++){let N=S*l[0];for(let E=0;E<u;E++){let R=i?x*(E+.5):x*E,P=Math.min(h-1,s?Math.round(R):Math.floor(R));i&&(P=Math.max(0,P));let $=N+P*l[1];for(let k=0;k<d;k++){let _=i?b*(k+.5):b*k,z=Math.min(c-1,s?Math.round(_):Math.floor(_));i&&(z=Math.max(0,z));let L=$+z*l[2];for(let j=0;j<f;j++){let D=m[L+j];g[v++]=D}}}}return a.makeTensorInfo([p,u,d,f],n.dtype,g)}var GK={kernelName:nd,backendName:"cpu",kernelFunc:UK};function jK(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r;Ie([s,n],"resizeNearestNeighborGrad");let o=w.computeStrides(n.shape),l=w.computeStrides(s.shape),[u,d,p,h]=n.shape,[,c,f]=s.shape,m=new Float32Array(u*d*p*h),g=a.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&f>1?p-1:p],A=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/A[0],b=y[1]/A[1],v=1/x,S=1/b,N=Math.ceil(v)*2+2,E=Math.ceil(S)*2+2;for(let R=0;R<u;R++){let P=R*o[0];for(let $=0;$<d;$++){let k=P+$*o[1],_=Math.floor($*v),z=Math.floor(_-N/2);for(let L=0;L<p;L++){let j=k+L*o[2],D=Math.floor(L*S),B=Math.floor(D-E/2);for(let G=0;G<h;G++){let ee=0;for(let Q=0;Q<N;Q++){let ne=Q+z;if(ne<0||ne>=c)continue;let Y=P+ne*l[1],re=ne*x,le=Math.min(d-1,i?Math.round(re):Math.floor(re));if($===le)for(let ye=0;ye<E;ye++){let xe=ye+B;if(xe<0||xe>=f)continue;let Ce=Y+xe*l[2],Re=xe*b,Oe=Math.min(p-1,i?Math.round(Re):Math.floor(Re));L===Oe&&(ee+=g[Ce+G])}}m[j+G]=ee}}}}return a.makeTensorInfo(n.shape,n.dtype,m)}var HK={kernelName:f0,backendName:"cpu",kernelFunc:jK};function qK(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dims:s}=r;Ie(n,"reverse");let i=n.shape.length,o=w.parseAxisParam(s,n.shape);if(i===0)return Nn({inputs:{x:n},backend:a});let l=new ta(n.shape,n.dtype),u=a.bufferSync(n);for(let d=0;d<l.size;d++){let p=l.indexToLoc(d),h=p.slice();o.forEach(c=>h[c]=n.shape[c]-1-h[c]),l.set(u.get(...h),...p)}return a.makeTensorInfo(l.shape,l.dtype,l.values)}var XK={kernelName:ll,backendName:"cpu",kernelFunc:qK},KK={kernelName:wl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,{radians:n,fillValue:s,center:i}=t,o=a,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[u,d,p,h]=r.shape,[c,f]=T.getImageCenter(i,d,p),m=255,g=Math.sin(n),y=Math.cos(n),A=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let b=x*p*d*h;for(let v=0;v<d;v++){let S=v*(p*h);for(let N=0;N<p;N++){let E=N*h;for(let R=0;R<h;R++){let P=[u,v,N,R],$=P[2],k=P[1],_=($-c)*y-(k-f)*g,z=($-c)*g+(k-f)*y;_=Math.round(_+c),z=Math.round(z+f);let L=s;if(typeof s!="number"&&(R===3?L=m:L=s[R]),_>=0&&_<p&&z>=0&&z<d){let D=z*(p*h),B=_*h,G=b+D+B+R;L=A[G]}let j=b+S+E+R;l[j]=L}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ZK=dt(ul,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),YK={kernelName:ul,backendName:"cpu",kernelFunc:ZK};function KI(e,t,a,r,n,s,i,o,l,u){let d=[r/n,n],p=e.values,h=t.values;if(r===0)return Be(a,t.dtype);let c=Be(d,t.dtype);c.values.fill(l);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let A=p[f*i+y];m.push(A),g+=A*o[y]}if(g<0||g>=r/n)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let y=0;y<n;y++)u?c.values[g*n+y]+=h[f*n+y]:c.values[g*n+y]=t.rank===0?h[0]:h[f*n+y]}return c}function JK(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=T.calculateShapes(s,n,i),h=!0,c=a.bufferSync(n),f=a.bufferSync(s),m=KI(c,f,i,p,u,l,o,d,0,h);return a.makeTensorInfo(i,m.dtype,m.values)}var QK={kernelName:dl,backendName:"cpu",kernelFunc:JK};function eZ(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t;Ie([r,n,s],"select");let i=r.shape.length,o=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values,u=a.data.get(s.dataId).values,d=ba(n.dtype,s.dtype),p=w.makeZerosTypedArray(w.sizeFromShape(n.shape),d),h=0,c=i===0||i>1||n.shape.length===1?1:w.sizeFromShape(n.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<c;m++)o[f]===1?p[h++]=l[f]:p[h++]=u[f];return a.makeTensorInfo(n.shape,d,p)}var tZ={kernelName:hl,backendName:"cpu",kernelFunc:eZ},aZ=T.SELU_SCALEALPHA,rZ=T.SELU_SCALE,nZ=dt(sd,e=>e>=0?rZ*e:aZ*(Math.exp(e)-1)),sZ={kernelName:sd,backendName:"cpu",kernelFunc:nZ},iZ=dt(id,e=>e<0?-1:e>0?1:0),oZ={kernelName:id,backendName:"cpu",kernelFunc:iZ},lZ=dt(Ri,e=>Math.sin(e)),uZ={kernelName:Ri,backendName:"cpu",kernelFunc:lZ},dZ=dt(cl,e=>Math.sinh(e)),hZ={kernelName:cl,backendName:"cpu",kernelFunc:dZ},pZ=11920928955078125e-23,av=Math.log(pZ)+2,cZ=dt(od,e=>{let t=e>-av,a=e<av,r=Math.exp(e),n;return a?n=r:t?n=e:n=Math.log(1+r),n}),fZ={kernelName:od,backendName:"cpu",kernelFunc:cZ};function mZ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r;Ie([n],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<n.shape.length;++g)l.push([0,0]);let u=XI.kernelFunc({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),p=T.getPermuted(d.length,s.length,!1),h=T.getReshapedPermuted(u.shape,s,o,!1),c=Ct({inputs:{x:u},backend:a,attrs:{shape:d}}),f=Xa({inputs:{x:c},backend:a,attrs:{perm:p}}),m=Ct({inputs:{x:f},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),m}var gZ={kernelName:fl,backendName:"cpu",kernelFunc:mZ};function yZ(e){let{inputs:t,backend:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values,u=a.data.get(s.dataId).values,d=a.data.get(i.dataId).values[0],[p,h,c,f,m]=vI(o,r.shape,r.dtype,l,n.dtype,u,d);return[a.makeTensorInfo(h,r.dtype,p),a.makeTensorInfo([h[0]],n.dtype,c),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var AZ={kernelName:Uh,backendName:"cpu",kernelFunc:yZ};function xZ(e){let{inputs:t,backend:a}=e,{inputIndices:r,inputShape:n,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.data.get(n.dataId).values),o=a.data.get(r.dataId).values,l=Array.from(a.data.get(s.dataId).values),[u,d,p]=wI(o,r.shape,r.dtype,i,l);return[a.makeTensorInfo(d,r.dtype,u),a.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var bZ={kernelName:ld,backendName:"cpu",kernelFunc:xZ};function vZ(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,[u,d]=Xx(i,r.shape,r.dtype,o,l,!0);return a.makeTensorInfo(d,r.dtype,u)}var wZ={kernelName:Gh,backendName:"cpu",kernelFunc:vZ};function kZ(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,[u,d]=Xx(i,r.shape,r.dtype,o,l);return a.makeTensorInfo(d,r.dtype,u)}var IZ={kernelName:jh,backendName:"cpu",kernelFunc:kZ};function SZ(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=T.calculateShapes(s,n,o),c=!1,f=a.bufferSync(n),m=a.bufferSync(s),g=a.data.get(i.dataId).values[0],y=KI(f,m,o,h,d,u,l,p,g,c);return a.makeTensorInfo(o,y.dtype,y.values)}var NZ={kernelName:Hh,backendName:"cpu",kernelFunc:SZ};function TZ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,n.shape)[0],l=T.prepareSplitSize(n,s,o),u=new Array(n.shape.length).fill(0),d=n.shape.slice();return l.map(p=>{let h=[...d];h[o]=p;let c=Eo({inputs:{x:n},backend:a,attrs:{begin:u,size:h}});return u[o]+=p,c})}var CZ={kernelName:ml,backendName:"cpu",kernelFunc:TZ},EZ={kernelName:ud,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,r=t;Ie(a,"square");let n=r.data.get(a.dataId).values,s=new Float32Array(n.length);for(let i=0;i<n.length;++i){let o=n[i];s[i]=o*o}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},RZ=dt(Li,(e,t)=>{let a=t;return isNaN(e)?NaN:e>0?1:a.alpha}),$Z={kernelName:Li,backendName:"cpu",kernelFunc:RZ};function FZ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r;Ie(n,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,u,d,p,h),v;if(m)v=Ct({inputs:{x:n},backend:a,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let S=Ft.computeOutShape(A,x,b),N=Eo({inputs:{x:n},backend:a,attrs:{begin:A,size:S}});v=Ct({inputs:{x:N},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(N)}else{let S=a.bufferSync(n),N=II(c,S,b,A);v=a.makeTensorInfo(f,N.dtype,N.values)}return v}var MZ={kernelName:gl,backendName:"cpu",kernelFunc:FZ};function _Z(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:p}=t,h=a.data.get(d.dataId).values,c=a.data.get(p.dataId).values,[f,m]=SI(h,c,n,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var zZ={kernelName:qh,backendName:"cpu",kernelFunc:_Z};function OZ(e){let{inputs:t,backend:a,attrs:r}=e,{skipEmpty:n}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values[0],[u,d,p]=NI(o,l,n),h=d.length;return[a.makeTensorInfo([h,2],"int32",u),a.makeTensorInfo([h],"string",d),a.makeTensorInfo([2],"int32",new Int32Array(p))]}var PZ={kernelName:g0,backendName:"cpu",kernelFunc:OZ};function DZ(e){let{inputs:t,backend:a,attrs:r}=e,{numBuckets:n}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=a.data.get(s.dataId).values,o=TI(i,n);return a.makeTensorInfo(s.shape,"int32",o)}var LZ={kernelName:y0,backendName:"cpu",kernelFunc:DZ},WZ=dt(yl,e=>Math.tan(e)),BZ={kernelName:yl,backendName:"cpu",kernelFunc:WZ},VZ=dt(Pi,e=>Math.tanh(e)),UZ={kernelName:Pi,backendName:"cpu",kernelFunc:VZ};function GZ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reps:s}=r;Ie(n,"tile");let i=EI(a.bufferSync(n),s);return a.makeTensorInfo(i.shape,i.dtype,i.values)}var jZ={kernelName:Qn,backendName:"cpu",kernelFunc:GZ};function HZ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{k:s,sorted:i}=r;Ie(n,"topk");let o=a.data.get(n.dataId).values,[l,u]=$I(o,n.shape,n.dtype,s,i);return[a.makeTensorInfo(l.shape,l.dtype,l.values),a.makeTensorInfo(u.shape,u.dtype,u.values)]}var qZ={kernelName:Al,backendName:"cpu",kernelFunc:HZ};function XZ(e){let{inputs:t,attrs:a,backend:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[d,p,h,c]=n.shape,[f,m]=u??[p,h],g=[d,f,m,c],y=w.computeStrides(n.shape),A=y[0],x=y[1],b=y[2],v=w.getTypedArrayFromDType(n.dtype,w.sizeFromShape(g));v.fill(l);let S=r.data.get(n.dataId).values,N=r.data.get(s.dataId).values;for(let E=0;E<d;++E){let R=s.shape[0]===1?N:N.subarray(E*8,E*8+8);for(let P=0;P<f;++P)for(let $=0;$<m;++$)for(let k=0;k<c;++k){let _,z=R[6]*$+R[7]*P+1;if(z===0)continue;let L=(R[0]*$+R[1]*P+R[2])/z,j=(R[3]*$+R[4]*P+R[5])/z,D=rv(L,h,o),B=rv(j,p,o);switch(i){case"nearest":_=eY(S,p,h,A,x,b,E,B,D,k,l);break;case"bilinear":_=tY(S,p,h,A,x,b,E,B,D,k,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let G=E*A+P*x+$*b+k;v[G]=_}return r.makeTensorInfo(g,n.dtype,v)}return{dataId:r.write(v,g,n.dtype),shape:n.shape,dtype:n.dtype}}var KZ={kernelName:xl,backendName:"cpu",kernelFunc:XZ};function rv(e,t,a){switch(a){case"reflect":return ZZ(e,t);case"wrap":return YZ(e,t);case"nearest":return QZ(e,t);case"constant":default:return JZ(e,t)}}function ZZ(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let r=2*t;a<r&&(a=r*Math.trunc(-a/r)+a),a=a<-t?a+r:-a-1}else if(a>t-1)if(t<=1)a=0;else{let r=2*t;a-=r*Math.trunc(a/r),a>=t&&(a=r-a-1)}return w.clamp(0,a,t-1)}function YZ(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let r=t-1;a+=t*(Math.trunc(-a/r)+1)}else if(a>t-1)if(t<=1)a=0;else{let r=t-1;a-=t*Math.trunc(a/r)}return w.clamp(0,a,t-1)}function JZ(e,t){return e}function QZ(e,t){return w.clamp(0,e,t-1)}function ah(e,t,a,r,n,s,i,o,l,u,d){let p=i*r+o*n+l*s+u;return 0<=o&&o<t&&0<=l&&l<a?e[p]:d}function eY(e,t,a,r,n,s,i,o,l,u,d){let p=Math.round(o),h=Math.round(l);return ah(e,t,a,r,n,s,i,p,h,u,d)}function tY(e,t,a,r,n,s,i,o,l,u,d){let p=Math.floor(o),h=Math.floor(l),c=p+1,f=h+1,m=(f-l)*ah(e,t,a,r,n,s,i,p,h,u,d)+(l-h)*ah(e,t,a,r,n,s,i,p,f,u,d),g=(f-l)*ah(e,t,a,r,n,s,i,c,h,u,d)+(l-h)*ah(e,t,a,r,n,s,i,c,f,u,d);return(c-o)*m+(o-p)*g}function aY(e){let{inputs:t,attrs:a,backend:r}=e,{axis:n}=a,{x:s}=t;Ie(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=FI(i,n,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var rY={kernelName:A0,backendName:"cpu",kernelFunc:aY};function nY(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n.shape.length,o=n.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=n.shape[c]);let d=new Array(i).fill(0),p=n.shape.slice();p[s]=1;let h=new Array(o);for(let c=0;c<h.length;c++){d[s]=c;let f=Eo({inputs:{x:n},backend:a,attrs:{begin:d,size:p}});h[c]=Ct({inputs:{x:f},backend:a,attrs:{shape:l}}),a.disposeIntermediateTensorInfo(f)}return h}var sY={kernelName:bl,backendName:"cpu",kernelFunc:nY};function iY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,segmentIds:s}=t,{numSegments:i}=r;Ie(n,"unsortedSegmentSum");let o=n.shape.length,l=s.shape.length,u=[],d=[],p=o-l,h=s;for(let f=0;f<p;++f){let m=Mf({inputs:{input:h},backend:a,attrs:{dim:f+1}});h=m,d.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=a.makeTensorInfo([],"int32",m),y=eI({inputs:{a:g,b:h},backend:a}),A=Us({inputs:{x:y},backend:a,attrs:{dtype:"float32"}}),x=Am({inputs:{a:A,b:n},backend:a}),b=Ap({inputs:{x},backend:a,attrs:{axis:0,keepDims:!1}});u.push(b),d.push(g),d.push(y),d.push(A),d.push(x),d.push(b)}let c=qI({inputs:u,backend:a,attrs:{axis:0}});return d.forEach(f=>a.disposeIntermediateTensorInfo(f)),c}var oY={kernelName:Xh,backendName:"cpu",kernelFunc:iY},lY=[cH,sj,mH,yH,hj,xH,vH,kH,SH,TH,EH,$H,MH,OH,DH,BH,UH,jH,qH,hH,KH,YH,QH,tq,uj,cj,rq,ij,sq,oq,lq,dq,pq,fq,gq,Aq,bq,wq,Iq,Nq,Cq,Rq,Fq,Mq,zq,Pq,Lq,Wq,Bq,Vq,jq,nH,qq,fj,tX,mj,aX,yj,lX,uX,hX,xj,fX,gX,AX,bX,wX,vj,kj,oj,IX,iq,NX,CX,RX,sH,Sj,Tj,FX,Ej,_X,PX,LX,VX,GX,HX,qX,$j,KX,YX,QX,tK,rK,sK,oK,Mj,uK,pK,gK,zj,Pj,xK,wK,SK,Lj,TK,EK,RK,XI,_K,oH,Vj,OK,lj,D1,DK,lH,uH,dH,WK,VK,GK,HK,XK,KK,YK,Gj,QK,tZ,sZ,Hj,oZ,uZ,hZ,qj,fK,fZ,gZ,AZ,bZ,wZ,IZ,NZ,CZ,Zj,EZ,Jj,$Z,MZ,zZ,PZ,LZ,aH,Uq,BZ,UZ,jZ,qZ,KZ,Wj,rY,sY,oY,CK];for(let e of lY)kn(e);var ZI={};Le(ZI,{assertNotComplex:()=>bd,bindCanvasToFramebuffer:()=>xY,bindColorTextureToFramebuffer:()=>Kc,bindTextureToProgramUniformSampler:()=>hS,bindTextureUnit:()=>lS,bindVertexBufferToProgramAttribute:()=>W1,callAndCheck:()=>ve,canBeRepresented:()=>YI,createFragmentShader:()=>eS,createFramebuffer:()=>oS,createProgram:()=>tS,createStaticIndexBuffer:()=>nS,createStaticVertexBuffer:()=>rS,createTexture:()=>sS,createVertexShader:()=>QI,getBatchDim:()=>Ro,getExtensionOrThrow:()=>rh,getFramebufferErrorMessage:()=>pS,getMaxTexturesInShader:()=>gS,getNumChannels:()=>yY,getProgramUniformLocation:()=>dS,getProgramUniformLocationOrThrow:()=>uS,getRowsCols:()=>$o,getShapeAs3D:()=>Zc,getTextureShapeFromLogicalShape:()=>fS,getWebGLDisjointQueryTimerVersion:()=>yS,getWebGLErrorMessage:()=>JI,getWebGLMaxTextureSize:()=>mS,hasExtension:()=>Ar,isCapableOfRenderingToFloatTexture:()=>AS,isDownloadFloatTextureEnabled:()=>xS,isReshapeFree:()=>Eh,isWebGLFenceEnabled:()=>bS,isWebGLVersionEnabled:()=>V1,linkProgram:()=>aS,logShaderSourceAndInfoLog:()=>ab,resetMaxTextureSize:()=>bY,resetMaxTexturesInShader:()=>vY,unbindColorTextureFromFramebuffer:()=>B1,unbindTextureUnit:()=>AY,validateFramebuffer:()=>nh,validateProgram:()=>Xc,validateTextureSize:()=>iS});var ho={},w2={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function eb(e,t){ho[e]=t}function un(e,t){if(!(e in ho)||t!=null){let r=dY(e,t);if(r!==null)ho[e]=r;else return console.log("Could not get context for WebGL version",e),null}let a=ho[e];return a==null||a.isContextLost()?(delete ho[e],un(e)):(a.disable(a.DEPTH_TEST),a.disable(a.STENCIL_TEST),a.disable(a.BLEND),a.disable(a.DITHER),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SAMPLE_COVERAGE),a.enable(a.SCISSOR_TEST),a.enable(a.CULL_FACE),a.cullFace(a.BACK),ho[e])}function uY(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function dY(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let a=t??uY(e);return a.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete ho[e]},!1),e===1?a.getContext("webgl",w2)||a.getContext("experimental-webgl",w2):a.getContext("webgl2",w2)}function xp(e,t){return[t,e]}function hY(e,t){return e*t}function Nc(e){let t=w.sizeFromShape(e),a=Math.ceil(t/4);return w.sizeToSquarishShape(a)}function xd(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function pY(e,t){let[a,r]=xd(e,t);return a*r*4}function tb(e,t){let a=e,r,n,s,i,o,l,u,d,p,h;return J().getNumber("WEBGL_VERSION")===2?(r=a.R32F,n=a.R16F,s=a.RGBA16F,i=a.RGBA32F,o=a.RED,u=4,d=1,p=a.HALF_FLOAT,h=a.FLOAT,l=a.RGBA8):(r=e.RGBA,n=e.RGBA,s=e.RGBA,i=a.RGBA,o=e.RGBA,u=4,d=4,p=t!=null?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function ve(e,t){let a=t();return J().getBool("DEBUG")&&cY(e),a}function cY(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+JI(e,t))}var fY=596e-10,mY=65504;function YI(e){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||fY<Math.abs(e)&&Math.abs(e)<mY)}function JI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function rh(e,t){return ns(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function QI(e,t){let a=ns(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(e,()=>e.shaderSource(a,t)),ve(e,()=>e.compileShader(a)),e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(a)),new Error("Failed to compile vertex shader.");return a}function eS(e,t){let a=ns(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(e,()=>e.shaderSource(a,t)),ve(e,()=>e.compileShader(a)),J().get("ENGINE_COMPILE_ONLY"))return a;if(e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw ab(t,e.getShaderInfoLog(a)),new Error("Failed to compile fragment shader.");return a}var gY=/ERROR: [0-9]+:([0-9]+):/g;function ab(e,t){let a=gY.exec(t);if(a==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+a[1],n=e.split(`
`),s=n.length.toString().length+2,i=n.map((p,h)=>w.rightPad((h+1).toString(),s)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function tS(e){return ns(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function aS(e,t){if(ve(e,()=>e.linkProgram(t)),!J().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Xc(e,t){if(ve(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function rS(e,t){let a=ns(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),ve(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function nS(e,t){let a=ns(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a)),ve(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function yY(){return J().getNumber("WEBGL_VERSION")===2?1:4}function sS(e){return ns(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function iS(e,t){let a=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>a||t>a){let r=`[${e}x${t}]`,n=`[${a}x${a}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+n+".")}}function oS(e){return ns(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function W1(e,t,a,r,n,s,i){let o=e.getAttribLocation(t,a);return o===-1?!1:(ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),ve(e,()=>e.vertexAttribPointer(o,n,e.FLOAT,!1,s,i)),ve(e,()=>e.enableVertexAttribArray(o)),!0)}function lS(e,t,a){cS(e,a),ve(e,()=>e.activeTexture(e.TEXTURE0+a)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function AY(e,t){cS(e,t),ve(e,()=>e.activeTexture(e.TEXTURE0+t)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function uS(e,t,a){return ns(e,()=>e.getUniformLocation(t,a),'uniform "'+a+'" not present in program.')}function dS(e,t,a){return e.getUniformLocation(t,a)}function hS(e,t,a,r){ve(e,()=>lS(e,t,r)),ve(e,()=>e.uniform1i(a,r))}function xY(e){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ve(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Kc(e,t,a){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,a)),ve(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function B1(e,t){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ve(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function nh(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+pS(e,t))}function pS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ns(e,t,a){let r=ve(e,()=>t());if(r==null)throw new Error(a);return r}function cS(e,t){let a=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>a){let n=`[gl.TEXTURE0, gl.TEXTURE${a}]`;throw new Error(`textureUnit must be in ${n}.`)}}function Ro(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function $o(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Zc(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Ro(e),...$o(e)]),t}function fS(e,t=!1){let a=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(a=a*2,e=e.map((n,s)=>s>=e.length-2?w.nearestLargerEven(e[s]):e[s]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let r=w.sizeFromShape(e);if(e.length<=1&&r<=a)return[1,r];if(e.length===2&&e[0]<=a&&e[1]<=a)return e;if(e.length===3&&e[0]*e[1]<=a&&e[2]<=a)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=a&&e[1]*e[2]<=a)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=a&&e[3]<=a)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=a&&e[1]*e[2]*e[3]<=a)return[e[0],e[1]*e[2]*e[3]];if(t){let n=Ro(e),s=2,i=2;return e.length&&([s,i]=$o(e)),r=n*(s/2)*(i/2),w.sizeToSquarishShape(r).map(o=>o*2)}return w.sizeToSquarishShape(r)}function Tc(e){return e%2===0}function Eh(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let a=e.slice(-1)[0],r=t.slice(-1)[0];if(a===r||Tc(a)&&Tc(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Tc(e[0])&&Tc(t[0])}var Yc,Jc;function mS(e){if(Yc==null){let t=un(e);Yc=t.getParameter(t.MAX_TEXTURE_SIZE)}return Yc}function bY(){Yc=null}function vY(){Jc=null}function gS(e){if(Jc==null){let t=un(e);Jc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jc)}function yS(e){if(e===0)return 0;let t,a=un(e);return Ar(a,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Ar(a,"EXT_disjoint_timer_query")?t=1:t=0,t}function Ar(e,t){return e.getExtension(t)!=null}function V1(e){try{if(un(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function AS(e){if(e===0)return!1;let t=un(e);if(e===1){if(!Ar(t,"OES_texture_float"))return!1}else if(!Ar(t,"EXT_color_buffer_float"))return!1;return U1(t)}function xS(e){if(e===0)return!1;let t=un(e);if(e===1){if(!Ar(t,"OES_texture_float")||!Ar(t,"WEBGL_color_buffer_float"))return!1}else{if(Ar(t,"EXT_color_buffer_float"))return U1(t);let a="EXT_color_buffer_half_float";if(Ar(t,a)){let r=t.getExtension(a);return wY(t,r)}return!1}return U1(t)}function U1(e){let t=tb(e),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);let r=1,n=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,n,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}function wY(e,t){let a=tb(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let n=1,s=1;e.texImage2D(e.TEXTURE_2D,0,a.internalFormatHalfFloat,n,s,0,a.textureFormatFloat,a.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function bS(e){return e!==2?!1:un(e).fenceSync!=null}function bd(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&w.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var $e=J();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>V1(2)?2:V1(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>mS($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>gS($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=$e.getNumber("WEBGL_VERSION");return e===0?0:yS(e)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Jh.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>AS($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>xS($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>bS($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Jh.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Pa(){let e,t,a,r,n,s,i,o,l,u;return J().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",a="out",r="in",n="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",a="varying",r="varying",n="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:a,varyingFs:r,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function El(e,t,a="index"){let r=w.computeStrides(t);return r.map((n,s)=>{let i=`int ${e[s]} = ${a} / ${n}`,o=s===r.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * ${n}`:`index -= ${e[s]} * ${n}`;return`${i}; ${o};`}).join("")}function xm(e,t,a="index"){let r=w.computeStrides(t);return r.map((n,s)=>{let i=`int ${e[s]} = ${a} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function kY(e,t){let a=e.length,r=e.map(s=>`${t}[${s}]`),n=new Array(a-1);n[a-2]=r[a-1];for(let s=a-3;s>=0;--s)n[s]=`(${n[s+1]} * ${r[s+1]})`;return n}function IY(e,t,a="index"){let r=e.map((s,i)=>i),n=kY(r,t);return n.map((s,i)=>{let o=`int ${e[i]} = ${a} / ${n[i]}`,l=i===n.length-1?`int ${e[i+1]} = ${a} - ${e[i]} * ${n[i]}`:`index -= ${e[i]} * ${n[i]}`;return`${o}; ${l};`}).join("")}function rb(e){let t=w.computeStrides(e).map(a=>a.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function nb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var vS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:wS}=T;function SY(e,t,a){let r=[];if(e.forEach(h=>{let c=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),a.enableShapeUniforms){let{uniformShape:f}=sb(a.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(f.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),a.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}a.customUniforms&&a.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let n=r.join(`
`),s=e.map(h=>NY(h,t,a.packedInputs,a.enableShapeUniforms)).join(`
`),i=t.texShape,o=Pa(),l=EY(o),u,d,p=FY(o);return t.isPacked?(u=TY(t.logicalShape,i,a.enableShapeUniforms),d=$Y(o)):(u=CY(t.logicalShape,i,a.enableShapeUniforms),d=RY(o)),a.packedInputs&&(p+=OY),[p,l,d,n,u,s,a.userCode].join(`
`)}function vd(e,t=!1){let a=e.shapeInfo.logicalShape;switch(a.length){case 0:return XY(e,t);case 1:return ZY(e,t);case 2:return JY(e,t);case 3:return eJ(e,t);case 4:return aJ(e,t);case 5:return rJ(e);case 6:return nJ(e);default:throw new Error(`${a.length}-D input sampling is not yet supported`)}}function kS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return qY(e);case 1:return KY(e,t);case 2:return YY(e,t);case 3:return QY(e,t);default:return tJ(e,t)}}function NY(e,t,a=!1,r){let n="";a?n+=kS(e,r):n+=vd(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a?n+=sJ(e,t):n+=iJ(e,t)),n}function TY(e,t,a){switch(e.length){case 0:return IS();case 1:return PY(e,t,a);case 2:return jY(e,t,a);case 3:return LY(e,t,a);default:return BY(e,t,a)}}function CY(e,t,a){switch(e.length){case 0:return IS();case 1:return DY(e,t,a);case 2:return HY(e,t,a);case 3:return WY(e,t,a);case 4:return VY(e,t,a);case 5:return UY(e,t);case 6:return GY(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function EY(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function RY(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function $Y(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function FY(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${MY}
    ${_Y}
    ${zY}
  `}var MY=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_Y=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,zY=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OY=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function IS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function PY(e,t,a){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function DY(e,t,a){return t[0]===1?a?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?a?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function LY(e,t,a){if(a)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(e[2]/2),s=n*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function WY(e,t,a){if(a)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${xm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=El(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function BY(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(e[e.length-1]/2),s=n*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${e.length}(${l});
    }
  `}function VY(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${xm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=El(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function UY(e,t){let a=El(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function GY(e,t){let a=El(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function jY(e,t,a){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return a?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let n=Math.ceil(e[1]/2);return a?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function HY(e,t,a){return w.arraysEqual(e,t)?a?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:a?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Rl(e){return`offset${e}`}function qY(e){let t=e.name,a="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Pa();return`
    vec4 ${a}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function XY(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${a};}`;let[n,s]=e.shapeInfo.texShape;if(n===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${a}, halfCR);
      }
    `;let i=Rl(a);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${i});
      return sampleTexture(${a}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${a}, uv);
    }
  `}function KY(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=e.shapeInfo.texShape,s=Pa();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${a}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${a}, uv);
    }
  `}function ZY(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${wd(e)}
      }
    `;let n=e.shapeInfo.texShape,s=n[0],i=n[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;let o=Rl(a);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${a}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${o});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${a}, uv);
    }
  `}function YY(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=Pa();if(s!=null&&w.arraysEqual(a,s))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(a[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function JY(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&w.arraysEqual(a,s)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let h=s[0],c=s[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(a),l=i;if(l.length<a.length){let h=kd(e,l),c=["row","col"];return`
      ${vd(h,t)}
      float ${n}(int row, int col) {
        return ${n}(${Id(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${wd(e)}
      }
    `;let u=s[0],d=s[1],p=Rl(r);return d===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${d}, index);
    return sampleTexture(${r}, uv);
  }
`}function QY(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(a[0]===1){let h=a.slice(1),c=[1,2],f=kd(e,h),m=["b","row","col"];return`
        ${kS(f,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${Id(m,c)});
        }
      `}let o=Pa();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],u=i[1],d=Math.ceil(a[2]/2),p=d*Math.ceil(a[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${d}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function eJ(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[1]*a[2],i=a[2],{newShape:o,keptDims:l}=w.squeezeShape(a),u=o;if(u.length<a.length){let m=kd(e,u),g=["row","col","depth"];return`
        ${vd(m,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${Id(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${wd(e)}
      }
    `;let d=e.shapeInfo.texShape,p=d[0],h=d[1],c=e.shapeInfo.flatOffset;if(h===s&&c==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${p}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===i&&c==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=Rl(r);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}function tJ(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=Pa();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${a}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${a}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${a}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],p=Math.ceil(s[i-1]/2),h=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${h} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,h*=s[i-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${r}(${c}) {
      int index = ${f};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${n.texture2D}(${a}, uv);
    }
  `}function aJ(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[3],i=a[2]*s,o=a[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(a);if(l.length<a.length){let A=kd(e,l),x=["row","col","depth","depth2"];return`
      ${vd(A,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${Id(x,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${wd(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],c=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&d==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&d==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=Rl(r);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function rJ(e){let t=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=t[4],s=t[3]*n,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(t);if(l.length<t.length){let m=kd(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${vd(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Id(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${n})) +
          depth3;
        ${wd(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],c=p[1];if(c===o&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(c===n&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `;let f=Rl(a);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${c}, index);
      return sampleTexture(${a}, uv);
    }
  `}function nJ(e){let t=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:n,keptDims:s}=w.squeezeShape(t);if(n.length<t.length){let g=kd(e,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${vd(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Id(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${wd(e)}
      }
    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],f=h[1];if(f===d&&p==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===i&&p==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;let m=Rl(a);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${a}, uv);
    }
  `}function wd(e){let t=e.name,a=w.sizeFromShape(e.shapeInfo.logicalShape);return a<2?`return ${t};`:`
    for (int i = 0; i < ${a}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function sJ(e,t){let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),n="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=wS(e.shapeInfo.logicalShape,t.logicalShape),l=ht(i),u=i-s,d,p=["x","y","z","w","u","v"];s===0?d="":i<2&&o.length>=1?d="coords = 0;":d=o.map(g=>`coords.${p[g+u]} = 0;`).join(`
`);let h="";i<2&&s>0?h="coords":h=e.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+u]}`).join(", ");let c="return outputValue;",f=w.sizeFromShape(e.shapeInfo.logicalShape)===1,m=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${r}(${h});
      ${c}
    }
  `}function iJ(e,t){let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),n="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let u=ht(l),d=wS(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,h,c=["x","y","z","w","u","v"];o===0?h="":l<2&&d.length>=1?h="coords = 0;":h=d.map(m=>`coords.${c[m+p]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${c[g+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${r}(${f});
    }
  `}function ht(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function sb(e,t,a){let{newShape:r,keptDims:n}=w.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!w.arraysEqual(t,a)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:n}}function kd(e,t){let a=JSON.parse(JSON.stringify(e));return a.shapeInfo.logicalShape=t,a}function Id(e,t){return t.map(a=>e[a]).join(", ")}function oJ(e,t,a,r){let n=a.map((d,p)=>{let h={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(h.flatOffset=d.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:h}}),s=n.map(d=>d.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=SY(n,i,t),l=eS(e.gl,o),u=e.createProgram(l);return J().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,...SS(e,t,u)}}function SS(e,t,a){let r={},n={},s={},i=[],o,l,u,d=null,p=null;p=e.getUniformLocation(a,"NAN",!1),J().getNumber("WEBGL_VERSION")===1&&(d=e.getUniformLocation(a,"INFINITY",!1));let h=!1;for(let c=0;c<t.variableNames.length;c++){let f=t.variableNames[c];r[f]=e.getUniformLocation(a,f,h),r[`offset${f}`]=e.getUniformLocation(a,`offset${f}`,h),t.enableShapeUniforms&&(n[`${f}Shape`]=e.getUniformLocation(a,`${f}Shape`,h),s[`${f}TexShape`]=e.getUniformLocation(a,`${f}TexShape`,h))}return t.enableShapeUniforms&&(o=e.getUniformLocation(a,"outShape",h),u=e.getUniformLocation(a,"outShapeStrides",h),l=e.getUniformLocation(a,"outTexShape",h)),t.customUniforms&&t.customUniforms.forEach((c,f)=>{i[f]=e.getUniformLocation(a,c.name,h)}),{uniformLocations:r,customUniformLocations:i,infLoc:d,nanLoc:p,inShapesLocations:n,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function nv(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((a,r)=>{let n=a.logicalShape,s=t[r],i=s.shape;if(!w.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(a.isUniform&&s.isUniform)return;let o=a.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function lJ(e,t,a,r,n){t.program.enableShapeUniforms||(nv(t.inShapeInfos,a),nv([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),J().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),a.forEach((l,u)=>{let d=t.program.variableNames[u],p=t.uniformLocations[d],h=t.uniformLocations[`offset${d}`],c=t.inShapesLocations[`${d}Shape`],f=t.inTexShapesLocations[`${d}TexShape`];if(c){let{uniformShape:m}=sb(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(c,new Int32Array(m));break;case 2:e.gl.uniform2iv(c,new Int32Array(m));break;case 3:e.gl.uniform3iv(c,new Int32Array(m));break;case 4:e.gl.uniform4iv(c,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),p!=null){if(l.isUniform){if(w.sizeFromShape(l.shape)<2)e.gl.uniform1f(p,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}return}l.texData.slice!=null&&h!=null&&e.gl.uniform1i(h,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,p,u)}});let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&n&&t.program.customUniforms.forEach((l,u)=>{let d=t.customUniformLocations[u],p=n[u];if(l.type==="float")e.gl.uniform1fv(d,p);else if(l.type==="vec2")e.gl.uniform2fv(d,p);else if(l.type==="vec3")e.gl.uniform3fv(d,p);else if(l.type==="vec4")e.gl.uniform4fv(d,p);else if(l.type==="int")e.gl.uniform1iv(d,p);else if(l.type==="ivec2")e.gl.uniform2iv(d,p);else if(l.type==="ivec3")e.gl.uniform3iv(d,p);else if(l.type==="ivec4")e.gl.uniform4iv(d,p);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function uJ(e,t,a){let r="";t.concat(a).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:d,keptDims:p}=sb(e.packedInputs,i.shape,l),h="",c="",f="";if(d.length===1&&e.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${v[0]>1}_${v[1]>1}`}else if(d.length===2&&!e.packedInputs)c=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!e.packedInputs){let v=w.computeStrides(d);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let m=i.shape.length,g=d.length===2&&w.arraysEqual(i.shape,l),y=w.sizeFromShape(i.shape)===1,A=T.getBroadcastDims(i.shape,a.shape),x=!e.packedInputs&&m===a.shape.length&&w.arraysEqual(l,a.texData.texShape),b=e.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${m}_${x}_${u?p:""}_${d.length}_${y}_${A}_${g}_${h}_${c}_${f}_${b}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let n=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+n+`${J().getNumber("WEBGL_VERSION")}`,s}function Ya(e){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var dJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Pa();this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?xm(["r","c","d"],e):El(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},hJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Pa();this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?xm(["r","c","d"],e):El(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},pJ=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=Pa();this.outputShape=e,this.userCode=`
      ${vS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},cJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=Pa();this.outputShape=e,this.userCode=`
      ${vS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},fJ=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=Pa();this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?nb():rb(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${a.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},mJ=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=Pa();this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length);let r="",n="result";t&&(n="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${a.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?nb():rb(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${a.output} = ${n};
        }
    `}},NS={};Le(NS,{bindVertexProgramAttributeStreams:()=>zS,createBufferFromOutputTexture:()=>DS,createFloat16MatrixTexture:()=>$S,createFloat16PackedMatrixTexture:()=>_S,createFloat32MatrixTexture:()=>RS,createIndexBuffer:()=>ES,createPackedMatrixTexture:()=>MS,createUnsignedBytesMatrixTexture:()=>FS,createVertexBuffer:()=>CS,createVertexShader:()=>TS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>WS,downloadFloat32MatrixFromBuffer:()=>LS,downloadMatrixFromPackedOutputTexture:()=>VS,downloadPackedMatrixFromBuffer:()=>BS,getInternalFormatForFloat16MatrixTexture:()=>ob,getInternalFormatForFloat16PackedMatrixTexture:()=>db,getInternalFormatForFloat32MatrixTexture:()=>ib,getInternalFormatForPackedMatrixTexture:()=>ub,getInternalFormatForUnsignedBytesMatrixTexture:()=>lb,uploadDenseMatrixToTexture:()=>OS,uploadPixelDataToTexture:()=>PS});function TS(e){let t=Pa(),a=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return QI(e,a)}function CS(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return rS(e,t)}function ES(e){let t=new Uint16Array([0,1,2,2,1,3]);return nS(e,t)}function bp(e,t,a,r,n,s){iS(t,a);let i=sS(e),o=e.TEXTURE_2D;return ve(e,()=>e.bindTexture(o,i)),ve(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ve(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ve(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),ve(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),J().getNumber("WEBGL_VERSION")===1?ve(e,()=>e.texImage2D(o,0,r,t,a,0,n,s,null)):ve(e,()=>e.texStorage2D(o,1,r,t,a)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[a,t]}}function ib(e){return e.internalFormatFloat}function RS(e,t,a,r){let[n,s]=xp(t,a);return bp(e,n,s,ib(r),r.textureFormatFloat,e.FLOAT)}function ob(e){return e.internalFormatHalfFloat}function $S(e,t,a,r){let[n,s]=xp(t,a);return bp(e,n,s,ob(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function lb(e){return e.downloadTextureFormat}function FS(e,t,a,r){let[n,s]=xp(t,a);return bp(e,n,s,lb(r),e.RGBA,e.UNSIGNED_BYTE)}function ub(e){return e.internalFormatPackedFloat}function MS(e,t,a,r){let[n,s]=xd(t,a);return bp(e,n,s,ub(r),e.RGBA,e.FLOAT)}function db(e){return e.internalFormatPackedHalfFloat}function _S(e,t,a,r){let[n,s]=xd(t,a);return bp(e,n,s,db(r),e.RGBA,r.textureTypeHalfFloat)}function zS(e,t,a){return ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),W1(e,t,"clipSpacePos",a,3,20,0)&&W1(e,t,"uv",a,2,20,12)}function OS(e,t,a,r,n,s){ve(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;n instanceof Uint8Array?(i=new Uint8Array(a*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(a*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(n),J().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a,r,e.RGBA,o,i)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,a,r,0,e.RGBA,o,i)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function PS(e,t,a){ve(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a.data instanceof Uint8Array?J().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a.width,a.height,e.RGBA,e.UNSIGNED_BYTE,a.data)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,a.width,a.height,0,e.RGBA,e.UNSIGNED_BYTE,a.data)):J().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,a)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function DS(e,t,a,r){let n=e.createBuffer();ve(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,n));let s=4*4*t*a;return ve(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),ve(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,0)),ve(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),n}function LS(e,t,a){let r=e,n=new Float32Array(a);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,n),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),n}function WS(e,t,a,r){let[n,s]=xp(t,a),i=4,o=new Uint8Array(hY(t*a,i));return ve(e,()=>e.readPixels(0,0,n,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function BS(e,t,a,r,n,s,i,o){let l=e,u=new Float32Array(pY(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function VS(e,t,a){let r=new Float32Array(t*a*4);return ve(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,r)),r}var ph=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=J().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,eb(t,e)):this.gl=un(t);let a="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),J().getNumber("WEBGL_VERSION")===1){let n="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=rh(this.gl,n),Ar(this.gl,s))this.textureHalfFloatExtension=rh(this.gl,s);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),Ar(this.gl,r))this.colorBufferHalfFloatExtension=rh(this.gl,r);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",Ar(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(Ar(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=CS(this.gl),this.indexBuffer=ES(this.gl),this.framebuffer=oS(this.gl),this.textureConfig=tb(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ve(e,()=>e.finish()),ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.deleteFramebuffer(this.framebuffer)),ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ve(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),RS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),$S(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),FS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),PS(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,a,r){this.throwIfDisposed(),OS(this.gl,e,t,a,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),_S(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),MS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(B1(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,a){return this.downloadMatrixDriver(e,()=>WS(this.gl,t,a,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,a,r,n,s){return BS(this.gl,e,t,a,r,n,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return LS(this.gl,e,t)}createBufferFromTexture(e,t,a){this.bindTextureToFrameBuffer(e);let r=DS(this.gl,t,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,a;if(J().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,n=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),a=()=>{let s=r.clientWaitSync(n,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=n}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:t,isFencePassed:a}}downloadMatrixFromPackedTexture(e,t,a){return this.downloadMatrixDriver(e,()=>VS(this.gl,t,a))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=TS(t));let a=tS(t);return ve(t,()=>t.attachShader(a,this.vertexShader)),ve(t,()=>t.attachShader(a,e)),aS(t,a),this.debug&&Xc(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=zS(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ve(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Xc(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,a=!0){return this.throwIfDisposed(),a?uS(this.gl,e,t):dS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,a){this.throwIfDisposed(),this.throwIfNoProgram(),hS(this.gl,e,t,a)}setOutputMatrixTexture(e,t,a){this.setOutputMatrixTextureDriver(e,a,t)}setOutputPackedMatrixTexture(e,t,a){this.throwIfDisposed();let[r,n]=xd(t,a);this.setOutputMatrixTextureDriver(e,r,n)}setOutputMatrixWriteRegion(e,t,a,r){this.setOutputMatrixWriteRegionDriver(a,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,a,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Xc(this.gl,this.program),nh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ve(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=rh(this.gl,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let a=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=a.createQuery();return a.beginQuery(r.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,a=this.getQueryTimerExtensionWebGL2();t.endQuery(a.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let a=this.gl;return a.getQueryParameter(e,a.QUERY_RESULT)/1e6}else{let a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(e,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let a=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=a.getQueryParameter(e,a.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}else{let a=this.getQueryTimerExtensionWebGL1(),r=a.getQueryObjectEXT(e,a.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=gJ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:a}=this.itemsToPoll[t];a()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Kc(this.gl,e,this.framebuffer),this.debug&&nh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Kc(this.gl,this.outputTexture,this.framebuffer),this.debug&&nh(this.gl)):B1(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let a=t();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(e,t,a){this.throwIfDisposed();let r=this.gl;Kc(r,e,this.framebuffer),this.debug&&nh(r),this.outputTexture=e,ve(r,()=>r.viewport(0,0,t,a)),ve(r,()=>r.scissor(0,0,t,a))}setOutputMatrixWriteRegionDriver(e,t,a,r){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(e,t,a,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function gJ(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:yJ,bincountImpl:US,bincountReduceImpl:AJ,ceilImpl:xJ,concatImpl:bJ,equalImpl:vJ,expImpl:wJ,expm1Impl:kJ,floorImpl:IJ,gatherNdImpl:SJ,gatherV2Impl:NJ,greaterImpl:TJ,greaterEqualImpl:CJ,lessImpl:EJ,lessEqualImpl:RJ,linSpaceImpl:$J,logImpl:FJ,maxImpl:MJ,maximumImpl:_J,minimumImpl:zJ,multiplyImpl:OJ,negImpl:PJ,notEqualImpl:DJ,prodImpl:LJ,rangeImpl:WJ,rsqrtImpl:BJ,sigmoidImpl:VJ,simpleAbsImpl:GS,sliceImpl:UJ,sparseFillEmptyRowsImpl:GJ,sparseReshapeImpl:jJ,sparseSegmentReductionImpl:jS,sqrtImpl:HJ,stridedSliceImpl:qJ,stringNGramsImpl:XJ,stringSplitImpl:KJ,stringToHashBucketFastImpl:ZJ,subImpl:YJ,tileImpl:JJ,topKImpl:QJ,transposeImpl:hb,uniqueImpl:eQ}=ym;function HS(e,t){return["x","y","z","w","u","v"].slice(0,t).map(a=>`${e}.${a}`)}function $a(e,t){return t===1?[e]:HS(e,t)}function tQ(e,t){if(e===1)return"rc";let a="";for(let r=0;r<e;r++)a+=t[r],r<e-1&&(a+=",");return a}var aQ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Ya(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=$a("rc",this.rank),a=ht(this.rank),r=this.getOutOfBoundsCondition(t),n=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${n}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let n=`${a===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)n=`${e[e.length-1-s]},`+n;t.push(n)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let a=this.rank-2;a<this.rank;a++)t+=`${e[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},qS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length);let a="";for(let r=0;r<4;r++){let n="thisRC = rc;";r%2===1&&(n+="thisRC.z += 1;"),r>1&&(n+="thisRC.y += 1;"),a+=`
        ${n}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${rQ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?nb():rb(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}};function rQ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?IY(["r","c","d"],"inputShape"):El(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var nQ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,a){let r=iv(t,a),n=ov(e,r,a);n in this.freeTextures||(this.freeTextures[n]=[]),n in this.usedTextures||(this.usedTextures[n]=[]);let s=sv(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[n].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[n].shift();return this.usedTextures[n].push(o),o}let i;return r===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[n].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,a,r){if(this.freeTextures==null)return;let n=iv(a,r),s=ov(t,n,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=sv(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=J().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function sQ(e,t){let a=e;if(t===a.R32F)return 4;if(t===a.R16F)return 2;if(t===a.RGBA32F||t===e.RGBA)return 16;if(t===a.RGBA16F)return 8;if(t===a.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function sv(e,t,a,r,n){let s=iQ(t,r),i;if(n){let[l,u]=xd(e[0],e[1]);i=l*u}else{let[l,u]=xp(e[0],e[1]);i=l*u}let o=sQ(a,s);return i*o}function iQ(e,t){switch(e){case 3:return ub(t);case 4:return db(t);case 1:return ib(t);case 0:return ob(t);case 2:return lb(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function oQ(e){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function iv(e,t){if(e===1)return 3;if(e===0||e==null)return oQ(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function ov(e,t,a){return`${e[0]}_${e[1]}_${t}_${a}`}var Vn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Dr="if (isnan(x)) return x;",lQ="return x;",lv="return abs(x);",uQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",dQ=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,hQ=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Zl="return x;",pQ="return 1.0 / (1.0 + exp(-1.0 * x));",cQ="return x;",fQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,mQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yQ="return 1.0 / (1.0 + exp(-1.0 * x));",mo=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},AQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length);let t=e.length,a=$a("rc",t),r=ht(t),n=tQ(t,a),s=a.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${n});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},xQ=Or.whereImpl,bQ=1e-7,vQ=1e-4,k2={};function wQ(e){return e in k2||(k2[e]={}),k2[e]}var kQ=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),IQ=600;function SQ(){return J().global.screen==null?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*IQ/1024/1024}var XS=class extends zu{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof ph)t=e;else{let a=un(J().getNumber("WEBGL_VERSION"),e);t=new ph(a)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let a=un(J().getNumber("WEBGL_VERSION"));t=new ph(a),this.binaryCache=wQ(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nQ(this.gpgpu),this.numMBBeforeWarning=SQ(),this.texData=new $h(this,Ca())}nextDataId(){return XS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,a){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),a==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:a,values:e,usage:1,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,a,r,n){if(J().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:a,dtype:r,values:t,usage:1,refCount:n})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:a,dtype:r,complexTensorInfos:n,slice:s,shape:i,isPacked:o}=t;if(s!=null){let p;o?p=new mo(i,Zl):p=new Vn(i,Zl);let h=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:r}],r),c=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),c}if(a!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return a;let l=this.activeTimers!=null,u;l&&(u=w.now());let d;if(r==="complex64"){let p=this.readSync(n.real.dataId),h=this.readSync(n.imag.dataId);d=T.mergeRealAndImagArrays(p,h)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){let c=this.pendingRead.get(e);return new Promise(f=>c.push(f))}let t=this.texData.get(e),{values:a,shape:r,slice:n,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(n!=null){let c;o?c=new mo(r,Zl):c=new Vn(r,Zl);let f=this.runWebGLProgram(c,[{dataId:e,shape:r,dtype:s}],s),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(a!=null)return this.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&J().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(s!=="complex64"&&J().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let c=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(c.texture.texture,...Nc(r))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(s==="complex64"){let c=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=c[0],m=c[1];d=T.mergeRealAndImagArrays(f,m)}else if(l==null)d=this.getValuesFromTexture(e);else{let c=w.sizeFromShape(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,c)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let c=this.gpgpu.gl;ve(c,()=>c.deleteBuffer(l))}let p=this.convertAndCacheOnCPU(e,d),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(c=>c(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ca().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let a=this.texData.get(e),{values:r,shape:n,slice:s,dtype:i,isPacked:o,texture:l}=a;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let h;o?h=new mo(n,Zl):h=new Vn(n,Zl);let c=this.runWebGLProgram(h,[{dataId:e,shape:n,dtype:i}],i),f=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),f}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),d=Ca().makeTensorFromDataId(u.dataId,u.shape,u.dtype),p=this.texData.get(u.dataId);return{tensorRef:d,...p.texture}}bufferSync(e){let t=this.readSync(e.dataId),a=t;if(e.dtype==="string")try{a=t.map(r=>w.decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,a)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let a=e[t];if(!YI(a))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:a,isPacked:r}=this.texData.get(e),n=w.sizeFromShape(t);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),h=this.texData.get(p.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...Nc(t)).subarray(0,n);return this.disposeIntermediateTensorInfo(p),c}let s=J().getBool("WEBGL_PACK")&&r===!0,i=s?Zc(t):t,o=s?new cJ(i):new pJ(i),l=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,n);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,a=[],r=!1;this.programTimersStack==null?(this.programTimersStack=a,r=!0):this.activeTimers.push(a),this.activeTimers=a,e();let n=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(n);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:a}=this.texData.get(e);return a!=null&&(this.disposeData(a.real.dataId,t),this.disposeData(a.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:a,texShape:r,usage:n,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,a),this.textureManager.releaseTexture(t,r,n,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=kQ){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(a=>this.texData.get(a.dataId).texture==null&&w.sizeFromShape(a.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return xQ(e.shape,t)}packedUnaryOp(e,t,a){let r=new mo(e.shape,t),n=this.compileAndRun(r,[e],a);return Ca().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=GS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,lv,e.dtype);let t=new Vn(e.shape,lv),a=this.compileAndRun(t,[e]);return Ca().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}makeTensorInfo(e,t,a){let r;if(t==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let n=a.map(s=>w.encodeString(s));r=this.write(n,e,t)}else r=this.write(a,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,a){let{dataId:r}=this.makeTensorInfo(e,t,a);return Ca().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new AQ(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new aQ(e.shape),a=!0;return this.runWebGLProgram(t,[e],e.dtype,null,a)}packedReshape(e,t){let a=[Ro(e.shape),...$o(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},n=[Ro(t),...$o(t)],s=new qS(n,a),i=!0,o=[a],l=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let a=this.texData.get(e),{isPacked:r,shape:n,dtype:s}=a;if(t!=null){let p=w.sizeFromShape(n),h=t[0]*t[1]*4;w.assert(p<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Zc(n),o;r?o=new hJ(i):o=new dJ(i);let l=!0,u=[t??Nc(i)],d=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,l,t);return{dtype:s,shape:n,dataId:d.dataId}}runWebGLProgram(e,t,a,r,n=!1,s){let i=this.makeTensorInfo(e.outputShape,a),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=s??Nc(e.outputShape);o.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!Eh(y.shape,g.shape)){let A=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),l.push(g),y=this.texData.get(g.dataId),A.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let d={shape:i.shape,texData:o,isUniform:!1},p=uJ(e,u,d),h=this.getAndSaveBinary(p,()=>oJ(this.gpgpu,e,u,d)),c=this.activeTimers!=null,f;c&&(f=this.startTimer()),J().get("ENGINE_COMPILE_ONLY")||lJ(this.gpgpu,h,u,d,r),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=J().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&n===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,a,r,n=!1){return a=a||t[0].dtype,this.runWebGLProgram(e,t,a,r,n)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Z(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=J().getBool("DEBUG");J().set("DEBUG",!1);let t=this.abs(ke(1e-8)).dataSync()[0];if(J().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?bQ:vQ}uploadToGPU(e){let t=this.texData.get(e),{shape:a,dtype:r,values:n,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,u;l&&(u=w.now());let d=t.texShape;if(d==null&&(d=fS(a,o),t.texShape=d),n!=null){let p=Zc(a),h,c=d[1],f=d[0],m=n instanceof Uint8Array||n instanceof Uint8ClampedArray;(o||!m)&&([c,f]=xd(d[0],d[1])),o?h=new mJ(p,m):h=new fJ(p,m);let g=m?[f,c]:d,y=this.makeTensorInfo(g,r),A=this.texData.get(y.dataId);m?A.usage=2:A.usage=1,A.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,f,n);let x=[[f,c]],b=!0,v=this.runWebGLProgram(h,[y],r,x,b),S=this.texData.get(v.dataId);t.texShape=S.texShape,t.isPacked=S.isPacked,t.usage=S.usage,J().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=S.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=w.now()-u)}else{let p=this.acquireTexture(d,i,r,o);t.texture=p}}convertAndCacheOnCPU(e,t){let a=this.texData.get(e),{dtype:r}=a;return this.releaseGPUData(e),t!=null&&(a.values=NQ(t,r)),a.values}acquireTexture(e,t,a,r){if(this.numBytesInGPU+=this.computeBytes(e,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let n=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${n} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let a=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(n){throw n}});e.push(a)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await oA(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(ab(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:a,infLoc:r,nanLoc:n,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=SS(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=a,e.infLoc=r,e.nanLoc=n,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},bm=XS;bm.nextDataId=0;function NQ(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let a=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<a.length;++r)a[r]=Math.round(e[r]);return a}else throw new Error(`Unknown dtype ${t}`)}var TQ="0.0.0";function KS(){J().set("WEBGL_FORCE_F16_TEXTURES",!0)}Jh.isBrowser()&&dd("webgl",()=>new bm,2);var CQ={forceHalfFloat:KS},ZS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Fu=class{constructor(e,t,a){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.enableShapeUniforms=Ya(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},vm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,vp=class{constructor(e,t,a,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,a);let n=this.outputShape.length;this.enableShapeUniforms=Ya(n);let s="";if(r)if(n===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${ht(n)} coords = getOutputCoords();
        `,n===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=$a("coords",n);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[n-2]} + 1) >= outShape[${n} - 2];
            bool nextColOutOfBounds =
              (${i[n-1]} + 1) >= outShape[${n} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[n-2]} + 1) >= ${this.outputShape[n-2]};
            bool nextColOutOfBounds =
              (${i[n-1]} + 1) >= ${this.outputShape[n-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Ka(e){let{inputs:t,backend:a}=e,{x:r}=t;return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var EQ={kernelName:hi,backendName:"webgl",kernelFunc:Ka};function Ui(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.makeTensorInfo(r.shape,"complex64"),i=a.texData.get(s.dataId),o=Ka({inputs:{x:r},backend:a}),l=Ka({inputs:{x:n},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var RQ={kernelName:Mh,backendName:"webgl",kernelFunc:Ui},YS="return (a < 0.) ? b * a : a;",JS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function $Q(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{alpha:s}=r,i=a.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vp(JS,n.shape,i.shape):new Fu(YS,n.shape,i.shape),l=a.runWebGLProgram(o,[n,i],"float32");return a.disposeIntermediateTensorInfo(i),l}var FQ={kernelName:pi,backendName:"webgl",kernelFunc:$Q},QS="return (a < 0.) ? b * a : a;",e8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function MQ(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vp(e8,r.shape,n.shape):new Fu(QS,r.shape,n.shape);return a.runWebGLProgram(s,[r,n],"float32")}var _Q={kernelName:Ii,backendName:"webgl",kernelFunc:MQ},Sd="if (isnan(x)) return x;",zQ=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,OQ=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function at({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:a,dtype:r}){return({inputs:n,backend:s})=>{let{x:i}=n,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&a!=null){let p=o.texData.get(i.dataId),h=a(p.values,l);return o.makeTensorInfo(i.shape,l,h)}let u=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,d;return u?d=new mo(i.shape,t):d=new Vn(i.shape,e),o.runWebGLProgram(d,[i],l)}}function ma({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,d=o;if(r&&l.dtype==="complex64"){let f=d.texData.get(l.dataId),m=d.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[b,v]=x,S={dataId:b.dataId,dtype:b.dtype,shape:l.shape},N={dataId:v.dataId,dtype:v.dtype,shape:u.shape},E=new Fu(e,l.shape,u.shape);return d.runWebGLProgram(E,[S,N],ba(b.dtype,v.dtype))}),A=Ui({inputs:{real:g,imag:y},backend:d});return d.disposeIntermediateTensorInfo(g),d.disposeIntermediateTensorInfo(y),A}let p=s||ba(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||d.shouldExecuteOnCPU([l,u]))&&n!=null){let f=d.texData.get(l.dataId).values,m=d.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[A,x]=n(l.shape,u.shape,g,y,p),b=d.makeTensorInfo(x,p),v=d.texData.get(b.dataId);return v.values=A,b}let h=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return h?c=new vp(t,l.shape,u.shape,a):c=new Fu(e,l.shape,u.shape),d.runWebGLProgram(c,[l,u],p)}}function wm(e,t=!1){if(e==="linear")return t?cQ:lQ;if(e==="relu")return t?mQ:dQ;if(e==="elu")return t?fQ:uQ;if(e==="relu6")return t?gQ:hQ;if(e==="prelu")return t?e8:QS;if(e==="leakyrelu")return t?JS:YS;if(e==="sigmoid")return t?yQ:pQ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var t8=class{constructor(e,t,a,r=!1,n=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=Ya(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",h=n?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=n?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${A};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${f[0]});
          result += (${c[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},uv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},dv=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},hv="return a * b;";function pb(e){let{inputs:t,backend:a}=e,{a:r,b:n}=t,s=T.upcastType(r.dtype,n.dtype);if(r.dtype==="complex64"){let o=a.texData.get(r.dataId),l=a.texData.get(n.dataId),u=new dv(uv.REAL,r.shape,n.shape),d=new dv(uv.IMAG,r.shape,n.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],h=a.runWebGLProgram(u,p,"float32"),c=a.runWebGLProgram(d,p,"float32"),f=Ui({inputs:{real:h,imag:c},backend:a});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),f}if(a.shouldExecuteOnCPU([r,n])){let o=a.texData.get(r.dataId),l=a.texData.get(n.dataId),[u,d]=OJ(r.shape,n.shape,o.values,l.values,s),p=a.makeTensorInfo(d,s),h=a.texData.get(p.dataId);return h.values=u,p}let i;return J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new vp(hv,r.shape,n.shape):i=new Fu(hv,r.shape,n.shape),a.runWebGLProgram(i,[r,n],s)}var PQ={kernelName:vi,backendName:"webgl",kernelFunc:pb};function DQ(e,t,a){let r=[Ro(e.shape),...$o(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Ro(t),...$o(t)],i=new qS(s,r),o=!0,l=[r],u=a.runWebGLProgram(i,[n],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function be(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{shape:s}=r,i=a,o=w.sizeFromShape(n.shape),l=w.inferFromImplicitShape(s,o),u=w.sizeFromShape(l);w.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let d=i.texData.get(n.dataId);return d.isPacked&&!Eh(n.shape,l)&&!(d.texture!==null&&Eh(d.shape,l))?DQ(n,l,i):(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var LQ={kernelName:ol,backendName:"webgl",kernelFunc:be},pv=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:r,inSize:n,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(a/4)*4,o=a%4,l="sumValue += dot(values, ones);";if(t!=null){let d=1/t;l=`sumValue += dot(values * ${w.isInt(d)?d.toPrecision(2):d}, ones);`}let u="";n%a>0&&(u=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},WQ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:r,inSize:n,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(a/4)*4,d=a%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let c="";n%a>0&&(c=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function BQ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let a=t.length?t[t.length-1].outSize:e[1],r=T.computeOptimalWindowSize(a);t.push({inSize:a,windowSize:r,outSize:Math.ceil(a/r)})}return t}function $l(e,t,a,r){let n=BQ(e.shape),s=e;for(let i=0;i<n.length;i++){let{inSize:o,windowSize:l,outSize:u}=n[i],d,p;a==="mean"?d=i===0?new pv({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new pv({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):d=new WQ({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},a),p=s,s=r.runWebGLProgram(d,[s],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return s}var VQ=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[t[s]];this.outputShape=a,this.rank=a.length;let r=ht(this.rank),n=UQ(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${n}));
    }
    `}};function UQ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let n=0;n<e.length;n++)r[e[n]]=a[n];return r.join()}var GQ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let a=new Array(e.length);for(let u=0;u<a.length;u++)a[u]=e[t[u]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ht(this.rank),n=HS("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=n[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${n[this.rank-1]} < ${a[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${n[this.rank-1]};
      if(++${n[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function km(e,t,a){let r=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GQ(e.shape,t):new VQ(e.shape,t);return a.runWebGLProgram(r,[e],e.dtype)}function jQ(e,t,a,r){let n=t,s=e.shape.length,i=w.parseAxisParam(n,e.shape),o=i,l=T.getAxesPermutation(o,s),u=l!=null,d=e;u&&(d=km(e,l,r),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[p,h]=T.computeOutAndReduceShapes(d.shape,o),c=p;a&&(c=T.expandShapeToKeepDim(p,i));let f=w.sizeFromShape(h),m=w.sizeFromShape(e.shape)/f,g=be({inputs:{x:d},attrs:{shape:[m,f]},backend:r}),y=Yh(e.dtype),A=$l(g,y,"sum",r),x=be({inputs:{x:A},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(A),u&&r.disposeIntermediateTensorInfo(d),x}function Im(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return jQ(n,s,i,a)}var HQ={kernelName:Mi,backendName:"webgl",kernelFunc:Im};function fa(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{perm:s}=r,i=a,o=n.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n.shape[s[d]];let u;if(i.shouldExecuteOnCPU([n])){let d=i.texData.get(n.dataId).values,p=hb(d,n.shape,n.dtype,s,l);u=i.makeTensorInfo(l,n.dtype);let h=i.texData.get(u.dataId);h.values=p}else u=km(n,s,i);return u}var qQ={kernelName:Di,backendName:"webgl",kernelFunc:fa},a8=1e3;function zf({a:e,b:t,transposeA:a,transposeB:r,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=a?e.shape[u-2]:e.shape[u-1],h=r?t.shape[d-1]:t.shape[d-2],c=a?e.shape[u-1]:e.shape[u-2],f=r?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),A=w.sizeFromShape(g),x=kl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${r} must match.`);let b=a?[y,p,c]:[y,c,p],v=r?[A,f,h]:[A,h,f],S=be({inputs:{x:e},backend:n,attrs:{shape:b}}),N=be({inputs:{x:t},backend:n,attrs:{shape:v}}),E=[S,N],R=Math.max(y,A),P=a?S.shape[1]:S.shape[2],$=s!=null,k=i!=null,_=l==="leakyrelu",z=l!=null?wm(l,!0):null,L=$||k||_||z!=null,j;if((c===1||f===1)&&P>a8&&L===!1){let B=S,G=N;a&&(B=fa({inputs:{x:S},backend:n,attrs:{perm:[0,2,1]}}),E.push(B)),r&&(G=fa({inputs:{x:N},backend:n,attrs:{perm:[0,2,1]}}),E.push(G));let ee=f!==1,Q=f===1,ne=B;ee&&(ne=be({inputs:{x:B},backend:n,attrs:{shape:[R,P,1]}}),E.push(ne));let Y=f===1?2:1,re=G;Q&&(re=be({inputs:{x:G},backend:n,attrs:{shape:[R,1,P]}}),E.push(re));let le=pb({inputs:{a:ne,b:re},backend:n});j=Im({inputs:{x:le},backend:n,attrs:{axis:Y,keepDims:!0}}),E.push(le)}else{let B=ba(e.dtype,t.dtype),G=new t8(b,v,[R,c,f],a,r,$,z,k,_),ee=[S,N];if(s!=null&&ee.push(s),k&&ee.push(i),_){let Q=n.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ee.push(Q),E.push(Q)}j=n.runWebGLProgram(G,ee,B)}let D=be({inputs:{x:j},backend:n,attrs:{shape:x}});E.push(j);for(let B of E)n.disposeIntermediateTensorInfo(B);return D}function XQ(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=r;return zf({a:n,b:s,transposeA:l,transposeB:u,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}var KQ={kernelName:$s,backendName:"webgl",kernelFunc:XQ},cv="return abs(x);";function ZQ(e){let{inputs:t,backend:a}=e,{x:r}=t;if(a.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=a.texData.get(r.dataId),i=GS(s.values);return a.makeTensorInfo(r.shape,r.dtype,i)}let n;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new mo(r.shape,cv):n=new Vn(r.shape,cv),a.runWebGLProgram(n,[r],r.dtype)}var YQ={kernelName:Do,backendName:"webgl",kernelFunc:ZQ},JQ=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,QQ=at({opSnippet:JQ}),eee={kernelName:Pu,backendName:"webgl",kernelFunc:QQ},tee=Dr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,aee=at({opSnippet:tee}),ree={kernelName:Du,backendName:"webgl",kernelFunc:aee},fv="return a + b;",nee=ma({opSnippet:fv,packedOpSnippet:fv,supportsComplex:!0,cpuKernelImpl:yJ}),see={kernelName:Yn,backendName:"webgl",kernelFunc:nee},iee=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((n,s)=>`T${s}`);let a=[];this.variableNames.forEach(n=>{a.push(`float v${n} = get${n}AtOutCoords();`)});let r=this.variableNames.map(n=>`v${n}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},oee=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((n,s)=>`T${s}`);let a=[];this.variableNames.forEach(n=>{a.push(`vec4 v${n} = get${n}AtOutCoords();`)});let r=this.variableNames.map(n=>`v${n}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function Qc(e){let{inputs:t,backend:a}=e,r=t;if(r.length===1)return Ka({inputs:{x:r[0]},backend:a});if(r.length>J().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=Qc({inputs:r.slice(0,o),backend:a}),u=Qc({inputs:r.slice(o),backend:a});return Qc({inputs:[l,u],backend:a})}let n=r.map(o=>o.dtype).reduce((o,l)=>ba(o,l)),s=r.map(o=>o.shape),i=J().getBool("WEBGL_PACK")?new oee(r[0].shape,s):new iee(r[0].shape,s);return a.runWebGLProgram(i,r,n)}var lee={kernelName:Hs,backendName:"webgl",kernelFunc:Qc};function uee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=T.getAxesPermutation(u,o),p=n;d!=null&&(p=fa({inputs:{x:n},backend:a,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("all",u,o);let[h,c]=T.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(c),m=be({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"all",a),y;if(i){let A=T.expandShapeToKeepDim(h,l);y=be({inputs:{x:g},backend:a,attrs:{shape:A}})}else y=be({inputs:{x:g},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),d!=null&&a.disposeIntermediateTensorInfo(p),y}var dee={kernelName:Lu,backendName:"webgl",kernelFunc:uee};function hee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=T.getAxesPermutation(u,o),p=n;d!=null&&(p=fa({inputs:{x:n},backend:a,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("any",u,o);let[h,c]=T.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(c),m=be({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"any",a),y;if(i){let A=T.expandShapeToKeepDim(h,l);y=be({inputs:{x:g},backend:a,attrs:{shape:A}})}else y=be({inputs:{x:g},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),d!=null&&a.disposeIntermediateTensorInfo(p),y}var pee={kernelName:Wu,backendName:"webgl",kernelFunc:hee},cee=class{constructor(e,t,a){this.variableNames=["A"];let{windowSize:r,batchSize:n,outSize:s}=e;a||this.variableNames.push("bestIndicesA"),this.outputShape=[n,s];let i=t==="max"?">":"<",o=a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},fee=class{constructor(e,t,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);let n=e[e.length-1],s=Math.ceil(n/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=ht(o),u=$a("coords",o),d,p;if(s===1){p=o+1;let N=ht(p);d=`
        ${N} sourceLocR = ${N}(${u.join()}, 0);
        ++${u[o-1]};
        ${N} sourceLocG = ${N}(${u.join()}, 0);
        ++${u[o-2]};
        ${N} sourceLocA = ${N}(${u.join()}, 0);
        --${u[o-1]};
        ${N} sourceLocB = ${N}(${u.join()}, 0);
        --${u[o-2]};`}else p=o,d=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let h=["x","y","z","w","u","v"].slice(0,p),c="."+h[p-1],f=h.map(N=>"int "+N),m=$a("sourceLocR",p-1).concat("inIdx.r"),g=$a("sourceLocG",p-1).concat("inIdx.g"),y=$a("sourceLocB",p-1).concat("inIdx.b"),A=$a("sourceLocA",p-1).concat("inIdx.a"),x=a==="max"?"greaterThan":"lessThan",b=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,S=r?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function r8(e,t,a,r=null){let n=t.shape[0],s=t.shape[1];r!=null&&(n=r.shape[0],s=r.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new cee(o,a,r==null),u=[t];r!=null&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(d.shape[1]===1)return d;let p=r8(e,t,a,d);return e.disposeIntermediateTensorInfo(d),p}function n8(e,t,a,r=null){let n=r!=null?r.shape:t.shape,s=n[n.length-1],i=T.computeOptimalWindowSize(s),o=new fee(n,i,a,r==null),l=r==null?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let d=n8(e,t,a,u);return e.disposeIntermediateTensorInfo(u),d}return u}function s8(e,t,a,r){let n=[a];if(T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),n,t.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[u,d]=T.computeOutAndReduceShapes(l.shape,n),p=w.sizeFromShape(d),h=be({inputs:{x:l},backend:e,attrs:{shape:[-1,p]}});s.push(h);let c=r8(e,h,r);s.push(c);let f=be({inputs:{x:c},backend:e,attrs:{shape:u}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return n8(e,t,r)}function mee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=T.getAxesPermutation(i,n.shape.length),l=n,u=[];o!=null&&(l=fa({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=s8(a,l,i[0],"max");return u.forEach(p=>a.disposeIntermediateTensorInfo(p)),d}var gee={kernelName:qs,backendName:"webgl",kernelFunc:mee};function yee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=T.getAxesPermutation(i,n.shape.length),l=n,u=[];o!=null&&(l=fa({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=s8(a,l,i[0],"min");return u.forEach(p=>a.disposeIntermediateTensorInfo(p)),d}var Aee={kernelName:Bu,backendName:"webgl",kernelFunc:yee},xee=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,bee=at({opSnippet:xee}),vee={kernelName:Vu,backendName:"webgl",kernelFunc:bee},wee=Dr+"return log(x + sqrt(x * x + 1.0));",kee=at({opSnippet:wee}),Iee={kernelName:Uu,backendName:"webgl",kernelFunc:kee},See=Dr+`
  return atan(x);
`,Nee=at({opSnippet:See}),Tee={kernelName:Gu,backendName:"webgl",kernelFunc:Nee},Cee=zQ+`
  return atan(a, b);
`,Eee=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+OQ+`
  return result;
`,Ree=ma({opSnippet:Cee,packedOpSnippet:Eee}),$ee={kernelName:Hu,backendName:"webgl",kernelFunc:Ree},Fee=Dr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Mee=at({opSnippet:Fee}),_ee={kernelName:ju,backendName:"webgl",kernelFunc:Mee},Rh=class{constructor(e,t,a,r=!1,n=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),a){let N=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${h}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?n?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let A="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let b=Math.floor(s/4)*4,v=s%4,S=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${A}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${b};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${x});
      }
    `}},cb=class{constructor(e,t,a,r=!1,n=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A=t==="avg",x="0.0";if(A||(x="-1.0 / 1e-20"),a){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?n?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let S=Math.floor(s/4)*4,N=s%4,E=`
      if (${A}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${S};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${v});
        }
      }
    `}};function zee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;bd(n,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(n.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Ka({inputs:{x:n},backend:a});let p=new Rh(d,"avg",!1);return a.runWebGLProgram(p,[n],"float32")}var Oee={kernelName:Xs,backendName:"webgl",kernelFunc:zee};function Pee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=[1,1,1],p=T.computePool3DInfo(n.shape,s,i,d,o,l,u),h=new cb(p,"avg",!1);return a.runWebGLProgram(h,[n],"float32")}var Dee={kernelName:Fh,backendName:"webgl",kernelFunc:Pee},Lee=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,p=1/(t*a);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Wee=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,r=e.filterWidth,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*a*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Bee(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,p=[1,1,1],h=T.computePool3DInfo(i.shape,o,l,p,u,d),c=new Wee(h);return a.runWebGLProgram(c,[n],i.dtype)}var Vee={kernelName:Kf,backendName:"webgl",kernelFunc:Bee};function Uee(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s;bd([n,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=T.computePool2DInfo(i.shape,o,l,1,u),p=new Lee(d);return a.runWebGLProgram(p,[n],i.dtype)}var Gee={kernelName:Xf,backendName:"webgl",kernelFunc:Uee};function jee(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;return zf({a:n,b:s,transposeA:i,transposeB:o,backend:a})}var Hee={kernelName:Ks,backendName:"webgl",kernelFunc:jee},qee=class{constructor(e,t,a,r,n,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,a);let i="0.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Xee=class{constructor(e,t,a,r,n,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,a);let i="vec4(0.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Kee=({inputs:e,backend:t,attrs:a})=>{let{x:r,mean:n,variance:s,offset:i,scale:o}=e;w.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||n.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=a;l==null&&(l=.001);let u=[r,n,s],d=null;i!=null&&(d=i.shape,u.push(i));let p=null;o!=null&&(p=o.shape,u.push(o));let h=J().getBool("WEBGL_PACK_NORMALIZATION")?new Xee(r.shape,n.shape,s.shape,d,p,l):new qee(r.shape,n.shape,s.shape,d,p,l);return t.runWebGLProgram(h,u,u[0].dtype)},Zee={kernelName:ui,backendName:"webgl",kernelFunc:Kee},Yee=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ht(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let a=Jee(this.rank),r,n=e.map((s,i)=>`sourceLoc.${G1[i]} = start[${i}] + coords.${G1[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${n.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${a}));
      }
    `}},G1=["x","y","z","w","u","v"];function Jee(e){if(e===1)return"sourceLoc";if(e<=6)return G1.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Qee=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ht(this.rank),a=$a("coords",this.rank),r=$a("sourceLoc",this.rank),n=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${n})`,i=`
      result.x = ${s};
      if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,d)=>`start[${d}]`).join()});`:e.map((u,d)=>`${r[d]} = ${a[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function ete(e,t,a,r){let n=r.texData.get(e.dataId),s=r.makeTensorInfo(a,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=a,i.dtype=e.dtype;let o=Ft.computeFlatOffset(t,w.computeStrides(e.shape));n.slice&&(o+=n.slice.flatOffset),i.slice={flatOffset:o,origDataId:n.slice&&n.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function Nd(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,size:i}=r,[o,l]=Ft.parseSliceParams(n,s,i);if(Ft.assertParamsValid(n,o,l),w.sizeFromShape(l)===0)return a.makeTensorInfo(l,n.dtype,[]);if(a.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=a.texData.get(n.dataId),h=UJ(p.values,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,h)}let{isPacked:u}=a.texData.get(n.dataId),d=Ft.isSliceContinous(n.shape,o,l);if(u||!d){let p=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qee(l):new Yee(l),h=[o];return a.runWebGLProgram(p,[n],n.dtype,h)}return a.uploadToGPU(n.dataId),ete(n,o,l,a)}var tte={kernelName:pl,backendName:"webgl",kernelFunc:Nd},ate=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r;w.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((A,x)=>A*x),l=T.getReshaped(n.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(n.shape,s,o),p=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(d,i,s.length),c=[],f=be({inputs:{x:n},backend:a,attrs:{shape:l}}),m=fa({inputs:{x:f},backend:a,attrs:{perm:u}}),g=be({inputs:{x:m},backend:a,attrs:{shape:d}}),y=Nd({inputs:{x:g},backend:a,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(A=>a.disposeIntermediateTensorInfo(A)),y},rte={kernelName:Lo,backendName:"webgl",kernelFunc:ate};function nte(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i}=r,o=a.readSync(n.dataId),l=a.readSync(s.dataId),u=US(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}var ste={kernelName:Zf,backendName:"webgl",kernelFunc:nte};function ite(e){let{inputs:t,backend:a}=e,{s0:r,s1:n}=t,s=a.readSync(r.dataId),i=a.readSync(n.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var ote={kernelName:Yf,backendName:"webgl",kernelFunc:ite},lte="return float(a != b);",i8=ma({opSnippet:lte,cpuKernelImpl:DJ,dtype:"bool"}),ute={kernelName:tl,backendName:"webgl",kernelFunc:i8};function wp(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.texData.get(r.dataId);return Ka({inputs:{x:n.complexTensorInfos.real},backend:a})}var dte={kernelName:Vh,backendName:"webgl",kernelFunc:wp},hte="return float(int(x));";function pte(e,t){let a=new Vn(e.shape,hte),r=t.runWebGLProgram(a,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function j1(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dtype:s}=r;if(s==="complex64"){if(n.dtype==="complex64")return Ka({inputs:{x:n},backend:a});let i=Dt(n.shape),o=j1({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),l=Ui({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeIntermediateTensorInfo(o),l}if(n.dtype==="complex64"){let i=wp({inputs:{input:n},backend:a}),o=j1({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(n.dtype,s)){let i=Ka({inputs:{x:n},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return pte(n,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=i8({inputs:{a:n,b:i},backend:a});return a.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var cte={kernelName:Zs,backendName:"webgl",kernelFunc:j1},mv="return ceil(x);",fte=at({opSnippet:mv,packedOpSnippet:mv,cpuKernelImpl:xJ}),mte={kernelName:Ys,backendName:"webgl",kernelFunc:fte},gte=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},yte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Ate(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{clipValueMin:s,clipValueMax:i}=r,o;J().getBool("WEBGL_PACK_CLIP")?o=new yte(n.shape):o=new gte(n.shape);let l=[[s],[i]];return a.runWebGLProgram(o,[n],n.dtype,l)}var xte={kernelName:Jn,backendName:"webgl",kernelFunc:Ate},bte=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function gv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function vte(e){let{inputs:t,backend:a}=e,{x:r}=t,n=a.texData.get(r.dataId),s=new bte(r.shape),i=[gv(r,n.complexTensorInfos.real),gv(r,n.complexTensorInfos.imag)];return a.runWebGLProgram(s,i,i[0].dtype)}var wte={kernelName:_h,backendName:"webgl",kernelFunc:vte},kte=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let a=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];a.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,n=t[t.length-1];a.push(`else setOutput(getT${r}(yR, yC-${n}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join(`
        `)}
      }
    `}},Ite=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let a=this.outputShape,r=a.length,n=ht(r),s=$a("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),d=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];p+=`
        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${Cc(i,l,m)}),
            vec2(${Cc(u,l,m)}));
        }`}let h=o.length,c=o[o.length-1];p+=`
        return getChannel(
          getT${h}(${Cc(i,l,c)}),
          vec2(${Cc(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${n} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${a[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${a[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${a[r-2]} &&
            ${s[r-1]} < ${a[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Cc(e,t,a){let r=e.indexOf(t);return e.map((n,s)=>s===r?`${n} - ${a}`:n).join()}function Sm(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.texData.get(r.dataId);return Ka({inputs:{x:n.complexTensorInfos.imag},backend:a})}var Ste={kernelName:Dh,backendName:"webgl",kernelFunc:Sm};function ou(e,t,a){let r=e[0].dtype;if(r==="complex64"){let d=e.map(m=>wp({inputs:{input:m},backend:a})),p=e.map(m=>Sm({inputs:{input:m},backend:a})),h=ou(d,t,a),c=ou(p,t,a),f=Ui({inputs:{real:h,imag:c},backend:a});return d.forEach(m=>a.disposeIntermediateTensorInfo(m)),p.forEach(m=>a.disposeIntermediateTensorInfo(m)),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),f}let n=a.shouldExecuteOnCPU(e);if(r==="string"&&(n=!0),n){let d=e.map(y=>{let A=w.sizeFromShape(y.shape.slice(t));return be({inputs:{x:y},backend:a,attrs:{shape:[-1,A]}})}),p=d.map(y=>({vals:a.readSync(y.dataId),shape:y.shape})),h=T.computeOutShape(d.map(y=>y.shape),1),c=d[0].shape[0]===1,f=bJ(p,h,r,c),m=T.computeOutShape(e.map(y=>y.shape),t),g=a.makeTensorInfo(m,r,f);return d.forEach(y=>a.disposeIntermediateTensorInfo(y)),g}if(e.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let d=Math.floor(e.length/2),p=ou(e.slice(0,d),t,a),h=ou(e.slice(d),t,a),c=ou([p,h],t,a);return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),c}if(J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let d=new Ite(e.map(p=>p.shape),t);return a.runWebGLProgram(d,e,r)}let{tensors2D:s,outShape:i}=Nte(e,t,a),o=new kte(s.map(d=>d.shape)),l=a.runWebGLProgram(o,s,r);s.forEach(d=>a.disposeIntermediateTensorInfo(d));let u=be({inputs:{x:l},attrs:{shape:i},backend:a});return a.disposeIntermediateTensorInfo(l),u}function Nte(e,t,a){let r=T.computeOutShape(e.map(n=>n.shape),t);return{tensors2D:e.map(n=>be({inputs:{x:n},attrs:{shape:[-1,w.sizeFromShape(n.shape.slice(t))]},backend:a})),outShape:r}}function o8(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r,s=w.parseAxisParam(n,t[0].shape)[0],i=T.computeOutShape(t.map(u=>u.shape),s);if(w.sizeFromShape(i)===0)return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(u=>w.sizeFromShape(u.shape)>0);if(o.length===1)return Ka({inputs:{x:o[0]},backend:a});let l=o.map(u=>u.shape);return T.assertParamsConsistent(l,s),ou(o,s,a)}var Tte={kernelName:Wo,backendName:"webgl",kernelFunc:o8},l8=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,A=m?3:1,x="",b="";a&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`
          float activation(float x) {
            ${a}
          }
        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${A}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}},Cte=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,a=e.padInfo.top,r=e.padInfo.left,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${n}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${a}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ete=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ya(this.outputShape.length);let{dataFormat:a}=t,r=Pa(),n=a==="channelsLast",s=n?0:1,i=n?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.y + ${d};
          pos = rc.x + ${u};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${n}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function u8({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=r.texData.get(e.dataId),d=a.inChannels,p=l[0]*l[1]*l[2],h=a.outChannels,c=a.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((p===1||h===1)&&d>a8)&&u.isPacked&&c&&u.texture!=null&&l[2]%2!==0&&w.arraysEqual(u.shape.slice(-3),l.slice(-3))){let A=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,A,a.inChannels],dtype:e.dtype},b=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,w.assert(Eh(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let v=be({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(v);let S=zf({a:x,b:v,backend:r,transposeA:f,transposeB:m,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),N=r.texData.get(S.dataId);w.assert(N.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=b,N.shape=a.outShape,g=Ka({inputs:{x:S},backend:r}),g.shape=a.outShape,y.push(S)}else{let A=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],x=be({inputs:{x:e},backend:r,attrs:{shape:[1,A,a.inChannels]}}),b=be({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),v=zf({a:x,b,transposeA:f,transposeB:m,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=be({inputs:{x:v},backend:r,attrs:{shape:a.outShape}}),y.push(x),y.push(b),y.push(v)}for(let A of y)r.disposeIntermediateTensorInfo(A);return g}function d8({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:p,outHeight:h,dataFormat:c}=a,f=c==="channelsLast",m=l*u*d,g=h*p,y=[m,g],A=!0,x=!1,b=[],v=be({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),S=be({inputs:{x:t},backend:r,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});b.push(v),b.push(S);let N=new Ete(y,a),E=[v.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],R=r.runWebGLProgram(N,[v],"float32",E),P=be({inputs:{x:R},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(P);let $=n!=null,k=s!=null,_=o==="leakyrelu",z=o?wm(o,!0):null,L=new t8(P.shape,S.shape,[1,g,a.outChannels],A,x,$,z,k,_),j=[P,S];if(n&&j.push(n),k&&j.push(s),_){let ee=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));j.push(ee),b.push(ee)}let D=r.runWebGLProgram(L,j,"float32"),B=f?[1,h,p,a.outChannels]:[1,a.outChannels,h,p],G=be({inputs:{x:D},backend:r,attrs:{shape:B}});b.push(D);for(let ee of b)r.disposeIntermediateTensorInfo(ee);return G}function Rte(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r,p=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!1,p),c;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))c=u8({x:n,filter:s,convInfo:h,backend:a});else if(J().getBool("WEBGL_CONV_IM2COL")&&n.shape[0]===1)c=d8({x:n,filter:s,convInfo:h,backend:a});else{let m=new l8(h);c=a.runWebGLProgram(m,[n,s],"float32")}let f=be({inputs:{x:c},backend:a,attrs:{shape:h.outShape}});return a.disposeIntermediateTensorInfo(c),f}var $te={kernelName:Js,backendName:"webgl",kernelFunc:Rte},Fte=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,r=e.padInfo.top,n=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Mte=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},_te=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,a=e.strideHeight,r=e.strideWidth,n=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${n};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zte=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,r=e.filterWidth,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=a-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${n}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Ote(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,p=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(n.shape,d,i,1,o,u,!1,p),c=new Fte(h);return a.runWebGLProgram(c,[n,s],"float32")}var Pte={kernelName:Jf,backendName:"webgl",kernelFunc:Ote};function Dte(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,p=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,p),c=new Mte(h);return a.runWebGLProgram(c,[n,s],"float32")}var Lte={kernelName:Qs,backendName:"webgl",kernelFunc:Dte};function Wte(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeConv3DInfo(n.shape,s.shape,i,l,o),d=new Cte(u);return a.runWebGLProgram(d,[n,s],"float32")}var Bte={kernelName:zh,backendName:"webgl",kernelFunc:Wte};function Vte(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=T.computeConv3DInfo(n.shape,l,i,1,o),d=new _te(u);return a.runWebGLProgram(d,[n,s],"float32")}var Ute={kernelName:Qf,backendName:"webgl",kernelFunc:Vte};function Gte(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=T.computeConv3DInfo(l,s.shape,o,1,i),d=new zte(u);return a.runWebGLProgram(d,[n,s],"float32")}var jte={kernelName:e0,backendName:"webgl",kernelFunc:Gte},Hte=Sd+`
  return cos(x);
`,qte=at({opSnippet:Hte}),Xte={kernelName:ei,backendName:"webgl",kernelFunc:qte},Kte=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Zte=at({opSnippet:Kte}),Yte={kernelName:ti,backendName:"webgl",kernelFunc:Zte},Jte=class{constructor(e,t,a,r,n){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,p]=a;this.outputShape=[u,d,p,l];let h=r==="bilinear"?1:0,[c,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,y]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[A,x,b]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${A});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${n}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${n}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Qte=e=>{let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new Jte(n.shape,s.shape,o,l,u);return a.runWebGLProgram(d,[n,s,i],"float32")},eae={kernelName:Vo,backendName:"webgl",kernelFunc:Qte},yv=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,n=t?"1.0":`getX(${Av(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=a?`end != ${s-1}`:"end != 0",o=a?"end + 1":"end - 1"):(i=a?`end + pow2 < ${s}`:"end >= pow2",o=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ht(r)} coords = getOutputCoords();
        int end = ${xv(r,"coords")};
        float val = ${n};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${xv(r,"coords")} = idx;
          val *= getX(${Av(r,"coords")});
        }
        setOutput(val);
      }
    `}};function Av(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function xv(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function tae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length,u=T.getAxesPermutation([s],l),d=n;u!=null&&(d=fa({inputs:{x:n},backend:a,attrs:{perm:u}}));let p=T.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);let h=d.shape[p],c=Ka({inputs:{x:d},backend:a});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){let m=new yv(d.shape,!1,o),g=[[f]],y=c;c=a.runWebGLProgram(m,[c],c.dtype,g),a.disposeIntermediateTensorInfo(y)}if(i){let f=new yv(d.shape,i,o),m=c;c=a.runWebGLProgram(f,[c],c.dtype),a.disposeIntermediateTensorInfo(m)}if(u!=null){let f=T.getUndoAxesPermutation(u),m=fa({inputs:{x:c},backend:a,attrs:{perm:f}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(d),m}return c}var aae={kernelName:Bo,backendName:"webgl",kernelFunc:tae},bv=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,n=t?"0.0":`getX(${vv(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=a?`end != ${s-1}`:"end != 0",o=a?"end + 1":"end - 1"):(i=a?`end + pow2 < ${s}`:"end >= pow2",o=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ht(r)} coords = getOutputCoords();
        int end = ${wv(r,"coords")};
        float val = ${n};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${wv(r,"coords")} = idx;
          val += getX(${vv(r,"coords")});
        }
        setOutput(val);
      }
    `}};function vv(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function wv(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function rae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length,u=T.getAxesPermutation([s],l),d=n;u!=null&&(d=fa({inputs:{x:n},backend:a,attrs:{perm:u}}));let p=T.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);let h=d.shape[p],c=Ka({inputs:{x:d},backend:a});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){let m=new bv(d.shape,!1,o),g=[[f]],y=c;c=a.runWebGLProgram(m,[c],c.dtype,g),a.disposeIntermediateTensorInfo(y)}if(i){let f=new bv(d.shape,i,o),m=c;c=a.runWebGLProgram(f,[c],c.dtype),a.disposeIntermediateTensorInfo(m)}if(u!=null){let f=T.getUndoAxesPermutation(u),m=fa({inputs:{x:c},backend:a,attrs:{perm:f}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(d),m}return c}var nae={kernelName:ai,backendName:"webgl",kernelFunc:rae};function sae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i,binaryOutput:o}=r;if(n.shape.length===1){let l=a.readSync(n.dataId),u=a.readSync(s.dataId),d=US(l,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}else if(n.shape.length===2){let l=a.bufferSync(n),u=a.bufferSync(s),d=AJ(l,u,i,o);return a.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var iae={kernelName:t0,backendName:"webgl",kernelFunc:sae},oae=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function lae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockSize:s,dataFormat:i}=r,o=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],u=i==="NHWC"?n.shape[2]:n.shape[3],d=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,h=u*s,c=d/(s*s),f=i==="NHWC"?[o,p,h,c]:[o,c,p,h],m=new oae(f,s,i);return a.runWebGLProgram(m,[n],n.dtype)}var uae={kernelName:Uo,backendName:"webgl",kernelFunc:lae},h8=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ya(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";a&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:l=`
          float activation(float x) {
            ${a}
          }
        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}},p8=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ya(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,p=d,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<d;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let y=g*2;if(h+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<d&&(i%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?h+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<d)){let A=i%2===0?w.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${A};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),h+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):A===1?h+=`
                    xC${y+1} = xTexelC${y};
                    `:h+=`
                    xCOffset = xC + ${A};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<d&&(i%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<d&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<d&&(h+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<d&&(h+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<d&&(h+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let c="",f="";a&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:c=`vec4 activation(vec4 x) {
          ${a}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function dae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;d==null&&(d=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let p=T.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!0),h;J().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?h=new p8(p):h=new h8(p);let c=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return a.runWebGLProgram(h,[n,s],"float32",c)}var hae={kernelName:ri,backendName:"webgl",kernelFunc:dae},pae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,r=e.padInfo.top,n=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},cae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=t-1-e.padInfo.top,i=a-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function fae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,p=T.computeConv2DInfo(n.shape,d,i,o,l,u,!0),h=new pae(p);return a.runWebGLProgram(h,[n,s],"float32")}var mae={kernelName:a0,backendName:"webgl",kernelFunc:fae};function gae(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,p=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),h=new cae(p);return a.runWebGLProgram(h,[n,s],"float32")}var yae={kernelName:r0,backendName:"webgl",kernelFunc:gae},Aae=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function xae(e){let{inputs:t,backend:a}=e,{x:r}=t,n=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=be({inputs:{x:r},backend:a,attrs:{shape:[s]}}),o=new Aae(s),l=a.runWebGLProgram(o,[i],i.dtype),u=be({inputs:{x:l},backend:a,attrs:{shape:n}});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(l),u}var bae={kernelName:n0,backendName:"webgl",kernelFunc:xae},vae=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:a,padInfo:r,strideHeight:n,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:p}=r;this.userCode=`
      const ivec2 strides = ivec2(${n}, ${s});
      const ivec2 pads = ivec2(${d}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function wae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeDilation2DInfo(n.shape,s.shape,i,o,"NHWC",l),d,p=new vae(u);d=a.runWebGLProgram(p,[n,s],"float32");let h=be({inputs:{x:d},backend:a,attrs:{shape:u.outShape}});return a.disposeIntermediateTensorInfo(d),h}var kae={kernelName:Oh,backendName:"webgl",kernelFunc:wae};function Iae(e){let{inputs:t,backend:a,attrs:r}=e,{equation:n}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(n,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let g of d[m]){let{permutationIndices:y,expandDims:A}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=fa({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let v=0;v<A.length;++v)b.splice(A[v],0,1);w.arraysEqual(x.shape,b)||(x=be({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),h===null?h=x:(h=pb({inputs:{a:x,b:h},backend:a}),f.push(h))}m<p-1&&(u[m]>=0&&(h=Im({inputs:{x:h},backend:a,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&a.disposeIntermediateTensorInfo(m);return h}var Sae={kernelName:Ph,backendName:"webgl",kernelFunc:Iae},Nae="return (x >= 0.0) ? x : (exp(x) - 1.0);",Tae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Cae=at({opSnippet:Nae,packedOpSnippet:Tae}),Eae={kernelName:si,backendName:"webgl",kernelFunc:Cae},Rae="return (b >= 1.0) ? a : a * (b + 1.0);",$ae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Fae=e=>{let{inputs:t,backend:a}=e,{dy:r,y:n}=t,s=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vp($ae,r.shape,n.shape):new Fu(Rae,r.shape,n.shape);return a.runWebGLProgram(s,[r,n],r.dtype)},Mae={kernelName:s0,backendName:"webgl",kernelFunc:Fae},_ae=`
  return vec4(equal(a, b));
`,zae="return float(a == b);",Oae=ma({opSnippet:zae,packedOpSnippet:_ae,dtype:"bool",cpuKernelImpl:vJ}),Pae={kernelName:Go,backendName:"webgl",kernelFunc:Oae},Dae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Lae=at({opSnippet:Dae}),Wae={kernelName:qu,backendName:"webgl",kernelFunc:Lae},Bae=Sd+`
  return exp(x);
`,Vae=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,c8=at({opSnippet:Bae,packedOpSnippet:Vae,cpuKernelImpl:wJ,dtype:"float32"}),Uae={kernelName:ii,backendName:"webgl",kernelFunc:c8};function H1(e){let{inputs:t,attrs:a,backend:r}=e,{dim:n}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=n;return n<0&&(w.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),o.splice(l,0,1),be({inputs:{x:s},backend:r,attrs:{shape:o}})}var Gae={kernelName:jo,backendName:"webgl",kernelFunc:H1},kv="return exp(x) - 1.0;",jae=at({opSnippet:kv,packedOpSnippet:kv,cpuKernelImpl:kJ}),Hae={kernelName:Ho,backendName:"webgl",kernelFunc:jae},Iv=class{constructor(e,t,a){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let n=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=a?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${n};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function f8(e,t,a){let r=a.texData.get(e.dataId),n=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=n/s,o=be({inputs:{x:e},backend:a,attrs:{shape:[i,s]}}),l=o.shape,u=new Iv("real",l,t),d=new Iv("imag",l,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],h=a.runWebGLProgram(u,p,"float32"),c=a.runWebGLProgram(d,p,"float32"),f=Ui({inputs:{real:h,imag:c},backend:a});a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c);let m=be({inputs:{x:f},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(f),m}function qae(e){let{inputs:t,backend:a}=e,{input:r}=t;return f8(r,!1,a)}var Xae={kernelName:i0,backendName:"webgl",kernelFunc:qae},Kae=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function kp(e){let{backend:t,attrs:a}=e,{shape:r,value:n}=a,{dtype:s}=a;if(s=s||w.inferDtype(n),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(n),t.makeTensorInfo(r,s,i)}else{let i=new Kae(r,n),o=[[n]];return t.runWebGLProgram(i,[],s,o)}}var Zae={kernelName:Xu,backendName:"webgl",kernelFunc:kp},Yae=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Jae={kernelName:qo,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,r=t,n=new Yae(a.shape);return r.runWebGLProgram(n,[a],a.dtype)}},Sv="return floor(x);",Qae=at({opSnippet:Sv,packedOpSnippet:Sv,cpuKernelImpl:IJ}),ere={kernelName:oi,backendName:"webgl",kernelFunc:Qae},tre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,are=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,rre=ma({opSnippet:tre,packedOpSnippet:are,dtype:"int32"}),nre={kernelName:li,backendName:"webgl",kernelFunc:rre},sre=class{constructor(e){this.variableNames=["A"];let t=Pa(),[a,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${a}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},ire=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Pa(),[a,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${a}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},ore={kernelName:Ah,backendName:"webgl",kernelFunc:lre},Yl;function lre(e){let{inputs:t,backend:a,attrs:r}=e,{pixels:n}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],d=[u,l],p=[u,l,s];(o||i)&&(Yl==null&&(Yl=document.createElement("canvas").getContext("2d")),Yl.canvas.width=l,Yl.canvas.height=u,Yl.drawImage(n,0,0,l,u),n=Yl.canvas);let h=a.makeTensorInfo(d,"int32");a.texData.get(h.dataId).usage=2,a.gpgpu.uploadPixelDataToTexture(a.getTexture(h.dataId),n);let c=J().getBool("WEBGL_PACK")?new ire(p):new sre(p),f=a.runWebGLProgram(c,[h],"int32");return a.disposeData(h.dataId),f}function ure(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=T.convertConv2DDataFormat(d),g=T.computeConv2DInfo(n.shape,s.shape,l,p,u,h,!1,m),y,A=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=u8({x:n,filter:s,convInfo:g,backend:a,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else if(J().getBool("WEBGL_CONV_IM2COL")&&n.shape[0]===1)y=d8({x:n,filter:s,convInfo:g,backend:a,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let b=i!=null,v=o!=null,S=c==="leakyrelu",N=c?wm(c,!1):null,E=new l8(g,b,N,v,S),R=[n,s];if(i&&R.push(i),o&&R.push(o),S){let P=a.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(P),A.push(P)}y=a.runWebGLProgram(E,R,"float32")}let x=be({inputs:{x:y},backend:a,attrs:{shape:g.outShape}});return A.push(y),A.forEach(b=>a.disposeIntermediateTensorInfo(b)),x}var dre={kernelName:Fs,backendName:"webgl",kernelFunc:ure};function hre(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=r,f=[],m=d;m==null&&(m=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(n.shape,s.shape,l,m,u,p,!0),y=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,A=h?wm(h,y):null,x=[n,s],b=i!=null,v=o!=null,S=h==="leakyrelu";if(b&&x.push(i),v&&x.push(o),S){let P=a.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(P),f.push(P)}let N;y?N=new p8(g,b,A,v,S):N=new h8(g,b,A,v,S);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=a.runWebGLProgram(N,x,"float32",E);return f.forEach(P=>a.disposeIntermediateTensorInfo(P)),R}var pre={kernelName:Ms,backendName:"webgl",kernelFunc:hre},cre=class{constructor(e,t,a){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=a;let r=ht(t.length),n=ht(a.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${n} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${s};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function fre(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=n.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,d,p]=T.prepareAndValidate(r,n),h=be({inputs:{x:n},backend:a,attrs:{shape:[u,i]}}),c=be({inputs:{x:r},backend:a,attrs:{shape:[w.sizeFromShape(r.shape)/d,d]}});if(a.shouldExecuteOnCPU([r,n])||r.dtype==="string"){let y=a.readSync(n.dataId),A=a.bufferSync(r),x=SJ(y,A,r.dtype,u,i,d,p,r.shape,o);return a.makeTensorInfo(l,r.dtype,x.values)}let f=new cre(i,p,[u,d]),m=a.runWebGLProgram(f,[c,h],c.dtype),g=be({inputs:{x:m},backend:a,attrs:{shape:l}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(m),g}var mre={kernelName:Ko,backendName:"webgl",kernelFunc:fre},gre=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let a=ht(this.rank),r=yre(e,2);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function yre(e,t){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e.length;n++)n===2?r.push("index"):r.push(`${a[n]}`);return r.join()}function m8(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0];if(J().get("DEBUG")){let A=a.readSync(s.dataId),x=n.shape[l];for(let b=0;b<A.length;++b){let v=A[b];w.assert(v<=x-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${x-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(n,s,l,o),d=w.sizeFromShape(s.shape),p=[],h=be({inputs:{x:n},backend:a,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=be({inputs:{x:s},backend:a,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(a.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let A=a.bufferSync(c),x=a.bufferSync(h),b=NJ(x,A,f);return p.forEach(v=>a.disposeIntermediateTensorInfo(v)),a.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new gre(h.shape,f),g=a.runWebGLProgram(m,[h,c],h.dtype);p.push(g);let y=be({inputs:{x:g},backend:a,attrs:{shape:u.outputShape}});return p.forEach(A=>a.disposeIntermediateTensorInfo(A)),y}var Are={kernelName:Xo,backendName:"webgl",kernelFunc:m8},xre="return float(a > b);",bre=`
  return vec4(greaterThan(a, b));
`,vre=ma({opSnippet:xre,packedOpSnippet:bre,cpuKernelImpl:TJ,dtype:"bool"}),wre={kernelName:Zo,backendName:"webgl",kernelFunc:vre},kre="return float(a >= b);",Ire=`
  return vec4(greaterThanEqual(a, b));
`,Sre=ma({opSnippet:kre,packedOpSnippet:Ire,dtype:"bool",cpuKernelImpl:CJ}),Nre={kernelName:di,backendName:"webgl",kernelFunc:Sre};function Tre(e){let{inputs:t,backend:a}=e,{input:r}=t;return f8(r,!0,a)}var Cre={kernelName:o0,backendName:"webgl",kernelFunc:Tre},Ere="return float(!isnan(x) && !isinf(x));",Rre=at({opSnippet:Ere,dtype:"bool"}),$re={kernelName:Ku,backendName:"webgl",kernelFunc:Rre},Fre="return float(isinf(x));",Mre=at({opSnippet:Fre,dtype:"bool"}),_re={kernelName:Zu,backendName:"webgl",kernelFunc:Mre},zre="return float(isnan(x));",Ore=at({opSnippet:zre,dtype:"bool"}),Pre={kernelName:Yu,backendName:"webgl",kernelFunc:Ore},Dre="return float(a < b);",Lre=`
  return vec4(lessThan(a, b));
`,Wre=ma({opSnippet:Dre,packedOpSnippet:Lre,cpuKernelImpl:EJ,dtype:"bool"}),Bre={kernelName:Yo,backendName:"webgl",kernelFunc:Wre},Vre="return float(a <= b);",Ure=`
  return vec4(lessThanEqual(a, b));
`,Gre=ma({opSnippet:Vre,packedOpSnippet:Ure,cpuKernelImpl:RJ,dtype:"bool"}),jre={kernelName:Jo,backendName:"webgl",kernelFunc:Gre};function Hre(e){let{backend:t,attrs:a}=e,{start:r,stop:n,num:s}=a,i=$J(r,n,s);return t.makeTensorInfo([i.length],"float32",i)}var qre={kernelName:l0,backendName:"webgl",kernelFunc:Hre},Xre=Sd+`
  return x < 0.0 ? 0./0. : log(x);
`,Kre=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Zre=at({opSnippet:Xre,packedOpSnippet:Kre,cpuKernelImpl:FJ}),Yre={kernelName:ci,backendName:"webgl",kernelFunc:Zre},Jre=Sd+`
  return log(1.0 + x);
`,Qre=at({opSnippet:Jre}),ene={kernelName:Ju,backendName:"webgl",kernelFunc:Qre},tne="return float(a >= 1.0 && b >= 1.0);",ane=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,rne=ma({opSnippet:tne,packedOpSnippet:ane,dtype:"bool"}),nne={kernelName:Qo,backendName:"webgl",kernelFunc:rne},sne="return float(!(x >= 1.0));",ine=at({opSnippet:sne}),one={kernelName:Qu,backendName:"webgl",kernelFunc:ine},lne="return float(a >= 1.0 || b >= 1.0);",une=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dne=ma({opSnippet:lne,packedOpSnippet:une,dtype:"bool"}),hne={kernelName:Lh,backendName:"webgl",kernelFunc:dne},pne=class{constructor(e,t,a,r,n){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${a}) + float(${r}) * sum`;n===.5?o=`inversesqrt(${l})`:n===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},cne=class{constructor(e,t,a,r,n){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${a}) + float(${r}) * sum`;n===.5?o=`inversesqrt(${l})`:n===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},fne=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=J().getBool("WEBGL_PACK_NORMALIZATION")?new cne(n.shape,s,i,o,l):new pne(n.shape,s,i,o,l);return a.runWebGLProgram(u,[n],n.dtype)},mne={kernelName:Wh,backendName:"webgl",kernelFunc:fne},gne=class{constructor(e,t,a,r,n){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=a,this.alpha=r,this.beta=n,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${n})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${n});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},yne=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,p=new gne(n.shape,o,l,u,d);return a.runWebGLProgram(p,[n,s,i],n.dtype)},Ane={kernelName:u0,backendName:"webgl",kernelFunc:yne};function xne(e,t,a,r){let n=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/n,i=be({inputs:{x:e},attrs:{shape:[s,n]},backend:r}),o=$l(i,e.dtype,"max",r),l=be({inputs:{x:o},attrs:{shape:a},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function g8(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reductionIndices:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=T.getAxesPermutation(u,o),p=d!=null,h=a.shouldExecuteOnCPU([n]),c=n;if(p){if(h){let A=a.texData.get(c.dataId).values,x=new Array(o);for(let S=0;S<x.length;S++)x[S]=n.shape[d[S]];let b=hb(A,n.shape,n.dtype,d,x);c=a.makeTensorInfo(x,n.dtype);let v=a.texData.get(c.dataId);v.values=b}else c=km(n,d,a);u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("max",u,o);let[f,m]=T.computeOutAndReduceShapes(c.shape,u),g=f;i&&(g=T.expandShapeToKeepDim(f,l));let y;if(h){let A=a.texData.get(c.dataId).values,x=MJ(A,w.sizeFromShape(m),g,n.dtype);y=a.makeTensorInfo(g,n.dtype);let b=a.texData.get(y.dataId);b.values=x}else y=xne(c,m,g,a);return p&&a.disposeIntermediateTensorInfo(c),y}var bne={kernelName:fi,backendName:"webgl",kernelFunc:g8},vne=ZS+`
  return max(a, b);
`,wne=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+vm+`
  return result;
`,kne=ma({opSnippet:vne,packedOpSnippet:wne,cpuKernelImpl:_J}),Ine={kernelName:mi,backendName:"webgl",kernelFunc:kne};function Sne(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;bd(n,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(n.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Ka({inputs:{x:n},backend:a});let p=new Rh(d,"max",!1);return a.runWebGLProgram(p,[n],n.dtype)}var Nne={kernelName:gi,backendName:"webgl",kernelFunc:Sne};function Tne(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=[1,1,1],p=T.computePool3DInfo(n.shape,s,i,d,o,u,l),h=new cb(p,"max",!1);return a.runWebGLProgram(h,[n],n.dtype)}var Cne={kernelName:Bh,backendName:"webgl",kernelFunc:Tne},Ene=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,a=e.strideWidth,r=e.dilationHeight,n=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=n-1-e.padInfo.top,o=s-1-e.padInfo.left,l=n*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Rne=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,a=e.strideHeight,r=e.strideWidth,n=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,p=l-1-e.padInfo.top,h=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${n}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function $ne(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,p=[1,1,1],h=T.computePool3DInfo(i.shape,o,l,p,u,d),c=new cb(h,"max",!0),f=a.runWebGLProgram(c,[i],i.dtype),m=new Rne(h),g=a.runWebGLProgram(m,[n,f],i.dtype);return a.disposeIntermediateTensorInfo(f),g}var Fne={kernelName:h0,backendName:"webgl",kernelFunc:$ne};function Mne(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s,output:i}=t,o=s;bd([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=r,h=T.computePool2DInfo(o.shape,l,u,1,d,p),c=!0,f=new Rh(h,"max",c),m=a.runWebGLProgram(f,[o],o.dtype),g=new Ene(h),y=a.runWebGLProgram(g,[n,m],o.dtype);return a.disposeIntermediateTensorInfo(m),y}var _ne={kernelName:d0,backendName:"webgl",kernelFunc:Mne};function zne(e,t,a,r){let n=new Rh(a,"max",!1),s=r.runWebGLProgram(n,[e],"float32");n=new Rh(a,"max",!0,!0,t);let i=r.runWebGLProgram(n,[e],"float32");return[s,i]}var One={kernelName:p0,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{filterSize:n,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,n,s,u,i),[p,h]=zne(r,o,d,l);return[p,h]}};function Pne(e,t,a,r){let n=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/n,i=be({inputs:{x:e},attrs:{shape:[s,n]},backend:r}),o=$l(i,"float32","mean",r),l=be({inputs:{x:o},attrs:{shape:a},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var Dne={kernelName:yi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{keepDims:n,axis:s}=t,i=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),p=d!=null,h=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(h){let x=i.texData.get(f.dataId).values,b=new Array(o);for(let N=0;N<b.length;N++)b[N]=r.shape[d[N]];let v=hb(x,r.shape,r.dtype,d,b);f=i.makeTensorInfo(b,r.dtype);let S=i.texData.get(f.dataId);S.values=v}else f=km(r,d,i);c.push(f),u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),y=m;n&&(y=T.expandShapeToKeepDim(m,l));let A=Pne(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return A}};function Lne(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=T.getAxesPermutation(u,o),p=n;d!=null&&(p=fa({inputs:{x:n},backend:a,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,n.shape.length)),T.assertAxesAreInnerMostDims("min",u,o);let[h,c]=T.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(c),m=be({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"min",a),y;if(i){let A=T.expandShapeToKeepDim(h,l);y=be({inputs:{x:g},backend:a,attrs:{shape:A}})}else y=be({inputs:{x:g},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),d!=null&&a.disposeIntermediateTensorInfo(p),y}var Wne={kernelName:Ai,backendName:"webgl",kernelFunc:Lne},Bne=ZS+`
  return min(a, b);
`,Vne=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+vm+`
  return result;
`,Une=ma({opSnippet:Bne,packedOpSnippet:Vne,cpuKernelImpl:zJ}),Gne={kernelName:xi,backendName:"webgl",kernelFunc:Une},jne=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);let r=e.length,n=ht(r),s=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=a==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${n} start = ${n}(${s});
      ${n} end = ${n}(${i});

      void main() {
        ${n} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${n} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Hne=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,f)=>c[0]+e[f]+c[1]);let r=e.length,n=ht(r),s=t.map(c=>c[0]).join(","),i=t.map((c,f)=>c[0]+e[f]).join(","),o=$a("rc",r),l=$a("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,p=a==="reflect"?0:1,h="";if(r===1){let c=`
        ${n} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;h=`
        ${n} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{let c=`
        ${n} source = rc;
        ${n} lt = ${n}(lessThan(source, start));
        ${n} gte = ${n}(greaterThanEqual(source, end));
        ${n} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;h=`
        ${n} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${o[r-1]} += 1;
          if(${u}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${n} start = ${n}(${s});
      const ${n} end = ${n}(${i});

      void main() {
        ${n} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},qne=({inputs:e,backend:t,attrs:a})=>{let{x:r}=e,{paddings:n,mode:s}=a,i=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hne(r.shape,n,s):new jne(r.shape,n,s);return t.runWebGLProgram(i,[r],r.dtype)},Xne={kernelName:bi,backendName:"webgl",kernelFunc:qne},Kne=`if (b == 0.0) return NAN;
  return mod(a, b);`,Zne=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+vm+`
  return result;
`,Yne=ma({opSnippet:Kne,packedOpSnippet:Zne}),Jne={kernelName:ed,backendName:"webgl",kernelFunc:Yne},Qne=class{constructor(e,t,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},ese=`
if (a == b) {
  return 1.0;
};
return a / b;`,tse=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,y8=ma({opSnippet:ese,packedOpSnippet:tse,checkOutOfBounds:!0}),ase={kernelName:ni,backendName:"webgl",kernelFunc:y8},Nv="return a - b;",A8=ma({opSnippet:Nv,packedOpSnippet:Nv,supportsComplex:!0,cpuKernelImpl:YJ}),rse={kernelName:Oi,backendName:"webgl",kernelFunc:A8};function x8(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{dim:s}=r,i=w.parseAxisParam([s],n.shape),o=g8({inputs:{x:n},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=be({inputs:{x:o},backend:a,attrs:{shape:l}}),d=A8({inputs:{a:n,b:u},backend:a}),p=c8({inputs:{x:d},backend:a}),h=Im({inputs:{x:p},backend:a,attrs:{axis:i,keepDims:!1}}),c=be({inputs:{x:h},backend:a,attrs:{shape:l}}),f=y8({inputs:{a:p,b:c},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),f}var nse={kernelName:_i,backendName:"webgl",kernelFunc:x8};function sse(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?n:x8({inputs:{logits:n},backend:a,attrs:{dim:n.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new Qne(u,d,s),h=[[i]],c=a.runWebGLProgram(p,[l],"int32",h);return o||a.disposeIntermediateTensorInfo(l),c}var ise={kernelName:c0,backendName:"webgl",kernelFunc:sse},ose=Dr+`
  return -x;
`,lse=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function use(e){let{inputs:t,backend:a}=e,{x:r}=t;if(a.shouldExecuteOnCPU([r])){let s=a.texData.get(r.dataId),[i,o]=PJ(s.values,r.shape,r.dtype);return a.makeTensorInfo(o,r.dtype,i)}let n;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new mo(r.shape,lse):n=new Vn(r.shape,ose),a.runWebGLProgram(n,[r],r.dtype)}var dse={kernelName:el,backendName:"webgl",kernelFunc:use},hse=Or.nonMaxSuppressionV3Impl;function pse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=a.readSync(n.dataId),d=a.readSync(s.dataId),{selectedIndices:p}=hse(u,d,i,o,l);return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var cse={kernelName:al,backendName:"webgl",kernelFunc:pse},fse=Or.nonMaxSuppressionV4Impl;function mse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=a.readSync(n.dataId),p=a.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=fse(d,p,i,o,l,u);return[a.makeTensorInfo([h.length],"int32",new Int32Array(h)),a.makeTensorInfo([],"int32",new Int32Array([c]))]}var gse={kernelName:td,backendName:"webgl",kernelFunc:mse},yse=Or.nonMaxSuppressionV5Impl;function Ase(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=a.readSync(n.dataId),p=a.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=yse(d,p,h,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var xse={kernelName:rl,backendName:"webgl",kernelFunc:Ase},bse=class{constructor(e,t,a,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${a}),
                      float(index == coords.y)));
      }
    `}},vse=e=>{let{inputs:t,backend:a,attrs:r}=e,{indices:n}=t,{depth:s,onValue:i,offValue:o}=r,l=w.sizeFromShape(n.shape),u=new bse(l,s,i,o),d=be({inputs:{x:n},backend:a,attrs:{shape:[l]}}),p=a.runWebGLProgram(u,[d],n.dtype);a.disposeIntermediateTensorInfo(d);let h=[...n.shape,s],c=be({inputs:{x:p},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(p),c},wse={kernelName:sl,backendName:"webgl",kernelFunc:vse};function Of(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="complex64"){let n=wp({inputs:{input:r},backend:a}),s=Of({inputs:{x:n},backend:a}),i=Sm({inputs:{input:r},backend:a}),o=Of({inputs:{x:i},backend:a}),l=Ui({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return kp({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:a})}var kse={kernelName:vl,backendName:"webgl",kernelFunc:Of};function b8(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let n=wp({inputs:{input:r},backend:a}),s=b8({inputs:{x:n},backend:a}),i=Sm({inputs:{input:r},backend:a}),o=Of({inputs:{x:i},backend:a}),l=Ui({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return kp({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}var Ise={kernelName:nl,backendName:"webgl",kernelFunc:b8};function Sse(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return H1({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let p=H1({inputs:{input:d},backend:a,attrs:{dim:n}});return o.push(p),p}),u=o8({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(d=>a.disposeIntermediateTensorInfo(d)),u}var Nse={kernelName:il,backendName:"webgl",kernelFunc:Sse},Tse=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let r=e.length,n=ht(r),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${n} start = ${n}(${s});
      ${n} end = ${n}(${i});

      void main() {
        ${n} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${n} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Cse=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,n=ht(r),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=$a("rc",r),l=$a("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${n} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${u}) {`],h=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=r===1?2:4;f<m;f++)c+=`
        ${p[f]}
        if (${h}) {
          result[${f}] = float(value);
        } else {
          ${n} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${d});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${n} start = ${n}(${s});
      const ${n} end = ${n}(${i});

      void main() {
        ${n} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},v8=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,constantValue:i}=r;if(w.sizeFromShape(n.shape)===0){let u=s.map((d,p)=>d[0]+n.shape[p]+d[1]);return kp({backend:a,attrs:{shape:u,value:i,dtype:n.dtype}})}let o=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cse(n.shape,s,i):new Tse(n.shape,s,i),l=[[i]];return a.runWebGLProgram(o,[n],n.dtype,l)},Ese={kernelName:wi,backendName:"webgl",kernelFunc:v8},Rse=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,$se=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+vm+`
  return result;
`,Fse=ma({opSnippet:Rse,packedOpSnippet:$se}),Mse={kernelName:ki,backendName:"webgl",kernelFunc:Fse};function _se(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=[],u=w.parseAxisParam(s,n.shape),d=u,p=T.getAxesPermutation(d,o),h=n;p!=null&&(h=fa({inputs:{x:n},backend:a,attrs:{perm:p}}),d=T.getInnerMostAxes(d.length,o),l.push(h)),T.assertAxesAreInnerMostDims("prod",d,o);let c;if(a.shouldExecuteOnCPU([h])){let f=a.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=LJ(h.shape,h.dtype,f,d);c=a.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(h.shape,d),g=w.sizeFromShape(m),y=be({inputs:{x:h},backend:a,attrs:{shape:[-1,g]}}),A=Yh(n.dtype),x=$l(y,A,"prod",a);c=be({inputs:{x},backend:a,attrs:{shape:f}}),l.push(y),l.push(x)}if(i){l.push(c);let f=T.expandShapeToKeepDim(c.shape,u);c=be({inputs:{x:c},backend:a,attrs:{shape:f}})}return l.forEach(f=>a.disposeIntermediateTensorInfo(f)),c}var zse={kernelName:Si,backendName:"webgl",kernelFunc:_se},w8=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=WJ(r,n,s,i);return t.makeTensorInfo([o.length],i,o)},Ose={kernelName:ad,backendName:"webgl",kernelFunc:w8},Pse="return 1.0 / x;",Dse=at({opSnippet:Pse}),Lse={kernelName:rd,backendName:"webgl",kernelFunc:Dse},Wse=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,Bse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Vse=at({opSnippet:Wse,packedOpSnippet:Bse}),Use={kernelName:Ni,backendName:"webgl",kernelFunc:Vse},Gse=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,jse=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Hse=at({opSnippet:Gse,packedOpSnippet:jse}),qse={kernelName:Ci,backendName:"webgl",kernelFunc:Hse},Xse=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[r&&t>1?i-1:i,r&&a>1?o-1:o],d=[r&&t>1?t-1:t,r&&a>1?a-1:a],p;n?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Kse=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[r&&t>1?i-1:i,r&&a>1?o-1:o],d=[r&&t>1?t-1:t,r&&a>1?a-1:a],p;n?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Zse(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kse(n.shape,l,u,s,i):new Xse(n.shape,l,u,s,i);return a.runWebGLProgram(d,[n],"float32")}var Yse={kernelName:Ti,backendName:"webgl",kernelFunc:Zse},Jse=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,n]=t,[,s,i]=e,o=[a&&s>1?r-1:r,a&&i>1?n-1:n],l=[a&&s>1?s-1:s,a&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,c=Math.ceil(p)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${n-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Qse(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r,o=new Jse(s.shape,n.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var eie={kernelName:m0,backendName:"webgl",kernelFunc:Qse},tie=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[r&&t>1?i-1:i,r&&a>1?o-1:o],d=[r&&t>1?t-1:t,r&&a>1?a-1:a],p=r?"0.5":"0.0",h;n?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},aie=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[r&&t>1?i-1:i,r&&a>1?o-1:o],d=[r&&t>1?t-1:t,r&&a>1?a-1:a],p=r?"0.5":"0.0",h;n?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function rie(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new aie(n.shape,l,u,s,i):new tie(n.shape,l,u,s,i);return a.runWebGLProgram(d,[n],n.dtype)}var nie={kernelName:nd,backendName:"webgl",kernelFunc:rie},sie=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,n]=t,[,s,i]=e,o=[a&&s>1?r-1:r,a&&i>1?n-1:n],l=[a&&s>1?s-1:s,a&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,c=Math.ceil(p)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${n}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function iie(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r,o=new sie(s.shape,n.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var oie={kernelName:f0,backendName:"webgl",kernelFunc:iie},lie=class{constructor(e,t){this.variableNames=["x"];let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=e,a===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,n=e.map((i,o)=>r(o)).join(","),s=ht(a);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${n}));
      }
    `}},uie=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=e;let r=$a("rc",a),n=`${r[a-1]} + 1 < ${this.outputShape[a-1]}`,s=`${r[a-2]} + 1 < ${this.outputShape[a-2]}`,i=ht(a);a===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${n}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${n}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${u(r.slice())};
            if(${n}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return p(c)}function l(c){return c[a-1]="("+c[a-1]+" + 1)",p(c)}function u(c){return c[a-2]="("+c[a-2]+" + 1)",p(c)}function d(c){return c[a-1]="("+c[a-1]+" + 1)",c[a-2]="("+c[a-2]+" + 1)",p(c)}function p(c){let f=e.map((y,A)=>h(A,c)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function h(c,f){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${f[c]} - 1`:`${f[c]}`}}};function die(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dims:s}=r,i=n.shape.length,o=w.parseAxisParam(s,n.shape);if(i===0)return Ka({inputs:{x:n},backend:a});let l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uie(n.shape,o):new lie(n.shape,o);return a.runWebGLProgram(l,[n],n.dtype)}var hie={kernelName:ll,backendName:"webgl",kernelFunc:die},pie=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let a=e[1],r=e[2];this.outputShape=e;let n="";typeof t=="number"?n=`float outputValue = ${t.toFixed(2)};`:n=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${n}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},cie={kernelName:wl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,{radians:n,fillValue:s,center:i}=t,o=a,l=new pie(r.shape,s),[u,d]=T.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,d,Math.sin(n),Math.cos(n)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},fie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,mie=at({opSnippet:fie}),gie={kernelName:ul,backendName:"webgl",kernelFunc:mie},yie="return inversesqrt(x);",Aie=at({opSnippet:yie,cpuKernelImpl:BJ}),xie={kernelName:Ei,backendName:"webgl",kernelFunc:Aie},k8=class{constructor(e,t,a,r,n,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=ht(n.length),l=ht(s.length),u="";a===1?u="i":a===2&&(u="i, j");let d=`getIndices(${u})`,p="";r===1?p="i":r===2&&(p="i, coords[1]");let h=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${n});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${c};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function bie(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=T.calculateShapes(s,n,i),h=[p/u,u];if(p===0)return a.makeTensorInfo(i,n.dtype);let c=be({inputs:{x:n},backend:a,attrs:{shape:[l,o]}}),f=be({inputs:{x:s},backend:a,attrs:{shape:[l,u]}}),m=a.makeTensorInfo([],"float32",new Float32Array([0])),g=new k8(l,o,c.shape.length,f.shape.length,d,h),y=a.runWebGLProgram(g,[f,c,m],f.dtype),A=be({inputs:{x:y},backend:a,attrs:{shape:i}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(m),A}var vie={kernelName:dl,backendName:"webgl",kernelFunc:bie},wie=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.outputShape=t;let r,n;if(a>4)throw Error(`Where for rank ${a} is not yet supported`);if(a===1)n="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);r=o.join(),n=l.join()}let s=ht(a);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${n}));
        } else {
          setOutput(getB(${n}));
        }
      }
    `}};function kie(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=new wie(r.shape.length,n.shape,n.shape.length);return a.runWebGLProgram(i,[r,n,s],ba(n.dtype,s.dtype))}var Iie={kernelName:hl,backendName:"webgl",kernelFunc:kie},Sie=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Nie=at({opSnippet:Sie}),Tie={kernelName:sd,backendName:"webgl",kernelFunc:Nie},Cie=Sd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Eie=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Rie=at({opSnippet:Cie,packedOpSnippet:Eie,cpuKernelImpl:VJ}),$ie={kernelName:$i,backendName:"webgl",kernelFunc:Rie},Fie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Mie=at({opSnippet:Fie}),_ie={kernelName:id,backendName:"webgl",kernelFunc:Mie},zie=Sd+`
  return sin(x);
`,Oie=at({opSnippet:zie}),Pie={kernelName:Ri,backendName:"webgl",kernelFunc:Oie},Die=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Lie=at({opSnippet:Die}),Wie={kernelName:cl,backendName:"webgl",kernelFunc:Lie},Bie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Vie=at({opSnippet:Bie}),Uie={kernelName:od,backendName:"webgl",kernelFunc:Vie},Gie=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r;w.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,A)=>y*A),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<n.shape.length;++y)l.push([0,0]);let u=[],d=v8({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(d.shape,s,o,!1),h=T.getPermuted(p.length,s.length,!1),c=T.getReshapedPermuted(d.shape,s,o,!1),f=be({inputs:{x:d},backend:a,attrs:{shape:p}}),m=fa({inputs:{x:f},backend:a,attrs:{perm:h}}),g=be({inputs:{x:m},backend:a,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach(y=>a.disposeIntermediateTensorInfo(y)),g},jie={kernelName:fl,backendName:"webgl",kernelFunc:Gie};function Hie(e){let{inputs:t,backend:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.readSync(r.dataId),l=a.readSync(n.dataId),u=a.readSync(s.dataId),d=a.readSync(i.dataId)[0],[p,h,c,f,m]=GJ(o,r.shape,r.dtype,l,n.dtype,u,d);return[a.makeTensorInfo(h,r.dtype,p),a.makeTensorInfo([h[0]],n.dtype,c),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var qie={kernelName:Uh,backendName:"webgl",kernelFunc:Hie};function Xie(e){let{inputs:t,backend:a}=e,{inputIndices:r,inputShape:n,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.readSync(n.dataId)),o=a.readSync(r.dataId),l=Array.from(a.readSync(s.dataId)),[u,d,p]=jJ(o,r.shape,r.dtype,i,l);return[a.makeTensorInfo(d,r.dtype,u),a.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var Kie={kernelName:ld,backendName:"webgl",kernelFunc:Xie};function Zie(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=a.readSync(r.dataId),o=a.readSync(n.dataId),l=a.readSync(s.dataId),[u,d]=jS(i,r.shape,r.dtype,o,l,!0);return a.makeTensorInfo(d,r.dtype,u)}var Yie={kernelName:Gh,backendName:"webgl",kernelFunc:Zie};function Jie(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=a.readSync(r.dataId),o=a.readSync(n.dataId),l=a.readSync(s.dataId),[u,d]=jS(i,r.shape,r.dtype,o,l);return a.makeTensorInfo(d,r.dtype,u)}var Qie={kernelName:jh,backendName:"webgl",kernelFunc:Jie};function eoe(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:p}=T.calculateShapes(s,n,o),h=!1,c=new k8(u,l,n.shape.length,s.shape.length,d,[p,1],h),f=a.runWebGLProgram(c,[s,n,i],s.dtype),m=be({inputs:{x:f},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(f),m}var toe={kernelName:Hh,backendName:"webgl",kernelFunc:eoe};function aoe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,n.shape)[0],l=T.prepareSplitSize(n,s,o),u=n.shape.length,d=new Array(u).fill(0),p=n.shape.slice();return l.map(h=>{let c=[...p];c[o]=h;let f=Nd({inputs:{x:n},backend:a,attrs:{begin:d,size:c}});return d[o]+=h,f})}var roe={kernelName:ml,backendName:"webgl",kernelFunc:aoe},Tv="return sqrt(x);",noe=at({opSnippet:Tv,packedOpSnippet:Tv,cpuKernelImpl:HJ}),soe={kernelName:Fi,backendName:"webgl",kernelFunc:noe},ioe="return x * x;",ooe=at({opSnippet:ioe}),loe={kernelName:ud,backendName:"webgl",kernelFunc:ooe},Cv="return (a - b) * (a - b);",uoe=ma({opSnippet:Cv,packedOpSnippet:Cv}),doe={kernelName:zi,backendName:"webgl",kernelFunc:uoe};function hoe({inputs:e,attrs:t,backend:a}){let{x:r}=e,n=Dr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Vn(r.shape,n);return a.runWebGLProgram(s,[r],r.dtype)}var poe={kernelName:Li,backendName:"webgl",kernelFunc:hoe},coe=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=a;let r=a.length,n=ht(a.length),s=ht(a.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=a.map((l,u)=>(o++,a.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${n} begin = ${n}(${e});
      ${n} strides = ${n}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function foe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,u,d,p,h),v;if(m)v=be({inputs:{x:n},backend:a,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let N=Ft.computeOutShape(A,x,b),E=Nd({inputs:{x:n},backend:a,attrs:{begin:A,size:N}});v=be({inputs:{x:E},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(E)}else if(a.shouldExecuteOnCPU([n])){let N=a.readSync(n.dataId),E=Be(n.shape,n.dtype,N),R=qJ(c,E,b,A);v=a.makeTensorInfo(f,n.dtype,R.values)}else{let N=new coe(A,b,c);v=a.runWebGLProgram(N,[n],n.dtype)}let S=be({inputs:{x:v},backend:a,attrs:{shape:f}});return a.disposeIntermediateTensorInfo(v),S}var moe={kernelName:gl,backendName:"webgl",kernelFunc:foe};function goe(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:p}=t,h=a.readSync(d.dataId),c=a.readSync(p.dataId),[f,m]=XJ(h,c,n,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var yoe={kernelName:qh,backendName:"webgl",kernelFunc:goe};function Aoe(e){let{inputs:t,backend:a,attrs:r}=e,{skipEmpty:n}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.readSync(s.dataId),l=a.readSync(i.dataId)[0],[u,d,p]=KJ(o,l,n),h=d.length;return[a.makeTensorInfo([h,2],"int32",u),a.makeTensorInfo([h],"string",d),a.makeTensorInfo([2],"int32",new Int32Array(p))]}var xoe={kernelName:g0,backendName:"webgl",kernelFunc:Aoe};function boe(e){let{inputs:t,backend:a,attrs:r}=e,{numBuckets:n}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=a.readSync(s.dataId),o=ZJ(i,n);return a.makeTensorInfo(s.shape,"int32",o)}var voe={kernelName:y0,backendName:"webgl",kernelFunc:boe},woe="return tan(x);",koe=at({opSnippet:woe}),Ioe={kernelName:yl,backendName:"webgl",kernelFunc:koe},Soe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Noe=at({opSnippet:Soe}),Toe={kernelName:Pi,backendName:"webgl",kernelFunc:Noe},Coe=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[s]*t[s];this.outputShape=a,this.rank=a.length;let r=ht(this.rank),n=Eoe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${n}));
      }
    `}};function Eoe(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let n=0;n<e.length;n++)r.push(`imod(${a[n]}, ${e[n]})`);return r.join()}function I8(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reps:s}=r;if(n.dtype==="string"||n.shape.length>5){let o=a.readSync(n.dataId),l=n.dtype==="string"?o.map(p=>w.decodeString(p)):o,u=Be(n.shape,n.dtype,l),d=JJ(u,s);return a.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new Coe(n.shape,s);return a.runWebGLProgram(i,[n],n.dtype)}var Roe={kernelName:Qn,backendName:"webgl",kernelFunc:I8},$oe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Foe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ao(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function Ev(e){let t=1;for(;t<e;)t*=2;return t}function Moe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{k:s,sorted:i}=r,o=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,d=u[u.length-1];if(a.shouldExecuteOnCPU([n])||d<o||s>l){let R=a.readSync(n.dataId),[P,$]=QJ(R,u,n.dtype,s,i);return[a.makeTensorInfo(P.shape,P.dtype,P.values),a.makeTensorInfo($.shape,$.dtype,$.values)]}if(s===0)return u[u.length-1]=0,[a.makeTensorInfo(u,n.dtype,[]),a.makeTensorInfo(u,"int32",[])];if(d===1)return[n,kp({attrs:{shape:u,dtype:"int32",value:0},backend:a})];let p=a.texData.get(n.dataId),h=p!==null&&p.isPacked,c=h?a.unpackTensor(n):n,f=w.sizeFromShape(u)/d,m=be({inputs:{x:c},attrs:{shape:[f,d]},backend:a});h&&ao(a,c);let g=Ev(s),y=Ev(d),A=null,x=()=>A===null?[m,m]:[m,A],b=(R,P,$)=>{let k=x(),_=new $oe($),z=[[d],[A===null?1:0],[Number.NEGATIVE_INFINITY],[R],[P]],L=A;A=a.runWebGLProgram(_,k,"int32",z),ao(a,L)};for(let R=1;R<g;R*=2){let P=R*2;for(let $=R;$>=1;$/=2)b(P,$,[f,y])}for(let R=y;R>g;R/=2){let P=x(),$=new Foe([f,R/2]),k=[[d],[A===null?1:0],[g]],_=A;A=a.runWebGLProgram($,P,"int32",k),ao(a,_);let z=g/2,L=z*2;for(let j=z;j>=1;j/=2)b(L,j,A.shape)}let v=A;A=Nd({inputs:{x:A},backend:a,attrs:{begin:0,size:[f,s]}}),ao(a,v);let S=m8({inputs:{x:m,indices:A},backend:a,attrs:{axis:1,batchDims:1}});ao(a,m);let N=u.slice(0,-1);N.push(s),v=A,A=be({inputs:{x:A},attrs:{shape:N},backend:a}),ao(a,v);let E=S;return S=be({inputs:{x:S},attrs:{shape:N},backend:a}),ao(a,E),[S,A]}var _oe={kernelName:Al,backendName:"webgl",kernelFunc:Moe},zoe=class{constructor(e,t,a,r,n,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=a==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${n});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${n});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Ooe(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,p,h,c]=n.shape,[f,m]=u??[p,h],g=[d,f,m,c],y=new zoe(p,h,i,o,l,g);return a.runWebGLProgram(y,[n,s],"float32")}var Poe={kernelName:xl,backendName:"webgl",kernelFunc:Ooe};function Doe(e){let{inputs:t,attrs:a,backend:r}=e,{axis:n}=a,{x:s}=t;bd(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=eQ(i,n,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var Loe={kernelName:A0,backendName:"webgl",kernelFunc:Doe};function Woe(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n,o=i.shape.length,l=n.shape[s],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==s&&(u[d++]=i.shape[m]);let p=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){h[s]=m;let g=Nd({inputs:{x:i},backend:a,attrs:{begin:h,size:c}}),y=be({inputs:{x:g},backend:a,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var Boe={kernelName:bl,backendName:"webgl",kernelFunc:Woe},Voe=class{constructor(e,t){this.variableNames=["x","segmentIds"];let a=e.windowSize,r=e.batchSize,n=e.inSize,s=e.numSegments,i=s*Math.ceil(n/a);this.outputShape=[r,i];let o="0.0",l="sumValue",u=Math.floor(a/4)*4,d=a%4,p=`
        sumValue += dot(values, segFilter);
    `,h="";n%a>0&&(h=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `);let c="";n%a>0&&(c=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function Uoe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,segmentIds:s}=t,{numSegments:i}=r,o=n.shape.length,l=[],u=0,d=T.getAxesPermutation([u],o),p=n;d!=null&&(p=fa({inputs:{x:n},backend:a,attrs:{perm:d}}),l.push(p),u=T.getInnerMostAxes(1,o)[0]);let h=T.segment_util.computeOutShape(p.shape,u,i),c=w.sizeFromShape([p.shape[u]]),f=be({inputs:{x:p},backend:a,attrs:{shape:[-1,c]}});l.push(f);let m=Yh(n.dtype),g=(b,v,S,N,E)=>{let R=b.shape[0],P=b.shape[1],$=T.segment_util.segOpComputeOptimalWindowSize(P,E),k={windowSize:$,inSize:P,batchSize:R,numSegments:E},_=new Voe(k,v),z=a.compileAndRun(_,[b,S],N);if(l.push(z),z.shape[1]===E)return z;let L=w8({backend:a,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=I8({inputs:{x:L},backend:a,attrs:{reps:[P/$]}});return l.push(L),l.push(j),g(z,v,j,N,E)},y=g(f,"unsortedSegmentSum",s,m,i),A=be({inputs:{x:y},backend:a,attrs:{shape:h}}),x=A;if(d!=null){l.push(A);let b=T.getUndoAxesPermutation(d);x=fa({inputs:{x},backend:a,attrs:{perm:b}})}return l.forEach(b=>a.disposeIntermediateTensorInfo(b)),x}var Goe={kernelName:Xh,backendName:"webgl",kernelFunc:Uoe},joe=[KQ,YQ,eee,ree,see,lee,dee,pee,gee,Aee,vee,Iee,Tee,$ee,_ee,Oee,Dee,Vee,Gee,Hee,Zee,rte,ste,ote,cte,mte,xte,RQ,wte,Tte,$te,Pte,Lte,Bte,Ute,jte,Xte,Yte,eae,aae,nae,iae,uae,hae,mae,yae,bae,kae,Sae,Eae,Mae,Pae,Wae,Uae,Gae,Hae,Xae,Zae,Jae,ere,nre,ore,dre,pre,mre,Are,wre,Nre,EQ,Cre,Ste,$re,_re,Pre,FQ,Bre,jre,qre,Yre,ene,nne,one,hne,mne,Ane,bne,Ine,Nne,Cne,Fne,_ne,One,Dne,Wne,Gne,Xne,Jne,ise,PQ,dse,cse,gse,xse,ute,wse,Ise,Nse,Ese,Mse,_Q,zse,Ose,dte,ase,Lse,Use,qse,LQ,Yse,eie,nie,oie,hie,cie,gie,xie,vie,Iie,Tie,$ie,_ie,Pie,Wie,tte,nse,Uie,jie,qie,Kie,Yie,Qie,toe,roe,soe,loe,doe,poe,moe,yoe,xoe,voe,rse,HQ,Ioe,Toe,Roe,_oe,Poe,qQ,Loe,Boe,Goe,kse];for(let e of joe)kn(e);var Rn=J();Rn.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Rn.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Rn.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Rn.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Rn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Rn.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Rn.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Rn.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Rn.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Rn.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var Hoe="return a + b;",qoe="return areal * breal - aimag * bimag;",Xoe="return areal * bimag + aimag * breal;",Koe="return a / b;",Zoe="return a * b;",Yoe="return (a - b) * (a - b);",Joe="return a - b;",Qoe="return f32(a == b);",ele="return vec4<f32>(a == b);",tle="return f32(a > b);",ale="return vec4<f32>(a > b);",rle="return f32(a >= b);",nle="return vec4<f32>(a >= b);",sle="return f32(a < b);",ile="return vec4<f32>(a < b);",ole="return f32(a <= b);",lle="return vec4<f32>(a <= b);",ule="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",dle=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,hle=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,S8=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,ple=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,cle=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,fle="return f32(a != b);",mle="return vec4<f32>(a != b);",gle=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,yle=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${S8}
  return resultTemp;
  `,Ale="if (a < 0.0) { return b * a; }  return a;",xle=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function Rv(e,t){let a=t?S8:hle;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+a+`
    return resultTemp;
  `:a+`
    return ${e}(a, b);
  `}function Ip(e,t){switch(e){case 0:return Zoe;case 1:return Hoe;case 2:return Joe;case 3:return Koe;case 4:return t?ele:Qoe;case 5:return t?ale:tle;case 6:return t?nle:rle;case 7:return t?ile:sle;case 8:return t?lle:ole;case 9:return t?dle:ule;case 10:return t?mle:fle;case 11:return Yoe;case 12:return t?cle:ple;case 14:return t?xle:Ale;case 15:return Rv("max",t);case 16:return Rv("min",t);case 13:return t?yle:gle;case 17:return qoe;case 18:return Xoe;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var ble="return abs(a);",vle="return ceil(a);",wle="return cos(a);",kle=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Ile="return exp(a) - 1.0;",Sle="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Nle=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Tle="return exp(a);",Cle="return floor(a);",Ele="return a;",Rle=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,$le="return f32(!(a >= 1.0));",Fle="return -a;",Mle="if (a < 0.0) { return uniforms.alpha * a; } return a;",_le=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,zle="if(a < 0.0) { return 0.0; } return a;",Ole="return clamp(a, 0.0, 6.0);",Ple="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Dle=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isnanVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Lle="return 1.0/sqrt(a);",Wle="return 1.0 / (1.0 + exp(-1.0 * a));",Ble="return sin(a);",Vle=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ule="return sqrt(a);",Gle="return a * a;",jle=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Hle="return f32(i32((a)));";function io(e,t){switch(e){case 0:return ble;case 2:return wle;case 3:return kle;case 1:return vle;case 4:return t?Nle:Sle;case 5:return Tle;case 6:return Ile;case 7:return Cle;case 8:return Ele;case 9:return Rle;case 10:return $le;case 11:return Fle;case 14:return t?_le:Mle;case 12:return t?Dle:zle;case 13:return t?Ple:Ole;case 15:return Lle;case 18:return Wle;case 16:return Ble;case 17:return Vle;case 19:return Ule;case 20:return Gle;case 21:return jle;case 22:return Hle;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function ss(e,t=!1){if(e===null)return null;if(e==="linear")return io(8);if(e==="relu")return io(12,t);if(e==="elu")return io(4,t);if(e==="relu6")return io(13,t);if(e==="prelu")return Ip(14,t);if(e==="sigmoid")return io(18,t);if(e==="leakyrelu")return io(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function qle(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let a=e.length,r=e.map(s=>`${t}[${s}]`),n=new Array(a-1);n[a-2]=r[a-1];for(let s=a-3;s>=0;--s)n[s]=`(${n[s+1]} * ${r[s+1]})`;return n}function ha(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function ef(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function fb(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Gi(){return`
  ${fb()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Ye(){return`
    ${Gi()}
      let index = getGlobalIndex();
`}function Xle(e,t,a,r=!1){let n=[];if(n.push(`
    let workGroupSizeX = ${a.workGroupSize[0]}u;
    let workGroupSizeY = ${a.workGroupSize[1]}u;
    let workGroupSizeZ = ${a.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),r===!0)return n.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${ef(t.dtype,a.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[$v,n.join(`
`),Fv(t.shape),a.getUserCode()].join(`
`);let s="struct Uniforms { NAN : f32, ";a.variableNames.forEach((d,p)=>{s+=`${d.charAt(0).toLowerCase()+d.slice(1)}Shape : ${ha(e[p].shape.length)}, `}),s+=`outShape : ${ha(t.shape.length)}, `;let i=t.shape.length-1;s+=`
       outShapeStrides: ${ha(i)}, `,a.size&&(s+="size : i32, "),a.uniforms&&(s+=a.uniforms),s+="};",n.push(s),a.atomic?n.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):n.push(`
    @group(0) @binding(0) var<storage, write> result: array<${ef(t.dtype,a.isVec4)}>;
  `),a.variableNames.forEach((d,p)=>{n.push(`
    @group(0) @binding(${1+p}) var<storage, read> ${d}: array<${ef(e[p].dtype,a.isVec4)}>;
    `)}),s!==""&&n.push(`
    @group(0) @binding(${1+a.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[o,l]=eue(t.shape,a.dispatchLayout),u=[$v,n.join(`
`),Fv(t.shape),o,Kle(t.shape.length)];if(a.atomic||u.push(Zle(t.shape,t.dtype,a.isVec4)),l===t.shape.length){let d=e.map(p=>Yle(p,t.shape,a.isVec4,a.dispatchLayout.x.length===t.shape.length)).join(`
`);u.push(d)}return u.push(a.getUserCode()),u.join(`
`)}var $v=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function Kle(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function Zle(e,t,a){let r=e.length,n=ef(t,a),s;if(a?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${n}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${n}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${n}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${n}(value);
    }`,r>=2){let i=["d0","d1","d2","d3"].slice(0,r),o=ha(r);a?s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function Yle(e,t,a,r){let n=Jle(e,a);return e.shape.length<=t.length&&(n+=Qle(e,t,a,r)),n}function Jle(e,t){let a=e.name,r=e.shape.length,n=ha(r),s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=["d0","d1","d2","d3"].slice(0,r),o=i.map(d=>`${d} : i32`).join(", ");if(r<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${a}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${a}[0]);
      }
    `;let l=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,u=`${r}D`;return r===0&&(u="1D"),t?`
      fn ${s}(${o}) -> vec4<f32> {
        return vec4<f32>(${a}[getIndexFromCoords${u}(${n}(${i.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${s}(${o}) -> f32 {
      return f32(${a}[getIndexFromCoords${u}(${n}(${i.join(",")}),
        ${l})]);
    }
   `}function Qle(e,t,a,r){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=ha(l);if(w.arraysEqual(e.shape,t)&&r)return a?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${n}[globalIndex]);
        }

        fn ${i}Coords(coords : ${u}) -> vec4<f32> {
          return vec4<f32>(${n}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${n}[globalIndex]);
      }

      fn ${i}Coords(coords : ${u}) -> f32 {
        return f32(${n}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let d=T.getBroadcastDims(e.shape,t),p=l-o,h="";if(o===0)return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${i}Coords(coords : ${u}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${i}Coords(coords : ${u}) -> f32{
        return get${s}();
      }
    `;l<2&&d.length>=1?h="coords = 0;":h=d.map(g=>`coords[${g+p}] = 0;`).join(`
`);let c="";if(l<2&&o>0)c="coords";else if(l>1){let g=ha(o),y=e.shape.map((A,x)=>`coords[${x+p}]`).join(", ");c=`${g}(${y})`}else c="coords";let f=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,m=`${o}D`;return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${h}
        return ${n}[getIndexFromCoords${m}(${c}, ${f}) / 4];
      }

      fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {
        var coords = coordsIn;
        ${h}
        return ${n}[getIndexFromCoords${m}(${c}, ${f}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${h}
      return f32(${n}[getIndexFromCoords${m}(${c}, ${f})]);
    }

    fn ${i}Coords(coordsIn : ${u}) -> f32 {
      var coords = coordsIn;
      ${h}
      return f32(${n}[getIndexFromCoords${m}(${c}, ${f})]);
    }
  `}function eue(e,t){let{x:a,y:r=[],z:n=[]}=t,s=e.length;if(a.length===s)return[`fn getOutputCoords() -> ${ha(s)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,s];let i="",o=[a,r,n],l=0;for(let h=0;h<o.length;h++){let c=o[h];if(c.length!==0)if(l+=c.length,c.length===1)i+=`let d${c[0]} = i32(globalId[${h}]);`;else{let f=qle(c,"uniforms.outShape");i+=`var index${h} = i32(globalId[${h}]);`;for(let m=0;m<f.length;m++)i+=`let d${c[m]} = index${h} / ${f[m]};`,m===f.length-1?i+=`let d${c[m+1]} = index${h} - d${c[m]} * ${f[m]};`:i+=`index${h} = index${h} - d${c[m]} * ${f[m]};`}}let u=[];for(let h=0;h<l;h++)u.push(`d${h}`);let d=ha(l),p=`fn getOutputCoords() -> ${d} {
    ${i}
  `;return u.length===0?p+=`return ${d}(0); }`:p+=`return ${d}(${u.join(",")}); }`,[p,l]}function Fv(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let a=w.computeStrides(e),r=ha(t),n=[];for(let i=0;i<t;i++)n.push(`d${i}`);if(a.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+a.map((i,o)=>{let l=`let ${n[o]} = index2 / uniforms.outShapeStrides[${o}]`,u=o===a.length-1?`let ${n[o+1]} = index2 - ${n[o]} * uniforms.outShapeStrides[${o}]`:`index2 = index2 - ${n[o]} * uniforms.outShapeStrides[${o}]`;return`${l}; ${u};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${r} {
      ${s}
      return ${r}(${n.join(",")});
    }
  `}var N8={};Le(N8,{ArrayBufferToTypedArray:()=>C8,GPUBytesPerElement:()=>q1,computeDispatch:()=>_e,computeWorkGroupSizeForConv2d:()=>mb,computeWorkGroupSizeForMatMul:()=>T8,computeWorkPerThreadForConv2d:()=>gb,flatDispatchLayout:()=>He,isWebGPUSupported:()=>yb,tilesFitEvenlyIntoShape:()=>Xn});var vo=e=>{let t=1;for(let a=0;a<e.length;a++)t*=e[a];return t};function Xn(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((a,r)=>a%e[r]===0)}function _e(e,t,a=[1,1,1],r=[1,1,1]){let[n,s,i]=[Math.ceil(vo(e.x.map(o=>t[o]))/(a[0]*r[0])),e.y?Math.ceil(vo(e.y.map(o=>t[o]))/(a[1]*r[1])):1,e.z?Math.ceil(vo(e.z.map(o=>t[o]))/(a[2]*r[2])):1];return[n,s,i]}function mb(e,t){let a=vo(e.x.map(n=>t[n])),r=vo(e.y.map(n=>t[n]));return a<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function T8(e,t,a){return e===1?[32,1,1]:a===1?[1,32,1]:[8,8,1]}function gb(e,t){let a=vo(e.x.map(n=>t[n])),r=vo(e.y.map(n=>t[n]));return a<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function He(e){return{x:e.map((t,a)=>a)}}function q1(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function C8(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function yb(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}function E8(e,t,a,r){return w.assert(r%4===0&&e[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${r/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${a/e[0]}>, ${r}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${r};

  ${Gi()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var tue=class{constructor(e,t,a,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let i=r!=null,o=s!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=i,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],a=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],n=[this.tileInner,this.tileBOuter];return[Xn(r,this.aShape.slice(1)),Xn(n,a.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,a="",r="";if(this.activation){let s=ss(this.activation,this.isVec4);this.hasPreluActivationWeights?a=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${s}
                }`:a=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${s}
            }`,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${n}
          ${r}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${E8(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function Ab(e,t){let a=t[1]*e[1],r=t[0]*e[0],n=a>r?a:r;return`
    var<workgroup> mm_Asub : array<array<f32, ${n}>, ${a}>;
    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${n}>;
    ${Gi()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${n} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${n} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${n} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${n} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function aue(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Gi()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var R8=class{constructor(e,t,a,r=!1,n=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=r?e[1]:e[2];this.workGroupSize=T8(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(a=1),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[a,a,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(a=1,this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[a,a,1]));let u=s!=null,d=o!=null;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=a,this.aShape=e,this.transposeA=r,this.transposeB=n,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d;let p=this.outputShape[2],h=this.transposeB?[this.outputShape[0],p,l]:[this.outputShape[0],l,p];[this.fitA,this.fitB]=this.getShapeFit(h),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,a=this.workGroupSize[0]*this.workPerThread,r=t>a?t:a;this.outputShape[1]===1&&(r*=4),w.assert(r%this.workGroupSize[0]===0&&r%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let n=[t,r],s=[r,a];return[Xn(n,this.aShape.slice(1)),Xn(s,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let a="",r="";if(this.activation){let s=ss(this.activation,!1);this.hasPreluActivationWeights?a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
            }`:a=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${s}
              }
            `,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${n}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Ab([this.workPerThread,this.workPerThread,1],this.workGroupSize):aue(this.workGroupSize)}
    `}};function rue(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Gi()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var nue=class{constructor(e,t=!1,a=!1,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=r!=null,o=s!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=a,this.addBias=i,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${a}`}getUserCode(){let e;this.transposeA===!1?e="return A[batch * batchASize + row * uniforms.dimInner + col];":e="return A[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B[batch * batchBSize + col * uniforms.dimInner + row];";let a="",r="";if(this.activation){let s=ss(this.activation,!1);this.hasPreluActivationWeights?a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
            }`:a=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${s}
              }
            `,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${n}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${rue()}
    `}};function sue(e){let t=e[1]/2,a=e[0],r=t>a?t:a;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${a}>, ${r}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${a}>, ${r}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Gi()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${r}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${r}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var iue=class{constructor(e,t,a,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=a,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(a[2]/this.workGroupSize[0]),Math.ceil(a[1]*2/this.workGroupSize[1]),a[0]];let i=r!=null;i&&this.variableNames.push("bias");let o=s!=null;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,a="",r="";if(this.activation){let s=ss(this.activation,!1);this.hasPreluActivationWeights?a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${s}
            }`:a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${s}
        }`,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${n}
          ${r}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${sue(this.workGroupSize)}
    `}};function je(e){let{inputs:t,attrs:a}=e,{x:r}=t,{shape:n}=a,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(n,s),o=w.sizeFromShape(i);return w.assert(s===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var oue={kernelName:ol,backendName:"webgpu",kernelFunc:je};function xb({a:e,b:t,transposeA:a,transposeB:r,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=a?e.shape[u-2]:e.shape[u-1],h=r?t.shape[d-1]:t.shape[d-2],c=a?e.shape[u-1]:e.shape[u-2],f=r?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),A=w.sizeFromShape(g),x=kl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${r} must match.`);let b=a?[y,p,c]:[y,c,p],v=r?[A,f,h]:[A,h,f],S=je({inputs:{x:e},backend:n,attrs:{shape:b}}),N=je({inputs:{x:t},backend:n,attrs:{shape:v}}),E=[S,N],R=Math.max(y,A),P=p%4===0&&f%4===0&&!a&&!r&&f>=32,$;c*f<=32?$=new nue([R,c,f],a,r,s,l,i):!a&&!r&&(c<=16&&(f<=512||h>=2*f)||f<=16&&(c<=512||p>=2*c))?$=new iue(b,v,[R,c,f],s,l,i):P?$=new tue(b,[R,c,f],J().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,l,i):$=new R8(b,[R,c,f],J().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,r,s,l,i);let k=[S,N];s&&k.push(s),i&&k.push(i);let _=[{type:"int32",data:[c]},{type:"int32",data:[f]},{type:"int32",data:[p]}];l==="leakyrelu"&&(_.push({type:"float32",data:[o]}),$.uniforms+=" alpha : f32,");let z=n.runWebGPUProgram($,k,e.dtype,_),L=je({inputs:{x:z},backend:n,attrs:{shape:x}});E.push(z);for(let j of E)n.disposeData(j.dataId);return L}function lue(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=r;return xb({a:n,b:s,transposeA:l,transposeB:u,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}var uue={kernelName:$s,backendName:"webgpu",kernelFunc:lue},Mv=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,a),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Ip(this.op,!1)}
      }

      ${Ye()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},due=class{constructor(e,t,a,r){this.variableNames=["A","B"],this.size=!0;let n=256;this.workGroupSize=[n,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.dispatchLayout=He(this.outputShape),this.lastDimensionSize=r?a[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Ip(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ye()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},hue=class{constructor(e,t,a){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Ip(this.op,this.isVec4)}
      }
      ${Ye()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},$8=class{constructor(e,t,a){this.variableNames=["A","B"],this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Ip(this.op,!1)}
      }
      ${Ye()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function _v(e,t,a){if(w.arraysEqual(t,a)&&w.sizeFromShape(t)%4===0)return new hue(e,t,a);let r=t.length===1&&a.length>1&&t[0]<1024,n=a.length===1&&t.length>1&&a[0]<1024;return r||n?new due(e,t,a,n):new $8(e,t,a)}function Nr(e){let{inputs:t}=e,{x:a}=t;return e.backend.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var pue={kernelName:hi,backendName:"webgpu",kernelFunc:Nr};function Td(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.makeTensorInfo(r.shape,"complex64"),i=a.tensorMap.get(s.dataId),o=Nr({inputs:{x:r},backend:a}),l=Nr({inputs:{x:n},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var cue={kernelName:Mh,backendName:"webgpu",kernelFunc:Td},Sp=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let a=128;this.workGroupSize=[a,1,1],this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${io(this.op,!1)}
      }
      ${Ye()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ga({opType:e,cpuKernelImpl:t,dtype:a}){return({inputs:r,backend:n})=>{let{x:s}=r,i=n,o=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&t!=null){let u=i.tensorMap.get(s.dataId),d=t(u.values,o);return i.makeTensorInfo(s.shape,o,d)}let l=new Sp(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function Da({opSnippet:e,cpuKernelImpl:t,supportsComplex:a=!1,dtype:r}){return({inputs:n,backend:s})=>{let{a:i,b:o}=n,l=s;if(a&&i.dtype==="complex64"){let p=l.tensorMap.get(i.dataId),h=l.tensorMap.get(o.dataId),c,f;if(e!==0)[c,f]=[[p.complexTensorInfos.real,h.complexTensorInfos.real],[p.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(g=>{let[y,A]=g,x={dataId:y.dataId,dtype:y.dtype,shape:i.shape},b={dataId:A.dataId,dtype:A.dtype,shape:o.shape},v=_v(e,i.shape,o.shape);return l.runWebGPUProgram(v,[x,b],ba(y.dtype,A.dtype))});else{let g=new Mv(17,i.shape,o.shape),y=new Mv(18,i.shape,o.shape),A=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:o.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:o.shape}];c=l.runWebGPUProgram(g,A,"float32"),f=l.runWebGPUProgram(y,A,"float32")}let m=Td({inputs:{real:c,imag:f},backend:l});return l.disposeData(c.dataId),l.disposeData(f.dataId),m}let u=r||ba(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([i,o]))&&t!=null){let p=l.tensorMap.get(i.dataId).values,h=l.tensorMap.get(o.dataId).values,c=i.dtype==="string"?T.fromUint8ToStringArray(p):p,f=i.dtype==="string"?T.fromUint8ToStringArray(h):h,[m,g]=t(i.shape,o.shape,c,f,u);return l.makeTensorInfo(g,u,m)}let d=_v(e,i.shape,o.shape);return l.runWebGPUProgram(d,[i,o],u)}}var{addImpl:fue,ceilImpl:mue,concatImpl:gue,equalImpl:yue,expImpl:Aue,expm1Impl:xue,floorImpl:bue,gatherNdImpl:vue,gatherV2Impl:wue,greaterEqualImpl:kue,greaterImpl:Iue,lessEqualImpl:Sue,lessImpl:Nue,logImpl:Tue,maxImpl:Cue,maximumImpl:Eue,minimumImpl:Rue,multiplyImpl:$ue,negImpl:Fue,notEqualImpl:Mue,prodImpl:_ue,rangeImpl:zue,rsqrtImpl:Oue,simpleAbsImpl:Pue,sliceImpl:Due,stridedSliceImpl:Lue,stringNGramsImpl:Wue,subImpl:Bue,tileImpl:Vue,topKImpl:Uue,transposeImpl:Gue,uniqueImpl:eAe}=ym,jue=ga({opType:0,cpuKernelImpl:Pue}),Hue={kernelName:Do,backendName:"webgpu",kernelFunc:jue},que=Da({opSnippet:1,cpuKernelImpl:fue,supportsComplex:!0}),Xue={kernelName:Yn,backendName:"webgpu",kernelFunc:que},Kue=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(a=>{e.push(`let v${a} = get${a}ByOutputCoords(coords);`)});let t=this.variableNames.map(a=>`v${a}`).join(" + ");return`
      ${Ye()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Zue(e){let{inputs:t,backend:a}=e,r=t;if(r.length===1)return Nr({inputs:{x:r[0]},backend:a});let n=r.map(o=>o.dtype).reduce((o,l)=>ba(o,l)),s=r.map(o=>o.shape),i=new Kue(s);return a.runWebGPUProgram(i,r,n)}var Yue={kernelName:Hs,backendName:"webgpu",kernelFunc:Zue},F8=class{constructor(e,t,a){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32, infinityValue : f32,",this.size=!0;let r=[t];T.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,e.length),this.op=a==="min"?"<":">";let[n]=T.computeOutAndReduceShapes(e,r);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,n)=>this.outputShape.length===1?r:`${r}[${n}]`,a=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Ye()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${a("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x[getInputIndex(coordInfo, k)]);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},Jue=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[t[r]];this.outputShape=a,this.dispatchLayout={x:[0],y:[1]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${fb()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},Que=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[t[r]];this.outputShape=a,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=ha(this.outputShape.length),t=ede(this.newDim);return`
      ${Ye()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function ede(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=`resRC[${r}]`;return a.join()}function Kn(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{perm:s}=r,i=a,o=n.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n.shape[s[d]];if(a.shouldExecuteOnCPU([n])){let d=i.tensorMap.get(n.dataId).values,p=Gue(d,n.shape,n.dtype,s,l);return a.makeTensorInfo(l,n.dtype,p)}if(n.shape.length===2&&w.arraysEqual(s,[1,0])){let d=new Jue(n.shape,s);return i.runWebGPUProgram(d,[n],n.dtype)}let u=new Que(n.shape,s);return i.runWebGPUProgram(u,[n],n.dtype)}var tde={kernelName:Di,backendName:"webgpu",kernelFunc:Kn};function ade(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=T.getAxesPermutation(i,n.shape.length),l=n,u=[];o!=null&&(l=Kn({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=new F8(l.shape,i[0],"max"),p=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=a.runWebGPUProgram(d,[l],"int32",p);return u.forEach(c=>a.disposeData(c.dataId)),h}var rde={kernelName:qs,backendName:"webgpu",kernelFunc:ade};function nde(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=T.getAxesPermutation(i,n.shape.length),l=n,u=[];o!=null&&(l=Kn({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=new F8(l.shape,i[0],"min"),p=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=a.runWebGPUProgram(d,[l],"int32",p);return u.forEach(c=>a.disposeData(c.dataId)),h}var sde={kernelName:Bu,backendName:"webgpu",kernelFunc:nde},M8=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ye()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},_8=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ye()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function ide(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1,d=T.computePool2DInfo(n.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Nr({inputs:{x:n},backend:a});let p,h=[{type:"int32",data:[d.strideHeight,d.strideWidth]}];return d.filterHeight===1&&d.filterWidth===1?p=new _8(d):(p=new M8(d,"avg"),h.push({type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]})),a.runWebGPUProgram(p,[n],n.dtype,h)}var ode={kernelName:Xs,backendName:"webgpu",kernelFunc:ide};function lde(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;return xb({a:n,b:s,transposeA:i,transposeB:o,backend:a})}var ude={kernelName:Ks,backendName:"webgpu",kernelFunc:lde},dde=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${ha(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=ha(this.rank),t=hde(this.rank),a;return this.start.length===1?a=this.outputShape.map((r,n)=>"sourceLoc = uniforms.start + coords;"):a=this.outputShape.map((r,n)=>`sourceLoc.${X1[n]} = uniforms.start[${n}] + coords.${X1[n]};`),`
      ${Ye()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${a.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},X1=["x","y","z","w","u","v"];function hde(e){if(e===1)return"sourceLoc";if(e<=6)return X1.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Cd(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,size:i}=r,[o,l]=Ft.parseSliceParams(n,s,i);if(Ft.assertParamsValid(n,o,l),a.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=a.tensorMap.get(n.dataId),h=Due(p.values,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,h)}if(w.sizeFromShape(l)===0)return a.makeTensorInfo(l,n.dtype,[]);let u=new dde(o,l),d=[{type:"int32",data:o}];return a.runWebGPUProgram(u,[n],n.dtype,d)}var pde={kernelName:pl,backendName:"webgpu",kernelFunc:Cd},cde=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r;w.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((A,x)=>A*x),l=T.getReshaped(n.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(n.shape,s,o),p=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(d,i,s.length),c=[],f=je({inputs:{x:n},backend:a,attrs:{shape:l}}),m=Kn({inputs:{x:f},backend:a,attrs:{perm:u}}),g=je({inputs:{x:m},backend:a,attrs:{shape:d}}),y=Cd({inputs:{x:g},backend:a,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(A=>a.disposeData(A.dataId)),y},fde={kernelName:Lo,backendName:"webgpu",kernelFunc:cde},z8=Da({opSnippet:10,dtype:"bool",cpuKernelImpl:Mue}),mde={kernelName:tl,backendName:"webgpu",kernelFunc:z8};function Np(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.tensorMap.get(r.dataId);return Nr({inputs:{x:n.complexTensorInfos.real},backend:a})}var gde={kernelName:Vh,backendName:"webgpu",kernelFunc:Np};function yde(e,t){let a=new Sp(e.shape,22),r=t.runWebGPUProgram(a,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function K1(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dtype:s}=r;if(s==="complex64"){if(n.dtype==="complex64")return Nr({inputs:{x:n},backend:a});let i=Dt(n.shape),o=K1({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),l=Td({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeData(o.dataId),l}if(n.dtype==="complex64"){let i=Np({inputs:{input:n},backend:a}),o=K1({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeData(i.dataId),o}if(!w.hasEncodingLoss(n.dtype,s)){let i=Nr({inputs:{x:n},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return yde(n,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=z8({inputs:{a:n,b:i},backend:a});return a.disposeData(i.dataId),o}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var Ade={kernelName:Zs,backendName:"webgpu",kernelFunc:K1},xde=ga({opType:1,cpuKernelImpl:mue}),bde={kernelName:Ys,backendName:"webgpu",kernelFunc:xde},vde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ye()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},wde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ye()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function kde(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{clipValueMin:s,clipValueMax:i}=r,o,l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return w.sizeFromShape(n.shape)%4===0?o=new vde(n.shape):o=new wde(n.shape),a.runWebGPUProgram(o,[n],n.dtype,l)}var Ide={kernelName:Jn,backendName:"webgpu",kernelFunc:kde},Sde=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let t=this.offsetLength,a=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${a})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ye()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Nm(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.tensorMap.get(r.dataId);return Nr({inputs:{x:n.complexTensorInfos.imag},backend:a})}var Nde={kernelName:Dh,backendName:"webgpu",kernelFunc:Nm};function Z1(e,t,a){let r=e[0].dtype;if(r==="complex64"){let c=e.map(A=>Np({inputs:{input:A},backend:a})),f=e.map(A=>Nm({inputs:{input:A},backend:a})),m=Z1(c,t,a),g=Z1(f,t,a),y=Td({inputs:{real:m,imag:g},backend:a});return c.forEach(A=>a.disposeData(A.dataId)),f.forEach(A=>a.disposeData(A.dataId)),a.disposeData(m.dataId),a.disposeData(g.dataId),y}let n=a.shouldExecuteOnCPU(e);if(r==="string"&&(n=!0),n){let c=e.map(b=>{let v=w.sizeFromShape(b.shape.slice(t));return je({inputs:{x:b},backend:a,attrs:{shape:[-1,v]}})}),f=c.map(b=>({vals:a.readSync(b.dataId),shape:b.shape})),m=T.computeOutShape(c.map(b=>b.shape),1),g=c[0].shape[0]===1,y=gue(f,m,r,g),A=T.computeOutShape(e.map(b=>b.shape),t),x=a.makeTensorInfo(A,r,y);return c.forEach(b=>a.disposeData(b.dataId)),x}let{tensors2D:s,outShape:i}=Tde(e,t,a),o=s.map(c=>c.shape),l=new Sde(o),u=[],d=new Array(o.length-1);if(d.length>0){d[0]=o[0][1],u.push({type:"int32",data:[d[0]]});for(let c=1;c<d.length;c++)d[c]=d[c-1]+o[c][1],u.push({type:"int32",data:[d[c]]})}let p=a.runWebGPUProgram(l,s,s[0].dtype,u);s.forEach(c=>a.disposeData(c.dataId));let h=je({inputs:{x:p},backend:a,attrs:{shape:i}});return a.disposeData(p.dataId),h}function Tde(e,t,a){let r=T.computeOutShape(e.map(n=>n.shape),t);return{tensors2D:e.map(n=>je({inputs:{x:n},backend:a,attrs:{shape:[w.sizeFromShape(n.shape.slice(0,t)),w.sizeFromShape(n.shape.slice(t))]}})),outShape:r}}function O8(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r,s=w.parseAxisParam(n,t[0].shape)[0],i=T.computeOutShape(t.map(u=>u.shape),s);if(w.sizeFromShape(i)===0)return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(u=>w.sizeFromShape(u.shape)>0);if(o.length===1)return Nr({inputs:{x:o[0]},backend:a});let l=o.map(u=>u.shape);return T.assertParamsConsistent(l,s),Z1(o,s,a)}var Cde={kernelName:Wo,backendName:"webgpu",kernelFunc:O8},Ede=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],a=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],n=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Xn(e,[a,n]),Xn(t,[n,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=E8(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${t}
         }
         return vec4<f32>(0.0);
        `,r=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,n="",s="";if(this.activation){let o=ss(this.activation,this.isVec4);if(this.hasPreluActivationWeights)n=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${o}
        }`;else{if(this.hasLeakyreluAlpha)throw n=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${o}
        }`,new Error("Leakyrelu is not supported.");n=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${o}
        }`}s="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${n}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${r}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${i}
            ${s}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},Rde=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=mb(this.dispatchLayout,this.outputShape),this.elementsPerThread=gb(this.dispatchLayout,this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],a=e>t?e:t;w.assert(a%this.workGroupSize[0]===0&&a%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[e,a],n=[a,t],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Xn(r,[s,o]),Xn(n,[o,i])]}getUserCode(){let e=Ab(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,a=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,r=this.fitB?"return W[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,n="",s="";if(this.activation){let o=ss(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${o}
                  }
                `,s="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${n}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${a}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${r}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${i}
      ${s}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},$de=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ss(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let a=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${a}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Gi()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}},Fde=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
      inChannels : i32,`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Ye()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};function Mde({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=a.dataFormat==="channelsLast",d=!1,p=!1,h=a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID",c,f;if(h){let y=a.inHeight*a.inWidth*a.inChannels;c=je({inputs:{x:e},backend:r,attrs:{shape:[1,a.batchSize,y]}}),f=je({inputs:{x:t},backend:r,attrs:{shape:[1,y,a.outChannels]}})}else{let y=u?l[0]*l[1]*l[2]:l[0]*l[2]*l[3];c=je({inputs:{x:e},backend:r,attrs:{shape:[1,y,a.inChannels]}}),f=je({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}})}let m=xb({a:c,b:f,transposeA:d,transposeB:p,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=je({inputs:{x:m},backend:r,attrs:{shape:a.outShape}});return r.disposeData(c.dataId),r.disposeData(f.dataId),r.disposeData(m.dataId),g}function _de({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,strideWidth:p,strideHeight:h,padInfo:c,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:A}=a,x=A==="channelsLast",b=l*u*d,v=m*f,S=[v,b],N=!1,E=!1,R=[],P=je({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),$=je({inputs:{x:t},backend:r,attrs:{shape:[1,b,-1]}});R.push(P),R.push($);let k=new Fde(S,x),_=[{type:"int32",data:[c.left,c.top]},{type:"int32",data:[p,h]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],z=r.runWebGPUProgram(k,[P],P.dtype,_),L=je({inputs:{x:z},backend:r,attrs:{shape:[1,S[0],S[1]]}});R.push(z),R.push(L);let j=[1,S[0],S[1]],D=new R8(j,[1,v,a.outChannels],J().get("WEBGPU_MATMUL_WORK_PER_THREAD"),N,E,n,o,s),B=j[1],G=j[2],ee=a.outChannels,Q=[{type:"int32",data:[B]},{type:"int32",data:[ee]},{type:"int32",data:[G]}],ne=[L,$];n&&ne.push(n),s&&ne.push(s),o==="leakyrelu"&&(_.push({type:"float32",data:[i]}),D.uniforms+=" alpha : f32,");let Y=r.runWebGPUProgram(D,ne,L.dtype,Q),re=x?[1,m,f,a.outChannels]:[1,a.outChannels,m,f],le=je({inputs:{x:Y},backend:r,attrs:{shape:re}});R.push(Y);for(let ye of R)r.disposeData(ye.dataId);return le}function P8({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=n!=null,u=s!=null,d;if(a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID"||a.filterHeight===1&&a.filterWidth===1&&a.dilationHeight===1&&a.dilationWidth===1&&a.strideHeight===1&&a.strideWidth===1&&(a.padInfo.type==="SAME"||a.padInfo.type==="VALID"))return Mde({x:e,filter:t,convInfo:a,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i});if(J().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&e.shape[0]===1)return _de({x:e,filter:t,convInfo:a,backend:r,bias:n,preluActivationWeights:s,leakyreluAlpha:i,activation:o});let p=J().getBool("WEBGPU_USE_NAIVE_CONV2D"),h=(a.inChannels%4===0||a.inChannels===3&&a.padInfo.type==="VALID")&&a.outChannels%4===0,c=[a.padInfo.top,a.padInfo.left],f=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(p)d=new $de(a,l,o,u);else{h?d=new Ede(a,l,o,u):d=new Rde(a,l,o,u);let g=a.outShape[1]*a.outShape[2],y=a.outShape[3],A=a.filterHeight*a.filterWidth*a.inShape[3];f.push({type:"int32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[A]})}let m=[e,t];return l&&m.push(n),u&&m.push(s),o==="leakyrelu"&&(f.push({type:"float32",data:[i]}),d.uniforms+=" alpha : f32,"),r.runWebGPUProgram(d,m,e.dtype,f)}function zde(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a,p=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!1,p);return P8({x:n,filter:s,convInfo:h,backend:r})}var Ode={kernelName:Js,backendName:"webgpu",kernelFunc:zde},Pde=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=mb(this.dispatchLayout,this.outputShape),this.elementsPerThread=gb(this.dispatchLayout,this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${Ab(this.elementsPerThread,this.workGroupSize)}
  `}},Dde=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,a=this.isChannelsLast?3:1;return`
    ${Ye()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${a}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Lde(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,p=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,p),c=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}],f;if(J().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Dde(h);else{f=new Pde(h);let m=h.inShape[1]*h.inShape[2],g=h.inShape[3],y=h.filterHeight*h.filterWidth*h.outChannels;c.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return a.runWebGPUProgram(f,[n,s],"float32",c)}var Wde={kernelName:Qs,backendName:"webgpu",kernelFunc:Lde},Bde=ga({opType:2}),Vde={kernelName:ei,backendName:"webgpu",kernelFunc:Bde},Ude=ga({opType:3}),Gde={kernelName:ti,backendName:"webgpu",kernelFunc:Ude},jde=class{constructor(e,t,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[n]=t;this.outputShape=[n,a[0],a[1],e],this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[a,r,n]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ye()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${a});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${i};
        let in_y = ${n};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},Hde=e=>{let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new jde(n.shape[3],s.shape,o,l),p=[{type:"float32",data:[u]}];return a.runWebGPUProgram(d,[n,s,i],"float32",p)},qde={kernelName:Vo,backendName:"webgpu",kernelFunc:Hde},zv=class{constructor(e,t,a,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=a,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",a=this.exclusive?t:`getX(${Ov(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1],n="",s="";return this.exclusive?(n=this.reverse?`end != ${r-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(n=this.reverse?`end + pow2 < ${r}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${Ye()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Pv(e,"coords",this.op)};
         var val = ${a};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${n}) {
           let idx = ${s};
           ${Pv(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${Ov(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function Ov(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function Pv(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function D8(e,t,a,r,n,s){let i=t.shape.length,o=T.getAxesPermutation([r],i),l=t;o!=null&&(l=Kn({inputs:{x:t},backend:a,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let d=l.shape[u],p=Nr({inputs:{x:l},backend:a});for(let h=0;h<=Math.ceil(Math.log2(d))-1;h++){let c=new zv(e,l.shape,!1,s),f=p,m=[{type:"float32",data:[h]}];p=a.runWebGPUProgram(c,[p],p.dtype,m),a.disposeData(f.dataId)}if(n){let h=new zv(e,l.shape,n,s),c=p,f=[{type:"float32",data:[0]}];p=a.runWebGPUProgram(h,[p],p.dtype,f),a.disposeData(c.dataId)}if(o!=null){let h=T.getUndoAxesPermutation(o),c=Kn({inputs:{x:p},backend:a,attrs:{perm:h}});return a.disposeData(p.dataId),a.disposeData(l.dataId),c}return p}function Xde(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r;return D8("*",n,a,s,i,o)}var Kde={kernelName:Bo,backendName:"webgpu",kernelFunc:Xde};function Zde(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r;return D8("+",n,a,s,i,o)}var Yde={kernelName:ai,backendName:"webgpu",kernelFunc:Zde},Jde=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ye()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Qde(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockSize:s,dataFormat:i}=r,o=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],u=i==="NHWC"?n.shape[2]:n.shape[3],d=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,h=u*s,c=d/(s*s),f=i==="NHWC"?[o,p,h,c]:[o,c,p,h],m=[{type:"int32",data:[s]}],g=new Jde(f,i);return a.runWebGPUProgram(g,[n],n.dtype,m)}var ehe={kernelName:Uo,backendName:"webgpu",kernelFunc:Qde},L8=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${a}`}getUserCode(){let e="",t="";if(this.activation){let r=ss(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let a=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${fb()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${a}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},W8=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ss(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let a=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Gi()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${a}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function the(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;d==null&&(d=[1,1]);let p=T.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!0),h=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}],c;return p.batchSize===1&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&p.strideHeight===1&&p.strideWidth===1&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.filterHeight===3&&p.inChannels%4===0?c=new L8(p):(c=new W8(p),h.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),a.runWebGPUProgram(c,[n,s],n.dtype,h)}var ahe={kernelName:ri,backendName:"webgpu",kernelFunc:the},B8=Da({opSnippet:0,cpuKernelImpl:$ue,supportsComplex:!0}),rhe={kernelName:vi,backendName:"webgpu",kernelFunc:B8},nhe=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[a]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=a.length===0?[1]:a,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let a=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ye()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${a}
        }
       }
     `}};function Tp(e,t,a,r,n){let s=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),l=o,u=T.getAxesPermutation(l,s),d=e;u!=null&&(d=Kn({inputs:{x:e},attrs:{perm:u},backend:n}),l=T.getInnerMostAxes(l.length,s),i.push(d)),T.assertAxesAreInnerMostDims(r,l,s);let[p,h]=T.computeOutAndReduceShapes(d.shape,l),c=p;a&&(c=T.expandShapeToKeepDim(p,o));let f;if((r==="max"||r==="prod")&&n.shouldExecuteOnCPU([d])){let m=n.tensorMap.get(d.dataId).values;switch(r){case"max":let g=Cue(m,w.sizeFromShape(h),c,e.dtype);f=n.makeTensorInfo(c,e.dtype,g);break;case"prod":let{outVals:y,outShape:A,outDtype:x}=_ue(d.shape,d.dtype,m,l);f=n.makeTensorInfo(A,x,y);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(h),g=w.sizeFromShape(d.shape)/m,y={windowSize:m,inSize:m,batchSize:g,outSize:1},A=r==="mean"?"float32":Yh(e.dtype),x=[{type:"int32",data:[m]}],b=new nhe(y,r),v=n.runWebGPUProgram(b,[d],A,x);i.push(v),f=je({inputs:{x:v},attrs:{shape:c},backend:n})}return i.forEach(m=>n.disposeData(m.dataId)),f}function bb(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return Tp(n,s,i,"sum",a)}var she={kernelName:Mi,backendName:"webgpu",kernelFunc:bb};function ihe(e){let{inputs:t,backend:a,attrs:r}=e,{equation:n}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(n,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let g of d[m]){let{permutationIndices:y,expandDims:A}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=Kn({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let v=0;v<A.length;++v)b.splice(A[v],0,1);w.arraysEqual(x.shape,b)||(x=je({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),h===null?h=x:(h=B8({inputs:{a:x,b:h},backend:a}),f.push(h))}m<p-1&&(u[m]>=0&&(h=bb({inputs:{x:h},backend:a,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&a.disposeData(m.dataId);return h}var ohe={kernelName:Ph,backendName:"webgpu",kernelFunc:ihe},lhe=ga({opType:4}),uhe={kernelName:si,backendName:"webgpu",kernelFunc:lhe},dhe=Da({opSnippet:4,dtype:"bool",cpuKernelImpl:yue}),hhe={kernelName:Go,backendName:"webgpu",kernelFunc:dhe},V8=ga({opType:5,cpuKernelImpl:Aue,dtype:"float32"}),phe={kernelName:ii,backendName:"webgpu",kernelFunc:V8};function Y1(e){let{inputs:t,attrs:a,backend:r}=e,{dim:n}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=n;return n<0&&(w.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),o.splice(l,0,1),je({inputs:{x:s},backend:r,attrs:{shape:o}})}var che={kernelName:jo,backendName:"webgpu",kernelFunc:Y1},fhe=ga({opType:6,cpuKernelImpl:xue}),mhe={kernelName:Ho,backendName:"webgpu",kernelFunc:fhe},ghe=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ye()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Ed(e){let{backend:t,attrs:a}=e,{shape:r,value:n}=a,{dtype:s}=a;if(s=s||w.inferDtype(n),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(n),t.makeTensorInfo(r,s,i)}else{let i=new ghe(r),o=[{type:"float32",data:[n]}];return t.runWebGPUProgram(i,[],s,o)}}var yhe={kernelName:Xu,backendName:"webgpu",kernelFunc:Ed},Ahe=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ye()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},xhe={kernelName:qo,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,r=t,n=new Ahe(a.shape);return r.runWebGPUProgram(n,[a],a.dtype)}},bhe=ga({opType:7,cpuKernelImpl:bue}),vhe={kernelName:oi,backendName:"webgpu",kernelFunc:bhe},whe=Da({opSnippet:12,dtype:"int32"}),khe={kernelName:li,backendName:"webgpu",kernelFunc:whe},Ihe=(e,t,a,r,n)=>{let s=[r,...a];return n&&s.push(n),e.createBindGroup({layout:t,entries:s.map((i,o)=>({binding:o,resource:i}))})},U8=(e,t,a,r,n,s=!1)=>{let i={dtype:n.dtype,shape:n.shape},o=Xle(r,i,t,s),l=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:a,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function G8(e,t,a,r="",n=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(s=>s.length).join(",")+a.join(",")+e.variableNames.join(",")+r+n}function Dv(e){let{externalImage:t,backend:a,attrs:r,outShape:n,useImport:s}=e,{numChannels:i}=r,o=w.sizeFromShape(n),l=w.computeStrides(n),u=a.makeTensorInfo(n,"int32"),d=a.getFromPixelsProgram(s?"import":"copyExternal");d.updateOutputShape(n);let p=[u.shape],h=[u.dtype,s?"import":"copyExternal"],c=G8(d,p,h),f=d.getLayout(a.device),m=a.getAndSavePipeline(c,()=>U8(a.device,d,f.pipelineLayout,[],u,!0));d.setPipeline(m),s||a.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:d.makeInputTexture(a.device,n[1],n[0])},[n[1],n[0]]);let g=a.tensorMap.get(u.dataId);g.bufferInfo.buffer=a.acquireBuffer(g.bufferInfo.byteSize);let y=[o,i,...l,...d.dispatch];d.setUniform(a.device,y);let A;if(s){let x={source:t};A=a.device.importExternalTexture(x)}else A=d.inputTexture.createView();return a.runFromPixelsProgram(d,g.bufferInfo.buffer,f,A,u.dataId),u}var She={kernelName:Ah,backendName:"webgpu",kernelFunc:Nhe},Jl;function Nhe(e){let{inputs:t,backend:a,attrs:r}=e,{pixels:n}=t,{numChannels:s}=r;if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,[d,p]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],h=[p,d,s];if(J().getBool("WEBGPU_USE_IMPORT")&&i)return Dv({externalImage:n,backend:a,attrs:r,outShape:h,useImport:!0});if((i||o)&&(Jl==null&&(Jl=document.createElement("canvas").getContext("2d")),Jl.canvas.width=d,Jl.canvas.height=p,Jl.drawImage(n,0,0,d,p),n=Jl.canvas),u||l||i||o)return Dv({externalImage:n,backend:a,attrs:r,outShape:h,useImport:!1});let c=n.data,f=c;if(s!=null&&s!==4){f=new Uint8Array(n.width*n.height*s);let y=c.length,A=0;for(let x=0;x<y;x++)x%4<s&&(f[A++]=c[x])}let m=a.makeTensorInfo(h,"int32"),g=a.tensorMap.get(m.dataId);return g.values=new Int32Array(f),a.maybeReleaseBuffer(m.dataId),a.uploadToGPU(m.dataId),m}var The=class{constructor(e,t,a,r,n){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,a),this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=n,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ye()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Che={kernelName:ui,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r,scale:n,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,u=a,d=[r,i,o],p=null;s!=null&&(p=s.shape,d.push(s));let h=null;n!=null&&(h=n.shape,d.push(n));let c=new The(r.shape,i.shape,o.shape,p,h),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(c,d,r.dtype,f)}};function Ehe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=T.convertConv2DDataFormat(d),g=T.computeConv2DInfo(n.shape,s.shape,l,p,u,h,!1,m);return P8({x:n,filter:s,convInfo:g,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}var Rhe={kernelName:Fs,backendName:"webgpu",kernelFunc:Ehe};function $he(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=r,f=d;f==null&&(f=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(n.shape,s.shape,l,f,u,p,!0),g=[n,s],y=i!=null,A=o!=null;y&&g.push(i),A&&g.push(o);let x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.filterHeight===3&&m.inChannels%4===0?b=new L8(m,y,h,A):(b=new W8(m,y,h,A),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),h==="leakyrelu"&&(x.push({type:"float32",data:[c]}),b.uniforms+=" alpha : f32,"),a.runWebGPUProgram(b,g,"float32",x)}var Fhe={kernelName:Ms,backendName:"webgpu",kernelFunc:$he},Mhe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${ha(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ye()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function _he(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=n.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,d,p]=T.prepareAndValidate(r,n),h=je({inputs:{x:n},backend:a,attrs:{shape:[u,i]}}),c=je({inputs:{x:r},backend:a,attrs:{shape:[w.sizeFromShape(r.shape)/d,d]}});if(a.shouldExecuteOnCPU([r,n])||r.dtype==="string"){let A=a.readSync(n.dataId),x=a.bufferSync(r),b=vue(A,x,r.dtype,u,i,d,p,r.shape,o);return a.makeTensorInfo(l,r.dtype,b.values)}let f=new Mhe(i,[u,d]),m=[{type:"int32",data:[i]},{type:"int32",data:p}],g=a.runWebGPUProgram(f,[c,h],c.dtype,m),y=je({inputs:{x:g},backend:a,attrs:{shape:l}});return a.disposeData(h.dataId),a.disposeData(c.dataId),a.disposeData(g.dataId),y}var zhe={kernelName:Ko,backendName:"webgpu",kernelFunc:_he},Ohe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Phe(this.aShape);return`
      ${Ye()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Phe(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)r===2?a.push("indexZ"):a.push(`${t[r]}`);return a.join()}function j8(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(n,s,l,o),d=w.sizeFromShape(s.shape),p=[],h=je({inputs:{x:n},backend:a,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=je({inputs:{x:s},backend:a,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(a.shouldExecuteOnCPU([n,s])){let A=a.tensorMap.get(c.dataId).values,x=Be(c.shape,c.dtype,A),b=a.tensorMap.get(h.dataId).values,v=Be(h.shape,h.dtype,b),S=wue(v,x,f);return p.forEach(N=>a.disposeData(N.dataId)),a.makeTensorInfo(u.outputShape,S.dtype,S.values)}let m=new Ohe(h.shape,f),g=a.runWebGPUProgram(m,[h,c],h.dtype);p.push(g);let y=je({inputs:{x:g},backend:a,attrs:{shape:u.outputShape}});return p.forEach(A=>a.disposeData(A.dataId)),y}var Dhe={kernelName:Xo,backendName:"webgpu",kernelFunc:j8},Lhe=Da({opSnippet:5,cpuKernelImpl:Iue,dtype:"bool"}),Whe={kernelName:Zo,backendName:"webgpu",kernelFunc:Lhe},Bhe=Da({opSnippet:6,dtype:"bool",cpuKernelImpl:kue}),Vhe={kernelName:di,backendName:"webgpu",kernelFunc:Bhe};function Uhe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{alpha:s}=r,i=[{type:"float32",data:[s]}],o=new Sp(n.shape,14);return o.uniforms="alpha : f32,",a.runWebGPUProgram(o,[n],"float32",i)}var Ghe={kernelName:pi,backendName:"webgpu",kernelFunc:Uhe},jhe=Da({opSnippet:7,dtype:"bool",cpuKernelImpl:Nue}),Hhe={kernelName:Yo,backendName:"webgpu",kernelFunc:jhe},qhe=Da({opSnippet:8,dtype:"bool",cpuKernelImpl:Sue}),Xhe={kernelName:Jo,backendName:"webgpu",kernelFunc:qhe},Khe=ga({opType:9,cpuKernelImpl:Tue}),Zhe={kernelName:ci,backendName:"webgpu",kernelFunc:Khe},Yhe=Da({opSnippet:9,dtype:"bool"}),Jhe={kernelName:Qo,backendName:"webgpu",kernelFunc:Yhe},Qhe=ga({opType:10}),epe={kernelName:Qu,backendName:"webgpu",kernelFunc:Qhe};function H8(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reductionIndices:s,keepDims:i}=r;return Tp(n,s,i,"max",a)}var tpe={kernelName:fi,backendName:"webgpu",kernelFunc:H8},ape=Da({opSnippet:15,cpuKernelImpl:Eue}),rpe={kernelName:mi,backendName:"webgpu",kernelFunc:ape};function npe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1,d=T.computePool2DInfo(n.shape,s,i,u,o,l),p,h=[];if(d.filterHeight===1&&d.filterWidth===1){if(w.arraysEqual(d.inShape,d.outShape))return Nr({inputs:{x:n},backend:a});p=new _8(d),h.push({type:"int32",data:[d.strideHeight,d.strideWidth]})}else p=new M8(d,"max"),h.push({type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]});return a.runWebGPUProgram(p,[n],n.dtype,h)}var spe={kernelName:gi,backendName:"webgpu",kernelFunc:npe};function ipe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{keepDims:s,axis:i}=r;return Tp(n,i,s,"mean",a)}var ope={kernelName:yi,backendName:"webgpu",kernelFunc:ipe};function lpe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return Tp(n,s,i,"min",a)}var upe={kernelName:Ai,backendName:"webgpu",kernelFunc:lpe},dpe=Da({opSnippet:16,cpuKernelImpl:Rue}),hpe={kernelName:xi,backendName:"webgpu",kernelFunc:dpe},ppe=class{constructor(e,t,a){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,n)=>r[0]+e[n]+r[1]),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((r,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.offset=a==="reflect"?0:1,this.shaderKey=`mirrorPad_${a}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),a=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),r=e===1?"start":"start[i]",n=e===1?"end":"end[i]",s=e===1?"outC":"outC[i]",i=ha(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ye()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${a});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${s} < ${r}) {
              ${s} = ${r} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${n}) {
              ${s} = (${n} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},cpe={kernelName:bi,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{paddings:n,mode:s}=t,i=a,o=n.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new ppe(r.shape,n,s);return i.runWebGPUProgram(l,[r],r.dtype,o)}};function fpe(e){let{inputs:t,backend:a}=e,{x:r}=t;if(a.shouldExecuteOnCPU([r])){let s=a.tensorMap.get(r.dataId),[i,o]=Fue(s.values,r.shape,r.dtype);return a.makeTensorInfo(o,r.dtype,i)}let n=new Sp(r.shape,11);return a.runWebGPUProgram(n,[r],r.dtype)}var mpe={kernelName:el,backendName:"webgpu",kernelFunc:fpe};function gpe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=a.readSync(n.dataId),d=a.readSync(s.dataId),{selectedIndices:p}=Or.nonMaxSuppressionV3Impl(u,d,i,o,l);return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var ype={kernelName:al,backendName:"webgpu",kernelFunc:gpe};function Ape(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=a.readSync(n.dataId),p=a.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Or.nonMaxSuppressionV5Impl(d,p,h,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var xpe={kernelName:rl,backendName:"webgpu",kernelFunc:Ape};function Pf(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="complex64"){let n=Np({inputs:{input:r},backend:a}),s=Pf({inputs:{x:n},backend:a}),i=Nm({inputs:{input:r},backend:a}),o=Pf({inputs:{x:i},backend:a}),l=Td({inputs:{real:s,imag:o},backend:a});return a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),l}else return Ed({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:a})}var bpe={kernelName:vl,backendName:"webgpu",kernelFunc:Pf};function q8(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let n=Np({inputs:{input:r},backend:a}),s=q8({inputs:{x:n},backend:a}),i=Nm({inputs:{input:r},backend:a}),o=Pf({inputs:{x:i},backend:a}),l=Td({inputs:{real:s,imag:o},backend:a});return a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),l}else return Ed({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}var vpe={kernelName:nl,backendName:"webgpu",kernelFunc:q8};function wpe(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return Y1({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let p=Y1({inputs:{input:d},backend:a,attrs:{dim:n}});return o.push(p),p}),u=O8({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(d=>a.disposeData(d.dataId)),u}var kpe={kernelName:il,backendName:"webgpu",kernelFunc:wpe},Ipe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((a,r)=>a[0]+e[r]+a[1]),this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((a,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=ha(e),a=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),r=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),n=e>1?`${t}(${a})`:`${a}`,s=e>1?`${t}(${r})`:`${r}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ye()}
        if (index < uniforms.size) {
          let start = ${n};
          let end = ${s};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},X8=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,constantValue:i}=r;if(s.every(u=>w.arraysEqual(u,[0,0])))return Nr({inputs:{x:n},backend:a});if(w.sizeFromShape(n.shape)===0){let u=s.map((d,p)=>d[0]+n.shape[p]+d[1]);return Ed({backend:a,attrs:{shape:u,value:i,dtype:n.dtype}})}let o=[{type:"float32",data:[i]}];s.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));let l=new Ipe(n.shape,s);return a.runWebGPUProgram(l,[n],n.dtype,o)},Spe={kernelName:wi,backendName:"webgpu",kernelFunc:X8},Npe=Da({opSnippet:13}),Tpe={kernelName:ki,backendName:"webgpu",kernelFunc:Npe};function Cpe(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=new $8(14,r.shape,n.shape);return a.runWebGPUProgram(s,[r,n],"float32")}var Epe={kernelName:Ii,backendName:"webgpu",kernelFunc:Cpe};function Rpe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return Tp(n,s,i,"prod",a)}var $pe={kernelName:Si,backendName:"webgpu",kernelFunc:Rpe},Fpe=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=zue(r,n,s,i);return t.makeTensorInfo([o.length],i,o)},Mpe={kernelName:ad,backendName:"webgpu",kernelFunc:Fpe},K8=Da({opSnippet:3}),_pe={kernelName:ni,backendName:"webgpu",kernelFunc:K8},zpe=ga({opType:12}),Ope={kernelName:Ni,backendName:"webgpu",kernelFunc:zpe},Ppe=ga({opType:13}),Dpe={kernelName:Ci,backendName:"webgpu",kernelFunc:Ppe},Lpe=class{constructor(e,t,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ye()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Wpe(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,size:i,halfPixelCenters:o}=r,[l,u]=i,d=s&&l>1?1:0,p=s&&u>1?1:0,h=[{type:"float32",data:[d,p]},{type:"float32",data:[o?.5:0]}],c=new Lpe(n.shape,l,u);return a.runWebGPUProgram(c,[n],"float32",h)}var Bpe={kernelName:Ti,backendName:"webgpu",kernelFunc:Wpe},Vpe=class{constructor(e,t,a,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ye()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Upe(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=s&&l>1?1:0,p=s&&u>1?1:0,h=[{type:"float32",data:[d,p]},{type:"float32",data:[s?.5:0]}],c=new Vpe(n.shape,l,u,i);return a.runWebGPUProgram(c,[n],n.dtype,h)}var Gpe={kernelName:nd,backendName:"webgpu",kernelFunc:Upe},jpe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ye()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Hpe={kernelName:wl,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,{radians:n,fillValue:s,center:i}=t,o=a,l=new jpe(r.shape,s),[u,d]=T.getImageCenter(i,r.shape[1],r.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return typeof s=="number"?p.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):p.push({type:"float32",data:s}),o.runWebGPUProgram(l,[r],r.dtype,p)}},qpe=ga({opType:15,cpuKernelImpl:Oue}),Xpe={kernelName:Ei,backendName:"webgpu",kernelFunc:qpe},Kpe=class{constructor(e,t,a,r,n,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=He(e),this.dispatch=_e(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${a}_${r}_${this.sliceDimGreaterThanOne}_${i}`;let o=ha(n.length);this.uniforms=`sliceDim : i32, strides: ${o}, size: i32,`,this.updatesRank=r,this.indicesRank=a}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,a=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",n="",s="";this.updatesRank===1?(r="coords[0]",n="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(r="coords[0], coords[1]",n="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${r})`,o=this.type==="int32"?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${s}

      ${Ye()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${a};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${n});

         ${o}
        }
      }`}};function Zpe(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=T.calculateShapes(s,n,i),h=[p/u,u];if(p===0)return a.makeTensorInfo(i,n.dtype);let c=je({inputs:{x:n},backend:a,attrs:{shape:[l,o]}}),f=je({inputs:{x:s},backend:a,attrs:{shape:[l,u]}}),m=f.dtype,g=Ed({backend:a,attrs:{shape:h,value:0,dtype:m}}),y=w.sizeFromShape(f.shape),A=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[y]}],x=new Kpe(f.shape,o,c.shape.length,f.shape.length,d,h,m),b=a.runWebGPUProgram(x,[f,c],m,A,g),v=je({inputs:{x:b},backend:a,attrs:{shape:i}});return a.disposeData(c.dataId),a.disposeData(f.dataId),a.disposeData(b.dataId),v}var Ype={kernelName:dl,backendName:"webgpu",kernelFunc:Zpe},Jpe=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=a,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],n=[];for(let s=0;s<this.outputShape.length;s++)n.push(`${a[s]}`),s<this.cRank&&r.push(`${a[s]}`);e=r.join(),t=n.join()}return`
      ${Ye()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Qpe(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=new Jpe(r.shape.length,n.shape,n.shape.length);return a.runWebGPUProgram(i,[r,n,s],ba(n.dtype,s.dtype))}var ece={kernelName:hl,backendName:"webgpu",kernelFunc:Qpe},tce=ga({opType:18}),ace={kernelName:$i,backendName:"webgpu",kernelFunc:tce},rce=ga({opType:16}),nce={kernelName:Ri,backendName:"webgpu",kernelFunc:rce},sce=ga({opType:17}),ice={kernelName:cl,backendName:"webgpu",kernelFunc:sce},Z8=Da({opSnippet:2,cpuKernelImpl:Bue,supportsComplex:!0}),oce={kernelName:Oi,backendName:"webgpu",kernelFunc:Z8};function lce(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{dim:s}=r,i=w.parseAxisParam([s],n.shape),o=H8({inputs:{x:n},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=je({inputs:{x:o},backend:a,attrs:{shape:l}}),d=Z8({inputs:{a:n,b:u},backend:a}),p=V8({inputs:{x:d},backend:a}),h=bb({inputs:{x:p},backend:a,attrs:{axis:i,keepDims:!1}}),c=je({inputs:{x:h},backend:a,attrs:{shape:l}}),f=K8({inputs:{a:p,b:c},backend:a});return a.disposeData(o.dataId),a.disposeData(u.dataId),a.disposeData(d.dataId),a.disposeData(p.dataId),a.disposeData(h.dataId),a.disposeData(c.dataId),f}var uce={kernelName:_i,backendName:"webgpu",kernelFunc:lce},dce=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r;w.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((y,A)=>y*A),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<n.shape.length;++y)l.push([0,0]);let u=[],d=X8({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(d.shape,s,o,!1),h=T.getPermuted(p.length,s.length,!1),c=T.getReshapedPermuted(d.shape,s,o,!1),f=je({inputs:{x:d},backend:a,attrs:{shape:p}}),m=Kn({inputs:{x:f},backend:a,attrs:{perm:h}}),g=je({inputs:{x:m},backend:a,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach(y=>a.disposeData(y.dataId)),g},hce={kernelName:fl,backendName:"webgpu",kernelFunc:dce},pce=class{constructor(e,t,a,r,n,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let o=t>1;this.shaderKey=`scatter_${a}_${r}_${o}`;let l=ha(n.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${l},`;let u="";a===1?u="i":a===2&&(u="i, j"),this.indicesSnippet=`getIndices(${u})`;let d="";r===1?d="i":r===2&&(d="i, coords[1]"),this.updatesSnippet=`getUpdates(${d})`,this.strideString=o?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Ye()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function cce(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:p}=T.calculateShapes(s,n,o),h=!1,c=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:d}],f=new pce(u,l,n.shape.length,s.shape.length,d,[p,1],h),m=a.runWebGPUProgram(f,[s,n,i],s.dtype,c),g=je({inputs:{x:m},backend:a,attrs:{shape:o}});return a.disposeData(m.dataId),g}var fce={kernelName:Hh,backendName:"webgpu",kernelFunc:cce};function mce(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,n.shape)[0],l=T.prepareSplitSize(n,s,o),u=n.shape.length,d=new Array(u).fill(0),p=n.shape.slice();return l.map(h=>{let c=[...p];c[o]=h;let f=Cd({inputs:{x:n},backend:a,attrs:{begin:d,size:c}});return d[o]+=h,f})}var gce={kernelName:ml,backendName:"webgpu",kernelFunc:mce},yce=ga({opType:19}),Ace={kernelName:Fi,backendName:"webgpu",kernelFunc:yce},xce={kernelName:ud,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,r=t,n=new Sp(a.shape,20);return r.runWebGPUProgram(n,[a],a.dtype)}},bce=Da({opSnippet:11}),vce={kernelName:zi,backendName:"webgpu",kernelFunc:bce},wce=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=ha(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let a=0;t=this.outputShape.map((r,n)=>(a++,this.outputShape.length===1?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${a-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`)).join(",")}return`
       ${Ye()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function kce(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,u,d,p,h),v;if(m)v=je({inputs:{x:n},backend:a,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let S=Ft.computeOutShape(A,x,b),N=Cd({inputs:{x:n},backend:a,attrs:{begin:A,size:S}});v=je({inputs:{x:N},backend:a,attrs:{shape:f}}),a.disposeData(N.dataId)}else if(a.shouldExecuteOnCPU([n])){let S=a.readSync(n.dataId),N=Be(n.shape,n.dtype,S),E=Lue(c,N,b,A);v=a.makeTensorInfo(f,n.dtype,E.values)}else{let S=new wce(c),N=[{type:"int32",data:A},{type:"int32",data:b}],E=a.runWebGPUProgram(S,[n],n.dtype,N);v=je({inputs:{x:E},backend:a,attrs:{shape:f}}),a.disposeData(E.dataId)}return v}var Ice={kernelName:gl,backendName:"webgpu",kernelFunc:kce};function Sce(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:p}=t,h=a.readSync(d.dataId),c=a.readSync(p.dataId),[f,m]=Wue(h,c,n,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var Nce={kernelName:qh,backendName:"webgpu",kernelFunc:Sce},Tce=ga({opType:21}),Cce={kernelName:Pi,backendName:"webgpu",kernelFunc:Tce},Ece=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[r]*t[r];this.outputShape=a,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Rce(this.rank,"uniforms.");return`
      ${Ye()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Rce(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e;n++)r.push(`(${a[n]} % ${t}aShape[${n}])`);return r.join()}function $ce(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reps:s}=r;if(a.shouldExecuteOnCPU([n])||n.dtype==="string"||n.shape.length>=5){let o=a.readSync(n.dataId),l=n.dtype==="string"?o.map(p=>w.decodeString(p)):o,u=Be(n.shape,n.dtype,l),d=Vue(u,s);return a.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new Ece(n.shape,s);return a.runWebGPUProgram(i,[n],n.dtype)}var Fce={kernelName:Qn,backendName:"webgpu",kernelFunc:$ce},Mce=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ye()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},_ce=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ye()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Ql(e,t){t!==null&&e.disposeData(t.dataId)}function Lv(e){let t=1;for(;t<e;)t*=2;return t}function zce(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{k:s,sorted:i}=r,o=n.shape,l=o[o.length-1];if(a.shouldExecuteOnCPU([n])){let b=a.readSync(n.dataId),[v,S]=Uue(b,o,n.dtype,s,i);return[a.makeTensorInfo(v.shape,v.dtype,v.values),a.makeTensorInfo(S.shape,S.dtype,S.values)]}if(s===0)return o[o.length-1]=0,[a.makeTensorInfo(o,n.dtype,[]),a.makeTensorInfo(o,"int32",[])];if(l===1)return[n,Ed({attrs:{shape:o,dtype:"int32",value:0},backend:a})];let u=w.sizeFromShape(o)/l,d=je({inputs:{x:n},attrs:{shape:[u,l]},backend:a}),p=Lv(s),h=Lv(l),c=null,f=()=>c===null?[d,d]:[d,c],m=(b,v,S)=>{let N=f(),E=new Mce(S),R=[{type:"int32",data:[l]},{type:"int32",data:[c===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[b]},{type:"int32",data:[v]}],P=c;c=a.runWebGPUProgram(E,N,"int32",R),Ql(a,P)};for(let b=1;b<p;b*=2){let v=b*2;for(let S=b;S>=1;S/=2)m(v,S,[u,h])}for(let b=h;b>p;b/=2){let v=f(),S=new _ce([u,b/2]),N=[{type:"int32",data:[l]},{type:"int32",data:[c===null?1:0]},{type:"int32",data:[p]}],E=c;c=a.runWebGPUProgram(S,v,"int32",N),Ql(a,E);let R=p/2,P=R*2;for(let $=R;$>=1;$/=2)m(P,$,c.shape)}let g=c;c=Cd({inputs:{x:c},backend:a,attrs:{begin:0,size:[u,s]}}),Ql(a,g);let y=j8({inputs:{x:d,indices:c},backend:a,attrs:{axis:1,batchDims:1}});Ql(a,d);let A=o.slice(0,-1);A.push(s),g=c,c=je({inputs:{x:c},attrs:{shape:A},backend:a}),Ql(a,g);let x=y;return y=je({inputs:{x:y},attrs:{shape:A},backend:a}),Ql(a,x),[y,c]}var Oce={kernelName:Al,backendName:"webgpu",kernelFunc:zce},Pce=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ye()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Dce(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,p,h,c]=n.shape,[f,m]=u??[p,h],g=[d,f,m,c],y=new Pce(g),A=i==="nearest"?1:2,x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let b=[{type:"int32",data:[A]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return a.runWebGPUProgram(y,[n,s],"float32",b)}var Lce={kernelName:xl,backendName:"webgpu",kernelFunc:Dce};function Wce(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n,o=i.shape.length,l=n.shape[s],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==s&&(u[d++]=i.shape[m]);let p=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){h[s]=m;let g=Cd({inputs:{x:i},backend:a,attrs:{begin:h,size:c}}),y=je({inputs:{x:g},backend:a,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>a.disposeData(m.dataId)),f}var Bce={kernelName:bl,backendName:"webgpu",kernelFunc:Wce},Vce=[uue,Hue,Xue,Yue,rde,sde,ode,ude,fde,Ade,bde,Ide,cue,Cde,Ode,Wde,Vde,Gde,qde,Kde,Yde,ehe,ahe,ohe,uhe,hhe,phe,che,mhe,yhe,xhe,She,vhe,khe,Che,Rhe,Fhe,zhe,Dhe,Whe,Vhe,pue,Nde,Ghe,Hhe,Xhe,Zhe,Jhe,epe,tpe,rpe,spe,ope,upe,hpe,cpe,rhe,mpe,ype,xpe,mde,vpe,kpe,Spe,Tpe,Epe,$pe,Mpe,gde,_pe,Ope,Dpe,oue,Bpe,Gpe,Hpe,Xpe,Ype,ece,ace,nce,ice,pde,Ice,Nce,uce,hce,fce,gce,Ace,xce,vce,oce,she,Cce,Fce,Oce,Lce,tde,Bce,bpe];for(let e of Vce)kn(e);var Uce=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,a=!1){let r=Wv(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(s),s}this.numBytesAllocated+=e;let n=this.device.createBuffer({mappedAtCreation:a,size:e,usage:t});return this.usedBuffers.get(r).push(n),n}releaseBuffer(e,t,a){if(this.freeBuffers.size===0)return;let r=Wv(t,a);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let n=this.usedBuffers.get(r),s=n.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");n.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,a){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,a)},r=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Wv(e,t){return`${e}_${t}`}var Y8=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=He(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Ye()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let a=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=a}!t||t.length===this.lastUniformData.length&&t.every((a,r)=>a===this.lastUniformData[r])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,a){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==a)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,a],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=a),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let a=e.createBindGroupLayout({entries:t}),r=e.createPipelineLayout({bindGroupLayouts:[a]});return{bindGroupLayout:a,pipelineLayout:r}}},Gce=class extends Y8{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let a=e.createBindGroupLayout({entries:t}),r=e.createPipelineLayout({bindGroupLayouts:[a]});return{bindGroupLayout:a,pipelineLayout:r}}},jce=J().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Bv=(e,t)=>{let a=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,n=t.dispatch;if(n.every(i=>i<=a))return n;w.assert(n[0]>a&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(n[0]));return s>a?(s=Math.ceil(Math.cbrt(n[0])),w.assert(s<=a,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},J8=class extends zu{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!yb())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Uce(this.device),this.tensorMap=new $h(this,Ca()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return J8.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let a=this.tensorMap.get(e);if(a.refCount--,!t&&a.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:r}=this.tensorMap.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,a){if(a==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()},n=w.sizeFromShape(t)*q1(a);return this.tensorMap.set(r,{dtype:a,values:e,bufferInfo:{byteSize:n,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,a,r,n){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s=w.sizeFromShape(a)*q1(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:n})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new Y8),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Gce),this.fromPixelImportProgram;default:w.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let a=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){let a=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),a.values=t,a.values}readSync(e){let t=this.tensorMap.get(e),{values:a}=t;if(a==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return a}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:a}=t;if(a!=null)return this.convertAndCacheOnCPU(e,a);let r;if(t.dtype==="complex64"){let n=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),s=n[0],i=n[1];r=T.mergeRealAndImagArrays(s,i)}else{let n=await this.getBufferData(t);r=C8(n,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}bufferSync(e){let t=this.readSync(e.dataId),a=t;if(e.dtype==="string")try{a=t.map(r=>w.decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,a)}async time(e){let t=this.activeTimers,a=[],r=!1;this.programTimersStack==null?(this.programTimersStack=a,r=!0):this.activeTimers.push(a),this.activeTimers=a,e();let n=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),s=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(n);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,a){let r;if(t==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let n=a.map(s=>w.encodeString(s));r=this.write(n,e,t)}else r=this.write(a,e,t);return{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let a=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),r=a.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),a.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let n={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:a};this.stagingDisposalQueue.push(n)}}makeUniforms(e){let t=0,a=[];e.forEach(s=>{s.data.length===0&&(s.data=[1]);let i;switch(s.data.length){case 1:i=4;break;case 2:i=8;break;case 3:i=16;break;case 4:i=16;break;default:w.assert(!1,()=>`Unsupported ${s.data.length}D shape`)}t=Math.ceil(t/i)*i,a.push(t),t+=s.data.length*4});let r=new ArrayBuffer(t);e.forEach((s,i)=>{let o=a[i];s.type==="int32"?new Int32Array(r,o,s.data.length).set(s.data):s.type==="uint32"?new Uint32Array(r,o,s.data.length).set(s.data):new Float32Array(r,o,s.data.length).set(s.data)});let n=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(n,0,r,0,t),{offset:0,size:t,buffer:n}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let n=0;n<e;n++)t.push({binding:n+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let a=this.device.createBindGroupLayout({entries:t}),r=this.device.createPipelineLayout({bindGroupLayouts:[a]});return{bindGroupLayout:a,pipelineLayout:r}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,a,r,n){if(!n){if(n=this.makeTensorInfo(e.outputShape,a),w.sizeFromShape(n.shape)===0){let N=this.tensorMap.get(n.dataId);return N.values=w.getTypedArrayFromDType(n.dtype,0),n}this.uploadToGPU(n.dataId)}e.dispatch=Bv(this.device,e);let s=[{type:"float32",data:[NaN]}],i=t.concat(n).map(N=>N.shape),o="int32";i.map(N=>{s.push({type:o,data:N})});let l=w.computeStrides(n.shape);if(s.push({type:o,data:l}),e.size){let N=w.sizeFromShape(e.outputShape);s.push({type:o,data:[e.isVec4?N/4:N]})}r&&(s=[...s,...r]);let u=this.makeUniforms(s),d=t.map((N,E)=>{if(N.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(N.dataId),{dtype:this.tensorMap.get(N.dataId).dtype,shape:N.shape,name:e.variableNames[E]}}),p=d.map(N=>N.dtype).concat(n.dtype),h=d.map(N=>T.getBroadcastDims(N.shape,n.shape)),c=d.map(N=>w.arraysEqual(N.shape,n.shape)).join("_"),f=h.map(N=>N.join("_")).join(";"),m=G8(e,i,p,f,c),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),A=this.getAndSavePipeline(m,()=>U8(this.device,e,y,d,n)),x=this.activeTimers!=null,b=Ihe(this.device,g,t.map(N=>this.tensorToBinding(N)),this.tensorToBinding(n),u);this.ensureCommandEncoderReady();let v=this.getComputePass();x&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(A),v.setBindGroup(0,b),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),x&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(N=>{this.commandQueueOwnedIds.add(N.dataId)}),this.commandQueueOwnedIds.add(n.dataId);let S={byteSize:u.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:u.buffer};return this.uniformDisposalQueue.push(S),J().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),x&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),n}runFromPixelsProgram(e,t,a,r,n){e.dispatch=Bv(this.device,e);let s=this.device.createBindGroup({layout:a.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),o=this.activeTimers!=null;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,s),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(n),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,a,0,16),this.submitQueue(),await a.mapAsync(GPUMapMode.READ);let r=new BigUint64Array(a.getMappedRange()),n=Number(r[1]-r[0]);return a.unmap(),this.bufferManager.releaseBuffer(a,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n/1e6}shouldExecuteOnCPU(e,t=jce){return J().getBool("WEBGPU_CPU_FORWARD")&&e.every(a=>this.tensorMap.get(a.dataId).bufferInfo.buffer==null&&w.sizeFromShape(a.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},vb=J8;vb.nextDataId=0;var Q8={};Le(Q8,{WebGPUBackend:()=>vb,webgpu_util:()=>N8});yb()&&dd("webgpu",async()=>{J().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:J().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),a=t.limits,r={},n=t.features.has("timestamp-query");r.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension},n?r.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await t.requestDevice(r);return new vb(s,n)},3);var Wt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Wt||{}),Tm=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(Tm||{}),eN;function Hce(e){eN=e.wasm.cwrap($s,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function qce(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t;if(n.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=r,h=a.dataIdMap.get(n.dataId).id,c=a.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let E=a.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=o==null?0:a.dataIdMap.get(o.dataId).id,g=Tm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?n.shape[2]:n.shape[1],A=u?s.shape[1]:s.shape[2],x=kl.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)),b=a.makeOutput([...x,y,A],n.dtype),v=a.dataIdMap.get(b.dataId).id,S=new Uint8Array(new Int32Array(n.shape).buffer),N=new Uint8Array(new Int32Array(s.shape).buffer);return eN(h,S,n.shape.length,c,N,s.shape.length,l,u,g,f,m,p||0,v),b}var Xce={kernelName:$s,backendName:"wasm",setupFunc:Hce,kernelFunc:qce};function ya(e,t){let a;function r(s){a=s.wasm.cwrap(e,null,["number","number","number"])}function n(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),d=i.dataIdMap.get(u.dataId).id;return w.sizeFromShape(u.shape)===0||a(l,Wt[o.dtype],d),u}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:n}}var Kce=ya(Do);function La(e,t,a){let r;function n(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:d}=l,p=o.dataIdMap.get(u.dataId).id,h=o.dataIdMap.get(d.dataId).id,c=a??u.dtype,f=T.assertAndGetBroadcastShape(u.shape,d.shape),m=o.makeOutput(f,c);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(d.shape).buffer),A=o.dataIdMap.get(m.dataId).id;return r(p,g,u.shape.length,h,y,d.shape.length,Wt[u.dtype],A),m}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:s}}var Zce=!0,Yce=La(Yn,Zce),tN;function Jce(e){tN=e.wasm.cwrap(Hs,null,["array","number","number","number"])}function Qce(e){let{inputs:t,backend:a}=e,r=a.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let n=t.map(o=>a.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(n).buffer),i=a.dataIdMap.get(r.dataId).id;return tN(s,n.length,Wt[r.dtype],i),r}var efe={kernelName:Hs,backendName:"wasm",setupFunc:Jce,kernelFunc:Qce};function Cm(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype),n=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(n),r}var tfe={kernelName:hi,backendName:"wasm",kernelFunc:Cm},aN;function afe(e){aN=e.wasm.cwrap(Di,null,["number","array","number","number","number","array","number"])}function Gs(e){let{inputs:t,backend:a,attrs:r}=e,[n,s]=nfe(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=rfe(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:n,dtype:t.x.dtype};if(i){let f=Cm({inputs:t,backend:a});return f.shape=o,f}let u=a.makeOutput(o,l.dtype),d=a.dataIdMap.get(l.dataId).id,p=a.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return aN(d,c,l.shape.length,Wt[l.dtype],p,h,s.length),u}function rfe(e,t){let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[t[r]];return a}function nfe(e,t){let a=[],r=[];for(let n=0;n<e.length;++n)e[n]!==1&&a.push(e[n]),e[t[n]]!==1&&r.push(t[n]);for(let n=0;n<r.length;++n){let s=-1;for(let i=0;i<r.length;++i)r[i]>=n&&(s===-1||r[s]>r[i])&&(s=i);r[s]=n}return[a,r]}var sfe={kernelName:Di,backendName:"wasm",kernelFunc:Gs,setupFunc:afe};function ji(e,t,a){let r=e.shape,n=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=T.getAxesPermutation(i,n),l=null,u=!1;if(o!=null){let d=new Array(n);for(let h=0;h<d.length;h++)d[h]=r[o[h]];i=T.getInnerMostAxes(i.length,n),l=Gs({inputs:{x:e},attrs:{perm:o},backend:a});let p=a.dataIdMap.get(e.dataId).id;a.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var rN;function ife(e){rN=e.wasm.cwrap(Lu,null,["number, number, number"])}function ofe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=ji(i,n,t);if(h){let A=t.dataIdMap.get(u.dataId).id;l=u,o=A}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",d,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;rN(o,g,A)}if(h&&t.disposeData(u.dataId),s){let A=T.expandShapeToKeepDim(y.shape,p);y.shape=A}return y}var lfe={kernelName:Lu,backendName:"wasm",setupFunc:ife,kernelFunc:ofe},nN;function ufe(e){nN=e.wasm.cwrap(Wu,null,["number, number, number"])}function dfe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=ji(i,n,t);if(h){let A=t.dataIdMap.get(u.dataId).id;l=u,o=A}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",d,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;nN(o,g,A)}if(h&&t.disposeData(u.dataId),s){let A=T.expandShapeToKeepDim(y.shape,p);y.shape=A}return y}var hfe={kernelName:Wu,backendName:"wasm",setupFunc:ufe,kernelFunc:dfe},sN;function pfe(e){sN=e.wasm.cwrap(qs,null,["number","number","number","number","number"])}function cfe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n}=r,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:d,inputWasTransposed:p}=ji(s,n,t);if(p){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(l=u,o=y)}let h=l.shape.slice(0,-1),c=t.makeOutput(h,"int32"),f=t.dataIdMap.get(c.dataId).id,m=w.sizeFromShape(c.shape),g=l.shape[d[0]];return sN(o,Wt[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c}var ffe={kernelName:qs,backendName:"wasm",kernelFunc:cfe,setupFunc:pfe},iN;function mfe(e){iN=e.wasm.cwrap(Xs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gfe(e){let{inputs:t,attrs:a,backend:r}=e,n=t.x,s=r.dataIdMap.get(n.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=T.computePool2DInfo(n.shape,i,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,x=d.inChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(d.dilationWidth!==1||d.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let b=r.makeOutput(d.outShape,"float32"),v=r.dataIdMap.get(b.dataId).id;return iN(s,n.shape[0],n.shape[1],n.shape[2],p,h,c,f,m,g,y,A,x,v),b}var yfe={kernelName:Xs,backendName:"wasm",setupFunc:mfe,kernelFunc:gfe};function Ha(e){let{inputs:t,attrs:a}=e,{x:r}=t,{shape:n}=a,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(n,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var Afe={kernelName:ol,backendName:"wasm",kernelFunc:Ha},oN;function xfe(e){oN=e.wasm.cwrap(Ks,null,["number","array","number","number","array","number","number","number","number"])}function bfe(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;if(n.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=n.shape.length,u=s.shape.length,d=i?n.shape[l-2]:n.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],h=i?n.shape[l-1]:n.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=n.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=kl.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,h]:[g,h,d],b=o?[y,c,p]:[y,p,c],v=Ha({inputs:{x:n},backend:a,attrs:{shape:x}}),S=Ha({inputs:{x:s},backend:a,attrs:{shape:b}}),N=a.dataIdMap.get(v.dataId).id,E=a.dataIdMap.get(S.dataId).id,R=i?v.shape[2]:v.shape[1],P=o?S.shape[1]:S.shape[2],$=Math.max(g,y),k=a.makeOutput([$,R,P],v.dtype),_=a.dataIdMap.get(k.dataId).id,z=new Uint8Array(new Int32Array(v.shape).buffer),L=new Uint8Array(new Int32Array(S.shape).buffer);return oN(N,z,v.shape.length,E,L,S.shape.length,i,o,_),a.disposeData(v.dataId),a.disposeData(S.dataId),k.shape=A,k}var vfe={kernelName:Ks,backendName:"wasm",setupFunc:xfe,kernelFunc:bfe};function Fo(e){let{inputs:{x:t},attrs:{begin:a,size:r},backend:n}=e,[s,i]=Ft.parseSliceParams(t,a,r),o=Ft.isSliceContinous(t.shape,s,i),l=n.readSync(t.dataId),u=n.makeOutput(i,t.dtype),d=w.computeStrides(t.shape),p=n.dataIdMap.get(u.dataId);if(o){let f=Ft.computeFlatOffset(s,d);return t.dtype==="string"?p.stringBytes=l.slice(f,f+w.sizeFromShape(i)):n.typedArrayFromHeap(u).set(l.subarray(f,f+w.sizeFromShape(i))),u}if(t.dtype==="string"){let f=Ff(l,s,i,t.shape,t.dtype);return p.stringBytes=f,u}let h=n.typedArrayFromHeap(u),c=t.shape.length;if(c===2)wfe(l,d[0],h,s,i);else if(c===3)kfe(l,d[0],d[1],h,s,i);else if(c===4)Ife(l,d[0],d[1],d[2],h,s,i);else{let f=Ff(l,s,i,t.shape,t.dtype);h.set(f)}return u}function wfe(e,t,a,r,n){let s=0,i=r[0],o=r[1],l=i+n[0];for(let u=i;u<l;u++){let d=u*t+o;a.set(e.subarray(d,d+n[1]),s),s+=n[1]}}function kfe(e,t,a,r,n,s){let i=0,o=n[0],l=n[1],u=n[2],d=o+s[0],p=l+s[1];for(let h=o;h<d;h++)for(let c=l;c<p;c++){let f=h*t+c*a+u;r.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function Ife(e,t,a,r,n,s,i){let o=0,l=s[0],u=s[1],d=s[2],p=l+i[0],h=u+i[1],c=d+i[2],f=s[3];for(let m=l;m<p;m++)for(let g=u;g<h;g++)for(let y=d;y<c;y++){let A=m*t+g*a+y*r+f;n.set(e.subarray(A,A+i[3]),o),o+=i[3]}}var Sfe={kernelName:pl,backendName:"wasm",kernelFunc:Fo};function Nfe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,A)=>y*A),l=T.getReshaped(n.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(n.shape,s,o),p=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(d,i,s.length),c=Ha({inputs:{x:n},backend:a,attrs:{shape:l}}),f=Gs({inputs:{x:c},backend:a,attrs:{perm:u}}),m=Ha({inputs:{x:f},backend:a,attrs:{shape:d}}),g=Fo({inputs:{x:m},backend:a,attrs:{begin:p,size:h}});return a.disposeData(c.dataId),a.disposeData(f.dataId),a.disposeData(c.dataId),g}var Tfe={kernelName:Lo,backendName:"wasm",kernelFunc:Nfe};function Cp(e){let{inputs:{x:t},attrs:{dtype:a},backend:r}=e,n=r.makeOutput(t.shape,a),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(n).set(s),n}var Cfe={kernelName:Zs,backendName:"wasm",kernelFunc:Cp},Efe=ya(Ys),lN;function Rfe(e){lN=e.wasm.cwrap(Jn,null,["number","number","number","number"])}function $fe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{clipValueMin:s,clipValueMax:i}=r,o=a.dataIdMap.get(n.dataId).id,l=a.makeOutput(n.shape,n.dtype),u=a.dataIdMap.get(l.dataId).id;return lN(o,s,i,u),l}var Ffe={kernelName:Jn,backendName:"wasm",setupFunc:Rfe,kernelFunc:$fe};function uN(e){let{inputs:t,backend:a}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],n=T.computeOutShape(t.map(c=>c.shape),r),s=t.filter(c=>w.sizeFromShape(c.shape)>0);if(s.length===1)return Cm({inputs:{x:s[0]},backend:a});let i=a.makeOutput(n,t[0].dtype);if(w.sizeFromShape(n)===0)return i;let o=s.map(c=>c.shape);if(T.assertParamsConsistent(o,r),s[0].dtype==="string"){let c=s.map(x=>{let b=w.sizeFromShape(x.shape.slice(r));return Ha({inputs:{x},backend:a,attrs:{shape:[-1,b]}})}),f=c.map(x=>({vals:a.readSync(x.dataId),shape:x.shape}));n=T.computeOutShape(c.map(x=>x.shape),1);let m=c[0].shape[0]===1,g=Gx(f,n,t[0].dtype,m),y=T.computeOutShape(s.map(x=>x.shape),r);i.shape=y;let A=a.dataIdMap.get(i.dataId);return A.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>a.disposeData(x.dataId)),i}let l=w.sizeFromShape(s[0].shape.slice(0,r)),u=0,d=s.map(c=>{let f=w.sizeFromShape(c.shape.slice(r));return u+=f,f}),p=s.map(c=>a.typedArrayFromHeap(c)),h=a.typedArrayFromHeap(i);for(let c=0;c<l;c++){let f=c*u;for(let m=0;m<p.length;m++){let g=d[m],y=c*g,A=p[m].subarray(y,y+g);h.set(A,f),f+=g}}return i}var Mfe={kernelName:Wo,backendName:"wasm",kernelFunc:uN},dN;function _fe(e){dN=e.wasm.cwrap(Js,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zfe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p,dataFormat:h}=a,c=T.convertConv2DDataFormat(h),f=T.computeConv2DInfo(n.shape,s.shape,l,u,d,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,S=f.dilationWidth,N=f.strideHeight,E=f.strideWidth,R=f.inChannels,P=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let k=r.makeOutput(f.outShape,"float32"),_=r.dataIdMap.get(k.dataId).id;return dN(i,n.shape[0],n.shape[1],n.shape[2],o,m,g,y,A,x,b,$,v,S,N,E,R,P,_),k}var Ofe={kernelName:Js,backendName:"wasm",setupFunc:_fe,kernelFunc:zfe},hN;function Pfe(e){hN=e.wasm.cwrap(Qs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dfe(e){let{backend:t,inputs:a,attrs:r}=e,{dy:n,filter:s}=a,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,p=1,h=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(d,s.shape,i,p,o,u,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:A,inWidth:x,outChannels:b,outHeight:v,outWidth:S,strideHeight:N,strideWidth:E}=c,R=m-1-c.padInfo.top,P=g-1-c.padInfo.left,$=c.dataFormat==="channelsLast",k=w.computeStrides(c.inShape),_=w.computeStrides(n.shape),[z,L,j]=w.computeStrides(s.shape),D=k[0],B=$?k[1]:k[2],G=$?k[2]:1,ee=$?1:k[1],Q=_[0],ne=$?_[1]:_[2],Y=$?_[2]:1,re=$?1:_[1],le=t.makeOutput(c.inShape,"float32"),ye=t.dataIdMap.get(le.dataId).id,xe=t.dataIdMap.get(n.dataId).id,Ce=t.dataIdMap.get(s.dataId).id;return hN(xe,Ce,f,m,g,A,x,y,v,S,b,N,E,R,P,z,L,j,D,B,G,ee,Q,ne,Y,re,ye),le}var Lfe={kernelName:Qs,backendName:"wasm",setupFunc:Pfe,kernelFunc:Dfe},Wfe=ya(ei),Bfe=ya(ti),pN=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(pN||{}),cN;function Vfe(e){cN=e.wasm.cwrap(Vo,null,["number","number","number","number","array","number","number","number","number","number"])}function Ufe(e){let{backend:t,inputs:a,attrs:r}=e,{method:n,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=a,d=l.shape[0],[p,h]=i,c=[d,p,h,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=Cp({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),b=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return cN(g,y,A,d,v,p,h,pN[n],s,b),m!=null&&t.disposeData(m.dataId),x}var Gfe={kernelName:Vo,backendName:"wasm",setupFunc:Vfe,kernelFunc:Ufe},fN;function jfe(e){fN=e.wasm.cwrap(Bo,null,["number","number","number","number","number","number"])}function Hfe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length;w.assert(n.dtype==="float32"||n.dtype==="int32",()=>`cumprod does not support ${n.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=n;u!==null&&(d=Gs({inputs:{x:n},attrs:{perm:u},backend:a}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[p],l);let h=a.makeOutput(d.shape,d.dtype),c=d.shape[p],f=a.dataIdMap.get(d.dataId).id,m=a.dataIdMap.get(h.dataId).id;fN(f,i?1:0,o?1:0,c,m,Wt[n.dtype]);let g=h;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Gs({inputs:{x:h},attrs:{perm:y},backend:a}),a.disposeData(d.dataId),a.disposeData(h.dataId)}return g}var qfe={kernelName:Bo,backendName:"wasm",setupFunc:jfe,kernelFunc:Hfe},mN;function Xfe(e){mN=e.wasm.cwrap(ai,null,["number","number","number","number","number","number"])}function Kfe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length;w.assert(n.dtype==="float32"||n.dtype==="int32",()=>`cumsum does not support ${n.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=n;u!==null&&(d=Gs({inputs:{x:n},attrs:{perm:u},backend:a}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[p],l);let h=a.makeOutput(d.shape,d.dtype),c=d.shape[p],f=a.dataIdMap.get(d.dataId).id,m=a.dataIdMap.get(h.dataId).id;mN(f,i?1:0,o?1:0,c,m,Wt[n.dtype]);let g=h;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Gs({inputs:{x:h},attrs:{perm:y},backend:a}),a.disposeData(d.dataId),a.disposeData(h.dataId)}return g}var Zfe={kernelName:ai,backendName:"wasm",setupFunc:Xfe,kernelFunc:Kfe},gN;function Yfe(e){gN=e.wasm.cwrap(Uo,null,["number","number","number","array","number","array","array","number","number"])}function Jfe(e){let{backend:t,inputs:a,attrs:r}=e,{x:n}=a,{blockSize:s,dataFormat:i}=r,o=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],u=i==="NHWC"?n.shape[2]:n.shape[3],d=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,h=u*s,c=d/(s*s),f=i==="NHWC"?[o,p,h,c]:[o,c,p,h],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(n.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),b=t.dataIdMap.get(m.dataId).id;return gN(g,s,i==="NHWC"?1:0,y,n.shape.length-1,A,x,f.length,b),m}var Qfe={kernelName:Uo,backendName:"wasm",setupFunc:Yfe,kernelFunc:Jfe},yN;function e0e(e){yN=e.wasm.cwrap(ri,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function t0e(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p}=a,h=u??[1,1],c=T.computeConv2DInfo(n.shape,s.shape,l,h,d,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,x=c.padInfo.left,b=c.dilationHeight,v=c.dilationWidth,S=c.strideHeight,N=c.strideWidth,E=c.inChannels,R=c.outChannels,P=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let $=r.makeOutput(c.outShape,"float32"),k=r.dataIdMap.get($.dataId).id;return yN(i,n.shape[0],n.shape[1],n.shape[2],o,f,m,g,y,A,x,P,b,v,S,N,E,R,k),$}var a0e={kernelName:ri,backendName:"wasm",setupFunc:e0e,kernelFunc:t0e},r0e=ya(si),n0e=!1,s0e=La(Go,n0e,"bool"),i0e=ya(ii,"float32");function J1(e){let{inputs:t,attrs:a,backend:r}=e,{input:n}=t,{dim:s}=a,i=n.shape.length,o=n.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Ha({inputs:{x:n},backend:r,attrs:{shape:o}})}var o0e={kernelName:jo,backendName:"wasm",kernelFunc:J1};function AN(e){let{attrs:{shape:t,value:a,dtype:r},backend:n}=e,s=n.makeOutput(t,r);return n.typedArrayFromHeap(s).fill(a),s}var l0e={kernelName:Xu,backendName:"wasm",kernelFunc:AN},xN;function u0e(e){xN=e.wasm.cwrap(qo,null,["number","number","number","number","number","number"])}function d0e(e){let{inputs:t,backend:a}=e,{image:r}=t,n=a.makeOutput(r.shape,r.dtype),s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(n.dataId).id,[o,l,u,d]=r.shape;return xN(s,o,l,u,d,i),n}var h0e={kernelName:qo,backendName:"wasm",kernelFunc:d0e,setupFunc:u0e},p0e=ya(oi),c0e=!1,f0e=La(li,c0e),bN;function m0e(e){bN=e.wasm.cwrap(ui,null,["number","number","number","number","number","number","number"])}function g0e(e){let{backend:t,inputs:a,attrs:r}=e,{varianceEpsilon:n}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=a,d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return bN(d,p,h,c,f,n,g),m}var y0e={kernelName:ui,backendName:"wasm",setupFunc:m0e,kernelFunc:g0e},vN;function A0e(e){vN=e.wasm.cwrap(Fs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function x0e(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=T.computeConv2DInfo(n.shape,s.shape,l,d,u,h),g=Tm[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(n.dataId).id,A=r.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let Y=r.dataIdMap.get(i.dataId);if(Y.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Y.shape.length}.`);if(Y.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${Y.shape}) does not match the number of output channels (${x})`);b=Y.id}let v=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,$=m.dilationHeight,k=m.dilationWidth,_=m.strideHeight,z=m.strideWidth,L=m.inChannels,j=m.padInfo.type==="SAME"?1:0,D=m.batchSize,B=m.inHeight,G=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ee=r.makeOutput(m.outShape,"float32"),Q=r.dataIdMap.get(ee.dataId).id,ne=o==null?0:r.dataIdMap.get(o.dataId).id;return vN(y,D,B,G,A,v,S,b,N,E,R,P,j,$,k,_,z,L,x,g,ne,f||0,Q),ee}var b0e={kernelName:Fs,backendName:"wasm",setupFunc:A0e,kernelFunc:x0e},wN;function v0e(e){wN=e.wasm.cwrap(Ms,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function w0e(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=T.computeConv2DInfo(n.shape,s.shape,l,d,u,h,!0),g=Tm[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(n.dataId).id,A=r.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let Y=r.dataIdMap.get(i.dataId);if(Y.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Y.shape.length}.`);if(Y.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${Y.shape}) does not match the number of output channels (${x})`);b=Y.id}let v=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,$=m.dilationHeight,k=m.dilationWidth,_=m.strideHeight,z=m.strideWidth,L=m.inChannels,j=m.padInfo.type==="SAME"?1:0,D=m.batchSize,B=m.inHeight,G=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ee=r.makeOutput(m.outShape,"float32"),Q=r.dataIdMap.get(ee.dataId).id,ne=o==null?0:r.dataIdMap.get(o.dataId).id;return wN(y,D,B,G,A,v,S,b,N,E,R,P,j,$,k,_,z,L,x,g,ne,f||0,Q),ee}var k0e={kernelName:Ms,backendName:"wasm",setupFunc:v0e,kernelFunc:w0e},kN;function I0e(e){kN=e.wasm.cwrap(Ko,null,["number","number","number","number","number","number","array","number"])}function S0e(e){let{backend:t,inputs:a}=e,{params:r,indices:n}=a,[s,i,o,l]=Ay.prepareAndValidate(r,n),u=t.makeOutput(s,r.dtype);if(i===0)return u;let d=n.shape,p=d[d.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(n.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return kN(h,Wt[r.dtype],c,i,p,o,f,m),u}var N0e={kernelName:Ko,backendName:"wasm",setupFunc:I0e,kernelFunc:S0e},IN;function T0e(e){IN=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function C0e(e){let{backend:t,inputs:a,attrs:r}=e,{x:n,indices:s}=a,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0],u=t.readSync(s.dataId),d=n.shape[l];for(let N=0;N<u.length;++N){let E=u[N];w.assert(E<=d-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${d-1}]`)}let p=T.segment_util.collectGatherOpShapeInfo(n,s,l,o),h=Ha({inputs:{x:n},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),f=Ha({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,n.dtype);if(w.sizeFromShape(n.shape)===0)return g;let y=h.shape.length-1,A=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(w.computeStrides(h.shape)).buffer),S=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return IN(A,Wt[n.dtype],v,y,x,p.batchSize,S,b),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var E0e={kernelName:Xo,backendName:"wasm",setupFunc:T0e,kernelFunc:C0e},R0e=!1,$0e=La(Zo,R0e,"bool"),F0e=!1,M0e=La(di,F0e,"bool"),SN;function _0e(e){SN=e.wasm.cwrap(pi,null,["number","number","number","number"])}function z0e(e){let{inputs:{x:t},attrs:{alpha:a},backend:r}=e,n=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;SN(n,Wt[t.dtype],a,i)}return s}var O0e={kernelName:pi,backendName:"wasm",setupFunc:_0e,kernelFunc:z0e},P0e=!1,D0e=La(Yo,P0e,"bool"),L0e=!1,W0e=La(Jo,L0e,"bool"),B0e=ya(ci),V0e=!1,U0e=La(Qo,V0e,"bool"),NN;function G0e(e){NN=e.wasm.cwrap(fi,null,["number","number","number","number"])}function j0e(e){let{backend:t,inputs:a,attrs:r}=e,{reductionIndices:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=ji(i,n,t);if(h){let A=t.dataIdMap.get(u.dataId).id;l=u,o=A}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",d,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;NN(o,Wt[i.dtype],g,A)}if(h&&t.disposeData(u.dataId),s){let A=T.expandShapeToKeepDim(y.shape,p);y.shape=A}return y}var H0e={kernelName:fi,backendName:"wasm",setupFunc:G0e,kernelFunc:j0e},q0e=!1,X0e=La(mi,q0e),TN;function K0e(e){TN=e.wasm.cwrap(gi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Z0e(e){let{inputs:t,attrs:a,backend:r}=e,n=t.x,s=r.dataIdMap.get(n.dataId).id;w.assert(n.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${n.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=T.computePool2DInfo(n.shape,i,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,A=d.dilationWidth,x=d.strideHeight,b=d.strideWidth,v=d.inChannels,S=d.outChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let N=r.makeOutput(d.outShape,"float32"),E=r.dataIdMap.get(N.dataId).id;return TN(s,n.shape[0],n.shape[1],n.shape[2],p,h,c,f,m,g,y,A,x,b,v,S,E),N}var Y0e={kernelName:gi,backendName:"wasm",setupFunc:K0e,kernelFunc:Z0e},CN;function J0e(e){CN=e.wasm.cwrap(yi,null,["number, number, number"])}function Q0e(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=ji(i,n,t),f=p;if(c){let b=t.dataIdMap.get(d.dataId).id;b!==o&&(u=d,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),A=u;u.dtype!=="float32"&&(A=Cp({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let x=t.makeOutput(m,"float32");if(w.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(x.dataId).id;CN(l,y,b)}if(c&&t.disposeData(d.dataId),s){let b=T.expandShapeToKeepDim(x.shape,h);x.shape=b}return u.dtype!=="float32"&&t.disposeData(A.dataId),x}var eme={kernelName:yi,backendName:"wasm",setupFunc:J0e,kernelFunc:Q0e},EN;function tme(e){EN=e.wasm.cwrap(Ai,null,["number","number","number","number"])}function ame(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=ji(i,n,t);if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=w.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;EN(l,Wt[i.dtype],y,x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(A.shape,h);A.shape=x}return A}var rme={kernelName:Ai,backendName:"wasm",setupFunc:tme,kernelFunc:ame},nme=!1,sme=La(xi,nme),RN=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(RN||{}),$N;function ime(e){$N=e.wasm.cwrap(bi,null,["number","array","number","number","array","array","number","number"])}function ome(e){let{inputs:{x:t},backend:a,attrs:{paddings:r,mode:n}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]),i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),l=a.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(f=>f[0]),p=r.map(f=>f[1]),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return $N(i,u,t.shape.length,Wt[t.dtype],h,c,RN[n],l),o}var lme={kernelName:bi,backendName:"wasm",kernelFunc:ome,setupFunc:ime},ume=!0,dme=La(vi,ume),hme=ya(el);function wb(e,t){let a=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=a[0],n=a[1],s=a[2],i=a[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:n,pSelectedScores:s,pValidOutputs:i}}var FN;function pme(e){FN=e.wasm.cwrap(al,"number",["number","number","number","number","number"])}function cme(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=a,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=FN(u,d,s,n,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=wb(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",h)}var fme={kernelName:al,backendName:"wasm",setupFunc:pme,kernelFunc:cme},MN;function mme(e){MN=e.wasm.cwrap(td,"number",["number","number","number","number","number","bool"])}function gme(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=a,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=MN(d,p,s,n,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=wb(t,h);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),A=t.makeOutput([],"int32",g);return[y,A]}var yme={kernelName:td,backendName:"wasm",setupFunc:mme,kernelFunc:gme},_N;function Ame(e){_N=e.wasm.cwrap(rl,"number",["number","number","number","number","number","number"])}function xme(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=a,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=_N(d,p,s,n,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=wb(t,h);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),A=t.makeOutput([f],"float32",m);return[y,A]}var bme={kernelName:rl,backendName:"wasm",setupFunc:Ame,kernelFunc:xme},vme=!1,wme=La(tl,vme,"bool"),zN;function kme(e){zN=e.wasm.cwrap(sl,null,["number","number","number","number","number"])}function Ime(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n}=t,{depth:s,onValue:i,offValue:o}=r,l=a.makeOutput([...n.shape,s],"int32"),u=a.dataIdMap.get(l.dataId).id,d=a.dataIdMap.get(n.dataId).id;return zN(d,s,i,o,u),l}var Sme={kernelName:sl,backendName:"wasm",setupFunc:kme,kernelFunc:Ime};function Nme(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(r).fill(1),r}var Tme={kernelName:nl,backendName:"wasm",kernelFunc:Nme};function Cme(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return J1({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let p=J1({inputs:{input:d},backend:a,attrs:{dim:n}});return o.push(p),p}),u=uN({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(d=>a.disposeData(d.dataId)),u}var Eme={kernelName:il,backendName:"wasm",kernelFunc:Cme},ON;function Rme(e){ON=e.wasm.cwrap(wi,null,["number","array","number","number","array","array","number","number"])}function $me(e){let{inputs:{x:t},backend:a,attrs:{paddings:r,constantValue:n}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]);if(w.sizeFromShape(t.shape)===0)return AN({backend:a,attrs:{shape:s,value:n,dtype:t.dtype}});let i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),l=a.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(f=>f[0]),p=r.map(f=>f[1]),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return ON(i,u,t.shape.length,Wt[t.dtype],h,c,n,l),o}var PN={kernelName:wi,backendName:"wasm",kernelFunc:$me,setupFunc:Rme},Fme=!1,Mme=La(ki,Fme),DN;function _me(e){DN=e.wasm.cwrap(Ii,null,["number","number","number"])}function zme(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(n.dataId).id,o=s,l=r,u=l;l.dtype!=="float32"&&(u=Cp({backend:a,inputs:{x:r},attrs:{dtype:"float32"}}),o=a.dataIdMap.get(u.dataId).id);let d=a.makeOutput(r.shape,"float32"),p=a.dataIdMap.get(d.dataId).id;return DN(o,i,p),l.dtype!=="float32"&&a.disposeData(u.dataId),d}var Ome={kernelName:Ii,backendName:"wasm",setupFunc:_me,kernelFunc:zme},LN;function Pme(e){LN=e.wasm.cwrap(Si,null,["number","number","number","number"])}function Dme(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=ji(i,n,t),f=p;if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;LN(l,y,Wt[A.dtype],x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(A.shape,h);A.shape=x}return A}var Lme={kernelName:Si,backendName:"wasm",setupFunc:Pme,kernelFunc:Dme},Wme=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=qx(r,n,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Bme={kernelName:ad,backendName:"wasm",kernelFunc:Wme},Vme=!0,Ume=La(ni,Vme),Gme=ya(Ni),jme=ya(Ci),WN;function Hme(e){WN=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","number","number","number","number"])}function qme(e){let{backend:t,inputs:a,attrs:r}=e,{images:n}=a,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,p,h,c]=n.shape,f=[d,l,u,c],m=t.dataIdMap.get(n.dataId),g;m.dtype!=="float32"&&(g=Cp({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,A=t.makeOutput(f,"float32");if(w.sizeFromShape(n.shape)===0)return A;let x=t.dataIdMap.get(A.dataId).id;return WN(y,d,p,h,c,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),A}var Xme={kernelName:Ti,backendName:"wasm",setupFunc:Hme,kernelFunc:qme},BN;function Kme(e){BN=e.wasm.cwrap(ll,null,["number","array","number","array","number","number"])}function Zme(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dims:s}=r,i=w.parseAxisParam(s,n.shape);if(n.shape.length===0)return Cm({inputs:{x:n},backend:a});let o=a.makeOutput(n.shape,n.dtype),l=a.dataIdMap.get(n.dataId).id,u=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(n.shape).buffer);BN(l,d,i.length,p,n.shape.length,u);let h=Ha({inputs:{x:o},attrs:{shape:n.shape},backend:a});return a.disposeData(o.dataId),h}var Yme={kernelName:ll,backendName:"wasm",kernelFunc:Zme,setupFunc:Kme},VN;function Jme(e){VN=e.wasm.cwrap(wl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Qme(e){let{inputs:t,backend:a,attrs:r}=e,{image:n}=t,{radians:s,fillValue:i,center:o}=r,l=a.makeOutput(n.shape,n.dtype),u=a.dataIdMap.get(n.dataId).id,d=a.dataIdMap.get(l.dataId).id,[p,h,c,f]=n.shape,[m,g]=T.getImageCenter(o,h,c),y=i===0,A=255,x=typeof i=="number"?[i,i,i,y?0:A]:[...i,A],b=new Uint8Array(new Int32Array(x).buffer);return VN(u,p,h,c,f,s,m,g,b,x.length,d),l}var ege={kernelName:wl,backendName:"wasm",kernelFunc:Qme,setupFunc:Jme},tge=ya(ul),age=ya(Ei),UN;function rge(e){UN=e.wasm.cwrap(dl,null,["number","number","number","number","number","number","array","number","number"])}function nge(e){let{backend:t,inputs:a,attrs:r}=e,{indices:n,updates:s}=a,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=xy.calculateShapes(s,n,i),c=t.dataIdMap.get(n.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return UN(c,f,Wt[s.dtype],l,u,d,m,h,g),o}var sge={kernelName:dl,backendName:"wasm",setupFunc:rge,kernelFunc:nge},GN;function ige(e){GN=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function oge(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(n.dataId).id,l=a.dataIdMap.get(s.dataId).id,u=a.makeOutput(n.shape,n.dtype),d=a.dataIdMap.get(u.dataId).id,p=r.shape.length,h=n.shape.length,c=p===0||p>1||h===1?1:w.sizeFromShape(n.shape.slice(1));return GN(i,o,l,c,d),u}var lge={kernelName:hl,backendName:"wasm",kernelFunc:oge,setupFunc:ige},jN;function uge(e){jN=e.wasm.cwrap($i,null,["number","number"])}function dge(e){let{backend:t,inputs:{x:a}}=e,r=t.dataIdMap.get(a.dataId).id,n=t.makeOutput(a.shape,a.dtype),s=t.dataIdMap.get(n.dataId).id;return w.sizeFromShape(n.shape)===0||jN(r,s),n}var hge={kernelName:"Sigmoid",backendName:"wasm",setupFunc:uge,kernelFunc:dge},pge=ya(Ri),HN;function cge(e){HN=e.wasm.cwrap(_i,null,["number","number","number","number"])}function fge(e){let{backend:t,inputs:{logits:a},attrs:{dim:r}}=e,n=t.dataIdMap.get(a.dataId).id,s=t.makeOutput(a.shape,a.dtype),i=t.dataIdMap.get(s.dataId).id,o=a.shape[r],l=w.sizeFromShape(a.shape)/o;return w.sizeFromShape(s.shape)===0||HN(n,i,o,l),s}var mge={kernelName:_i,backendName:"wasm",setupFunc:cge,kernelFunc:fge};function gge(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<n.shape.length;++g)l.push([0,0]);let u=PN.kernelFunc({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),p=T.getPermuted(d.length,s.length,!1),h=T.getReshapedPermuted(u.shape,s,o,!1),c=Ha({inputs:{x:u},backend:a,attrs:{shape:d}}),f=Gs({inputs:{x:c},backend:a,attrs:{perm:p}}),m=Ha({inputs:{x:f},backend:a,attrs:{shape:h}});return a.disposeData(u.dataId),a.disposeData(c.dataId),a.disposeData(f.dataId),m}var yge={kernelName:fl,backendName:"wasm",kernelFunc:gge},qN;function Age(e){qN=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function xge(e){let{backend:t,inputs:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=a,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(d,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(d.slice(0,1),n.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([u],"bool"),x=t.dataIdMap.get(A.dataId).id,b=t.makeOutput([o],r.dtype),v=t.dataIdMap.get(b.dataId).id,S=t.makeOutput([4],"int32"),N=t.dataIdMap.get(S.dataId).id,E=qN(p,h,Wt[n.dtype],o,u,l,c,m,y,x,v,N),R=t.readSync(S.dataId),P;switch(R[0]){case 1:{P=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{P=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:P=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:P=""}if(t.disposeData(S.dataId),P)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(b.dataId),new Error(P);let $=f,k=g;return E!==d[0]&&($=Fo({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),k=Fo({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,k,A,b]}var bge={kernelName:Uh,backendName:"wasm",setupFunc:Age,kernelFunc:xge},XN;function vge(e){XN=e.wasm.cwrap(ld,null,["number","number","number","number","number","number","number"])}function wge(e){let{backend:t,inputs:a}=e,{inputIndices:r,inputShape:n,newShape:s}=a;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(n.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=w.sizeFromShape(s.shape),p=t.makeOutput([u,d],r.dtype),h=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;XN(i,o,l,u,h,f,g);let y=t.readSync(m.dataId),A;switch(y[0]){case 0:{A=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{A=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:A=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(n.dataId)),b=Array.from(t.readSync(c.dataId));A=T.getSparseReshapeInputOutputMultipleErrorMessage(x,b);break}case 4:{let x=Array.from(t.readSync(n.dataId)),b=Array.from(t.readSync(c.dataId));A=T.getSparseReshapeInputOutputMismatchErrorMessage(x,b);break}default:A=""}if(t.disposeData(m.dataId),A)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(A);return[p,c]}var kge={kernelName:ld,backendName:"wasm",setupFunc:vge,kernelFunc:wge},KN;function ZN(e){KN=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function YN(e,t){let{backend:a,inputs:r}=e,{data:n,indices:s,segmentIds:i}=r,o=s.shape[0],l=a.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=n.shape.slice();d[0]=u;let p=a.dataIdMap.get(n.dataId).id,h=a.dataIdMap.get(s.dataId).id,c=a.dataIdMap.get(i.dataId).id,f=a.makeOutput(d,n.dtype),m=a.dataIdMap.get(f.dataId).id,g=a.makeOutput([4],"int32"),y=a.dataIdMap.get(g.dataId).id;KN(p,Wt[n.dtype],n.shape[0],h,c,m,y,t,0);let A=a.readSync(g.dataId),x;switch(A[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:x=""}if(a.disposeData(g.dataId),x)throw a.disposeData(f.dataId),new Error(x);return f}function Ige(e){return YN(e,!0)}var Sge={kernelName:Gh,backendName:"wasm",setupFunc:ZN,kernelFunc:Ige};function Nge(e){return YN(e,!1)}var Tge={kernelName:jh,backendName:"wasm",setupFunc:ZN,kernelFunc:Nge};function Cge(e){let{inputs:t,attrs:a,backend:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,n.shape)[0],l=T.prepareSplitSize(n,s,o),u=new Array(n.shape.length).fill(0),d=n.shape.slice();return l.map(p=>{let h=[...d];h[o]=p;let c=Fo({inputs:{x:n},attrs:{begin:u,size:h},backend:r});return u[o]+=p,c})}var Ege={kernelName:ml,backendName:"wasm",kernelFunc:Cge},Rge=ya(Fi),$ge=ya(ud),Fge=!0,Mge=La(zi,Fge),JN;function _ge(e){JN=e.wasm.cwrap(Li,null,["number","number","number","number"])}function zge(e){let{backend:t,inputs:a,attrs:r}=e,{alpha:n}=r,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return JN(i,n,Wt[s.dtype],l),o}var Oge={kernelName:Li,backendName:"wasm",setupFunc:_ge,kernelFunc:zge},QN;function Pge(e){QN=e.wasm.cwrap(gl,null,["number","array","number","array","array","array","array","array","number","number"])}function Dge(e){let{backend:t,inputs:a,attrs:r}=e,{x:n}=a,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,u,d,p,h),v;if(m)v=Ha({inputs:{x:n},backend:t,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let S=Ft.computeOutShape(A,x,b),N=Fo({inputs:{x:n},backend:t,attrs:{begin:A,size:S}});v=Ha({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeData(N.dataId)}else{let S=t.makeOutput(c,"float32"),N=t.dataIdMap.get(n.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),R=new Uint8Array(new Int32Array(A).buffer),P=new Uint8Array(new Int32Array(x).buffer),$=new Uint8Array(new Int32Array(b).buffer),k=new Uint8Array(new Int32Array(c).buffer),_=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),z=t.dataIdMap.get(S.dataId).id;QN(N,E,n.shape.length,R,P,$,k,_,c.length,z),v=Ha({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}return v}var Lge={kernelName:gl,backendName:"wasm",setupFunc:Pge,kernelFunc:Dge},Wge=!0,Bge=La(Oi,Wge),eT;function Vge(e){eT=e.wasm.cwrap(Mi,null,["number","number","number","number"])}function Uge(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=ji(i,n,t),f=p;if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;eT(l,y,Wt[A.dtype],x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(A.shape,h);A.shape=x}return A}var Gge={kernelName:Mi,backendName:"wasm",setupFunc:Vge,kernelFunc:Uge},jge=ya(yl),Hge=ya(Pi),tT;function qge(e){tT=e.wasm.cwrap(Qn,null,["number","array","number","array","number","number"])}function Xge(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,s=a.dataIdMap.get(n.dataId).id,{reps:i}=r,o=new Array(n.shape.length);for(let h=0;h<o.length;h++)o[h]=n.shape[h]*i[h];let l=new Uint8Array(new Int32Array(n.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=a.makeOutput(o,n.dtype),p=a.dataIdMap.get(d.dataId).id;return tT(s,l,n.shape.length,u,o.length,Wt[d.dtype],p),d}var Kge={kernelName:Qn,backendName:"wasm",setupFunc:qge,kernelFunc:Xge},aT;function Zge(e){aT=e.wasm.cwrap(Al,null,["number","array","number","number","number","bool","number","number"])}var Yge=({inputs:e,backend:t,attrs:a})=>{let{x:r}=e,{k:n,sorted:s}=a,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=n;let u=t.makeOutput(l,r.dtype),d=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),h=t.dataIdMap.get(p.dataId).id;return aT(i,o,r.shape.length,Wt[r.dtype],n,s,d,h),[u,p]},Jge={kernelName:Al,backendName:"wasm",setupFunc:Zge,kernelFunc:Yge},rT;function Qge(e){rT=e.wasm.cwrap(xl,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function e2e(e){let{backend:t,inputs:a,attrs:r}=e,{image:n,transforms:s}=a,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,p,h,c]=n.shape,[f,m]=u??[p,h],g=[d,f,m,c],y=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),A=t.makeOutput(g,n.dtype),x=t.dataIdMap.get(A.dataId).id,b=t.dataIdMap.get(n.dataId).id,v=t.dataIdMap.get(s.dataId).id,S=i==="nearest"?1:2,N;switch(o){case"constant":N=1;break;case"reflect":N=2;break;case"wrap":N=3;break;case"nearest":N=4;break;default:N=1;break}return rT(b,v,s.shape[0]>1,d,f,m,c,h,p,y,n.shape.length-1,S,N,l,x),A}var t2e={kernelName:xl,backendName:"wasm",setupFunc:Qge,kernelFunc:e2e};function a2e(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n.shape[s],o=n.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=n.shape[c]);let d=new Array(i),p=new Array(o).fill(0),h=n.shape.slice();h[s]=1;for(let c=0;c<d.length;c++)p[s]=c,d[c]=Fo({inputs:{x:n},attrs:{begin:p,size:h},backend:a});return d.map(({dataId:c,dtype:f})=>({dataId:c,dtype:f,shape:l}))}var r2e={kernelName:bl,backendName:"wasm",kernelFunc:a2e};function n2e(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(r).fill(0),r}var s2e={kernelName:vl,backendName:"wasm",kernelFunc:n2e},i2e=[Xce,Kce,Yce,efe,lfe,hfe,ffe,yfe,vfe,Tfe,Cfe,Efe,Ffe,Mfe,Ofe,Lfe,Wfe,Bfe,Gfe,qfe,Zfe,Qfe,a0e,r0e,s0e,i0e,o0e,l0e,h0e,p0e,f0e,y0e,b0e,k0e,N0e,E0e,$0e,M0e,tfe,O0e,D0e,W0e,B0e,U0e,H0e,X0e,Y0e,eme,rme,sme,lme,dme,hme,fme,yme,bme,wme,Sme,Tme,Eme,PN,Mme,Ome,Lme,Bme,Ume,Gme,jme,Afe,Xme,Yme,ege,tge,age,sge,lge,hge,pge,Sfe,mge,yge,bge,kge,Sge,Tge,Ege,Rge,$ge,Mge,Oge,Lge,Bge,Gge,jge,Hge,Kge,Jge,t2e,sfe,r2e,s2e];for(let e of i2e)kn(e);var Q1=J();Q1.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Q1.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Q1.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var Vv=Oo(lC()),o2e=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`,l2e=Oo(uC()),nT=class extends zu{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(iT),ey=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new $h(this,Ca())}write(e,t,a){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,a,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,a,r,n){let s=this.dataIdNextNumber++;if(r==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:a,dtype:r,memoryOffset:null,refCount:n});return}let i=w.sizeFromShape(a),o=i*w.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:a,dtype:r,refCount:n}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,a){let{memoryOffset:r,dtype:n,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(n==="string")return(t==null||t===0)&&(a==null||a>=i.length)?i:i.slice(t,a);t=t||0,a=a||w.sizeFromShape(s);let o=w.bytesPerElement(n),l=this.wasm.HEAPU8.slice(r+t*o,r+a*o);return h2e(l.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let a=this.dataIdMap.get(e);if(a.refCount--,!t&&a.refCount>0)return!1;this.wasm._free(a.memoryOffset),this.wasm.tfjs.disposeData(a.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,a){let r;if(a==null)r=this.write(null,e,t);else{let n=this.dataIdNextNumber++;r={id:n},this.dataIdMap.set(r,{id:n,memoryOffset:a,shape:e,dtype:t,refCount:1});let s=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(n,s,a)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:a}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:n}=this.dataIdMap.get(a),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,n,s);case"int32":return new Int32Array(r,n,s);case"bool":return new Uint8Array(r,n,s);default:throw new Error(`Unknown dtype ${t}`)}}};function u2e(e){return(t,a)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(n=>{WebAssembly.instantiate(n,t).then(s=>{a(s.instance,s.module)})})}),{})}function Uv(e,t,a){if(Df!=null)return Df;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),ch!=null&&ch[r]!=null?ch[r]:a+r}async function d2e(){let[e,t]=await Promise.all([J().getAsync("WASM_HAS_SIMD_SUPPORT"),J().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((a,r)=>{let n={};n.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=o2e.replace(/\n/g,"\\n"),d=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(d)}return o.endsWith(".wasm")?Uv(e,t,sh??l):l+o},kb&&(n.instantiateWasm=u2e(Uv(e,t,sh??"")));let s=!1;n.onAbort=()=>{s||fh||(fh=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Df==null?(n.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Vv.default.toString()],{type:"text/javascript"}),i=(0,Vv.default)(n)):i=(0,l2e.default)(n),i.then(o=>{s=!0,fh=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},a({wasm:o})})})}function h2e(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var p2e=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Df=null,sh=null,ch={},fh=!1,kb=!1;function c2e(e,t=!1){if(Iy("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),fh)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Df=e,kb=t}function sT(e,t=!1){if(fh)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")sh=e;else{ch=e;let a=p2e.filter(r=>ch[r]==null);if(a.length>0)throw new Error(`There were no entries found for the following binaries: ${a.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}kb=t}var iT=-1,ey=-1;function f2e(e){iT=e}function m2e(){if(ey===-1)throw new Error("WASM backend not initialized.");return ey}var g2e="0.0.0",y2e=2;dd("wasm",async()=>{let{wasm:e}=await d2e();return new nT(e)},y2e);var cs="3.15.0-20220414",Ib={tfjs:cs,"tfjs-core":cs,"tfjs-data":cs,"tfjs-layers":cs,"tfjs-converter":cs,"tfjs-backend-cpu":cs,"tfjs-backend-webgl":cs,"tfjs-backend-wasm":cs},A2e=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,x2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,b2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,v2e=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,w2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,k2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,I2=(e,t,a)=>{let r=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(r,(n,s)=>(a[s]=0,n))},I2e=class{constructor(e,t,a){pe(this,"uniform",{}),pe(this,"attribute",{}),pe(this,"gl"),pe(this,"id"),pe(this,"compile",(s,i)=>{let o=this.gl.createShader(i);return o?(this.gl.shaderSource(o,s),this.gl.compileShader(o),this.gl.getShaderParameter(o,this.gl.COMPILE_STATUS)?o:(ue(`filter: gl compile failed: ${this.gl.getShaderInfoLog(o)}`),null)):(ue("filter: could not create shader"),null)}),this.gl=e;let r=this.compile(t,this.gl.VERTEX_SHADER),n=this.compile(a,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!n)){if(!this.id){ue("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,n),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){ue(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),I2(t,"attribute",this.attribute);for(let s in this.attribute)this.attribute[s]=this.gl.getAttribLocation(this.id,s);I2(t,"uniform",this.uniform),I2(a,"uniform",this.uniform);for(let s in this.uniform)this.uniform[s]=this.gl.getUniformLocation(this.id,s)}}};function S2e(){let e=0,t=null,a=!1,r=-1,n=[null,null],s=[],i=null,o=null,l=nn(100,100),u={},d={INTERMEDIATE:1},p=l.getContext("webgl");if(!p){ue("filter: cannot get webgl context");return}this.gl=p;function h(A,x){if(!(A===l.width&&x===l.height)){if(l.width=A,l.height=x,!i){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,i),p.bufferData(p.ARRAY_BUFFER,b,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,l.width,l.height),n=[null,null]}}function c(A,x){let b=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,b);let v=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,v);let S=p.createTexture();return p.bindTexture(p.TEXTURE_2D,S),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,A,x,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,S,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:b,texture:S}}function f(A){return n[A]=n[A]||c(l.width,l.height),n[A]}function m(A=0){if(!o)return;let x=null,b=null,v=!1;e===0?x=t:x=f(r).texture||null,e++,a&&!(A&d.INTERMEDIATE)?(b=null,v=e%2===0):(r=(r+1)%2,b=f(r).fbo||null),p.bindTexture(p.TEXTURE_2D,x),p.bindFramebuffer(p.FRAMEBUFFER,b),p.uniform1f(o.uniform.flipY,v?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function g(A){if(u[A])return o=u[A],p.useProgram((o?o.id:null)||null),o;if(o=new I2e(p,A2e,A),!o)return ue("filter: could not get webgl program"),null;let x=Float32Array.BYTES_PER_ELEMENT,b=4*x;return p.enableVertexAttribArray(o.attribute.pos),p.vertexAttribPointer(o.attribute.pos,2,p.FLOAT,!1,b,0*x),p.enableVertexAttribArray(o.attribute.uv),p.vertexAttribPointer(o.attribute.uv,2,p.FLOAT,!1,b,2*x),u[A]=o,o}let y={colorMatrix:A=>{let x=new Float32Array(A);x[4]/=255,x[9]/=255,x[14]/=255,x[19]/=255;let b=x[18]===1&&x[3]===0&&x[8]===0&&x[13]===0&&x[15]===0&&x[16]===0&&x[17]===0&&x[19]===0?b2e:x2e,v=g(b);!v||(p.uniform1fv(v.uniform.m,x),m())},brightness:A=>{let x=(A||0)+1;y.colorMatrix([x,0,0,0,0,0,x,0,0,0,0,0,x,0,0,0,0,0,1,0])},saturation:A=>{let x=(A||0)*2/3+1,b=(x-1)*-.5;y.colorMatrix([x,b,b,0,0,b,x,b,0,0,b,b,x,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:A=>{let x=(A||0)+1,b=-128*(x-1);y.colorMatrix([x,0,0,0,b,0,x,0,0,b,0,0,x,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:A=>{A=(A||0)/180*Math.PI;let x=Math.cos(A),b=Math.sin(A),v=.213,S=.715,N=.072;y.colorMatrix([v+x*(1-v)+b*-v,S+x*-S+b*-S,N+x*-N+b*(1-N),0,0,v+x*-v+b*.143,S+x*(1-S)+b*.14,N+x*-N+b*-.283,0,0,v+x*-v+b*-(1-v),S+x*-S+b*S,N+x*(1-N)+b*N,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:A=>{let x=new Float32Array(A),b=1/l.width,v=1/l.height,S=g(k2e);!S||(p.uniform1fv(S.uniform.m,x),p.uniform2f(S.uniform.px,b,v),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:A=>{let x=A||1;y.convolution.call(this,[0,-1*x,0,-1*x,1+4*x,-1*x,0,-1*x,0])},emboss:A=>{let x=A||1;y.convolution.call(this,[-2*x,-1*x,0,-1*x,1,1*x,0,1*x,2*x])},blur:A=>{let x=A/7/l.width,b=A/7/l.height,v=g(w2e);!v||(p.uniform2f(v.uniform.px,0,b),m(d.INTERMEDIATE),p.uniform2f(v.uniform.px,x,0),m())},pixelate:A=>{let x=A/l.width,b=A/l.height,v=g(v2e);!v||(p.uniform2f(v.uniform.size,x,b),m())}};this.add=function(A){let x=Array.prototype.slice.call(arguments,1),b=y[A];s.push({func:b,args:x})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(A){h(A.width,A.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,A);for(let x=0;x<s.length;x++){a=x===s.length-1;let b=s[x];b.func.apply(this,b.args||[])}return l},this.draw=function(A){return this.add("brightness",0),this.apply(A)}}async function oT(e){let t=e.shape.length===4?ft(e):e,a=xa(t,3,2),r=[Ao(a[0]),Ao(a[1]),Ao(a[2])],n=[Fa(a[0]),Fa(a[1]),Fa(a[2])],s=await Promise.all(n.map(c=>c.data())),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[ce(a[0],r[0]),ce(a[1],r[1]),ce(a[2],r[2])],l=[ce(n[0],r[0]),ce(n[1],r[1]),ce(n[2],r[2])],u=[me(i,l[0]),me(i,l[1]),me(i,l[2])],d=[W(o[0],u[0]),W(o[1],u[1]),W(o[2],u[2])],p=_a([d[0],d[1],d[2]],2),h=q(p,[1,t.shape[0],t.shape[1],3]);return se([...a,...r,...n,...o,...l,...u,...d,p,t]),h}var Ec=2048,bt=null,Yt=null,eu=null,vt,Mn={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function nn(e,t){let a;if(Te.browser)if(Te.worker){if(typeof OffscreenCanvas>"u")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");a=new OffscreenCanvas(e,t)}else{if(typeof document>"u")throw new Error("canvas error: attempted to run in browser but DOM is not defined");a=document.createElement("canvas"),a.width=e,a.height=t}else typeof Te.Canvas<"u"?a=new Te.Canvas(e,t):typeof globalThis.Canvas<"u"&&(a=new globalThis.Canvas(e,t));return a}function Rc(e,t){let a=t||nn(e.width,e.height);return a.getContext("2d").drawImage(e,0,0),a}async function Lf(e,t,a=!0){if(!e)return t.debug&&ue("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof tt)&&!(typeof Image<"u"&&e instanceof Image)&&!(typeof Te.Canvas<"u"&&e instanceof Te.Canvas)&&!(typeof globalThis.Canvas<"u"&&e instanceof globalThis.Canvas)&&!(typeof ImageData<"u"&&e instanceof ImageData)&&!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement<"u"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof tt){let r=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)r=la(e,0);else if(e.shape[2]===4){let n=Iu(e,[0,0,0],[-1,-1,3]);r=la(n,0),se(n)}}else e.shape.length===4&&(e.shape[3]===3?r=ja(e):e.shape[3]===4&&(r=Su(e,[0,0,0,0],[-1,-1,-1,3])));if(r==null||r.shape.length!==4||r.shape[0]!==1||r.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(r.dtype==="int32"){let n=he(r,"float32");se(r),r=n}return{tensor:r,canvas:t.filter.return?Yt:null}}else{if(typeof e.readyState<"u"&&e.readyState<=2)return t.debug&&ue("input stream is not ready"),{tensor:null,canvas:bt};let r=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,n=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!r||!n)return t.debug&&ue("cannot determine input dimensions"),{tensor:null,canvas:bt};let s=r,i=n;if(s>Ec&&(s=Ec,i=Math.trunc(s*n/r)),i>Ec&&(i=Ec,s=Math.trunc(i*r/n)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=r*((t.filter.height||0)/n)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=n*((t.filter.width||0)/r)),!s||!i)throw new Error("input error: cannot determine dimension");(!bt||bt?.width!==s||bt?.height!==i)&&(bt=nn(s,i));let o=bt.getContext("2d");if(typeof ImageData<"u"&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&typeof o.translate<"u"?(o.translate(r,0),o.scale(-1,1),o.drawImage(e,0,0,r,n,0,0,bt?.width,bt?.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,r,n,0,0,bt?.width,bt?.height),(!Yt||bt.width!==Yt.width||bt?.height!==Yt?.height)&&(Yt=nn(bt.width,bt.height)),t.filter.enabled&&Te.webgl.supported?(vt||(vt=Te.browser?new S2e:null),Te.filter=!!vt,!vt||!vt.add?(t.debug&&ue("input process error: cannot initialize filters"),Te.webgl.supported=!1,t.filter.enabled=!1,Rc(bt,Yt)):(vt.reset(),t.filter.brightness!==0&&vt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&vt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&vt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&vt.add("blur",t.filter.blur),t.filter.saturation!==0&&vt.add("saturation",t.filter.saturation),t.filter.hue!==0&&vt.add("hue",t.filter.hue),t.filter.negative&&vt.add("negative"),t.filter.sepia&&vt.add("sepia"),t.filter.vintage&&vt.add("brownie"),t.filter.sepia&&vt.add("sepia"),t.filter.kodachrome&&vt.add("kodachrome"),t.filter.technicolor&&vt.add("technicolor"),t.filter.polaroid&&vt.add("polaroid"),t.filter.pixelate!==0&&vt.add("pixelate",t.filter.pixelate),vt.get()>0?Yt=vt.apply(bt):Yt=vt.draw(bt))):(Rc(bt,Yt),vt&&(vt=null),Te.filter=!!vt),!a)return{tensor:null,canvas:Yt};if(!Yt)throw new Error("canvas error: cannot create output");let l,u=3;if(typeof ImageData<"u"&&e instanceof ImageData||e.data&&e.width&&e.height)if(Te.browser&&Xr)l=Xr?Xr.fromPixels(e):null;else{u=e.data.length/e.height/e.width;let h=new Uint8Array(e.data.buffer);l=lt(h,[e.height,e.width,u],"int32")}else if((!eu||Yt.width!==eu.width||Yt.height!==eu.height)&&(eu=nn(Yt.width,Yt.height)),Xr&&Te.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Xr.fromPixels(Yt):(eu=Rc(Yt),l=Xr.fromPixels(eu));else{let f=Rc(Yt).getContext("2d").getImageData(0,0,s,i);u=f.data.length/s/i;let m=new Uint8Array(f.data.buffer);l=lt(m,[s,i,u])}if(u===4){let h=Iu(l,[0,0,0],[-1,-1,3]);se(l),l=h}if(!l)throw new Error("input error: cannot create tensor");let d=he(l,"float32"),p=t.filter.equalization?await oT(d):la(d,0);return se([l,d]),{tensor:p,canvas:t.filter.return?Yt:null}}}async function N2e(e,t){let a=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return a;if(!Mn.inputTensor)Mn.inputTensor=ja(t);else if(Mn.inputTensor.shape[1]!==t.shape[1]||Mn.inputTensor.shape[2]!==t.shape[2])se(Mn.inputTensor),Mn.inputTensor=ja(t);else{let r={};r.diff=ce(t,Mn.inputTensor),r.squared=W(r.diff,r.diff),r.sum=we(r.squared);let s=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;se([Mn.inputTensor,r.diff,r.squared,r.sum]),Mn.inputTensor=ja(t),a=s<=(e.cacheSensitivity||0)}return a}async function T2e(e,t,a){let r={};if(!t||!a||t.shape.length!==4||t.shape.length!==a.shape.length)return e.debug||ue("invalid input tensor or tensor shapes do not match:",t.shape,a.shape),0;if(t.shape[0]!==1||a.shape[0]!==1||t.shape[3]!==3||a.shape[3]!==3)return e.debug||ue("input tensors must be of shape [1, height, width, 3]:",t.shape,a.shape),0;r.input1=ja(t),r.input2=t.shape[1]!==a.shape[1]||t.shape[2]!==a.shape[2]?De.resizeBilinear(a,[t.shape[1],t.shape[2]]):ja(a),r.diff=ce(r.input1,r.input2),r.squared=W(r.diff,r.diff),r.sum=we(r.squared);let s=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return se([r.input1,r.input2,r.diff,r.squared,r.sum]),s}var C2e=class{constructor(){if(pe(this,"browser"),pe(this,"node"),pe(this,"worker"),pe(this,"platform",""),pe(this,"agent",""),pe(this,"backends",[]),pe(this,"initial"),pe(this,"filter"),pe(this,"tfjs"),pe(this,"offscreen"),pe(this,"perfadd",!1),pe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),pe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),pe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),pe(this,"cpu",{model:void 0,flags:[]}),pe(this,"kernels",[]),pe(this,"Canvas"),pe(this,"Image"),pe(this,"ImageData"),this.browser=typeof navigator<"u",this.node=typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u",this.tfjs={version:Ib["tfjs-core"]},this.offscreen=typeof OffscreenCanvas<"u",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope<"u":void 0,typeof navigator<"u"){let e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){let t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process<"u"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Ca().registryFactory),this.wasm.supported=typeof WebAssembly<"u",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&yr()==="wasm"&&(this.wasm.simd=await J().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await J().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let e=nn(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=typeof t<"u",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(yr()==="webgl"||yr()==="humangl")){let a=Hn().gpgpu!=="undefined"?await Hn().getGPGPUContext().gl:null;a&&(this.webgl.version=a.getParameter(a.VERSION),this.webgl.renderer=a.getParameter(a.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu<"u",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch{this.webgpu.supported=!1}try{this.kernels=ko(yr()).map(a=>a.kernelName.toLowerCase())}catch{}}async updateCPU(){let e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},Te=new C2e,Bn={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function E2e(e,t){return Bn.debug&&ue("load model fetch:",e,t),fetch(e,t)}function R2e(e){Bn.cacheModels=e.cacheModels,Bn.verbose=e.debug,Bn.modelBasePath=e.modelBasePath}async function zt(e){let t=B9(Bn.modelBasePath,e||""),a=t.split("/"),r="indexeddb://"+a[a.length-1].replace(".json",""),n=await Ea.listModels(),s=Bn.cacheModels&&Object.keys(n).includes(r),i=typeof fetch>"u"?{}:{fetchFunc:(u,d)=>E2e(u,d)},o=new Dx(s?r:t,i),l=!1;try{o.findIOHandler(),Bn.debug&&ue("model load handler:",o.handler);let u=await o.handler.load();o.loadSync(u),Bn.verbose&&ue("load model:",o.modelUrl),l=!0}catch(u){ue("error loading model:",t,u)}if(l&&Bn.cacheModels&&!s)try{let u=await o.save(r);ue("model saved:",r,u)}catch(u){ue("error saving model:",t,u)}return o}var Gv="2.7.0",$2e={};zo($2e,{Models:()=>zT,load:()=>OT,reset:()=>Eb,validate:()=>PT});var Zr,S2=[],F2e=["white","black","asian","indian","other"],M2e=[15,23,28,35.5,45.5,55.5,65],jv=0,Hv=0,N2=Number.MAX_SAFE_INTEGER;async function _2e(e){return Te.initial&&(Zr=null),Zr?e.debug&&ue("cached model:",Zr.modelUrl):Zr=await zt(e.face.gear),Zr}async function qv(e,t,a,r){var n,s;if(!Zr)return{age:0,gender:"unknown",genderScore:0,race:[]};let i=N2<(((n=t.face.gear)==null?void 0:n.skipFrames)||0),o=(((s=t.face.gear)==null?void 0:s.skipTime)||0)>de()-Hv;return t.skipAllowed&&o&&i&&jv===r&&S2[a]?(N2++,S2[a]):(N2=0,new Promise(async l=>{var u,d;if(!Zr?.inputs[0].shape)return;let p={},h=[[0,.1,.9,.9]];p.resize=De.cropAndResize(e,h,[0],[Zr.inputs[0].shape[2],Zr.inputs[0].shape[1]]);let c={age:0,gender:"unknown",genderScore:0,race:[]};(u=t.face.gear)!=null&&u.enabled&&([p.age,p.gender,p.race]=Zr.execute(p.resize,["age_output","gender_output","race_output"]));let f=await p.gender.data();c.gender=f[0]>f[1]?"male":"female",c.genderScore=Math.round(100*(f[0]>f[1]?f[0]:f[1]))/100;let m=await p.race.data();for(let x=0;x<m.length;x++)m[x]>(((d=t.face.gear)==null?void 0:d.minConfidence)||.2)&&c.race.push({score:Math.round(100*m[x])/100,race:F2e[x]});c.race.sort((x,b)=>b.score-x.score);let y=Array.from(await p.age.data()).map((x,b)=>[M2e[b],x]).sort((x,b)=>b[1]-x[1]),A=y[0][0];for(let x=1;x<y.length;x++)A+=y[x][1]*(y[x][0]-A);c.age=Math.round(10*A)/10,Object.keys(p).forEach(x=>se(p[x])),S2[a]=c,jv=r,Hv=de(),l(c)}))}var xt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function z2e(){xt.tf255=ke(255,"float32"),xt.tf1=ke(1,"float32"),xt.tf2=ke(2,"float32"),xt.tf05=ke(.5,"float32"),xt.tf127=ke(127.5,"float32"),xt.rgb=Lt([.2989,.587,.114],"float32")}var mr,$c=[],Xv=0,Kv=0,T2=Number.MAX_SAFE_INTEGER;async function O2e(e){return Te.initial&&(mr=null),mr?e.debug&&ue("cached model:",mr.modelUrl):mr=await zt(e.face.ssrnet.modelPathAge),mr}async function Zv(e,t,a,r){var n,s,i,o;if(!mr)return{age:0};let l=T2<(((n=t.face.ssrnet)==null?void 0:n.skipFrames)||0),u=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>de()-Kv;return t.skipAllowed&&l&&u&&Xv===r&&((i=$c[a])==null?void 0:i.age)&&((o=$c[a])==null?void 0:o.age)>0?(T2++,$c[a]):(T2=0,new Promise(async d=>{if(!mr?.inputs||!mr.inputs[0]||!mr.inputs[0].shape)return;let p={};p.resize=De.resizeBilinear(e,[mr.inputs[0].shape[2],mr.inputs[0].shape[1]],!1),p.enhance=W(p.resize,xt.tf255);let h={age:0};if(t.face.ssrnet.enabled&&(p.age=mr.execute(p.enhance)),p.age){let c=await p.age.data();h.age=Math.trunc(10*c[0])/10}Object.keys(p).forEach(c=>se(p[c])),$c[a]=h,Xv=r,Kv=de(),d(h)}))}var Yr,Fc=[],Yv=0,Jv=0,C2=Number.MAX_SAFE_INTEGER,E2=[.2989,.587,.114];async function P2e(e){return Te.initial&&(Yr=null),Yr?e.debug&&ue("cached model:",Yr.modelUrl):Yr=await zt(e.face.ssrnet.modelPathGender),Yr}async function Qv(e,t,a,r){var n,s,i,o;if(!Yr)return{gender:"unknown",genderScore:0};let l=C2<(((n=t.face.ssrnet)==null?void 0:n.skipFrames)||0),u=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>de()-Jv;return t.skipAllowed&&l&&u&&Yv===r&&((i=Fc[a])==null?void 0:i.gender)&&((o=Fc[a])==null?void 0:o.genderScore)>0?(C2++,Fc[a]):(C2=0,new Promise(async d=>{if(!Yr?.inputs[0].shape)return;let p={};p.resize=De.resizeBilinear(e,[Yr.inputs[0].shape[2],Yr.inputs[0].shape[1]],!1),p.enhance=Z(()=>{let[f,m,g]=xa(p.resize,3,3),y=W(f,E2[0]),A=W(m,E2[1]),x=W(g,E2[2]),b=Sy([y,A,x]);return W(ce(b,xt.tf05),2)});let h={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(p.gender=Yr.execute(p.enhance));let c=await p.gender.data();h.gender=c[0]>c[1]?"female":"male",h.genderScore=c[0]>c[1]?Math.trunc(100*c[0])/100:Math.trunc(100*c[1])/100,Object.keys(p).forEach(f=>se(p[f])),Fc[a]=h,Yv=r,Jv=de(),d(h)}))}var er,Mc=[],R2=Number.MAX_SAFE_INTEGER,e3=0,t3=0;async function D2e(e){var t;return Te.initial&&(er=null),er?e.debug&&ue("cached model:",er.modelUrl):er=await zt((t=e.face.antispoof)==null?void 0:t.modelPath),er}async function a3(e,t,a,r){var n,s;if(!er)return 0;let i=(((n=t.face.antispoof)==null?void 0:n.skipTime)||0)>de()-t3,o=R2<(((s=t.face.antispoof)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&e3===r&&Mc[a]?(R2++,Mc[a]):(R2=0,new Promise(async l=>{let u=De.resizeBilinear(e,[er?.inputs[0].shape?er.inputs[0].shape[2]:0,er?.inputs[0].shape?er.inputs[0].shape[1]:0],!1),d=er?.execute(u),p=(await d.data())[0];Mc[a]=Math.round(100*p)/100,e3=r,t3=de(),se([u,d]),l(Mc[a])}))}var Zn={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},r3={count:468,mouth:13,symmetryLine:[13,Zn.midwayBetweenEyes[0]]},ty={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},n3=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],Em=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],ih=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],L2e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],W2e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],B2e=[33,133,362,263,1,78,308],tAe=L2e.map(e=>Em[e]),aAe=W2e.map(e=>Em[e]),rAe=B2e.map(e=>Em[e]),Ep=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],Rm=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],s3=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],i3=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],V2e=(e,t)=>{let a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:a,endPoint:r,landmarks:e.landmarks,confidence:e.confidence}},$2=(e,t,a)=>{let r=t.shape[1],n=t.shape[2],s=[e.startPoint[1]/r,e.startPoint[0]/n,e.endPoint[1]/r,e.endPoint[0]/n],i=De.cropAndResize(t,[s],[0],a),o=me(i,xt.tf255);return se(i),o},lT=(e,t)=>{let a=Rm(e),r=Ep(e),n=[t*r[0]/2,t*r[1]/2];return{startPoint:[a[0]-n[0],a[1]-n[1]],endPoint:[a[0]+n[0],a[1]+n[1]],landmarks:e.landmarks,confidence:e.confidence}},uT=e=>{let t=Rm(e),a=Ep(e),r=Math.max(...a)/2;return{startPoint:[Math.round(t[0]-r),Math.round(t[1]-r)],endPoint:[Math.round(t[0]+r),Math.round(t[1]+r)],landmarks:e.landmarks,confidence:e.confidence}},U2e=e=>{let t=e.map(r=>r[0]),a=e.map(r=>r[1]);return{startPoint:[Math.min(...t),Math.min(...a)],endPoint:[Math.max(...t),Math.max(...a)],landmarks:e}},ay=[[1,0,0],[0,1,0],[0,0,1]],G2e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),j2e=(e,t)=>G2e(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),o3=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Mo=(e,t)=>{let a=0;for(let r=0;r<e.length;r++)a+=e[r]*t[r];return a},H2e=(e,t)=>{let a=[];for(let r=0;r<e.length;r++)a.push(e[r][t]);return a},l3=(e,t)=>{let a=[],r=e.length;for(let n=0;n<r;n++){a.push([]);for(let s=0;s<r;s++)a[n].push(Mo(e[n],H2e(t,s)))}return a},dT=(e,t)=>{let a=Math.cos(e),r=Math.sin(e),n=[[a,-r,0],[r,a,0],[0,0,1]],s=o3(t[0],t[1]),i=l3(s,n),o=o3(-t[0],-t[1]);return l3(i,o)},q2e=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],r=[-Mo(t[0],a),-Mo(t[1],a)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]},X2e=(e,t)=>[Mo(e,t[0]),Mo(e,t[1])];function K2e(e){let t={strides:[e/16,e/8],anchors:[2,6]},a=[];for(let r=0;r<t.strides.length;r++){let n=t.strides[r],s=Math.floor((e+n-1)/n),i=Math.floor((e+n-1)/n),o=t.anchors[r];for(let l=0;l<s;l++){let u=n*(l+.5);for(let d=0;d<i;d++){let p=n*(d+.5);for(let h=0;h<o;h++)a.push([p,u])}}}return a}function Z2e(e,t,a,r,n){let s=Ep(t),i=e.map(c=>[s[0]/n*(c[0]-n/2),s[1]/n*(c[1]-n/2),c[2]||0]),o=a&&a!==0&&Math.abs(a)>.2,l=o?dT(a,[0,0]):ay,u=o?i.map(c=>[...X2e(c,l),c[2]]):i,d=o?q2e(r):ay,p=Rm(t),h=[Mo(p,d[0]),Mo(p,d[1])];return u.map(c=>[Math.trunc(c[0]+h[0]),Math.trunc(c[1]+h[1]),Math.trunc(c[2]||0)])}function Y2e(e,t,a,r){let n=t.landmarks.length>=r3.count?r3.symmetryLine:ty.symmetryLine,s=0,i=ay,o;if(e&&Te.kernels.includes("rotatewithoffset"))if(s=j2e(t.landmarks[n[0]],t.landmarks[n[1]]),s&&s!==0&&Math.abs(s)>.2){let u=Rm(t),d=[u[0]/a.shape[2],u[1]/a.shape[1]],p=De.rotateWithOffset(a,s,0,d);i=dT(-s,u),o=$2(t,p,[r,r]),se(p)}else o=$2(t,a,[r,r]);else o=$2(t,a,[r,r]);return[s,i,o]}var J2e=e=>{let t=e.map(r=>r[0]),a=e.map(r=>r[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...a)+(Math.max(...a)-Math.min(...a))/2]},Q2e=(e,t)=>{let a=J2e(e),r=Ep(t);return{startPoint:[a[0]-r[0]/2,a[1]-r[1]/2],endPoint:[a[0]+r[0]/2,a[1]+r[1]/2]}},u3=6,e1e=1.4,_n,hT=null,ws=0,oh=null,F2=()=>ws;async function t1e(e){var t;return Te.initial&&(_n=null),_n?e.debug&&ue("cached model:",_n.modelUrl):_n=await zt((t=e.face.detector)==null?void 0:t.modelPath),ws=_n.inputs[0].shape?_n.inputs[0].shape[2]:0,oh=ke(ws,"int32"),hT=Gn(K2e(ws)),_n}function a1e(e){let t={};t.boxStarts=Pe(e,[0,1],[-1,2]),t.centers=ie(t.boxStarts,hT),t.boxSizes=Pe(e,[0,3],[-1,2]),t.boxSizesNormalized=me(t.boxSizes,oh),t.centersNormalized=me(t.centers,oh),t.halfBoxSize=me(t.boxSizesNormalized,xt.tf2),t.starts=ce(t.centersNormalized,t.halfBoxSize),t.ends=ie(t.centersNormalized,t.halfBoxSize),t.startNormalized=W(t.starts,oh),t.endNormalized=W(t.ends,oh);let a=k0([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(r=>se(t[r])),a}async function r1e(e,t){var a,r,n,s;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let i={};i.resized=De.resizeBilinear(e,[ws,ws]),i.div=me(i.resized,xt.tf127),i.normalized=ce(i.div,xt.tf05);let o=_n?.execute(i.normalized);if(Array.isArray(o)){let p=o.sort((h,c)=>h.size-c.size);i.concat384=Nt([p[0],p[2]],2),i.concat512=Nt([p[1],p[3]],2),i.concat=Nt([i.concat512,i.concat384],1),i.batch=ft(i.concat,0)}else i.batch=ft(o);se(o),i.boxes=a1e(i.batch),i.logits=Pe(i.batch,[0,0],[-1,1]),i.sigmoid=xr(i.logits),i.scores=ft(i.sigmoid),i.nms=await De.nonMaxSuppressionAsync(i.boxes,i.scores,((a=t.face.detector)==null?void 0:a.maxDetected)||0,((r=t.face.detector)==null?void 0:r.iouThreshold)||0,((n=t.face.detector)==null?void 0:n.minConfidence)||0);let l=await i.nms.array(),u=[],d=await i.scores.data();for(let p=0;p<l.length;p++){let h=d[l[p]];if(h>(((s=t.face.detector)==null?void 0:s.minConfidence)||0)){let c={};c.bbox=Pe(i.boxes,[l[p],0],[1,-1]),c.slice=Pe(i.batch,[l[p],u3-1],[1,-1]),c.squeeze=ft(c.slice),c.landmarks=q(c.squeeze,[u3,-1]);let f=await c.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await c.landmarks.array(),confidence:h},g=V2e(m,[(e.shape[2]||0)/ws,(e.shape[1]||0)/ws]),y=lT(g,t.face.scale||e1e),A=uT(y);u.push(A),Object.keys(c).forEach(x=>se(c[x]))}}return Object.keys(i).forEach(p=>se(i[p])),u}var pT={};zo(pT,{connected:()=>fT,kpt:()=>cT});var cT=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],fT={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},d3=224,n1e,s1e=5,_c=[8,16,32,32,32];async function i1e(){let e=[],t=0;for(;t<s1e;){let a=0,r=t;for(;r<_c.length&&_c[r]===_c[t];)a+=2,r++;let n=_c[t],s=Math.ceil(d3/n),i=Math.ceil(d3/n);for(let o=0;o<s;++o)for(let l=0;l<i;++l)for(let u=0;u<a;++u)e.push({x:(l+.5)/i,y:(o+.5)/s});t=r}n1e={x:Lt(e.map(a=>a.x)),y:Lt(e.map(a=>a.y))}}function Rp(e,t=[1,1]){let a=[e.map(o=>o[0]),e.map(o=>o[1])],r=[Math.min(...a[0]),Math.min(...a[1])],n=[Math.max(...a[0]),Math.max(...a[1])],s=[r[0],r[1],n[0]-r[0],n[1]-r[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function o1e(e,t=[1,1]){let a=[e.map(u=>u[0]),e.map(u=>u[1])],r=[Math.min(...a[0]),Math.min(...a[1])],n=[Math.max(...a[0]),Math.max(...a[1])],s=[(r[0]+n[0])/2,(r[1]+n[1])/2],i=Math.max(s[0]-r[0],s[1]-r[1],-s[0]+n[0],-s[1]+n[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],l=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:l}}function ry(e,t){let a=[e[2]*t,e[3]*t];return[e[0]-(a[0]-e[2])/2,e[1]-(a[1]-e[3])/2,a[0],a[1]]}var mT={initial:!0},ar={detector:null,landmarks:null},Mu={detector:[224,224],landmarks:[256,256]},M2=Number.MAX_SAFE_INTEGER,l1e={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},zc=null,mh,ys=[[0,0],[0,0],[0,0],[0,0]],h3=0,p3=e=>1-1/(1+Math.exp(e));async function u1e(e){if(mT.initial&&(ar.detector=null),!ar.detector&&e.body.detector&&e.body.detector.modelPath){ar.detector=await zt(e.body.detector.modelPath);let t=Object.values(ar.detector.modelSignature.inputs);Mu.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Mu.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&ar.detector&&ue("cached model:",ar.detector.modelUrl);return await i1e(),ar.detector}async function d1e(e){if(mT.initial&&(ar.landmarks=null),ar.landmarks)e.debug&&ue("cached model:",ar.landmarks.modelUrl);else{ar.landmarks=await zt(e.body.modelPath);let t=Object.values(ar.landmarks.modelSignature.inputs);Mu.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Mu.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ar.landmarks}async function h1e(e,t){let a={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(mh&&(a.cropped=De.cropAndResize(e,[mh],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let n=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ys=[[0,0],n,s,[0,0]],a.pad=Cn(a.cropped||e,ys),a.resize=De.resizeBilinear(a.pad,[t,t]),r=me(a.resize,xt.tf255)}else e.shape[1]!==t?(a.resize=De.resizeBilinear(a.cropped||e,[t,t]),r=me(a.resize,xt.tf255)):r=me(a.cropped||e,xt.tf255);return Object.keys(a).forEach(n=>se(a[n])),r}function p1e(e,t){for(let a of e)a.position=[Math.trunc(a.position[0]*(t[0]+ys[2][0]+ys[2][1])/t[0]-ys[2][0]),Math.trunc(a.position[1]*(t[1]+ys[1][0]+ys[1][1])/t[1]-ys[1][0]),a.position[2]],a.positionRaw=[a.position[0]/t[0],a.position[1]/t[1],2*a.position[2]/(t[0]+t[1])];if(mh)for(let a of e)a.positionRaw=[a.positionRaw[0]+mh[1],a.positionRaw[1]+mh[0],a.positionRaw[2]],a.position=[Math.trunc(a.positionRaw[0]*t[0]),Math.trunc(a.positionRaw[1]*t[1]),a.positionRaw[2]];return e}async function c1e(e){let t=e.find(o=>o.part==="leftPalm"),a=e.find(o=>o.part==="leftWrist"),r=e.find(o=>o.part==="leftIndex");t.position[2]=((a.position[2]||0)+(r.position[2]||0))/2;let n=e.find(o=>o.part==="rightPalm"),s=e.find(o=>o.part==="rightWrist"),i=e.find(o=>o.part==="rightIndex");n.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}async function f1e(e,t,a){var r;let n={};[n.ld,n.segmentation,n.heatmap,n.world,n.poseflag]=(r=ar.landmarks)==null?void 0:r.execute(e,l1e.landmarks);let s=(await n.poseflag.data())[0],i=await n.ld.data(),o=await n.world.data();Object.keys(n).forEach(m=>se(n[m]));let l=[],u=5;for(let m=0;m<i.length/u;m++){let g=p3(i[u*m+3]),y=p3(i[u*m+4]),A=Math.trunc(100*g*y*s)/100,x=[i[u*m+0]/Mu.landmarks[0],i[u*m+1]/Mu.landmarks[1],i[u*m+2]+0],b=[Math.trunc(a[0]*x[0]),Math.trunc(a[1]*x[1]),x[2]],v=[o[u*m+0],o[u*m+1],o[u*m+2]+0];l.push({part:cT[m],positionRaw:x,position:b,distance:v,score:A})}if(s<(t.body.minConfidence||0))return null;c1e(l);let d=p1e(l,a),p=d.map(m=>m.position),h=Rp(p,[a[0],a[1]]),c={};for(let[m,g]of Object.entries(fT)){let y=[];for(let A=0;A<g.length-1;A++){let x=d.find(v=>v.part===g[A]),b=d.find(v=>v.part===g[A+1]);x&&b&&y.push([x.position,b.position])}c[m]=y}return{id:0,score:Math.trunc(100*s)/100,box:h.box,boxRaw:h.boxRaw,keypoints:d,annotations:c}}async function c3(e,t){let a=[e.shape[2]||0,e.shape[1]||0],r=(t.body.skipTime||0)>de()-h3,n=M2<(t.body.skipFrames||0);if(t.skipAllowed&&r&&n&&zc!==null)M2++;else{let s={};s.landmarks=await h1e(e,256),zc=await f1e(s.landmarks,t,a),Object.keys(s).forEach(i=>se(s[i])),h3=de(),M2=0}return zc?[zc]:[]}var tf=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],As,go=0,_2=[],f3=0,z2=Number.MAX_SAFE_INTEGER;async function m1e(e){if(Te.initial&&(As=null),As)e.debug&&ue("cached model:",As.modelUrl);else{As=await zt(e.object.modelPath);let t=Object.values(As.modelSignature.inputs);go=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return As}async function g1e(e,t,a){if(!e)return[];let r={},n=[],s=await e.array();r.squeeze=ft(e);let i=xa(r.squeeze,6,1);r.stack=_a([i[1],i[0],i[3],i[2]],1),r.boxes=ft(r.stack),r.scores=ft(i[4]),r.classes=ft(i[5]),se([e,...i]),r.nms=await De.nonMaxSuppressionAsync(r.boxes,r.scores,a.object.maxDetected,a.object.iouThreshold,a.object.minConfidence||0);let o=await r.nms.data(),l=0;for(let u of Array.from(o)){let d=Math.trunc(100*s[0][u][4])/100,p=s[0][u][5],h=tf[p].label,[c,f]=[s[0][u][0]/go,s[0][u][1]/go],m=[c,f,s[0][u][2]/go-c,s[0][u][3]/go-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];n.push({id:l++,score:d,class:p,label:h,box:g,boxRaw:m})}return Object.keys(r).forEach(u=>se(r[u])),n}async function m3(e,t){let a=(t.object.skipTime||0)>de()-f3,r=z2<(t.object.skipFrames||0);return t.skipAllowed&&a&&r&&_2.length>0?(z2++,_2):(z2=0,new Promise(async n=>{let s=[e.shape[2]||0,e.shape[1]||0],i=De.resizeBilinear(e,[go,go]),o=t.object.enabled?As?.execute(i,["tower_0/detections"]):null;f3=de(),se(i);let l=await g1e(o,s,t);_2=l,n(l)}))}var gT={};zo(gT,{connected:()=>AT,kpt:()=>yT});var yT=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],AT={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Ua,g3=0,Na={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},O2=Number.MAX_SAFE_INTEGER;async function y1e(e){return Te.initial&&(Ua=null),Ua?e.debug&&ue("cached model:",Ua.modelUrl):Ua=await zt(e.body.modelPath),Ua}async function A1e(e,t){let[a,r]=e.shape,n=q(e,[r*a]),s=Fa(n,0),i=(await s.data())[0];if(se([n,s]),i>t){let o=qn(n,0),l=$0(o,a),u=(await l.data())[0],d=me(o,ke(a,"int32")),p=(await d.data())[0];return se([l,d]),[u,p,i]}return[0,0,i]}async function y3(e,t){let a=(t.body.skipTime||0)>de()-g3,r=O2<(t.body.skipFrames||0);return t.skipAllowed&&a&&r&&Object.keys(Na.keypoints).length>0?(O2++,[Na]):(O2=0,new Promise(async n=>{var s;let i=Z(()=>{if(!Ua?.inputs[0].shape)return null;let h=De.resizeBilinear(e,[Ua.inputs[0].shape[2],Ua.inputs[0].shape[1]],!1),c=W(h,xt.tf2);return ce(c,xt.tf1)}),o;if(t.body.enabled&&(o=Ua?.execute(i)),g3=de(),se(i),o){Na.keypoints.length=0;let h=o.squeeze();se(o);let c=h.unstack(2);se(h);for(let f=0;f<c.length;f++){let[m,g,y]=await A1e(c[f],t.body.minConfidence);y>(((s=t.body)==null?void 0:s.minConfidence)||0)&&Na.keypoints.push({score:Math.round(100*y)/100,part:yT[f],positionRaw:[m/Ua.inputs[0].shape[2],g/Ua.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/Ua.inputs[0].shape[2]),Math.round(e.shape[1]*g/Ua.inputs[0].shape[1])]})}c.forEach(f=>se(f))}Na.score=Na.keypoints.reduce((h,c)=>c.score>h?c.score:h,0);let l=Na.keypoints.map(h=>h.position[0]),u=Na.keypoints.map(h=>h.position[1]);Na.box=[Math.min(...l),Math.min(...u),Math.max(...l)-Math.min(...l),Math.max(...u)-Math.min(...u)];let d=Na.keypoints.map(h=>h.positionRaw[0]),p=Na.keypoints.map(h=>h.positionRaw[1]);Na.boxRaw=[Math.min(...d),Math.min(...p),Math.max(...d)-Math.min(...d),Math.max(...p)-Math.min(...p)];for(let[h,c]of Object.entries(AT)){let f=[];for(let m=0;m<c.length-1;m++){let g=Na.keypoints.find(A=>A.part===c[m]),y=Na.keypoints.find(A=>A.part===c[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Na.annotations[h]=f}n([Na])}))}var x1e=["angry","disgust","fear","happy","sad","surprise","neutral"],Jr,Oc=[],A3=0,x3=0,P2=Number.MAX_SAFE_INTEGER;async function b1e(e){var t;return Te.initial&&(Jr=null),Jr?e.debug&&ue("cached model:",Jr.modelUrl):Jr=await zt((t=e.face.emotion)==null?void 0:t.modelPath),Jr}async function b3(e,t,a,r){var n,s;if(!Jr)return[];let i=P2<(((n=t.face.emotion)==null?void 0:n.skipFrames)||0),o=(((s=t.face.emotion)==null?void 0:s.skipTime)||0)>de()-x3;return t.skipAllowed&&o&&i&&A3===r&&Oc[a]&&Oc[a].length>0?(P2++,Oc[a]):(P2=0,new Promise(async l=>{var u,d;let p=[];if((u=t.face.emotion)!=null&&u.enabled){let h={},c=Jr?.inputs[0].shape?Jr.inputs[0].shape[2]:0;h.resize=De.resizeBilinear(e,[c,c],!1),h.channels=W(h.resize,xt.rgb),h.grayscale=we(h.channels,3,!0),h.grayscaleSub=ce(h.grayscale,xt.tf05),h.grayscaleMul=W(h.grayscaleSub,xt.tf2),h.emotion=Jr?.execute(h.grayscaleMul),x3=de();let f=await h.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((d=t.face.emotion)==null?void 0:d.minConfidence)||0)&&p.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:x1e[m]});p.sort((m,g)=>g.score-m.score),Object.keys(h).forEach(m=>se(h[m]))}Oc[a]=p,A3=r,l(p)}))}var Rr,D2=[],v3=0,w3=0,k3=Number.MAX_SAFE_INTEGER;async function v1e(e){return Te.initial&&(Rr=null),Rr?e.debug&&ue("cached model:",Rr.modelUrl):Rr=await zt(e.face.mobilefacenet.modelPath),Rr}async function I3(e,t,a,r){var n,s;if(!Rr)return[];let i=k3<(((n=t.face.embedding)==null?void 0:n.skipFrames)||0),o=(((s=t.face.embedding)==null?void 0:s.skipTime)||0)>de()-w3;return t.skipAllowed&&o&&i&&v3===r&&D2[a]?(k3++,D2[a]):new Promise(async l=>{var u;let d=[];if(((u=t.face.embedding)==null?void 0:u.enabled)&&Rr?.inputs[0].shape){let p={};p.crop=De.resizeBilinear(e,[Rr.inputs[0].shape[2],Rr.inputs[0].shape[1]],!1),p.data=Rr?.execute(p.crop);let h=await p.data.data();d=Array.from(h)}D2[a]=d,v3=r,w3=de(),l(d)})}var zn,Ts=0,w1e=2.3,L2=Zn.leftEyeLower0,W2=Zn.rightEyeLower0,du={leftBounds:[L2[0],L2[L2.length-1]],rightBounds:[W2[0],W2[W2.length-1]]},_u={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function k1e(e){var t;return Te.initial&&(zn=null),zn?e.debug&&ue("cached model:",zn.modelUrl):zn=await zt((t=e.face.iris)==null?void 0:t.modelPath),Ts=zn.inputs[0].shape?zn.inputs[0].shape[2]:0,Ts===-1&&(Ts=64),zn}function Pc(e,t,a,r){for(let n=0;n<n3.length;n++){let{key:s,indices:i}=n3[n],o=Zn[`${a}${s}`];if(!r||r.includes(s))for(let l=0;l<i.length;l++){let u=i[l];e[o[l]]=[t[u][0],t[u][1],(t[u][2]+e[o[l]][2])/2]}}}var I1e=e=>{let t=e[du.leftBounds[0]][2],a=e[du.rightBounds[0]][2];return t-a},S3=(e,t,a,r,n,s=!1)=>{let i=uT(lT(U2e([e[a],e[r]]),w1e)),o=Ep(i),l=De.cropAndResize(t,[[i.startPoint[1]/n,i.startPoint[0]/n,i.endPoint[1]/n,i.endPoint[0]/n]],[0],[Ts,Ts]);if(s&&Te.kernels.includes("flipleftright")){let u=De.flipLeftRight(l);se(l),l=u}return{box:i,boxSize:o,crop:l}},N3=(e,t,a,r=!1)=>{let n=[];for(let s=0;s<_u.numCoordinates;s++){let i=e[s*3],o=e[s*3+1],l=e[s*3+2];n.push([(r?1-i/Ts:i/Ts)*a[0]+t.startPoint[0],o/Ts*a[1]+t.startPoint[1],l])}return{rawCoords:n,iris:n.slice(_u.index)}},T3=(e,t,a)=>{let r=e[Zn[`${a}EyeUpper0`][_u.upperCenter]][2],n=e[Zn[`${a}EyeLower0`][_u.lowerCenter]][2],s=(r+n)/2;return t.map((i,o)=>{let l=s;return o===2?l=r:o===4&&(l=n),[i[0],i[1],l]})};async function S1e(e,t,a,r){if(!zn)return a.debug&&ue("face mesh iris detection requested, but model is not loaded"),e;let{box:n,boxSize:s,crop:i}=S3(e,t,du.leftBounds[0],du.leftBounds[1],r,!0),{box:o,boxSize:l,crop:u}=S3(e,t,du.rightBounds[0],du.rightBounds[1],r,!0),d=Nt([i,u]);se(i),se(u);let p=zn.execute(d);se(d);let h=await p.data();se(p);let c=h.slice(0,_u.numCoordinates*3),{rawCoords:f,iris:m}=N3(c,n,s,!0),g=h.slice(_u.numCoordinates*3),{rawCoords:y,iris:A}=N3(g,o,l,!1),x=I1e(e);Math.abs(x)<30?(Pc(e,f,"left",null),Pc(e,y,"right",null)):x<1?Pc(e,f,"left",["EyeUpper0","EyeLower0"]):Pc(e,y,"right",["EyeUpper0","EyeLower0"]);let b=T3(e,m,"left"),v=T3(e,A,"right");return e.concat(b).concat(v)}var fs={eyeLLower:[33,7,163,144,145,153,154,155,133],eyeRLower:[263,249,390,373,374,380,381,382,362],lips:[61,76,91,181,84,17,314,405,321,291,291,185,40,39,37,0,267,269,270,291,62,183,88,178,87,14,268,303,304,408,291,184,42,178,87,14,268,303,304,408,61,62,90,180,85,16,315,404,307,308,291,185,40,73,72,0,302,269,270,409,61,184,95,179,86,15,316,403,324,408,291,184,74,41,38,11,268,303,304,408],eyeL:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],eyeR:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417]};async function N1e(e,t){let a={irisL:t[3].dataSync(),irisR:t[1].dataSync(),eyeL:t[0].dataSync(),eyeR:t[6].dataSync(),lips:t[5].dataSync()},r=fs.eyeRLower.reduce((s,i)=>s+=e[i][2],0)/fs.eyeRLower.length;for(let s=0;s<a.irisR.length/2;s++)e.push([a.irisR[2*s+0],a.irisR[2*s+1],r]);let n=fs.eyeLLower.reduce((s,i)=>s+=e[i][2],0)/fs.eyeLLower.length;for(let s=0;s<a.irisL.length/2;s++)e.push([a.irisL[2*s+0],a.irisL[2*s+1],n]);for(let s=0;s<a.eyeL.length/2;s++)e[fs.eyeL[s]]=[a.eyeL[2*s+0],a.eyeL[2*s+1],e[fs.eyeL[s]][2]];for(let s=0;s<a.eyeR.length/2;s++)e[fs.eyeR[s]]=[a.eyeR[2*s+0],a.eyeR[2*s+1],e[fs.eyeR[s]][2]];return e}var fn={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},yn=null,lu=0;async function T1e(e,t){var a,r,n,s,i,o,l,u,d,p;let h=(((a=t.face.detector)==null?void 0:a.skipTime)||0)>de()-fn.timestamp,c=fn.skipped<(((r=t.face.detector)==null?void 0:r.skipFrames)||0);!t.skipAllowed||!h||!c||fn.boxes.length===0?(fn.boxes=await r1e(e,t),fn.timestamp=de(),fn.skipped=0):fn.skipped++;let f=[],m=[],g=0;for(let y=0;y<fn.boxes.length;y++){let A=fn.boxes[y],x=0,b,v={id:g++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([x,b,v.tensor]=Y2e((n=t.face.detector)==null?void 0:n.rotation,A,e,(s=t.face.mesh)!=null&&s.enabled?lu:F2()),(i=t?.filter)!=null&&i.equalization){let S=await oT(v.tensor);se(v.tensor),v.tensor=S}if(v.boxScore=Math.round(100*A.confidence)/100,(o=t.face.mesh)!=null&&o.enabled)if(!yn)t.debug&&ue("face mesh detection requested, but model is not loaded");else{let S=yn.execute(v.tensor),N=S.find(k=>k.shape[k.shape.length-1]===1),E=S.find(k=>k.shape[k.shape.length-1]===1404),R=await N.data();v.faceScore=Math.round(100*R[0])/100;let P=q(E,[-1,3]),$=await P.array();if(v.faceScore<(((l=t.face.detector)==null?void 0:l.minConfidence)||1))A.confidence=v.faceScore;else{(u=t.face.attention)!=null&&u.enabled?$=await N1e($,S):(d=t.face.iris)!=null&&d.enabled&&($=await S1e($,v.tensor,t,lu)),v.mesh=Z2e($,A,x,b,lu),v.meshRaw=v.mesh.map(_=>[_[0]/(e.shape[2]||0),_[1]/(e.shape[1]||0),(_[2]||0)/lu]);for(let _ of Object.keys(Zn))v.annotations[_]=Zn[_].map(z=>v.mesh[z]);v.score=v.faceScore;let k={...Q2e(v.mesh,A),confidence:A.confidence,landmarks:A.landmarks};v.box=s3(k,e),v.boxRaw=i3(k,e),m.push(k)}se([...S,P])}else{v.box=s3(A,e),v.boxRaw=i3(A,e),v.score=v.boxScore,v.mesh=A.landmarks.map(S=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*S[0]/F2(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*S[1]/F2()]),v.meshRaw=v.mesh.map(S=>[S[0]/(e.shape[2]||0),S[1]/(e.shape[1]||0),(S[2]||0)/lu]);for(let S of Object.keys(ty))v.annotations[S]=[v.mesh[ty[S]]]}v.score>(((p=t.face.detector)==null?void 0:p.minConfidence)||1)?f.push(v):se(v.tensor)}return fn.boxes=m,f}async function C1e(e){var t,a,r;return Te.initial&&(yn=null),yn?e.debug&&ue("cached model:",yn.modelUrl):(t=e.face.attention)!=null&&t.enabled?yn=await zt((a=e.face.attention)==null?void 0:a.modelPath):yn=await zt((r=e.face.mesh)==null?void 0:r.modelPath),lu=yn.inputs[0].shape?yn.inputs[0].shape[2]:0,yn}var E1e=ih,R1e=Em,Fr,Dc=[],C3=0,E3=0,B2=Number.MAX_SAFE_INTEGER;async function $1e(e){var t;return Te.initial&&(Fr=null),Fr?e.debug&&ue("cached model:",Fr.modelUrl):Fr=await zt((t=e.face.description)==null?void 0:t.modelPath),Fr}function xT(e){let t=e.image||e.tensor||e;if(!Fr?.inputs[0].shape)return t;let a=De.resizeBilinear(t,[Fr.inputs[0].shape[2],Fr.inputs[0].shape[1]],!1),r=W(a,xt.tf255);return se(a),r}async function R3(e,t,a,r){var n,s,i,o;if(!Fr)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let l=B2<(((n=t.face.description)==null?void 0:n.skipFrames)||0),u=(((s=t.face.description)==null?void 0:s.skipTime)||0)>de()-C3;return t.skipAllowed&&l&&u&&E3===r&&((i=Dc[a])==null?void 0:i.age)&&((o=Dc[a])==null?void 0:o.age)>0?(B2++,Dc[a]):(B2=0,new Promise(async d=>{var p,h;let c={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((p=t.face.description)!=null&&p.enabled){let f=xT(e),m=Fr?.execute(f);C3=de(),se(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),A=Math.trunc(200*Math.abs(y[0]-.5))/100;A>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(c.gender=y[0]<=.5?"female":"male",c.genderScore=Math.min(.99,A));let x=qn(m.find(R=>R.shape[1]===100),1),b=(await x.data())[0];se(x);let S=await m.find(R=>R.shape[1]===100).data();c.age=Math.round(S[b-1]>S[b+1]?10*b-100*S[b-1]:10*b+100*S[b+1])/10;let N=m.find(R=>R.shape[1]===1024),E=N?await N.data():[];c.descriptor=Array.from(E),m.forEach(R=>se(R))}Dc[a]=c,E3=r,d(c)}))}function Sb(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Wf(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function F1e(e,t,a){let r=t.shape[1],n=t.shape[2],s=[[e.startPoint[1]/r,e.startPoint[0]/n,e.endPoint[1]/r,e.endPoint[0]/n]];return De.cropAndResize(t,s,[0],a)}function M1e(e,t){let a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],n=e.palmLandmarks.map(s=>[s[0]*t[0],s[1]*t[1]]);return{startPoint:a,endPoint:r,palmLandmarks:n,confidence:e.confidence}}function V2(e,t=1.5){let a=Wf(e),r=Sb(e),n=[t*r[0]/2,t*r[1]/2],s=[a[0]-n[0],a[1]-n[1]],i=[a[0]+n[0],a[1]+n[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function U2(e){let t=Wf(e),a=Sb(e),n=Math.max(...a)/2,s=[t[0]-n,t[1]-n],i=[t[0]+n,t[1]+n];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function _1e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function z1e(e,t){let a=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return _1e(a)}var $3=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function _o(e,t){let a=0;for(let r=0;r<e.length;r++)a+=e[r]*t[r];return a}function O1e(e,t){let a=[];for(let r=0;r<e.length;r++)a.push(e[r][t]);return a}function F3(e,t){let a=[],r=e.length;for(let n=0;n<r;n++){a.push([]);for(let s=0;s<r;s++)a[n].push(_o(e[n],O1e(t,s)))}return a}function M3(e,t){let a=Math.cos(e),r=Math.sin(e),n=[[a,-r,0],[r,a,0],[0,0,1]],s=$3(t[0],t[1]),i=F3(s,n),o=$3(-t[0],-t[1]);return F3(i,o)}function P1e(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],r=[-_o(t[0],a),-_o(t[1],a)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]}function _3(e,t){return[_o(e,t[0]),_o(e,t[1])]}var D1e=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],L1e=class{constructor(e){pe(this,"model"),pe(this,"anchors"),pe(this,"anchorsTensor"),pe(this,"inputSize"),pe(this,"inputSizeTensor"),pe(this,"doubleInputSizeTensor"),this.model=e,this.anchors=D1e.map(t=>[t.x,t.y]),this.anchorsTensor=Gn(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Lt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Lt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(e){let t={};t.boxOffsets=Pe(e,[0,0],[-1,2]),t.boxSizes=Pe(e,[0,2],[-1,2]),t.div=me(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=ie(t.div,this.anchorsTensor),t.halfBoxSizes=me(t.boxSizes,this.doubleInputSizeTensor),t.sub=ce(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=W(t.sub,this.inputSizeTensor),t.add=ie(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=W(t.add,this.inputSizeTensor);let a=k0([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(r=>se(t[r])),a}normalizeLandmarks(e,t){let a={};a.reshape=q(e,[-1,7,2]),a.div=me(a.reshape,this.inputSizeTensor),a.landmarks=ie(a.div,this.anchors[t]);let r=W(a.landmarks,this.inputSizeTensor);return Object.keys(a).forEach(n=>se(a[n])),r}async predict(e,t){let a={};a.resize=De.resizeBilinear(e,[this.inputSize,this.inputSize]),a.div=me(a.resize,xt.tf127),a.image=ce(a.div,xt.tf1),a.batched=this.model.execute(a.image),a.predictions=ft(a.batched),a.slice=Pe(a.predictions,[0,0],[-1,1]),a.sigmoid=xr(a.slice),a.scores=ft(a.sigmoid);let r=await a.scores.data();a.boxes=Pe(a.predictions,[0,1],[-1,4]),a.norm=this.normalizeBoxes(a.boxes),a.nms=await De.nonMaxSuppressionAsync(a.norm,a.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);let n=await a.nms.array(),s=[];for(let i of n){let o={};o.box=Pe(a.norm,[i,0],[1,-1]),o.slice=Pe(a.predictions,[i,5],[1,14]),o.norm=this.normalizeLandmarks(o.slice,i),o.palmLandmarks=q(o.norm,[-1,2]);let l=await o.box.data(),u=l.slice(0,2),d=l.slice(2,4),p=await o.palmLandmarks.array(),h={startPoint:u,endPoint:d,palmLandmarks:p,confidence:r[i]},c=M1e(h,[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);s.push(c),Object.keys(o).forEach(f=>se(o[f]))}return Object.keys(a).forEach(i=>se(a[i])),s}},W1e=5,z3=1.65,O3=[0,5,9,13,17,1,2],B1e=0,V1e=2,P3=0,U1e=class{constructor(e,t){pe(this,"handDetector"),pe(this,"handPoseModel"),pe(this,"inputSize"),pe(this,"storedBoxes"),pe(this,"skipped"),pe(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){let t=e.map(s=>s[0]),a=e.map(s=>s[1]),r=[Math.min(...t),Math.min(...a)],n=[Math.max(...t),Math.max(...a)];return{startPoint:r,endPoint:n}}getBoxForPalmLandmarks(e,t){let a=e.map(n=>_3([...n,1],t)),r=this.calculateLandmarksBoundingBox(a);return V2(U2(r),W1e)}getBoxForHandLandmarks(e){let t=this.calculateLandmarksBoundingBox(e),a=V2(U2(t),z3);a.palmLandmarks=[];for(let r=0;r<O3.length;r++)a.palmLandmarks.push(e[O3[r]].slice(0,2));return a}transformRawCoords(e,t,a,r){let n=Sb(t),s=[n[0]/this.inputSize,n[1]/this.inputSize,(n[0]+n[1])/this.inputSize/2],i=e.map(h=>[s[0]*(h[0]-this.inputSize/2),s[1]*(h[1]-this.inputSize/2),s[2]*h[2]]),o=M3(a,[0,0]),l=i.map(h=>[..._3(h,o),h[2]]),u=P1e(r),d=[...Wf(t),1],p=[_o(d,u[0]),_o(d,u[1])];return l.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(e,t){let a=!1,r,n=(t.hand.skipTime||0)>de()-P3,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&n&&s&&(r=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(a=!0));let i=[];for(let o=0;o<this.storedBoxes.length;o++){let l=this.storedBoxes[o];if(!!l)if(t.hand.landmarks){let u=t.hand.rotation?z1e(l.palmLandmarks[B1e],l.palmLandmarks[V1e]):0,d=Wf(l),p=[d[0]/e.shape[2],d[1]/e.shape[1]],h=t.hand.rotation&&Te.kernels.includes("rotatewithoffset")?De.rotateWithOffset(e,u,0,p):e.clone(),c=M3(-u,d),f=a?this.getBoxForPalmLandmarks(l.palmLandmarks,c):l,m=F1e(f,h,[this.inputSize,this.inputSize]),g=me(m,xt.tf255);se(m),se(h);let[y,A]=this.handPoseModel.execute(g);P3=de(),se(g);let x=(await y.data())[0];if(se(y),x>=t.hand.minConfidence/4){let b=q(A,[-1,3]),v=await b.array();se(A),se(b);let S=this.transformRawCoords(v,f,u,c),N=this.getBoxForHandLandmarks(S);this.storedBoxes[o]={...N,confidence:x};let E={landmarks:S,confidence:x,boxConfidence:l.confidence,fingerConfidence:x,box:{topLeft:N.startPoint,bottomRight:N.endPoint}};i.push(E)}else this.storedBoxes[o]=null;se(A)}else{let u=V2(U2(l),z3),d={confidence:l.confidence,boxConfidence:l.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(o=>o!==null),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}},ir={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>ir.nameMapping[e],getPoints:e=>ir.pointsMapping[e]},gu={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>gu.nameMapping[e]},Vt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Vt.nameMapping[e]},$p=class{constructor(e){pe(this,"name"),pe(this,"curls"),pe(this,"directions"),pe(this,"weights"),pe(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,a){typeof this.curls[e]>"u"&&(this.curls[e]=[]),this.curls[e].push([t,a])}direction(e,t,a){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,a])}weight(e,t){this.weights[e]=t;let a=this.weights.reduce((r,n)=>r+n,0);this.weightsRelative=this.weights.map(r=>r*5/a)}matchAgainst(e,t){let a=0;for(let r in e){let n=e[r],s=this.curls[r];if(typeof s>"u"){a+=this.weightsRelative[r];continue}for(let[i,o]of s)if(n===i){a+=o*this.weightsRelative[r];break}}for(let r in t){let n=t[r],s=this.directions[r];if(typeof s>"u"){a+=this.weightsRelative[r];continue}for(let[i,o]of s)if(n===i){a+=o*this.weightsRelative[r];break}}return a/10}},{thumb:hn,index:is,middle:os,ring:Fl,pinky:Ml}=ir,{none:pn,half:G1e,full:cn}=gu,{verticalUp:Rd,verticalDown:nAe,horizontalLeft:Nb,horizontalRight:j1e,diagonalUpRight:H1e,diagonalUpLeft:$d,diagonalDownRight:sAe,diagonalDownLeft:iAe}=Vt,Cs=new $p("thumbs up");Cs.curl(hn,pn,1);Cs.direction(hn,Rd,1);Cs.direction(hn,$d,.25);Cs.direction(hn,H1e,.25);for(let e of[ir.index,ir.middle,ir.ring,ir.pinky])Cs.curl(e,cn,1),Cs.direction(e,Nb,1),Cs.direction(e,j1e,1);var Xt=new $p("victory");Xt.curl(hn,G1e,.5);Xt.curl(hn,pn,.5);Xt.direction(hn,Rd,1);Xt.direction(hn,$d,1);Xt.curl(is,pn,1);Xt.direction(is,Rd,.75);Xt.direction(is,$d,1);Xt.curl(os,pn,1);Xt.direction(os,Rd,1);Xt.direction(os,$d,.75);Xt.curl(Fl,cn,1);Xt.direction(Fl,Rd,.2);Xt.direction(Fl,$d,1);Xt.direction(Fl,Nb,.2);Xt.curl(Ml,cn,1);Xt.direction(Ml,Rd,.2);Xt.direction(Ml,$d,1);Xt.direction(Ml,Nb,.2);Xt.weight(is,2);Xt.weight(os,2);var Hi=new $p("point");Hi.curl(hn,cn,1);Hi.curl(is,pn,.5);Hi.curl(os,cn,.5);Hi.curl(Fl,cn,.5);Hi.curl(Ml,cn,.5);Hi.weight(is,2);Hi.weight(os,2);var qi=new $p("middle finger");qi.curl(hn,pn,1);qi.curl(is,cn,.5);qi.curl(os,cn,.5);qi.curl(Fl,cn,.5);qi.curl(Ml,cn,.5);qi.weight(is,2);qi.weight(os,2);var Fd=new $p("open palm");Fd.curl(hn,pn,.75);Fd.curl(is,pn,.75);Fd.curl(os,pn,.75);Fd.curl(Fl,pn,.75);Fd.curl(Ml,pn,.75);var q1e=[Cs,Xt,Hi,qi,Fd],X1e=.7,po={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function D3(e,t,a,r){let n=(t-r)/(e-a),s=Math.atan(n)*180/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function bT(e,t){if(!e||!t)return[0,0];let a=D3(e[0],e[1],t[0],t[1]);if(e.length===2)return a;let r=D3(e[1],e[2],t[1],t[2]);return[a,r]}function L3(e,t=1){let a=0,r=0,n=0;return e>=75&&e<=105?a=1*t:e>=25&&e<=155?r=1*t:n=1*t,[a,r,n]}function K1e(e,t,a){let r=e[0]-t[0],n=e[0]-a[0],s=t[0]-a[0],i=e[1]-t[1],o=e[1]-a[1],l=t[1]-a[1],u=e[2]-t[2],d=e[2]-a[2],p=t[2]-a[2],h=Math.sqrt(r*r+i*i+u*u),c=Math.sqrt(n*n+o*o+d*d),f=Math.sqrt(s*s+l*l+p*p),m=(f*f+h*h-c*c)/(2*f*h);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>po.NO_CURL_START_LIMIT?y=gu.none:g>po.HALF_CURL_START_LIMIT?y=gu.half:y=gu.full,y}function vT(e,t,a,r){let n;return r===Math.abs(e)?e>0?n=Vt.horizontalLeft:n=Vt.horizontalRight:r===Math.abs(t)?t>0?n=Vt.horizontalLeft:n=Vt.horizontalRight:a>0?n=Vt.horizontalLeft:n=Vt.horizontalRight,n}function wT(e,t,a,r){let n;return r===Math.abs(e)?e<0?n=Vt.verticalDown:n=Vt.verticalUp:r===Math.abs(t)?t<0?n=Vt.verticalDown:n=Vt.verticalUp:a<0?n=Vt.verticalDown:n=Vt.verticalUp,n}function Z1e(e,t,a,r,n,s,i,o){let l,u=wT(e,t,a,r),d=vT(n,s,i,o);return u===Vt.verticalUp?d===Vt.horizontalLeft?l=Vt.diagonalUpLeft:l=Vt.diagonalUpRight:d===Vt.horizontalLeft?l=Vt.diagonalDownLeft:l=Vt.diagonalDownRight,l}function Y1e(e,t,a,r){let n=e[0]-t[0],s=e[0]-a[0],i=t[0]-a[0],o=e[1]-t[1],l=e[1]-a[1],u=t[1]-a[1],d=Math.max(Math.abs(n),Math.abs(s),Math.abs(i)),p=Math.max(Math.abs(o),Math.abs(l),Math.abs(u)),h=0,c=0,f=0,m=p/(d+1e-5);m>1.5?h+=po.DISTANCE_VOTE_POWER:m>.66?c+=po.DISTANCE_VOTE_POWER:f+=po.DISTANCE_VOTE_POWER;let g=Math.sqrt(n*n+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+u*u),x=Math.max(g,y,A),b=e[0],v=e[1],S=a[0],N=a[1];x===g?(S=a[0],N=a[1]):x===A&&(b=t[0],v=t[1]);let P=bT([b,v],[S,N]),$=L3(P,po.TOTAL_ANGLE_VOTE_POWER);h+=$[0],c+=$[1],f+=$[2];for(let _ of r){let z=L3(_,po.SINGLE_ANGLE_VOTE_POWER);h+=z[0],c+=z[1],f+=z[2]}let k;return h===Math.max(h,c,f)?k=wT(l,o,u,p):f===Math.max(c,f)?k=vT(s,n,i,d):k=Z1e(l,o,u,p,s,n,i,d),k}function kT(e){let t=[],a=[],r=[],n=[];if(!e)return{curls:r,directions:n};for(let s of ir.all){let i=ir.getPoints(s),o=[],l=[];for(let u of i){let d=e[u[0]],p=e[u[1]],h=bT(d,p),c=h[0],f=h[1];o.push(c),l.push(f)}t.push(o),a.push(l)}for(let s of ir.all){let i=s===ir.thumb?1:0,o=ir.getPoints(s),l=e[o[i][0]],u=e[o[i+1][1]],d=e[o[3][1]],p=K1e(l,u,d),h=Y1e(l,u,d,t[s].slice(i));r[s]=p,n[s]=h}return{curls:r,directions:n}}function IT(e){if(!e||e.length===0)return null;let t=kT(e),a={};for(let r of ir.all)a[ir.getName(r)]={curl:gu.getName(t.curls[r]),direction:Vt.getName(t.directions[r])};return a}function J1e(e){let t=[];if(!e||e.length===0)return t;let a=kT(e);for(let r of q1e){let n=r.matchAgainst(a.curls,a.directions);n>=X1e&&t.push({name:r.name,confidence:n})}return t}var W3={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},tu,au,ST;async function B3(e,t){let a=await ST.estimateHands(e,t);if(!a)return[];let r=[];for(let n=0;n<a.length;n++){let s={};if(a[n].landmarks)for(let d of Object.keys(W3))s[d]=W3[d].map(p=>a[n].landmarks[p]);let i=a[n].landmarks,o=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(i&&i.length>0){for(let d of i)d[0]<o[0]&&(o[0]=d[0]),d[1]<o[1]&&(o[1]=d[1]),d[0]>o[2]&&(o[2]=d[0]),d[1]>o[3]&&(o[3]=d[1]);o[2]-=o[0],o[3]-=o[1],l=[o[0]/(e.shape[2]||0),o[1]/(e.shape[1]||0),o[2]/(e.shape[2]||0),o[3]/(e.shape[1]||0)]}else o=a[n].box?[Math.trunc(Math.max(0,a[n].box.topLeft[0])),Math.trunc(Math.max(0,a[n].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,a[n].box.bottomRight[0])-Math.max(0,a[n].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,a[n].box.bottomRight[1])-Math.max(0,a[n].box.topLeft[1]))]:[0,0,0,0],l=[a[n].box.topLeft[0]/(e.shape[2]||0),a[n].box.topLeft[1]/(e.shape[1]||0),(a[n].box.bottomRight[0]-a[n].box.topLeft[0])/(e.shape[2]||0),(a[n].box.bottomRight[1]-a[n].box.topLeft[1])/(e.shape[1]||0)];let u=IT(i);r.push({id:n,score:Math.round(100*a[n].confidence)/100,boxScore:Math.round(100*a[n].boxConfidence)/100,fingerScore:Math.round(100*a[n].fingerConfidence)/100,label:"hand",box:o,boxRaw:l,keypoints:i,annotations:s,landmarks:u})}return r}async function V3(e){var t,a;Te.initial&&(tu=null,au=null),!tu||!au?[tu,au]=await Promise.all([e.hand.enabled?zt((t=e.hand.detector)==null?void 0:t.modelPath):null,e.hand.landmarks?zt((a=e.hand.skeleton)==null?void 0:a.modelPath):null]):(e.debug&&ue("cached model:",tu.modelUrl),e.debug&&ue("cached model:",au.modelUrl));let r=new L1e(tu);return ST=new U1e(r,au),[tu,au]}var Qt=[null,null],Q1e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ks=[[0,0],[0,0]],eye=["hand","fist","pinch","point","face","tip","pinchtip"],U3=4,G3=1.6,tye=512,aye=1.4,Lc=Number.MAX_SAFE_INTEGER,G2=0,Un=[0,0],Bt={boxes:[],hands:[]},j3={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function rye(e){var t;if(Te.initial&&(Qt[0]=null),Qt[0])e.debug&&ue("cached model:",Qt[0].modelUrl);else{DT(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Qt[0]=await zt((t=e.hand.detector)==null?void 0:t.modelPath);let a=Object.values(Qt[0].modelSignature.inputs);ks[0][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,ks[0][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return Qt[0]}async function nye(e){var t;if(Te.initial&&(Qt[1]=null),Qt[1])e.debug&&ue("cached model:",Qt[1].modelUrl);else{Qt[1]=await zt((t=e.hand.skeleton)==null?void 0:t.modelPath);let a=Object.values(Qt[1].modelSignature.inputs);ks[1][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,ks[1][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return Qt[1]}async function sye(e,t){let a=[];if(!e||!Qt[0])return a;let r={},n=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(Math.round((e.shape[1]||0)/8)*8,tye),i=Math.round(s*n/8)*8;r.resize=De.resizeBilinear(e,[s,i]),r.cast=he(r.resize,"int32"),[r.rawScores,r.rawBoxes]=await Qt[0].executeAsync(r.cast,Q1e),r.boxes=ft(r.rawBoxes,[0,2]),r.scores=ft(r.rawScores,[0]);let o=Sr(r.scores,1);se(o[U3]),o.splice(U3,1),r.filtered=_a(o,1),se(o),r.max=Fa(r.filtered,1),r.argmax=qn(r.filtered,1);let l=0;r.nms=await De.nonMaxSuppressionAsync(r.boxes,r.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await r.nms.data(),d=await r.max.data(),p=await r.argmax.data();for(let h of Array.from(u)){let c=Pe(r.boxes,h,1),f=await c.data();se(c);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=ry(m,aye),y=[Math.trunc(m[0]*Un[0]),Math.trunc(m[1]*Un[1]),Math.trunc(m[2]*Un[0]),Math.trunc(m[3]*Un[1])],A=d[h],x=eye[p[h]],b={id:l++,score:A,box:y,boxRaw:g,label:x};a.push(b)}return Object.keys(r).forEach(h=>se(r[h])),a.sort((h,c)=>c.score-h.score),a.length>(t.hand.maxDetected||1)&&(a.length=t.hand.maxDetected||1),a}async function j2(e,t,a){let r={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Qt[1]&&a.hand.landmarks&&t.score>(a.hand.minConfidence||0)){let n={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];n.crop=De.cropAndResize(e,[s],[0],[ks[1][0],ks[1][1]],"bilinear"),n.div=me(n.crop,xt.tf255),[n.score,n.keypoints]=Qt[1].execute(n.div,["Identity_1","Identity"]);let i=(await n.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(a.hand.minConfidence||0)){r.fingerScore=o,n.reshaped=q(n.keypoints,[-1,3]);let d=(await n.reshaped.array()).map(p=>[p[0]/ks[1][1],p[1]/ks[1][0],p[2]||0]).map(p=>[p[0]*t.boxRaw[2],p[1]*t.boxRaw[3],p[2]||0]);r.keypoints=d.map(p=>[Un[0]*(p[0]+t.boxRaw[0]),Un[1]*(p[1]+t.boxRaw[1]),p[2]||0]),r.landmarks=IT(r.keypoints);for(let p of Object.keys(j3))r.annotations[p]=j3[p].map(h=>r.landmarks&&r.keypoints[h]?r.keypoints[h]:null)}Object.keys(n).forEach(l=>se(n[l]))}return r}async function H3(e,t){var a,r;if(!Qt[0]||!Qt[1]||!((a=Qt[0])!=null&&a.inputs[0].shape)||!((r=Qt[1])!=null&&r.inputs[0].shape))return[];Un=[e.shape[2]||0,e.shape[1]||0],Lc++;let n=(t.hand.skipTime||0)>de()-G2,s=Lc<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Bt.hands:new Promise(async i=>{let o=3*(t.hand.skipTime||0)>de()-G2,l=Lc<3*(t.hand.skipFrames||0);t.skipAllowed&&Bt.hands.length===t.hand.maxDetected?Bt.hands=await Promise.all(Bt.boxes.map(d=>j2(e,d,t))):t.skipAllowed&&o&&l&&Bt.hands.length>0?Bt.hands=await Promise.all(Bt.boxes.map(d=>j2(e,d,t))):(Bt.boxes=await sye(e,t),G2=de(),Bt.hands=await Promise.all(Bt.boxes.map(d=>j2(e,d,t))),Lc=0);let u=[...Bt.boxes];if(Bt.boxes.length=0,t.cacheSensitivity>0)for(let d=0;d<Bt.hands.length;d++){let p=o1e(Bt.hands[d].keypoints,Un);if(p.box[2]/(e.shape[2]||1)>.05&&p.box[3]/(e.shape[1]||1)>.05&&Bt.hands[d].fingerScore&&Bt.hands[d].fingerScore>(t.hand.minConfidence||0)){let h=ry(p.box,G3),c=ry(p.boxRaw,G3);Bt.boxes.push({...u[d],box:h,boxRaw:c})}}for(let d=0;d<Bt.hands.length;d++){let p=Rp(Bt.hands[d].keypoints,Un);Bt.hands[d].box=p.box,Bt.hands[d].boxRaw=p.boxRaw}i(Bt.hands)})}var tr,Wc=[],H2=Number.MAX_SAFE_INTEGER,q3=0,X3=0;async function iye(e){var t;return Te.initial&&(tr=null),tr?e.debug&&ue("cached model:",tr.modelUrl):tr=await zt((t=e.face.liveness)==null?void 0:t.modelPath),tr}async function K3(e,t,a,r){var n,s;if(!tr)return 0;let i=(((n=t.face.liveness)==null?void 0:n.skipTime)||0)>de()-X3,o=H2<(((s=t.face.liveness)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&q3===r&&Wc[a]?(H2++,Wc[a]):(H2=0,new Promise(async l=>{let u=De.resizeBilinear(e,[tr?.inputs[0].shape?tr.inputs[0].shape[2]:0,tr?.inputs[0].shape?tr.inputs[0].shape[1]:0],!1),d=tr?.execute(u),p=(await d.data())[0];Wc[a]=Math.round(100*p)/100,q3=r,X3=de(),se([u,d]),l(Wc[a])}))}var NT={};zo(NT,{connected:()=>Cb,horizontal:()=>TT,kpt:()=>Tb,relative:()=>ET,vertical:()=>CT});var Tb=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],TT=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],CT=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],ET=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],Cb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Z3=.005,rr={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function RT(e){for(let t of TT){let a=e.keypoints.findIndex(n=>n.part===t[0]),r=e.keypoints.findIndex(n=>n.part===t[1]);if(e.keypoints[a]&&e.keypoints[r]&&e.keypoints[a].position[0]<e.keypoints[r].position[0]){let n=e.keypoints[a];e.keypoints[a]=e.keypoints[r],e.keypoints[r]=n}}for(let t of CT){let a=e.keypoints.findIndex(n=>n&&n.part===t[0]),r=e.keypoints.findIndex(n=>n&&n.part===t[1]);e.keypoints[a]&&e.keypoints[r]&&e.keypoints[a].position[1]<e.keypoints[r].position[1]&&e.keypoints.splice(a,1)}for(let[t,a]of ET){let r=e.keypoints.findIndex(u=>u&&u.part===t[0]),n=e.keypoints.findIndex(u=>u&&u.part===t[1]),s=e.keypoints.findIndex(u=>u&&u.part===a[0]),i=e.keypoints.findIndex(u=>u&&u.part===a[1]);if(!e.keypoints[s]||!e.keypoints[i])continue;let o=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0],l=e.keypoints[n]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[n].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[n].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){let u=e.keypoints[r];e.keypoints[r]=e.keypoints[n],e.keypoints[n]=u}}}function oye(e){for(let t=0;t<e.length;t++)if(e[t]&&rr.keypoints[t]){let a=[Math.abs(e[t].positionRaw[0]-rr.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-rr.keypoints[t].positionRaw[1])];a[0]<Z3&&a[1]<Z3?e[t]=rr.keypoints[t]:rr.keypoints[t]=e[t]}else rr.keypoints[t]=e[t];return e}function lye(e,t){let a={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;rr.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],a.pad=Cn(e,rr.padding),a.resize=De.resizeBilinear(a.pad,[t,t]);let r=he(a.resize,"int32");return Object.keys(a).forEach(n=>se(a[n])),r}function uye(e,t){e.keypoints=e.keypoints.filter(r=>r&&r.position);for(let r of e.keypoints)r.position=[r.position[0]*(t[0]+rr.padding[2][0]+rr.padding[2][1])/t[0]-rr.padding[2][0],r.position[1]*(t[1]+rr.padding[1][0]+rr.padding[1][1])/t[1]-rr.padding[1][0]],r.positionRaw=[r.position[0]/t[0],r.position[1]/t[1]];let a=Rp(e.keypoints.map(r=>r.position),t);return e.box=a.box,e.boxRaw=a.boxRaw,e}var $r,af=0,q2=Number.MAX_SAFE_INTEGER,ro={boxes:[],bodies:[],last:0};async function dye(e){return Te.initial&&($r=null),$r?e.debug&&ue("cached model:",$r.modelUrl):(DT(["size"],e),$r=await zt(e.body.modelPath)),af=$r.inputs[0].shape?$r.inputs[0].shape[2]:0,af<64&&(af=256),$r}async function hye(e,t,a){let r=e[0][0],n=[],s=0;for(let d=0;d<r.length;d++)if(s=r[d][2],s>t.body.minConfidence){let p=[r[d][1],r[d][0]];n.push({score:Math.round(100*s)/100,part:Tb[d],positionRaw:p,position:[Math.round((a.shape[2]||0)*p[0]),Math.round((a.shape[1]||0)*p[1])]})}s=n.reduce((d,p)=>p.score>d?p.score:d,0);let i=[],o=Rp(n.map(d=>d.position),[a.shape[2],a.shape[1]]),l={};for(let[d,p]of Object.entries(Cb)){let h=[];for(let c=0;c<p.length-1;c++){let f=n.find(g=>g.part===p[c]),m=n.find(g=>g.part===p[c+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&h.push([f.position,m.position])}l[d]=h}let u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:n,annotations:l};return RT(u),i.push(u),i}async function pye(e,t,a){let r=[];for(let n=0;n<e[0].length;n++){let s=e[0][n],i=Math.round(100*s[51+4])/100;if(i>t.body.minConfidence){let o=[];for(let p=0;p<17;p++){let h=s[3*p+2];if(h>t.body.minConfidence){let c=[s[3*p+1],s[3*p+0]];o.push({part:Tb[p],score:Math.round(100*h)/100,positionRaw:c,position:[Math.round((a.shape[2]||0)*c[0]),Math.round((a.shape[1]||0)*c[1])]})}}let l=Rp(o.map(p=>p.position),[a.shape[2],a.shape[1]]),u={};for(let[p,h]of Object.entries(Cb)){let c=[];for(let f=0;f<h.length-1;f++){let m=o.find(y=>y.part===h[f]),g=o.find(y=>y.part===h[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&c.push([m.position,g.position])}u[p]=c}let d={id:n,score:i,box:l.box,boxRaw:l.boxRaw,keypoints:[...o],annotations:u};RT(d),r.push(d)}}return r.sort((n,s)=>s.score-n.score),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}async function Y3(e,t){if(!$r||!$r?.inputs[0].shape)return[];t.skipAllowed||(ro.boxes.length=0),q2++;let a=(t.body.skipTime||0)>de()-ro.last,r=q2<(t.body.skipFrames||0);return t.skipAllowed&&a&&r?ro.bodies:new Promise(async n=>{let s={};q2=0,s.input=lye(e,af),s.res=$r?.execute(s.input),ro.last=de();let i=await s.res.array();ro.bodies=s.res.shape[2]===17?await hye(i,t,e):await pye(i,t,e);for(let o of ro.bodies)uye(o,[e.shape[2]||1,e.shape[1]||1]),oye(o.keypoints);Object.keys(s).forEach(o=>se(s[o])),n(ro.bodies)})}var uu,Bc=[],J3=0,X2=Number.MAX_SAFE_INTEGER,Bf=0,Vc=2.5;async function cye(e){if(!uu||Te.initial){uu=await zt(e.object.modelPath);let t=Object.values(uu.modelSignature.inputs);Bf=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&ue("cached model:",uu.modelUrl);return uu}async function fye(e,t,a){let r=0,n=[];for(let l of[1,2,4])Z(async()=>{let u=l*13,d=ft(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)===tf.length)),p=ft(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)<tf.length)),c=await p.reshape([-1,4,p.shape[1]/4]).argMax(2).array(),f=await d.array();for(let m=0;m<d.shape[0];m++)for(let g=0;g<d.shape[1];g++){let y=f[m][g];if(y>(a.object.minConfidence||0)&&g!==61){let A=(.5+Math.trunc(m%u))/u,x=(.5+Math.trunc(m/u))/u,b=c[m].map(k=>k*(u/l/Bf)),[v,S]=[A-Vc/l*b[0],x-Vc/l*b[1]],[N,E]=[A+Vc/l*b[2]-v,x+Vc/l*b[3]-S],R=[v,S,N,E];R=R.map(k=>Math.max(0,Math.min(k,1)));let P=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],$={id:r++,score:Math.round(100*y)/100,class:g+1,label:tf[g].label,box:P.map(k=>Math.trunc(k)),boxRaw:R};n.push($)}}});e.forEach(l=>se(l));let s=n.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),i=n.map(l=>l.score),o=[];if(s&&s.length>0){let l=await De.nonMaxSuppressionAsync(s,i,a.object.maxDetected,a.object.iouThreshold,a.object.minConfidence);o=await l.data(),se(l)}return n=n.filter((l,u)=>o.includes(u)).sort((l,u)=>u.score-l.score),n}async function Q3(e,t){let a=(t.object.skipTime||0)>de()-J3,r=X2<(t.object.skipFrames||0);return t.skipAllowed&&a&&r&&Bc.length>0?(X2++,Bc):(X2=0,!Te.kernels.includes("mod")||!Te.kernels.includes("sparsetodense")?Bc:new Promise(async n=>{let s=[e.shape[2]||0,e.shape[1]||0],i=De.resizeBilinear(e,[Bf,Bf],!1),o=me(i,xt.tf255),l=o.transpose([0,3,1,2]);se(o),se(i);let u;t.object.enabled&&(u=uu.execute(l)),J3=de(),se(l);let d=await fye(u,s,t);Bc=d,n(d)}))}var $m=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],mye=$m.length,Vf=$m.reduce((e,t,a)=>(e[t]=a,e),{}),gye=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],oAe=gye.map(([e,t])=>[Vf[e],Vf[t]]),yye=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function Aye(e){let t=e.reduce(({maxX:a,maxY:r,minX:n,minY:s},{position:{x:i,y:o}})=>({maxX:Math.max(a,i),maxY:Math.max(r,o),minX:Math.min(n,i),minY:Math.min(s,o)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function xye(e,[t,a],[r,n]){let s=t/r,i=a/n,o=(u,d)=>({id:d,score:u.score,boxRaw:[u.box[0]/n,u.box[1]/r,u.box[2]/n,u.box[3]/r],box:[Math.trunc(u.box[0]*i),Math.trunc(u.box[1]*s),Math.trunc(u.box[2]*i),Math.trunc(u.box[3]*s)],keypoints:u.keypoints.map(({score:p,part:h,position:c})=>({score:p,part:h,position:[Math.trunc(c.x*i),Math.trunc(c.y*s)],positionRaw:[c.x/r,c.y/r]})),annotations:{}});return e.map((u,d)=>o(u,d))}var bye=class{constructor(e,t){pe(this,"priorityQueue"),pe(this,"numberOfElements"),pe(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){let e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){let a=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=a}};function $T(e,t,a,r){return{y:r.get(e,t,a),x:r.get(e,t,a+mye)}}function FT(e,t,a){let{heatmapY:r,heatmapX:n,id:s}=e,{y:i,x:o}=$T(r,n,s,a);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function ew(e,t,a){return e<t?t:e>a?a:e}function vye(e,t,a,r){let n=a-e,s=r-t;return n*n+s*s}function tw(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Hr,wye=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],Uc=1,hu=16,kye=50**2;function aw(e,t,a,r,n,s,i=2){let o=y=>({y:s.get(y.y,y.x,e),x:s.get(y.y,y.x,s.shape[2]/2+e)}),l=(y,A,x)=>({y:ew(Math.round(y.y/hu),0,A-1),x:ew(Math.round(y.x/hu),0,x-1)}),[u,d]=r.shape,p=l(t.position,u,d),h=o(p),f=tw(t.position,h);for(let y=0;y<i;y++){let A=l(f,u,d),x=$T(A.y,A.x,a,n);f=tw({x:A.x*hu,y:A.y*hu},{x:x.x,y:x.y})}let m=l(f,u,d),g=r.get(m.y,m.x,a);return{position:f,part:$m[a],score:g}}function Iye(e,t,a,r,n){let s=yye.map(([h,c])=>[Vf[h],Vf[c]]),i=s.map(([,h])=>h),o=s.map(([h])=>h),l=t.shape[2],u=i.length,d=new Array(l),p=FT(e.part,hu,a);d[e.part.id]={score:e.score,part:$m[e.part.id],position:p};for(let h=u-1;h>=0;--h){let c=i[h],f=o[h];d[c]&&!d[f]&&(d[f]=aw(h,d[c],f,t,a,n))}for(let h=0;h<u;++h){let c=o[h],f=i[h];d[c]&&!d[f]&&(d[f]=aw(h,d[c],f,t,a,r))}return d}function Sye(e,t,a,r,n){let[s,i]=n.shape,o=!0,l=Math.max(a-Uc,0),u=Math.min(a+Uc+1,s);for(let d=l;d<u;++d){let p=Math.max(r-Uc,0),h=Math.min(r+Uc+1,i);for(let c=p;c<h;++c)if(n.get(d,c,e)>t){o=!1;break}if(!o)break}return o}function Nye(e,t){let[a,r,n]=t.shape,s=new bye(a*r*n,({score:i})=>i);for(let i=0;i<a;++i)for(let o=0;o<r;++o)for(let l=0;l<n;++l){let u=t.get(i,o,l);u<e||Sye(l,u,i,o,t)&&s.enqueue({score:u,part:{heatmapY:i,heatmapX:o,id:l}})}return s}function MT(e,{x:t,y:a},r){return e.some(({keypoints:n})=>{var s;let i=(s=n[r])==null?void 0:s.position;return i?vye(a,t,i.y,i.x)<=kye:!1})}function Tye(e,t){return t.reduce((r,{position:n,score:s},i)=>(MT(e,n,i)||(r+=s),r),0)/t.length}function Cye(e,t,a,r,n,s){let i=[],o=Nye(s,t);for(;i.length<n&&!o.empty();){let l=o.dequeue(),u=FT(l.part,hu,e);if(MT(i,u,l.part.id))continue;let d=Iye(l,t,e,a,r);d=d.filter(c=>c.score>s);let p=Tye(i,d),h=Aye(d);p>s&&i.push({keypoints:d,box:h,score:Math.round(100*p)/100})}return i}async function rw(e,t){let a=Z(()=>{if(!Hr.inputs[0].shape)return[];let i=De.resizeBilinear(e,[Hr.inputs[0].shape[2],Hr.inputs[0].shape[1]]),o=ce(me(he(i,"float32"),127.5),1),u=Hr.execute(o,wye).map(d=>ft(d,[0]));return u[1]=xr(u[1]),u}),r=await Promise.all(a.map(i=>i.buffer()));for(let i of a)se(i);let n=await Cye(r[0],r[1],r[2],r[3],t.body.maxDetected,t.body.minConfidence);return Hr.inputs[0].shape?xye(n,[e.shape[1],e.shape[2]],[Hr.inputs[0].shape[2],Hr.inputs[0].shape[1]]):[]}async function Eye(e){return!Hr||Te.initial?Hr=await zt(e.body.modelPath):e.debug&&ue("cached model:",Hr.modelUrl),Hr}var vn,K2=!1;async function _T(e){return!vn||Te.initial?vn=await zt(e.segmentation.modelPath):e.debug&&ue("cached model:",vn.modelUrl),vn}async function Rye(e,t,a){var r,n;if(K2)return{data:[],canvas:null,alpha:null};K2=!0,vn||await _T(a);let s=await Lf(e,a),i=((r=s.tensor)==null?void 0:r.shape[2])||0,o=((n=s.tensor)==null?void 0:n.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let l={};l.resize=De.resizeBilinear(s.tensor,[vn.inputs[0].shape?vn.inputs[0].shape[1]:0,vn.inputs[0].shape?vn.inputs[0].shape[2]:0],!1),se(s.tensor),l.norm=me(l.resize,xt.tf255),l.res=vn.execute(l.norm),l.squeeze=ft(l.res,0),l.squeeze.shape[2]===2?(l.softmax=sp(l.squeeze),[l.bg,l.fg]=Sr(l.softmax,2),l.expand=la(l.fg,2),l.pad=la(l.expand,0),l.crop=De.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[i,o]),l.data=ft(l.crop,0)):l.data=De.resizeBilinear(l.squeeze,[o,i]);let u=Array.from(await l.data.data());if(Te.node&&!Te.Canvas&&typeof ImageData>"u")return a.debug&&ue("canvas support missing"),Object.keys(l).forEach(y=>se(l[y])),{data:u,canvas:null,alpha:null};let d=nn(i,o);Xr&&await Xr.toPixels(l.data,d);let p=d.getContext("2d");a.segmentation.blur&&a.segmentation.blur>0&&(p.filter=`blur(${a.segmentation.blur}px)`);let h=p.getImageData(0,0,i,o),c=nn(i,o),f=c.getContext("2d");s.canvas&&f.drawImage(s.canvas,0,0),f.globalCompositeOperation="darken",a.segmentation.blur&&a.segmentation.blur>0&&(f.filter=`blur(${a.segmentation.blur}px)`),f.drawImage(d,0,0),f.globalCompositeOperation="source-over",f.filter="none";let m=f.getImageData(0,0,i,o);for(let y=0;y<i*o;y++)m.data[4*y+3]=h.data[4*y+0];f.putImageData(m,0,0);let g=null;if(t&&c){g=nn(i,o);let y=await Lf(t,a);se(y.tensor);let A=g.getContext("2d");A.drawImage(y.canvas,0,0,g.width,g.height),A.drawImage(c,0,0)}return Object.keys(l).forEach(y=>se(l[y])),K2=!1,{data:u,canvas:c,alpha:d}}var zT=class{constructor(){pe(this,"ssrnetage",null),pe(this,"gear",null),pe(this,"blazeposedetect",null),pe(this,"blazepose",null),pe(this,"centernet",null),pe(this,"efficientpose",null),pe(this,"mobilefacenet",null),pe(this,"emotion",null),pe(this,"facedetect",null),pe(this,"faceiris",null),pe(this,"facemesh",null),pe(this,"faceres",null),pe(this,"ssrnetgender",null),pe(this,"handpose",null),pe(this,"handskeleton",null),pe(this,"handtrack",null),pe(this,"liveness",null),pe(this,"movenet",null),pe(this,"nanodet",null),pe(this,"posenet",null),pe(this,"segmentation",null),pe(this,"antispoof",null)}};function Eb(e){for(let t of Object.keys(e.models))e.models[t]=null}async function OT(e){var t,a,r,n,s,i,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,S,N,E,R,P,$,k,_,z,L;Te.initial&&Eb(e),e.config.hand.enabled&&(!e.models.handpose&&((a=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:a.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await V3(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((n=(r=e.config.hand.detector)==null?void 0:r.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await V3(e.config))),e.config.body.enabled&&!e.models.blazepose&&((i=(s=e.config.body)==null?void 0:s.modelPath)==null?void 0:i.includes("blazepose"))&&(e.models.blazepose=d1e(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=u1e(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(o=e.config.body)==null?void 0:o.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=y1e(e.config)),e.config.body.enabled&&!e.models.movenet&&((d=(u=e.config.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(e.models.movenet=dye(e.config)),e.config.body.enabled&&!e.models.posenet&&((h=(p=e.config.body)==null?void 0:p.modelPath)==null?void 0:h.includes("posenet"))&&(e.models.posenet=Eye(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=t1e(e.config)),e.config.face.enabled&&((c=e.config.face.antispoof)==null?void 0:c.enabled)&&!e.models.antispoof&&(e.models.antispoof=D2e(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=iye(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=$1e(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=b1e(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!((A=e.config.face.attention)!=null&&A.enabled)&&!e.models.faceiris&&(e.models.faceiris=k1e(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=C1e(e.config)),e.config.face.enabled&&((b=e.config.face.gear)==null?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=_2e(e.config)),e.config.face.enabled&&((v=e.config.face.ssrnet)==null?void 0:v.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=O2e(e.config)),e.config.face.enabled&&((S=e.config.face.ssrnet)==null?void 0:S.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=P2e(e.config)),e.config.face.enabled&&((N=e.config.face.mobilefacenet)==null?void 0:N.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=v1e(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((R=(E=e.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handtrack"))&&(e.models.handtrack=rye(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&(($=(P=e.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:$.includes("handtrack"))&&(e.models.handskeleton=nye(e.config)),e.config.object.enabled&&!e.models.centernet&&((_=(k=e.config.object)==null?void 0:k.modelPath)==null?void 0:_.includes("centernet"))&&(e.models.centernet=m1e(e.config)),e.config.object.enabled&&!e.models.nanodet&&((L=(z=e.config.object)==null?void 0:z.modelPath)==null?void 0:L.includes("nanodet"))&&(e.models.nanodet=cye(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=_T(e.config));for await(let j of Object.keys(e.models))e.models[j]&&typeof e.models[j]<"u"&&(e.models[j]=await e.models[j])}async function PT(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let a of Object.keys(e.models)){let r=e.models[a];if(!r)continue;let n=[],s=r?.executor;if(s&&s.graph.nodes)for(let o of Object.values(s.graph.nodes)){let l=o.op.toLowerCase();n.includes(l)||n.push(l)}else!s&&e.config.debug&&ue("model signature not determined:",a);let i=[];for(let o of n)!t.includes(o)&&!e.env.kernels.includes(o)&&!e.env.kernels.includes(o.replace("_",""))&&!e.env.kernels.includes(o.replace("native",""))&&!e.env.kernels.includes(o.replace("v2",""))&&i.push(o);e.config.debug&&i.length>0&&ue("model validation failed:",a,i)}}var It={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function $ye(){let e=It.gl;!e||(It.extensions=e.getSupportedExtensions())}async function Fye(e){var t;if(e.config.backend==="humangl"&&(It.name in Ca().registry&&(!It.gl||!It.gl.getParameter(It.gl.VERSION))&&(ue("error: humangl backend invalid context"),Eb(e)),!vk(It.name))){try{It.canvas=await nn(100,100)}catch(r){ue("error: cannot create canvas:",r);return}try{if(It.gl=(t=It.canvas)==null?void 0:t.getContext("webgl2",It.webGLattr),!It.gl.getParameter(It.gl.VERSION).includes("2.0")){ue("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}It.canvas&&(It.canvas.addEventListener("webglcontextlost",async n=>{throw ue("error: humangl:",n.type),ue("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),It.canvas.addEventListener("webglcontextrestored",n=>{ue("error: humangl context restored:",n)}),It.canvas.addEventListener("webglcontextcreationerror",n=>{ue("error: humangl context create:",n)}))}catch(r){ue("error: cannot get WebGL context:",r);return}try{eb(2,It.gl)}catch(r){ue("error: cannot set WebGL context:",r);return}try{let r=new ph(It.gl);dd(It.name,()=>new bm(r),It.priority)}catch(r){ue("error: cannot register WebGL backend:",r);return}try{ko("webgl").forEach(n=>{let s={...n,backendName:It.name};kn(s)})}catch(r){ue("error: cannot update WebGL backend registration:",r);return}let a=Hn().getGPGPUContext?Hn().getGPGPUContext().gl:null;if(a)ue(`humangl webgl version:${a.getParameter(a.VERSION)} renderer:${a.getParameter(a.RENDERER)}`);else{ue("error: no current gl context:",a,It.gl);return}try{Ln.set("WEBGL_VERSION",2)}catch(r){ue("error: cannot set WebGL backend flags:",r);return}$ye(),ue("backend registered:",It.name)}}function Mye(){if(!Te.kernels.includes("mod")){let e={kernelName:"Mod",backendName:yr(),kernelFunc:t=>Z(()=>ce(t.inputs.a,W(me(t.inputs.a,t.inputs.b),t.inputs.b)))};kn(e),Te.kernels.push("mod")}if(!Te.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:yr(),kernelFunc:t=>Z(()=>b0(t.inputs.a/t.inputs.b)*t.inputs.b+$0(t.inputs.a,t.inputs.b))};kn(e),Te.kernels.push("floormod")}}async function Z2(e,t=!1){if(e.state="backend",t||Te.initial||e.config.backend&&e.config.backend.length>0&&yr()!==e.config.backend){let a=de();if(e.config.backend&&e.config.backend.length>0){if(typeof window>"u"&&typeof WorkerGlobalScope<"u"&&e.config.debug&&e.config.debug&&ue("running inside web worker"),Te.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&ue("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),Te.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&ue(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),Te.browser&&e.config.backend==="webgpu")if(typeof navigator>"u"||typeof navigator.gpu>"u")ue("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let n=await navigator.gpu.requestAdapter();e.config.debug&&ue("enumerated webgpu adapter:",n)}e.config.backend==="humangl"&&await Fye(e);let r=Object.keys(Ca().registryFactory);if(e.config.debug&&ue("available backends:",r),r.includes(e.config.backend)||(ue(`error: backend ${e.config.backend} not found in registry`),e.config.backend=Te.node?"tensorflow":"webgl",e.config.debug&&ue(`override: setting backend ${e.config.backend}`)),e.config.debug&&ue("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&ue("wasm path:",e.config.wasmPath),typeof gh?.setWasmPaths<"u")await sT(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let n=await J().getAsync("WASM_HAS_SIMD_SUPPORT"),s=await J().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&ue(`wasm execution: ${n?"SIMD":"no SIMD"} ${s?"multithreaded":"singlethreaded"}`),e.config.debug&&!n&&ue("warning: wasm simd support is not enabled")}try{await bk(e.config.backend),await gf(),z2e()}catch(n){return ue("error: cannot set backend:",e.config.backend,n),!1}}if(yr()==="humangl"&&(Ln.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Ln.set("WEBGL_CPU_FORWARD",!0),Ln.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Ln.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate<"u"&&e.config.deallocate&&(ue("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Ln.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Hn().getGPGPUContext)){let r=await Hn().getGPGPUContext().gl;e.config.debug&&ue(`gl version:${r.getParameter(r.VERSION)} renderer:${r.getParameter(r.RENDERER)}`)}yr(),xk(),await gf(),e.performance.initBackend=Math.trunc(de()-a),e.config.backend=yr(),await Te.updateBackend(),Mye()}return!0}function DT(e,t){for(let a of e){let r={kernelName:a,backendName:t.backend,kernelFunc:()=>{t.debug&&ue("kernelFunc",a,t.backend)}};kn(r)}Te.kernels=ko(yr()).map(a=>a.kernelName.toLowerCase())}var _ye={};zo(_ye,{all:()=>VT,body:()=>$b,canvas:()=>BT,face:()=>Rb,gesture:()=>_b,hand:()=>Fb,object:()=>Mb,options:()=>$n,person:()=>WT});var $n={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},_l=e=>{if(!e)ue("draw error: invalid canvas");else if(!e.getContext)ue("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)ue("draw error: cannot get canvas context");else return t}return null},ru=e=>Math.round(e*180/Math.PI),Es=(e,t=[!0,!0,!1])=>{let a=t[0]?127+Math.trunc(3*e):255,r=t[1]?127-Math.trunc(3*e):255,n=t[2]?127-Math.trunc(3*e):255;return`rgba(${a}, ${r}, ${n}, ${$n.alpha})`};function Uf(e,t,a,r,n){r=r||0,e.fillStyle=n.useDepth&&r?Es(r,r===-255?[!0,!1,!0]:[!0,!1,!1]):n.color,e.beginPath(),e.arc(t,a,n.pointSize,0,2*Math.PI),e.fill()}function Fp(e,t,a,r,n,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){let i=(t+t+r)/2,o=(a+a+n)/2;e.ellipse(i,o,r/2,n/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,a),e.lineTo(t+r-s.roundRect,a),e.quadraticCurveTo(t+r,a,t+r,a+s.roundRect),e.lineTo(t+r,a+n-s.roundRect),e.quadraticCurveTo(t+r,a+n,t+r-s.roundRect,a+n),e.lineTo(t+s.roundRect,a+n),e.quadraticCurveTo(t,a+n,t,a+n-s.roundRect),e.lineTo(t,a+s.roundRect),e.quadraticCurveTo(t,a,t+s.roundRect,a),e.closePath();e.stroke()}function LT(e,t,a){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let r of t){let n=r[2]||0;e.strokeStyle=a.useDepth&&n!==0?Es(n):a.color,e.fillStyle=a.useDepth&&n!==0?Es(n):a.color,e.lineTo(r[0],Math.round(r[1]))}e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function zye(e,t,a){if(!(t.length<2)){if(e.lineWidth=a.lineWidth,!a.useCurves||t.length<=2){LT(e,t,a);return}e.moveTo(t[0][0],t[0][1]);for(let r=0;r<t.length-2;r++){let n=(t[r][0]+t[r+1][0])/2,s=(t[r][1]+t[r+1][1])/2;e.quadraticCurveTo(t[r][0],t[r][1],n,s)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function nw(e,t,a,r=5){let n,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(a[0],a[1]),n=Math.atan2(a[1]-t[1],a[0]-t[0]),s=r*Math.cos(n)+a[0],i=r*Math.sin(n)+a[1],e.moveTo(s,i),n+=1/3*(2*Math.PI),s=r*Math.cos(n)+a[0],i=r*Math.sin(n)+a[1],e.lineTo(s,i),n+=1/3*(2*Math.PI),s=r*Math.cos(n)+a[0],i=r*Math.sin(n)+a[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}async function Rb(e,t,a){var r,n,s,i,o;let l=nr($n,a);if(!t||!e)return;let u=_l(e);if(!!u)for(let d of t){if(u.font=l.font,u.strokeStyle=l.color,u.fillStyle=l.color,l.drawBoxes&&Fp(u,d.box[0],d.box[1],d.box[2],d.box[3],l),l.drawLabels){let p=[];if(p.push(`face: ${Math.trunc(100*d.score)}%`),d.genderScore&&p.push(`${d.gender||""} ${Math.trunc(100*d.genderScore)}%`),d.age&&p.push(`age: ${d.age||""}`),d.iris&&p.push(`distance: ${d.iris}`),d.real&&p.push(`real: ${Math.trunc(100*d.real)}%`),d.live&&p.push(`live: ${Math.trunc(100*d.live)}%`),d.emotion&&d.emotion.length>0){let h=d.emotion.map(c=>`${Math.trunc(100*c.score)}% ${c.emotion}`);h.length>3&&(h.length=3),p.push(h.join(" "))}d.rotation&&d.rotation.angle&&d.rotation.gaze&&(d.rotation.angle.roll&&p.push(`roll: ${ru(d.rotation.angle.roll)}\xB0 yaw:${ru(d.rotation.angle.yaw)}\xB0 pitch:${ru(d.rotation.angle.pitch)}\xB0`),d.rotation.gaze.bearing&&p.push(`gaze: ${ru(d.rotation.gaze.bearing)}\xB0`)),p.length===0&&p.push("face"),u.fillStyle=l.color;for(let h=p.length-1;h>=0;h--){let c=Math.max(d.box[0],0),f=h*l.lineHeight+d.box[1];l.shadowColor&&l.shadowColor!==""&&(u.fillStyle=l.shadowColor,u.fillText(p[h],c+5,f+16)),u.fillStyle=l.labelColor,u.fillText(p[h],c+4,f+15)}}if(u.lineWidth=2,d.mesh&&d.mesh.length>0){if(l.drawPoints){let p=Math.max(468,d.mesh.length);for(let h=0;h<p;h++)Uf(u,d.mesh[h][0],d.mesh[h][1],d.mesh[h][2],l)}if(l.drawAttention&&d.mesh.length>468)for(let p=468;p<d.mesh.length;p++)Uf(u,d.mesh[p][0],d.mesh[p][1],-255,l);if(l.drawPolygons){if(d.mesh.length>450)for(let p=0;p<ih.length/3;p++){let h=[ih[p*3+0],ih[p*3+1],ih[p*3+2]].map(c=>d.mesh[c]);LT(u,h,l)}if(d.annotations&&d.annotations.leftEyeIris&&d.annotations.leftEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();let p=Math.abs(d.annotations.leftEyeIris[3][0]-d.annotations.leftEyeIris[1][0])/2,h=Math.abs(d.annotations.leftEyeIris[4][1]-d.annotations.leftEyeIris[2][1])/2;u.ellipse(d.annotations.leftEyeIris[0][0],d.annotations.leftEyeIris[0][1],p,h,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(d.annotations&&d.annotations.rightEyeIris&&d.annotations.rightEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();let p=Math.abs(d.annotations.rightEyeIris[3][0]-d.annotations.rightEyeIris[1][0])/2,h=Math.abs(d.annotations.rightEyeIris[4][1]-d.annotations.rightEyeIris[2][1])/2;u.ellipse(d.annotations.rightEyeIris[0][0],d.annotations.rightEyeIris[0][1],p,h,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(l.drawGaze&&((r=d.rotation)==null?void 0:r.angle)&&typeof Path2D<"u"){u.strokeStyle="pink";let p=d.box[0]+d.box[2]/2-d.box[3]*ru(d.rotation.angle.yaw)/90,h=d.box[1]+d.box[3]/2+d.box[2]*ru(d.rotation.angle.pitch)/90,c=new Path2D(`
            M ${d.box[0]+d.box[2]/2} ${d.box[1]}
            C
              ${p} ${d.box[1]},
              ${p} ${d.box[1]+d.box[3]},
              ${d.box[0]+d.box[2]/2} ${d.box[1]+d.box[3]}
          `),f=new Path2D(`
            M ${d.box[0]} ${d.box[1]+d.box[3]/2}
            C 
              ${d.box[0]} ${h},
              ${d.box[0]+d.box[2]} ${h},
              ${d.box[0]+d.box[2]} ${d.box[1]+d.box[3]/2}
          `);u.stroke(f),u.stroke(c)}if(l.drawGaze&&((s=(n=d.rotation)==null?void 0:n.gaze)==null?void 0:s.strength)&&((o=(i=d.rotation)==null?void 0:i.gaze)==null?void 0:o.bearing)&&d.annotations.leftEyeIris&&d.annotations.rightEyeIris&&d.annotations.leftEyeIris[0]&&d.annotations.rightEyeIris[0]){u.strokeStyle="pink",u.fillStyle="pink";let p=[d.annotations.leftEyeIris[0][0]+Math.sin(d.rotation.gaze.bearing)*d.rotation.gaze.strength*d.box[3],d.annotations.leftEyeIris[0][1]+Math.cos(d.rotation.gaze.bearing)*d.rotation.gaze.strength*d.box[2]];nw(u,[d.annotations.leftEyeIris[0][0],d.annotations.leftEyeIris[0][1]],[p[0],p[1]],4);let h=[d.annotations.rightEyeIris[0][0]+Math.sin(d.rotation.gaze.bearing)*d.rotation.gaze.strength*d.box[3],d.annotations.rightEyeIris[0][1]+Math.cos(d.rotation.gaze.bearing)*d.rotation.gaze.strength*d.box[2]];nw(u,[d.annotations.rightEyeIris[0][0],d.annotations.rightEyeIris[0][1]],[h[0],h[1]],4)}}}}}async function $b(e,t,a){var r;let n=nr($n,a);if(!t||!e)return;let s=_l(e);if(!!s){s.lineJoin="round";for(let i=0;i<t.length;i++){if(s.strokeStyle=n.color,s.fillStyle=n.color,s.lineWidth=n.lineWidth,s.font=n.font,n.drawBoxes&&t[i].box&&((r=t[i].box)==null?void 0:r.length)===4&&(Fp(s,t[i].box[0],t[i].box[1],t[i].box[2],t[i].box[3],n),n.drawLabels&&(n.shadowColor&&n.shadowColor!==""&&(s.fillStyle=n.shadowColor,s.fillText(`body ${100*t[i].score}%`,t[i].box[0]+3,1+t[i].box[1]+n.lineHeight,t[i].box[2])),s.fillStyle=n.labelColor,s.fillText(`body ${100*t[i].score}%`,t[i].box[0]+2,0+t[i].box[1]+n.lineHeight,t[i].box[2]))),n.drawPoints&&t[i].keypoints)for(let o=0;o<t[i].keypoints.length;o++)!t[i].keypoints[o].score||t[i].keypoints[o].score===0||(s.fillStyle=n.useDepth&&t[i].keypoints[o].position[2]?Es(t[i].keypoints[o].position[2]||0):n.color,Uf(s,t[i].keypoints[o].position[0],t[i].keypoints[o].position[1],0,n));if(n.drawLabels&&t[i].keypoints){s.font=n.font;for(let o of t[i].keypoints)!o.score||o.score===0||(s.fillStyle=n.useDepth&&o.position[2]?Es(o.position[2]):n.color,s.fillText(`${o.part} ${Math.trunc(100*o.score)}%`,o.position[0]+4,o.position[1]+4))}if(n.drawPolygons&&t[i].keypoints&&t[i].annotations)for(let o of Object.values(t[i].annotations))for(let l of o)zye(s,l,n)}}}async function Fb(e,t,a){let r=nr($n,a);if(!t||!e)return;let n=_l(e);if(!!n){n.lineJoin="round",n.font=r.font;for(let s of t){if(r.drawBoxes&&(n.strokeStyle=r.color,n.fillStyle=r.color,Fp(n,s.box[0],s.box[1],s.box[2],s.box[3],r),r.drawLabels&&(r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(`hand:${Math.trunc(100*s.score)}%`,s.box[0]+3,1+s.box[1]+r.lineHeight,s.box[2])),n.fillStyle=r.labelColor,n.fillText(`hand:${Math.trunc(100*s.score)}%`,s.box[0]+2,0+s.box[1]+r.lineHeight,s.box[2])),n.stroke()),r.drawPoints&&s.keypoints&&s.keypoints.length>0)for(let i of s.keypoints)n.fillStyle=r.useDepth?Es(i[2]||0):r.color,Uf(n,i[0],i[1],0,r);if(r.drawLabels&&s.annotations){let i=(o,l)=>{if(!o||o.length===0||!o[0])return;let u=o[o.length-1][2]||0;n.fillStyle=r.useDepth?Es(u):r.color,n.fillText(l,o[o.length-1][0]+4,o[o.length-1][1]+4)};n.font=r.font,i(s.annotations.index,"index"),i(s.annotations.middle,"middle"),i(s.annotations.ring,"ring"),i(s.annotations.pinky,"pinky"),i(s.annotations.thumb,"thumb"),i(s.annotations.palm,"palm")}if(r.drawPolygons&&s.annotations){let i=o=>{if(!(!o||o.length===0||!o[0]))for(let l=0;l<o.length;l++){n.beginPath();let u=o[l][2]||0;n.strokeStyle=r.useDepth?Es(l*u):r.color,n.moveTo(o[l>0?l-1:0][0],o[l>0?l-1:0][1]),n.lineTo(o[l][0],o[l][1]),n.stroke()}};n.lineWidth=r.lineWidth,i(s.annotations.index),i(s.annotations.middle),i(s.annotations.ring),i(s.annotations.pinky),i(s.annotations.thumb)}}}}async function Mb(e,t,a){let r=nr($n,a);if(!t||!e)return;let n=_l(e);if(!!n){n.lineJoin="round",n.font=r.font;for(let s of t)if(r.drawBoxes){if(n.strokeStyle=r.color,n.fillStyle=r.color,Fp(n,s.box[0],s.box[1],s.box[2],s.box[3],r),r.drawLabels){let i=`${s.label} ${Math.round(100*s.score)}%`;r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(i,s.box[0]+3,1+s.box[1]+r.lineHeight,s.box[2])),n.fillStyle=r.labelColor,n.fillText(i,s.box[0]+2,0+s.box[1]+r.lineHeight,s.box[2])}n.stroke()}}}async function _b(e,t,a){let r=nr($n,a);if(!(!t||!e)&&r.drawGestures){let n=_l(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let s=1;for(let i=0;i<t.length;i++){let o=[],l=[];if([o,l]=Object.entries(t[i]),l.length>1&&l[1].length>0){let u=o[1]>0?`#${o[1]}`:"",d=`${o[0]} ${u}: ${l[1]}`;r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(d,8,2+s*r.lineHeight)),n.fillStyle=r.labelColor,n.fillText(d,6,0+s*r.lineHeight),s+=1}}}}var Y2=0;async function WT(e,t,a){let r=nr($n,a);if(!t||!e)return;let n=_l(e);if(!!n){n.lineJoin="round",n.font=r.font;for(let s=0;s<t.length;s++)if(r.drawBoxes){if(n.strokeStyle=r.color,n.fillStyle=r.color,Fp(n,t[s].box[0],t[s].box[1],t[s].box[2],t[s].box[3],r),r.drawLabels){let i=`person #${s}`;r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(i,t[s].box[0]+3,1+t[s].box[1]+r.lineHeight,t[s].box[2])),n.fillStyle=r.labelColor,n.fillText(i,t[s].box[0]+2,0+t[s].box[1]+r.lineHeight,t[s].box[2])}n.stroke()}}}async function BT(e,t){if(!e||!t)return;let a=_l(t);!a||a.drawImage(e,0,0)}async function VT(e,t,a){if(!t||!t.performance||!t||!e)return null;let r=de(),n=nr($n,a),s=Promise.all([Rb(e,t.face,n),$b(e,t.body,n),Fb(e,t.hand,n),Mb(e,t.object,n),_b(e,t.gesture,n)]);return Y2=Te.perfadd?Y2+Math.round(de()-r):Math.round(de()-r),t.performance.draw=Y2,s}var nu=.1,J2=.5;function Oye(e,t,a){let r=!1,n=a.length-1;for(let s=0;s<a.length;n=s++)a[s].y>t!=a[n].y>t&&e<(a[n].x-a[s].x)*(t-a[s].y)/(a[n].y-a[s].y)+a[s].x&&(r=!r);return r}async function Pye(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,a=e.tensor.shape[1]||0,r=await e.tensor.buffer(),n=[];for(let i of Zn.silhouette)n.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});nu&&nu>0&&(n=n.map(i=>({x:i.x>.5?i.x+nu:i.x-nu,y:i.y>.5?i.y+nu:i.y-nu})));for(let i=0;i<t;i++)for(let o=0;o<a;o++)Oye(i/t,o/t,n)||(r.set(J2*r.get(0,o,i,0),0,o,i,0),r.set(J2*r.get(0,o,i,1),0,o,i,1),r.set(J2*r.get(0,o,i,2),0,o,i,2));let s=r.toTensor();return se(r),s}var Dye=e=>{let t=(p,h)=>Math.atan2(p[1]-h[1],p[0]-h[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let a=[0,-.1],r=1,n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),s=n?e.mesh[473]:e.mesh[468],i=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],o=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(i[0]-s[0])/o[0]-a[0],r*(s[1]-i[1])/o[1]-a[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},Lye=(e,t)=>{let a=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},r=(m,g)=>{let y=m[0]-g[0],A=m[1]-g[1],x=m[2]-g[2];return[y,A,x]},n=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],A=m[2]*g[0]-m[0]*g[2],x=m[0]*g[1]-m[1]*g[0];return[y,A,x]},s=m=>{let[g,y,A,x,b,v,S,N,E]=m,R,P,$;return x<1?x>-1?($=Math.asin(x),P=Math.atan2(-S,g),R=Math.atan2(-v,b)):($=-Math.PI/2,P=-Math.atan2(N,E),R=0):($=Math.PI/2,P=Math.atan2(N,E),R=0),isNaN(R)&&(R=0),isNaN(P)&&(P=0),isNaN($)&&($=0),{pitch:2*-R,yaw:2*-P,roll:2*-$}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let o=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[i[10],i[152],i[234],i[454]].map(m=>[m[0]*t[0]/o,m[1]*t[1]/o,m[2]]),u=a(r(l[1],l[0])),d=a(r(l[3],l[2])),p=a(n(d,u));d=n(u,p);let h=[d[0],d[1],d[2],u[0],u[1],u[2],p[0],p[1],p[2]],c=s(h),f=i.length===478?Dye(e):{bearing:0,strength:0};return{angle:c,matrix:h,gaze:f}},sw=async(e,t)=>{var a,r,n,s,i,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,S,N;let E=de(),R,P,$,k,_,z,L,j,D=[];e.state="run:face";let B=await T1e(t,e.config);if(e.performance.face=Te.perfadd?(e.performance.face||0)+Math.trunc(de()-E):Math.trunc(de()-E),!t.shape||t.shape.length!==4)return[];if(!B)return[];for(let G=0;G<B.length;G++){if(e.analyze("Get Face"),!B[G].tensor||B[G].tensor.isDisposedInternal){ue("Face object is disposed:",B[G].tensor);continue}if((a=e.config.face.detector)!=null&&a.mask){let re=await Pye(B[G]);se(B[G].tensor),B[G].tensor=re}let ee=B[G].mesh&&B[G].mesh.length>200?Lye(B[G],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?k=(r=e.config.face.emotion)!=null&&r.enabled?b3(B[G].tensor||lt([]),e.config,G,B.length):[]:(e.state="run:emotion",E=de(),k=(n=e.config.face.emotion)!=null&&n.enabled?await b3(B[G].tensor||lt([]),e.config,G,B.length):[],e.performance.emotion=Te.perfadd?(e.performance.emotion||0)+Math.trunc(de()-E):Math.trunc(de()-E)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?z=(s=e.config.face.antispoof)!=null&&s.enabled?a3(B[G].tensor||lt([]),e.config,G,B.length):0:(e.state="run:antispoof",E=de(),z=(i=e.config.face.antispoof)!=null&&i.enabled?await a3(B[G].tensor||lt([]),e.config,G,B.length):0,e.performance.antispoof=Te.perfadd?(e.performance.antispoof||0)+Math.trunc(de()-E):Math.trunc(de()-E)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?L=(o=e.config.face.liveness)!=null&&o.enabled?K3(B[G].tensor||lt([]),e.config,G,B.length):0:(e.state="run:liveness",E=de(),L=(l=e.config.face.liveness)!=null&&l.enabled?await K3(B[G].tensor||lt([]),e.config,G,B.length):0,e.performance.liveness=Te.perfadd?(e.performance.antispoof||0)+Math.trunc(de()-E):Math.trunc(de()-E)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?P=(u=e.config.face.gear)!=null&&u.enabled?qv(B[G].tensor||lt([]),e.config,G,B.length):null:(e.state="run:gear",E=de(),P=(d=e.config.face.gear)!=null&&d.enabled?await qv(B[G].tensor||lt([]),e.config,G,B.length):null,e.performance.gear=Math.trunc(de()-E)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(R=(p=e.config.face.ssrnet)!=null&&p.enabled?Zv(B[G].tensor||lt([]),e.config,G,B.length):null,$=(h=e.config.face.ssrnet)!=null&&h.enabled?Qv(B[G].tensor||lt([]),e.config,G,B.length):null):(e.state="run:ssrnet",E=de(),R=(c=e.config.face.ssrnet)!=null&&c.enabled?await Zv(B[G].tensor||lt([]),e.config,G,B.length):null,$=(f=e.config.face.ssrnet)!=null&&f.enabled?await Qv(B[G].tensor||lt([]),e.config,G,B.length):null,e.performance.ssrnet=Math.trunc(de()-E)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?_=(m=e.config.face.mobilefacenet)!=null&&m.enabled?I3(B[G].tensor||lt([]),e.config,G,B.length):null:(e.state="run:mobilefacenet",E=de(),_=(g=e.config.face.mobilefacenet)!=null&&g.enabled?await I3(B[G].tensor||lt([]),e.config,G,B.length):null,e.performance.mobilefacenet=Math.trunc(de()-E)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?j=(y=e.config.face.description)!=null&&y.enabled?R3(B[G].tensor||lt([]),e.config,G,B.length):null:(e.state="run:description",E=de(),j=(A=e.config.face.description)!=null&&A.enabled?await R3(B[G].tensor||lt([]),e.config,G,B.length):null,e.performance.description=Te.perfadd?(e.performance.description||0)+Math.trunc(de()-E):Math.trunc(de()-E)),e.analyze("End Description:"),e.config.async&&([R,$,k,_,j,P,z,L]=await Promise.all([R,$,k,_,j,P,z,L])),e.analyze("Finish Face:"),((x=e.config.face.ssrnet)==null?void 0:x.enabled)&&R&&$&&(j={...j,age:R.age,gender:$.gender,genderScore:$.genderScore}),((b=e.config.face.gear)==null?void 0:b.enabled)&&P&&(j={...j,age:P.age,gender:P.gender,genderScore:P.genderScore,race:P.race}),((v=e.config.face.mobilefacenet)==null?void 0:v.enabled)&&_&&(j.descriptor=_),(S=e.config.face.iris)!=null&&S.enabled;let Q=B[G].annotations&&B[G].annotations.leftEyeIris&&B[G].annotations.leftEyeIris[0]&&B[G].annotations.rightEyeIris&&B[G].annotations.rightEyeIris[0]&&B[G].annotations.leftEyeIris.length>0&&B[G].annotations.rightEyeIris.length>0&&B[G].annotations.leftEyeIris[0]!==null&&B[G].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(B[G].annotations.leftEyeIris[3][0]-B[G].annotations.leftEyeIris[1][0]),Math.abs(B[G].annotations.rightEyeIris[4][1]-B[G].annotations.rightEyeIris[2][1]))/t.shape[2]:0,ne=(N=e.config.face.detector)!=null&&N.return?ft(B[G].tensor):null;se(B[G].tensor),B[G].tensor&&delete B[G].tensor;let Y={...B[G],id:G};j?.age&&(Y.age=j.age),j?.gender&&(Y.gender=j.gender),j?.genderScore&&(Y.genderScore=j?.genderScore),j?.descriptor&&(Y.embedding=j?.descriptor),j?.race&&(Y.race=j?.race),k&&(Y.emotion=k),z&&(Y.real=z),L&&(Y.live=L),Q&&Q!==0&&(Y.iris=Math.trunc(500/Q/11.7)/100),ee&&(Y.rotation=ee),ne&&(Y.tensor=ne),D.push(Y),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),D},Wye=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++){let r=e[a].keypoints.find(l=>l.part==="leftWrist"),n=e[a].keypoints.find(l=>l.part==="rightWrist"),s=e[a].keypoints.find(l=>l.part==="nose");s&&r&&n&&r.position[1]<s.position[1]&&n.position[1]<s.position[1]?t.push({body:a,gesture:"i give up"}):s&&r&&r.position[1]<s.position[1]?t.push({body:a,gesture:"raise left hand"}):s&&n&&n.position[1]<s.position[1]&&t.push({body:a,gesture:"raise right hand"});let i=e[a].keypoints.find(l=>l.part==="leftShoulder"),o=e[a].keypoints.find(l=>l.part==="rightShoulder");i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:a,gesture:`leaning ${i.position[1]>o.position[1]?"left":"right"}`})}return t},Bye=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++)if(e[a].mesh&&e[a].mesh.length>450){let r=(e[a].mesh[33][2]||0)-(e[a].mesh[263][2]||0),n=e[a].mesh[33][0]-e[a].mesh[263][0];Math.abs(r/n)<=.15?t.push({face:a,gesture:"facing center"}):t.push({face:a,gesture:`facing ${r<0?"left":"right"}`}),Math.abs(e[a].mesh[374][1]-e[a].mesh[386][1])/Math.abs(e[a].mesh[443][1]-e[a].mesh[450][1])<.2&&t.push({face:a,gesture:"blink left eye"}),Math.abs(e[a].mesh[145][1]-e[a].mesh[159][1])/Math.abs(e[a].mesh[223][1]-e[a].mesh[230][1])<.2&&t.push({face:a,gesture:"blink right eye"});let o=Math.min(100,500*Math.abs(e[a].mesh[13][1]-e[a].mesh[14][1])/Math.abs(e[a].mesh[10][1]-e[a].mesh[152][1]));o>10&&t.push({face:a,gesture:`mouth ${Math.trunc(o)}% open`});let l=e[a].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:a,gesture:`head ${l<0?"up":"down"}`})}return t},Vye=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++){if(!e[a].annotations||!e[a].annotations.leftEyeIris||!e[a].annotations.leftEyeIris[0]||!e[a].annotations.rightEyeIris||!e[a].annotations.rightEyeIris[0])continue;let r=e[a].annotations.leftEyeIris[3][0]-e[a].annotations.leftEyeIris[1][0],n=e[a].annotations.leftEyeIris[4][1]-e[a].annotations.leftEyeIris[2][1],s=Math.abs(r*n),i=e[a].annotations.rightEyeIris[3][0]-e[a].annotations.rightEyeIris[1][0],o=e[a].annotations.rightEyeIris[4][1]-e[a].annotations.rightEyeIris[2][1],l=Math.abs(i*o),u=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(u=!0,t.push({iris:a,gesture:"facing center"}));let p=Math.abs(e[a].mesh[263][0]-e[a].annotations.leftEyeIris[0][0])/e[a].box[2],h=Math.abs(e[a].mesh[33][0]-e[a].annotations.rightEyeIris[0][0])/e[a].box[2];(p>.06||h>.06)&&(u=!1),p>h?p>.05&&t.push({iris:a,gesture:"looking right"}):h>.05&&t.push({iris:a,gesture:"looking left"});let c=Math.abs(e[a].mesh[145][1]-e[a].annotations.rightEyeIris[0][1])/e[a].box[3],f=Math.abs(e[a].mesh[374][1]-e[a].annotations.leftEyeIris[0][1])/e[a].box[3];(f<.01||c<.01||f>.022||c>.022)&&(u=!1),(f<.01||c<.01)&&t.push({iris:a,gesture:"looking down"}),(f>.022||c>.022)&&t.push({iris:a,gesture:"looking up"}),u&&t.push({iris:a,gesture:"looking center"})}return t},Uye=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++){let r=[];if(e[a].annotations)for(let[n,s]of Object.entries(e[a].annotations))n!=="palmBase"&&Array.isArray(s)&&s[0]&&r.push({name:n.toLowerCase(),position:s[0]});if(r&&r.length>0){let n=r.reduce((i,o)=>(i.position[2]||0)<(o.position[2]||0)?i:o);t.push({hand:a,gesture:`${n.name} forward`});let s=r.reduce((i,o)=>i.position[1]<o.position[1]?i:o);t.push({hand:a,gesture:`${s.name} up`})}if(e[a].keypoints){let n=J1e(e[a].keypoints);for(let s of n)t.push({hand:a,gesture:s.name})}}return t},Ne={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},Q2=0;function Gye(e,t){var a,r,n,s,i,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,S,N,E,R,P,$,k;let _=de();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let z=Date.now()-e.timestamp,L=z<1e3?8-Math.log(z+1):1;if(e.canvas&&(Ne.canvas=e.canvas),e.error&&(Ne.error=e.error),!Ne.body||e.body.length!==Ne.body.length)Ne.body=JSON.parse(JSON.stringify(e.body));else for(let D=0;D<e.body.length;D++){let B=e.body[D].box.map((Y,re)=>((L-1)*Ne.body[D].box[re]+Y)/L),G=e.body[D].boxRaw.map((Y,re)=>((L-1)*Ne.body[D].boxRaw[re]+Y)/L),ee=e.body[D].keypoints.map((Y,re)=>{var le,ye,xe,Ce,Re,Oe,We,Xe,rt;return{score:Y.score,part:Y.part,position:[Ne.body[D].keypoints[re]?((L-1)*(Ne.body[D].keypoints[re].position[0]||0)+(Y.position[0]||0))/L:Y.position[0],Ne.body[D].keypoints[re]?((L-1)*(Ne.body[D].keypoints[re].position[1]||0)+(Y.position[1]||0))/L:Y.position[1],Ne.body[D].keypoints[re]?((L-1)*(Ne.body[D].keypoints[re].position[2]||0)+(Y.position[2]||0))/L:Y.position[2]],positionRaw:[Ne.body[D].keypoints[re]?((L-1)*(Ne.body[D].keypoints[re].positionRaw[0]||0)+(Y.positionRaw[0]||0))/L:Y.positionRaw[0],Ne.body[D].keypoints[re]?((L-1)*(Ne.body[D].keypoints[re].positionRaw[1]||0)+(Y.positionRaw[1]||0))/L:Y.positionRaw[1],Ne.body[D].keypoints[re]?((L-1)*(Ne.body[D].keypoints[re].positionRaw[2]||0)+(Y.positionRaw[2]||0))/L:Y.positionRaw[2]],distance:[Ne.body[D].keypoints[re]?((L-1)*(((le=Ne.body[D].keypoints[re].distance)==null?void 0:le[0])||0)+(((ye=Y.distance)==null?void 0:ye[0])||0))/L:(xe=Y.distance)==null?void 0:xe[0],Ne.body[D].keypoints[re]?((L-1)*(((Ce=Ne.body[D].keypoints[re].distance)==null?void 0:Ce[1])||0)+(((Re=Y.distance)==null?void 0:Re[1])||0))/L:(Oe=Y.distance)==null?void 0:Oe[1],Ne.body[D].keypoints[re]?((L-1)*(((We=Ne.body[D].keypoints[re].distance)==null?void 0:We[2])||0)+(((Xe=Y.distance)==null?void 0:Xe[2])||0))/L:(rt=Y.distance)==null?void 0:rt[2]]}}),Q={},ne={connected:{}};(r=(a=t.body)==null?void 0:a.modelPath)!=null&&r.includes("efficientpose")?ne=gT:(s=(n=t.body)==null?void 0:n.modelPath)!=null&&s.includes("blazepose")?ne=pT:(o=(i=t.body)==null?void 0:i.modelPath)!=null&&o.includes("movenet")&&(ne=NT);for(let[Y,re]of Object.entries(ne.connected)){let le=[];for(let ye=0;ye<re.length-1;ye++){let xe=ee.find(Re=>Re.part===re[ye]),Ce=ee.find(Re=>Re.part===re[ye+1]);xe&&Ce&&le.push([xe.position,Ce.position])}Q[Y]=le}Ne.body[D]={...e.body[D],box:B,boxRaw:G,keypoints:ee,annotations:Q}}if(!Ne.hand||e.hand.length!==Ne.hand.length)Ne.hand=JSON.parse(JSON.stringify(e.hand));else for(let D=0;D<e.hand.length;D++){let B=e.hand[D].box.map((ne,Y)=>((L-1)*Ne.hand[D].box[Y]+ne)/L),G=e.hand[D].boxRaw.map((ne,Y)=>((L-1)*Ne.hand[D].boxRaw[Y]+ne)/L);Ne.hand[D].keypoints.length!==e.hand[D].keypoints.length&&(Ne.hand[D].keypoints=e.hand[D].keypoints);let ee=e.hand[D].keypoints&&e.hand[D].keypoints.length>0?e.hand[D].keypoints.map((ne,Y)=>ne.map((re,le)=>((L-1)*(Ne.hand[D].keypoints[Y][le]||1)+(re||0))/L)):[],Q={};if(Object.keys(Ne.hand[D].annotations).length!==Object.keys(e.hand[D].annotations).length)Ne.hand[D].annotations=e.hand[D].annotations,Q=Ne.hand[D].annotations;else if(e.hand[D].annotations)for(let ne of Object.keys(e.hand[D].annotations))Q[ne]=e.hand[D].annotations[ne]&&e.hand[D].annotations[ne][0]?e.hand[D].annotations[ne].map((Y,re)=>Y.map((le,ye)=>((L-1)*Ne.hand[D].annotations[ne][re][ye]+le)/L)):null;Ne.hand[D]={...e.hand[D],box:B,boxRaw:G,keypoints:ee,annotations:Q}}if(!Ne.face||e.face.length!==Ne.face.length)Ne.face=JSON.parse(JSON.stringify(e.face));else for(let D=0;D<e.face.length;D++){let B=e.face[D].box.map((ee,Q)=>((L-1)*Ne.face[D].box[Q]+ee)/L),G=e.face[D].boxRaw.map((ee,Q)=>((L-1)*Ne.face[D].boxRaw[Q]+ee)/L);if(e.face[D].rotation){let ee={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};ee.matrix=(l=e.face[D].rotation)==null?void 0:l.matrix,ee.angle={roll:((L-1)*(((d=(u=Ne.face[D].rotation)==null?void 0:u.angle)==null?void 0:d.roll)||0)+(((h=(p=e.face[D].rotation)==null?void 0:p.angle)==null?void 0:h.roll)||0))/L,yaw:((L-1)*(((f=(c=Ne.face[D].rotation)==null?void 0:c.angle)==null?void 0:f.yaw)||0)+(((g=(m=e.face[D].rotation)==null?void 0:m.angle)==null?void 0:g.yaw)||0))/L,pitch:((L-1)*(((A=(y=Ne.face[D].rotation)==null?void 0:y.angle)==null?void 0:A.pitch)||0)+(((b=(x=e.face[D].rotation)==null?void 0:x.angle)==null?void 0:b.pitch)||0))/L},ee.gaze={bearing:((L-1)*(((S=(v=Ne.face[D].rotation)==null?void 0:v.gaze)==null?void 0:S.bearing)||0)+(((E=(N=e.face[D].rotation)==null?void 0:N.gaze)==null?void 0:E.bearing)||0))/L,strength:((L-1)*(((P=(R=Ne.face[D].rotation)==null?void 0:R.gaze)==null?void 0:P.strength)||0)+(((k=($=e.face[D].rotation)==null?void 0:$.gaze)==null?void 0:k.strength)||0))/L},Ne.face[D]={...e.face[D],rotation:ee,box:B,boxRaw:G}}Ne.face[D]={...e.face[D],box:B,boxRaw:G}}if(!Ne.object||e.object.length!==Ne.object.length)Ne.object=JSON.parse(JSON.stringify(e.object));else for(let D=0;D<e.object.length;D++){let B=e.object[D].box.map((ee,Q)=>((L-1)*Ne.object[D].box[Q]+ee)/L),G=e.object[D].boxRaw.map((ee,Q)=>((L-1)*Ne.object[D].boxRaw[Q]+ee)/L);Ne.object[D]={...e.object[D],box:B,boxRaw:G}}if(e.persons){let D=e.persons;if(!Ne.persons||D.length!==Ne.persons.length)Ne.persons=JSON.parse(JSON.stringify(D));else for(let B=0;B<D.length;B++)Ne.persons[B].box=D[B].box.map((G,ee)=>((L-1)*Ne.persons[B].box[ee]+G)/L)}e.gesture&&(Ne.gesture=e.gesture);let j=de();return Q2=Te.perfadd?Q2+Math.round(j-_):Math.round(j-_),e.performance&&(Ne.performance={...e.performance,interpolate:Q2}),Ne}var jye={};zo(jye,{distance:()=>Fm,match:()=>jT,similarity:()=>GT});function Fm(e,t,a={order:2,multiplier:25}){let r=0;for(let n=0;n<e.length;n++){let s=!a.order||a.order===2?e[n]-t[n]:Math.abs(e[n]-t[n]);r+=!a.order||a.order===2?s*s:s**a.order}return(a.multiplier||20)*r}var UT=(e,t,a,r)=>{if(e===0)return 1;let n=t===2?Math.sqrt(e):e**(1/t),s=(1-n/100-a)/(r-a);return Math.max(Math.min(s,1),0)};function GT(e,t,a={order:2,multiplier:25,min:.2,max:.8}){let r=Fm(e,t,a);return UT(r,a.order||2,a.min||0,a.max||1)}function jT(e,t,a={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let r=Number.MAX_SAFE_INTEGER,n=-1;for(let i=0;i<t.length;i++){let o=Fm(e,t[i],a);if(o<r&&(r=o,n=i),r<(a.threshold||0))break}let s=UT(r,a.order||2,a.min||0,a.max||1);return{index:n,distance:r,similarity:s}}function Hye(e,t,a,r,n){var s,i,o,l,u,d,p,h,c,f,m,g,y,A,x,b;let v=0,S=[];for(let N of e){let E={id:v++,face:N,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let z of t)N.box[0]>z.box[0]&&N.box[0]<z.box[0]+z.box[2]&&N.box[1]+N.box[3]>z.box[1]&&N.box[1]+N.box[3]<z.box[1]+z.box[3]&&(E.body=z);if(E.body)for(let z of a)z.box[0]+z.box[2]>E.body.box[0]&&z.box[0]+z.box[2]<E.body.box[0]+E.body.box[2]&&z.box[1]+z.box[3]>E.body.box[1]&&z.box[1]+z.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=z),z.box[0]<E.body.box[0]+E.body.box[2]&&z.box[0]>E.body.box[0]&&z.box[1]+z.box[3]>E.body.box[1]&&z.box[1]+z.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=z);for(let z of r)z.face!==void 0&&z.face===N.id?(s=E.gestures)==null||s.push(z):z.iris!==void 0&&z.iris===N.id?(i=E.gestures)==null||i.push(z):z.body!==void 0&&z.body===((o=E.body)==null?void 0:o.id)?(l=E.gestures)==null||l.push(z):z.hand!==void 0&&z.hand===((d=(u=E.hands)==null?void 0:u.left)==null?void 0:d.id)?(p=E.gestures)==null||p.push(z):z.hand!==void 0&&z.hand===((c=(h=E.hands)==null?void 0:h.right)==null?void 0:c.id)&&((f=E.gestures)==null||f.push(z));let R=[],P=[],$=z=>{z&&z.length===4&&(R.push(z[0],z[0]+z[2]),P.push(z[1],z[1]+z[3]))};$((m=E.face)==null?void 0:m.box),$((g=E.body)==null?void 0:g.box),$((A=(y=E.hands)==null?void 0:y.left)==null?void 0:A.box),$((b=(x=E.hands)==null?void 0:x.right)==null?void 0:b.box);let k=Math.min(...R),_=Math.min(...P);E.box=[k,_,Math.max(...R)-k,Math.max(...P)-_],n&&n[1]&&n[2]&&(E.boxRaw=[E.box[0]/n[2],E.box[1]/n[1],E.box[2]/n[2],E.box[3]/n[1]]),S.push(E)}return S}var zb=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,Ob=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function qye(e){let t=(n,s="application/octet-stream")=>fetch(`data:${s};base64,${n}`).then(i=>i.blob()),a,r;switch(e.config.warmup){case"face":a=await t(zb);break;case"body":case"full":a=await t(Ob);break;default:a=null}if(a){let n=await createImageBitmap(a);r=await e.detect(n,e.config),n.close()}return r}async function Xye(e){return new Promise(t=>{let a;switch(e.config.warmup){case"face":a="data:image/jpeg;base64,"+zb;break;case"full":case"body":a="data:image/jpeg;base64,"+Ob;break;default:a=null}let r;if(typeof Image<"u")r=new Image;else if(Te.Image)r=new Te.Image;else return;r.onload=async()=>{let n=nn(r.naturalWidth,r.naturalHeight);if(!n)ue("Warmup: Canvas not found"),t(void 0);else{let s=n.getContext("2d");s&&s.drawImage(r,0,0);let i=await e.image(n),o=await e.detect(i.tensor,e.config);t(o)}},a?r.src=a:t(void 0)})}async function Kye(e){let t=n=>Buffer.from(n,"base64"),a;e.config.warmup==="face"?a=t(zb):a=t(Ob);let r;if("node"in gh){let n=(void 0).decodeJpeg(a),s=n.expandDims(0);e.tf.dispose(n),r=await e.detect(s,e.config),e.tf.dispose(s)}else e.config.debug&&ue("Warmup tfjs-node not loaded");return r}async function Zye(e){let t;return typeof createImageBitmap=="function"?t=await qye(e):typeof Image<"u"||Te.Canvas!==void 0?t=await Xye(e):t=await Kye(e),t}async function Yye(e){let t=yr(),a=Hn();if(t!=="webgl"&&t!=="humangl"||!a||!a.checkCompileCompletion)return;J().set("ENGINE_COMPILE_ONLY",!0);let r=Ca().state.numTensors,n=[];for(let[o,l]of Object.entries(e).filter(([u,d])=>u!==null&&d!==null)){let u=l.inputs&&l.inputs[0]&&l.inputs[0].shape?[...l.inputs[0].shape]:[1,64,64,3],d=l.inputs&&l.inputs[0]&&l.inputs[0].dtype?l.inputs[0].dtype:"float32";for(let h=0;h<u.length;h++)u[h]===-1&&(u[h]=h===0?1:64);let p=Dt(u,d);try{let h=l.execute(p);n.push(o),Array.isArray(h)?h.forEach(c=>se(c)):se(h)}catch{ue("compile fail model:",o)}se(p)}let s=await a.checkCompileCompletionAsync();a.getUniformLocations(),ue("compile pass models:",n),ue("compile pass kernels:",s.length),J().set("ENGINE_COMPILE_ONLY",!1);let i=Ca().state.numTensors;i-r>0&&ue("tensor leak:",i-r)}async function Jye(e,t){let a=de();return e.state="warmup",t&&(e.config=nr(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:de(),persons:[],error:null}:new Promise(async r=>{await Yye(e.models);let n=await Zye(e),s=de();e.config.debug&&ue("warmup",e.config.warmup,Math.round(s-a),"ms"),e.emit("warmup"),r(n)})}var lh,rf,nf,ny,HT=class{constructor(e){pe(this,"version"),pe(this,"config"),pe(this,"result"),pe(this,"state"),pe(this,"process"),pe(this,"tf"),pe(this,"env"),pe(this,"draw"),pe(this,"models"),pe(this,"events"),pe(this,"faceTriangulation"),pe(this,"faceUVMap"),pe(this,"performance"),gc(this,lh,void 0),gc(this,rf,void 0),gc(this,nf,void 0),pe(this,"gl"),pe(this,"analyze",(...t)=>{if(!mc(this,rf))return;let a=this.tf.engine().state.numTensors,r=mc(this,lh);yc(this,lh,a);let n=a-r;n!==0&&ue(...t,n)}),gc(this,ny,t=>{if(!mc(this,nf))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof tt))return"input must be a tensor";try{this.tf.getBackend()}catch{return"backend not loaded"}return null}),pe(this,"similarity",GT),pe(this,"distance",Fm),pe(this,"match",jT),pe(this,"emit",t=>{var a;this.events&&this.events.dispatchEvent&&((a=this.events)==null||a.dispatchEvent(new Event(t)))}),this.env=Te,Xl.wasmPath=Ib["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${Ak}/dist/`,Xl.modelBasePath=Te.browser?"../models/":"file://models/",Xl.backend=Te.browser?"humangl":"tensorflow",this.version=Gv,Object.defineProperty(this,"version",{value:Gv}),this.config=JSON.parse(JSON.stringify(Xl)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB<"u",e&&(this.config=nr(this.config,e)),R2e(this.config),this.tf=gh,this.state="idle",yc(this,lh,0),yc(this,rf,!1),yc(this,nf,!1),this.performance={},this.events=typeof EventTarget<"u"?new EventTarget:void 0,this.models=new zT,this.draw={options:$n,canvas:(t,a)=>BT(t,a),face:(t,a,r)=>Rb(t,a,r),body:(t,a,r)=>$b(t,a,r),hand:(t,a,r)=>Fb(t,a,r),gesture:(t,a,r)=>_b(t,a,r),object:(t,a,r)=>Mb(t,a,r),person:(t,a,r)=>WT(t,a,r),all:(t,a,r)=>VT(t,a,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=E1e,this.faceUVMap=R1e,this.gl=It,this.emit("create")}reset(){let e=this.config.backend;this.config=JSON.parse(JSON.stringify(Xl)),this.config.backend=e}validate(e){return lw(Xl,e||this.config)}now(){return de()}image(e,t=!0){return Lf(e,this.config,t)}async segmentation(e,t){return Rye(e,t,this.config)}enhance(e){return xT(e)}compare(e,t){return T2e(this.config,e,t)}async init(){await Z2(this,!0),await this.tf.ready()}async load(e){this.state="load";let t=de(),a=Object.values(this.models).filter(s=>s).length;e&&(this.config=nr(this.config,e)),this.env.initial&&(this.config.debug&&ue(`version: ${this.version}`),this.config.debug&&ue(`tfjs version: ${this.tf.version["tfjs-core"]}`),await Z2(this)||ue("error: backend check failed"),await gf(),this.env.browser&&(this.config.debug&&ue("configuration:",this.config),this.config.debug&&ue("environment:",this.env),this.config.debug&&ue("tf flags:",this.tf.ENV.flags))),await OT(this),this.env.initial&&this.config.debug&&ue("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(s=>s).length!==a&&(await PT(this),this.emit("load"));let n=Math.trunc(de()-t);n>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+n:n)}next(e=this.result){return Gye(e,this.config)}async warmup(e){let t=de(),a=await Jye(this,e),r=de();return this.performance.warmup=Math.trunc(r-t),a}async profile(e,t){let a=await this.tf.profile(()=>this.detect(e,t)),r={};for(let i of a.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let n=[];Object.entries(r).forEach(i=>n.push({name:i[0],ms:i[1]})),n.sort((i,o)=>o.ms-i.ms),n.length=20;let s={};for(let i of n)s[i.name]=i.ms;return s}async detect(e,t){return this.state="detect",new Promise(async a=>{var r,n,s,i,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,S,N,E;this.state="config";let R;this.config=nr(this.config,t),this.state="check";let P=mc(this,ny).call(this,e);P&&(ue(P,e),this.emit("error"),a({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:de(),persons:[],error:P}));let $=de();await Z2(this),await this.load(),R=de(),this.state="image";let k=await Lf(e,this.config);if(this.process=k,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(de()-R):Math.trunc(de()-R),this.analyze("Get Image:"),!k.tensor){this.config.debug&&ue("could not convert input to tensor"),this.emit("error"),a({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:de(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),R=de(),this.config.skipAllowed=await N2e(this.config,k.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(de()-R):Math.trunc(de()-R),this.analyze("Check Changed:");let _=[],z=[],L=[],j=[];this.state="detect:face",this.config.async?(_=this.config.face.enabled?sw(this,k.tensor):[],this.performance.face&&delete this.performance.face):(R=de(),_=this.config.face.enabled?await sw(this,k.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(de()-R):Math.trunc(de()-R)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(_=await _),this.analyze("Start Body:"),this.state="detect:body";let D=this.config.body.maxDetected===-1?nr(this.config,{body:{maxDetected:this.config.face.enabled?1*_.length:1}}):this.config;this.config.async?((r=this.config.body.modelPath)!=null&&r.includes("posenet")?z=this.config.body.enabled?rw(k.tensor,D):[]:(n=this.config.body.modelPath)!=null&&n.includes("blazepose")?z=this.config.body.enabled?c3(k.tensor,D):[]:(s=this.config.body.modelPath)!=null&&s.includes("efficientpose")?z=this.config.body.enabled?y3(k.tensor,D):[]:(i=this.config.body.modelPath)!=null&&i.includes("movenet")&&(z=this.config.body.enabled?Y3(k.tensor,D):[]),this.performance.body&&delete this.performance.body):(R=de(),(o=this.config.body.modelPath)!=null&&o.includes("posenet")?z=this.config.body.enabled?await rw(k.tensor,D):[]:(l=this.config.body.modelPath)!=null&&l.includes("blazepose")?z=this.config.body.enabled?await c3(k.tensor,D):[]:(u=this.config.body.modelPath)!=null&&u.includes("efficientpose")?z=this.config.body.enabled?await y3(k.tensor,D):[]:(d=this.config.body.modelPath)!=null&&d.includes("movenet")&&(z=this.config.body.enabled?await Y3(k.tensor,D):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(de()-R):Math.trunc(de()-R)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let B=this.config.hand.maxDetected===-1?nr(this.config,{hand:{maxDetected:this.config.face.enabled?2*_.length:1}}):this.config;this.config.async?((h=(p=this.config.hand.detector)==null?void 0:p.modelPath)!=null&&h.includes("handdetect")?L=this.config.hand.enabled?B3(k.tensor,B):[]:(f=(c=this.config.hand.detector)==null?void 0:c.modelPath)!=null&&f.includes("handtrack")&&(L=this.config.hand.enabled?H3(k.tensor,B):[]),this.performance.hand&&delete this.performance.hand):(R=de(),(g=(m=this.config.hand.detector)==null?void 0:m.modelPath)!=null&&g.includes("handdetect")?L=this.config.hand.enabled?await B3(k.tensor,B):[]:(A=(y=this.config.hand.detector)==null?void 0:y.modelPath)!=null&&A.includes("handtrack")&&(L=this.config.hand.enabled?await H3(k.tensor,B):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(de()-R):Math.trunc(de()-R)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((x=this.config.object.modelPath)!=null&&x.includes("nanodet")?j=this.config.object.enabled?Q3(k.tensor,this.config):[]:(b=this.config.object.modelPath)!=null&&b.includes("centernet")&&(j=this.config.object.enabled?m3(k.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(R=de(),(v=this.config.object.modelPath)!=null&&v.includes("nanodet")?j=this.config.object.enabled?await Q3(k.tensor,this.config):[]:(S=this.config.object.modelPath)!=null&&S.includes("centernet")&&(j=this.config.object.enabled?await m3(k.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(de()-R):Math.trunc(de()-R)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([_,z,L,j]=await Promise.all([_,z,L,j])),this.state="detect:gesture";let G=[];this.config.gesture.enabled&&(R=de(),G=[...Bye(_),...Wye(z),...Uye(L),...Vye(_)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(de()-R):Math.trunc(de()-R)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(de()-$):Math.trunc(de()-$);let ee=((E=(N=this.process)==null?void 0:N.tensor)==null?void 0:E.shape)||[];this.result={face:_,body:z,hand:L,gesture:G,object:j,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return Hye(_,z,L,G,ee)}},se(k.tensor),this.emit("detect"),this.state="idle",a(this.result)})}};lh=new WeakMap;rf=new WeakMap;nf=new WeakMap;ny=new WeakMap;var Md;onmessage=async e=>{if(Md||(Md=new HT(e.data.config)),e.data.image){let t=Md.tf.tensor(e.data.image,[1,e.data.height,e.data.width,3],"float32"),a=await Md.detect(t,e.data.config);Md.tf.dispose(t),postMessage({result:a,state:JSON.stringify(Md.tf.engine().state)})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=worker.js.map
